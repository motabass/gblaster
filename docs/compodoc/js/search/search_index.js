var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.149,1,2.792]],["body/interfaces/ActionCache.html",[0,0.26,1,4.163,2,1.077,3,0.217,4,0.217,5,0.157,6,3.223,7,0.349,8,0.516,9,5.178,10,1.697,11,0.598,12,0.012,13,0.389,14,4.874,15,3.666,16,1.319,17,4.899,18,2.028,19,0.703,20,3.223,21,1.109,22,1.837,23,4.611,24,3.223,25,2.711,26,3.424,27,3.424,28,3.223,29,3.05,30,3.424,31,3.223,32,3.223,33,3.223,34,3.05,35,3.05,36,4.736,37,2.899,38,3.424,39,1.86,40,3.424,41,2.619,42,3.424,43,3.144,44,3.424,45,3.571,46,3.424,47,3.223,48,3.424,49,3.223,50,3.424,51,3.424,52,3.424,53,3.424,54,3.424,55,3.05,56,3.424,57,3.424,58,3.424,59,2.765,60,3.424,61,3.223,62,3.424,63,3.223,64,3.424,65,3.424,66,3.424,67,3.424,68,3.424,69,3.424,70,3.05,71,3.424,72,3.424,73,3.424,74,3.424,75,0.008,76,0.008]],["title/interfaces/Album.html",[0,0.149,77,1.592]],["body/interfaces/Album.html",[0,0.089,2,0.556,3,0.112,4,0.112,5,0.191,7,0.112,8,0.321,10,1.229,11,0.377,12,0.012,13,0.187,16,1.304,19,1.085,21,0.572,39,1.158,75,0.005,76,0.005,77,2.673,78,2.258,79,3.509,80,1.228,81,3.201,82,2.119,83,0.709,84,0.892,85,3.068,86,2.128,87,0.524,88,2.755,89,1.632,90,0.351,91,3.703,92,3.223,93,1.427,94,2.593,95,1.663,96,3.194,97,3.521,98,3.521,99,2.95,100,1.768,101,2.128,102,1.574,103,3.194,104,1.308,105,3.194,106,1.164,107,3.194,108,3.194,109,3.194,110,2.049,111,3.194,112,1.892,113,1.308,114,1.196,115,1.663,116,2.225,117,1.574,118,3.194,119,1.892,120,3.521,121,3.521,122,3.521,123,3.521,124,3.521,125,2.258,126,3.521,127,1.892,128,1.892,129,2.95,130,2.258,131,0.979,132,0.948,133,2.258,134,1.208,135,2.258,136,0.339,137,0.979,138,1.047,139,1.574,140,1.496,141,2.258,142,1.881,143,3.521,144,2.258,145,1.776,146,3.521,147,2.258,148,2.258,149,1.669,150,2.258,151,2.258,152,2.258,153,2.258,154,2.258,155,2.258,156,3.187,157,2.258,158,2.049,159,2.258,160,5.859,161,4.886,162,2.258,163,2.258,164,2.258,165,3.095,166,1.578,167,2.258,168,3.925,169,2.258,170,2.258,171,3.521,172,4.886,173,3.521,174,4.326,175,2.225,176,2.049,177,3.194,178,5.296,179,2.258,180,1.892,181,3.521,182,2.258,183,2.258,184,2.258,185,2.258,186,2.258,187,2.258,188,2.258,189,5.859,190,2.258,191,2.258,192,2.593,193,1.632,194,2.258,195,4.326,196,2.258,197,1.768,198,4.326,199,2.258,200,2.258,201,4.326,202,2.258,203,2.258,204,1.574,205,3.521,206,2.258,207,2.811,208,3.521,209,2.258,210,3.521,211,2.258,212,2.258,213,2.258,214,2.258,215,2.258,216,2.258,217,2.049,218,1.892,219,1.768,220,2.258,221,2.258,222,2.258,223,0.842,224,2.258,225,0.979,226,2.049,227,2.258,228,2.049,229,2.049,230,1.892,231,1.892,232,4.326,233,2.258,234,4.886,235,2.049,236,3.521,237,2.258,238,2.258,239,1.768,240,2.258,241,2.258,242,2.258,243,2.258,244,3.194,245,2.258,246,2.258,247,2.258,248,2.258,249,2.154,250,2.049,251,2.791,252,2.049,253,2.258,254,2.258,255,2.258,256,4.326,257,2.258,258,4.886,259,2.258,260,2.258,261,3.521,262,3.521,263,2.049,264,2.258,265,2.258,266,2.258,267,2.258,268,2.258,269,2.258,270,2.258,271,2.258,272,3.521,273,3.521,274,2.258,275,1.256,276,2.258,277,2.258,278,2.258,279,2.049,280,2.258,281,2.258,282,2.049,283,2.258]],["title/interfaces/AnalyserConfig.html",[0,0.149,284,2.396]],["body/interfaces/AnalyserConfig.html",[0,0.281,2,1.017,3,0.205,4,0.205,5,0.149,7,0.205,8,0.497,10,1.783,11,0.615,12,0.011,13,0.392,18,2.823,19,1.04,22,1.736,25,2.613,75,0.008,76,0.008,284,3.441,285,2.612,286,4.023,287,4.289,288,4.289,289,4.289,290,2.498,291,2.394,292,2.498,293,2.498,294,2.498,295,2.394,296,2.498,297,2.498,298,2.498,299,2.612,300,2.612,301,2.394,302,3.291,303,3.155,304,3.155,305,3.155,306,2.394,307,3.155,308,2.498,309,2.706,310,2.706,311,3.155,312,2.498,313,2.394,314,2.498,315,2.612,316,2.739,317,2.394,318,3.528,319,2.498,320,2.299,321,3.849,322,2.914,323,2.498,324,3.155,325,3.601,326,3.601,327,2.394,328,3.155,329,3.601]],["title/components/AppComponent.html",[84,0.961,330,1.699]],["body/components/AppComponent.html",[3,0.203,4,0.203,5,0.194,12,0.011,13,0.217,16,1.23,75,0.008,76,0.008,80,1.41,83,0.715,84,1.533,87,0.947,90,0.634,104,2.364,114,1.492,131,2.342,132,2.267,136,0.613,137,1.77,145,1.585,225,2.624,330,2.887,331,2.002,332,1.891,333,1.891,334,1.891,335,4.655,336,3.764,337,3.764,338,3.198,339,3.276,340,1.83,341,2.887,342,6.16,343,0.893,344,4.655,345,2.845,346,4.655,347,4.655,348,2.704,349,2.27,350,3.578,351,3.193,352,4.899,353,4.655,354,4.655,355,4.655,356,4.655,357,4.655,358,4.655,359,4.655,360,3.193,361,4.655,362,4.655,363,4.655,364,4.655,365,4.655,366,4.655,367,4.655,368,1.891,369,2.503,370,2.129,371,1.66,372,2.985,373,1.891,374,1.891,375,1.829,376,1.66,377,1.891,378,1.829,379,1.891,380,1.829,381,1.77,382,1.891,383,1.609,384,1.66,385,1.66,386,2.503,387,1.829,388,2.985,389,1.829,390,1.891,391,1.829,392,1.713,393,1.891,394,1.829,395,1.891,396,1.713,397,1.829,398,1.829,399,1.891,400,1.829,401,1.77,402,1.891,403,1.829,404,1.891,405,1.829,406,1.713,407,1.829,408,1.891,409,1.829,410,1.77,411,1.829,412,1.891]],["title/injectables/AudioService.html",[413,0.758,414,2.291]],["body/injectables/AudioService.html",[3,0.099,4,0.099,5,0.179,7,0.099,8,0.291,10,1.504,11,0.535,12,0.012,13,0.17,16,1.953,21,1.616,22,1.672,39,2.309,41,1.476,75,0.005,76,0.005,80,1.309,83,0.473,85,1.845,87,0.462,89,1.846,90,0.309,93,1.258,136,0.299,142,2.275,145,1.57,149,1.154,166,2.041,223,1.429,225,1.727,231,1.667,249,1.62,251,0.892,263,1.805,317,2.637,327,2.307,340,0.674,343,1.571,370,0.784,413,0.637,414,1.925,415,0.863,416,1.99,417,4.544,418,3.614,419,3.338,420,5.314,421,3.614,422,4.544,423,4.544,424,3.983,425,4.544,426,4.553,427,0.784,428,5.195,429,3.634,430,3.634,431,3.815,432,4.553,433,5.195,434,3.634,435,3.634,436,3.634,437,3.634,438,3.634,439,3.634,440,3.634,441,2.89,442,4.544,443,2.27,444,2.27,445,1.57,446,3.634,447,4.519,448,2.27,449,2.087,450,1.348,451,4.131,452,3.634,453,4.367,454,2.27,455,4.544,456,2.27,457,2.27,458,1.319,459,2.27,460,3.634,461,2.27,462,3.634,463,4.981,464,2.27,465,1.837,466,2.493,467,2.885,468,2.27,469,2.27,470,3.634,471,2.27,472,3.634,473,4.981,474,2.27,475,3.634,476,2.27,477,3.634,478,3.634,479,2.27,480,2.27,481,3.634,482,2.27,483,4.553,484,2.27,485,2.27,486,3.634,487,2.346,488,2.346,489,2.346,490,2.346,491,2.346,492,2.111,493,2.346,494,2.346,495,2.346,496,2.346,497,2.27,498,4.453,499,2.27,500,2.27,501,5.195,502,2.27,503,2.27,504,2.27,505,3.634,506,2.27,507,3.634,508,2.89,509,2.27,510,2.27,511,2.27,512,2.013,513,1.065,514,1.203,515,2.221,516,2.89,517,0.922,518,3.338,519,0.695,520,1.258,521,2.27,522,4.453,523,2.27,524,2.27,525,2.27,526,2.27,527,5.195,528,2.27,529,2.27,530,2.27,531,3.634,532,2.27,533,2.27,534,2.27,535,2.27,536,2.89,537,3.186,538,2.27,539,2.27,540,2.493,541,3.634,542,2.27,543,2.27,544,2.27,545,2.27,546,1.805,547,2.27,548,2.27,549,2.27,550,3.634,551,2.27,552,1.99,553,1.387,554,1.99,555,1.557,556,2.27,557,1.667,558,1.99,559,2.27,560,1.99,561,3.634,562,3.634,563,2.27,564,2.89,565,3.634,566,3.634,567,2.27,568,2.27,569,2.27,570,2.27,571,2.27,572,2.27,573,2.27,574,2.27,575,1.557,576,1.319,577,1.805,578,2.27,579,2.27,580,2.27,581,2.27,582,2.27,583,2.27,584,3.634,585,2.27,586,2.27,587,2.27,588,2.27,589,2.27,590,1.296,591,2.27,592,2.89,593,2.27,594,2.27,595,1.805,596,2.27,597,1.667,598,1.153,599,2.27,600,1.557,601,2.27,602,2.27,603,2.27,604,2.27,605,2.27,606,2.27,607,2.27,608,2.27,609,2.27,610,2.27,611,2.27,612,2.27,613,2.27,614,2.27,615,2.27,616,2.27,617,2.27,618,2.27,619,3.634,620,2.27,621,1.99,622,2.27,623,2.27,624,1.99,625,1.557,626,1.99,627,2.27,628,2.27,629,2.27,630,3.634,631,2.27,632,2.27,633,2.27,634,2.27,635,2.27,636,2.27,637,3.634,638,2.27,639,2.27,640,2.27,641,2.27,642,2.27,643,2.27,644,2.27,645,2.27,646,2.27,647,2.27,648,3.634,649,2.27,650,2.27,651,2.27,652,2.27,653,2.27]],["title/interfaces/AxisGamepadAction.html",[0,0.149,24,2.792]],["body/interfaces/AxisGamepadAction.html",[0,0.26,1,3.212,2,1.073,3,0.217,4,0.217,5,0.157,6,3.212,7,0.311,8,0.515,9,3.412,10,1.589,11,0.597,12,0.012,13,0.389,14,5.325,15,3.654,16,1.314,17,5.172,18,2.021,19,0.7,20,3.212,21,1.105,22,1.831,23,4.604,24,4.153,25,2.998,26,5.172,27,5.172,28,3.212,29,3.04,30,3.412,31,3.212,32,3.212,33,3.212,34,3.04,35,3.04,36,4.725,37,2.889,38,3.412,39,1.855,40,3.412,41,2.614,42,3.412,43,3.137,44,3.412,45,3.563,46,3.412,47,3.212,48,3.412,49,3.212,50,3.412,51,3.412,52,3.412,53,3.412,54,3.412,55,3.04,56,3.412,57,3.412,58,3.412,59,2.755,60,3.412,61,3.212,62,3.412,63,3.212,64,3.412,65,3.412,66,3.412,67,3.412,68,3.412,69,3.412,70,3.04,71,3.412,72,3.412,73,3.412,74,3.412,75,0.008,76,0.008]],["title/pipes/BandPipe.html",[113,2.196,654,3.791]],["body/pipes/BandPipe.html",[3,0.252,4,0.252,5,0.183,11,0.443,12,0.011,13,0.27,19,0.996,39,1.669,41,2.351,75,0.009,76,0.009,80,1.466,83,0.644,90,0.788,93,3.206,113,3.593,114,1.402,136,0.762,138,2.351,145,1.249,149,1.572,343,1.11,427,1.249,445,1.213,449,1.771,450,1.144,453,4.866,465,1.929,492,4.11,518,5.198,654,6.203,655,4.251,656,5.788,657,5.627,658,2.69,659,4.251,660,5.627,661,5.788,662,5.627,663,7.076,664,5.788,665,5.788,666,5.788]],["title/interfaces/BarsVisualizerOptions.html",[0,0.149,324,2.196]],["body/interfaces/BarsVisualizerOptions.html",[0,0.278,2,0.972,3,0.196,4,0.196,5,0.142,7,0.196,8,0.482,10,1.791,11,0.632,12,0.011,13,0.389,18,3.16,19,1.021,22,1.657,25,2.856,75,0.008,76,0.008,284,2.495,285,2.495,286,3.873,287,2.616,288,2.616,289,2.616,290,2.386,291,2.287,292,2.386,293,2.386,294,2.386,295,2.287,296,2.386,297,2.386,298,2.386,299,2.495,300,2.495,301,2.287,302,4.004,303,3.838,304,3.838,305,3.838,306,2.287,307,3.06,308,2.386,309,2.625,310,2.625,311,3.06,312,2.386,313,2.287,314,2.386,315,2.495,316,2.616,317,2.287,318,3.448,319,2.386,320,2.196,321,4.017,322,2.826,323,2.386,324,3.448,325,3.936,326,3.793,327,3.682,328,3.06,329,3.536]],["title/interfaces/BaseVisualizerOptions.html",[0,0.149,321,2.396]],["body/interfaces/BaseVisualizerOptions.html",[0,0.281,2,1.006,3,0.203,4,0.203,5,0.147,7,0.203,8,0.494,10,1.776,11,0.622,12,0.011,13,0.391,18,3.192,19,1.145,22,1.716,25,2.593,75,0.008,76,0.008,284,2.583,285,2.583,286,3.585,287,2.708,288,2.708,289,2.708,290,2.47,291,2.367,292,2.47,293,2.47,294,2.47,295,2.367,296,2.47,297,2.47,298,2.47,299,2.583,300,2.583,301,2.367,302,3.267,303,3.131,304,3.131,305,3.131,306,2.367,307,3.131,308,2.47,309,3.331,310,3.331,311,3.883,312,2.47,313,2.367,314,2.47,315,2.583,316,2.708,317,2.367,318,3.508,319,2.47,320,2.273,321,4.073,322,3.448,323,3.895,324,3.131,325,3.585,326,3.585,327,2.367,328,3.131,329,3.585]],["title/pipes/BitratePipe.html",[113,2.196,667,3.439]],["body/pipes/BitratePipe.html",[3,0.259,4,0.259,5,0.187,10,1.573,11,0.454,12,0.011,13,0.277,19,1.012,75,0.009,76,0.009,80,1.483,83,0.541,90,0.809,113,3.651,114,1.439,136,0.783,138,2.414,207,3.251,343,1.14,427,1.282,445,1.245,449,1.818,450,1.174,465,1.873,655,4.364,657,5.718,658,2.733,659,4.364,660,5.718,662,5.718,667,5.718,668,6.303,669,5.942,670,6.303,671,4.666,672,5.942]],["title/interfaces/ButtonGamepadAction.html",[0,0.149,28,2.792]],["body/interfaces/ButtonGamepadAction.html",[0,0.261,1,3.251,2,1.086,3,0.219,4,0.219,5,0.159,6,3.251,7,0.312,8,0.519,9,3.454,10,1.595,11,0.579,12,0.012,13,0.39,14,5.18,15,3.698,16,1.33,17,5.195,18,2.045,19,0.709,20,3.251,21,1.118,22,1.853,23,4.63,24,3.251,25,3.016,26,3.454,27,3.454,28,4.186,29,4.628,30,3.454,31,3.251,32,3.251,33,3.251,34,3.076,35,3.076,36,4.762,37,2.924,38,3.454,39,1.87,40,3.454,41,2.634,42,3.454,43,3.161,44,3.454,45,3.591,46,3.454,47,3.251,48,3.454,49,3.251,50,3.454,51,3.454,52,3.454,53,3.454,54,3.454,55,3.076,56,3.454,57,3.454,58,3.454,59,2.789,60,3.454,61,3.251,62,3.454,63,3.251,64,3.454,65,3.454,66,3.454,67,3.454,68,3.454,69,3.454,70,3.076,71,3.454,72,3.454,73,3.454,74,3.454,75,0.008,76,0.008]],["title/interfaces/Chainable.html",[0,0.149,673,3.791]],["body/interfaces/Chainable.html",[0,0.176,2,1.103,3,0.223,4,0.223,5,0.207,7,0.223,12,0.012,16,1.73,75,0.008,76,0.008,83,0.596,343,0.981,370,1.767,427,1.413,445,1.072,450,1.011,516,5.208,540,3.509,554,5.741,673,5.741,674,5.115,675,6.678,676,5.115,677,5.115,678,4.483,679,4.483,680,5.115,681,4.483,682,5.115,683,5.115,684,5.115,685,6.549,686,7.618,687,5.741,688,5.741,689,5.741,690,5.115,691,5.115,692,5.115,693,5.115,694,4.483,695,5.115,696,5.115,697,5.115,698,5.115,699,7.618,700,5.115,701,5.115,702,3.125,703,5.115,704,5.115,705,5.115,706,5.115,707,6.549,708,5.115,709,6.549,710,6.549,711,5.115,712,5.115,713,4.483,714,5.115,715,6.549,716,4.665,717,5.115,718,5.115,719,5.115,720,5.115,721,2.833]],["title/interfaces/ColorConfig.html",[0,0.149,722,2.291]],["body/interfaces/ColorConfig.html",[0,0.264,2,1.121,3,0.226,4,0.226,5,0.23,7,0.226,8,0.53,11,0.605,12,0.011,13,0.383,19,1.211,25,2.185,75,0.009,76,0.009,77,1.913,79,3.018,81,2.753,82,2.515,83,0.663,91,2.879,92,2.882,114,1.856,115,3.355,145,1.427,165,2.111,193,2.111,275,3.226,309,3.338,310,3.338,450,1.514,453,4.043,487,3.355,488,3.355,489,3.355,490,3.355,491,3.355,492,3.018,493,3.355,494,3.355,495,3.355,496,3.355,515,3.176,575,3.565,722,3.505,723,3.355,724,4.043,725,3.176,726,2.185,727,3.36,728,4.272,729,2.879,730,4.043,731,4.7,732,3.018,733,3.565,734,2.437,735,3.565,736,3.355,737,3.817,738,3.565,739,3.817,740,3.817,741,3.355,742,3.018]],["title/interfaces/ColorVariant.html",[0,0.149,743,3.439]],["body/interfaces/ColorVariant.html",[0,0.119,2,0.745,3,0.15,4,0.15,5,0.109,7,0.15,8,0.401,10,1.455,11,0.451,12,0.012,13,0.161,19,1.039,21,0.767,22,1.271,39,0.996,59,1.913,75,0.006,76,0.006,80,1.13,83,0.672,85,2.991,86,3.633,87,0.703,89,1.403,90,0.47,136,0.455,142,1.946,145,1.271,149,1.308,223,1.546,225,1.313,340,1.487,348,2.006,349,1.684,350,2.006,406,2.168,413,0.878,450,1.277,512,2.774,513,1.62,514,1.829,519,1.057,520,1.913,625,3.435,722,2.652,743,4.684,744,3.027,745,7.022,746,6.946,747,7.376,748,3.678,749,5.138,750,4.327,751,3.027,752,4.745,753,4.745,754,4.041,755,3.027,756,3.027,757,3.027,758,3.027,759,3.027,760,2.369,761,3.027,762,3.027,763,4.389,764,3.027,765,2.746,766,3.027,767,2.536,768,3.027,769,4.389,770,2.746,771,3.027,772,3.027,773,3.027,774,3.027,775,3.027,776,3.027,777,3.027,778,3.027,779,3.027,780,3.027,781,3.027,782,3.027,783,3.027,784,2.746,785,3.027,786,3.027,787,3.027,788,5.42,789,5.163,790,3.027,791,3.027,792,3.027,793,3.027,794,3.027,795,3.027,796,3.027,797,3.027,798,3.027,799,3.027,800,3.027,801,3.027,802,3.027,803,4.389,804,4.389,805,3.027,806,5.163,807,3.027,808,4.389,809,3.027,810,3.027,811,3.027,812,3.027,813,3.027,814,3.027,815,3.027,816,3.027,817,3.027,818,3.027,819,3.027,820,3.027,821,3.027,822,3.027,823,5.163,824,2.746,825,3.027,826,4.389,827,3.027,828,4.389,829,4.389,830,3.982,831,3.027,832,3.027,833,3.027,834,2.536,835,3.027,836,4.389,837,3.027,838,3.027,839,3.027,840,3.027,841,3.027,842,3.027,843,3.027,844,3.027,845,3.027,846,4.389,847,3.027,848,3.027,849,1.913,850,3.027,851,2.746,852,3.027]],["title/interfaces/CoverColor.html",[0,0.149,853,2.792]],["body/interfaces/CoverColor.html",[0,0.28,2,1.229,3,0.248,4,0.248,5,0.239,7,0.248,8,0.561,11,0.536,12,0.011,13,0.379,19,1.215,75,0.009,76,0.009,82,2.165,83,0.519,450,1.565,590,2.031,726,2.395,727,2.893,849,4.387,853,5.469,854,2.314,855,3.908,856,5.113,857,3.053,858,2.672,859,3.309,860,3.678,861,3.678,862,3.678,863,3.678,864,3.678,865,2.778,866,2.778,867,3.481,868,3.712,869,3.481,870,2.778]],["title/interfaces/CoverColorPalette.html",[0,0.149,727,2.196]],["body/interfaces/CoverColorPalette.html",[0,0.275,2,1.148,3,0.232,4,0.232,5,0.232,7,0.232,8,0.538,11,0.622,12,0.011,13,0.372,19,1.163,75,0.009,76,0.009,82,2.023,83,0.484,450,1.698,590,1.897,726,2.237,727,3.41,849,2.947,853,5.665,854,2.162,855,3.65,856,3.435,857,2.926,858,2.495,859,4.489,860,4.99,861,4.99,862,4.99,863,4.99,864,4.99,865,2.594,866,2.594,867,3.251,868,3.558,869,3.251,870,2.594]],["title/components/CoverDisplayComponent.html",[84,0.961,375,1.699]],["body/components/CoverDisplayComponent.html",[3,0.151,4,0.151,5,0.158,7,0.151,8,0.402,12,0.012,13,0.162,21,1.312,75,0.006,76,0.006,77,1.849,79,3.991,80,1.242,81,2.662,83,0.652,84,1.312,85,3.489,87,0.706,90,0.473,101,3.43,102,2.12,114,1.217,131,1.91,132,1.849,134,2.356,136,0.457,137,1.319,140,2.918,142,1.949,145,1.084,149,1.116,223,0.727,330,1.363,331,1.633,332,1.41,333,1.41,334,1.41,336,3.07,337,3.07,338,3.099,339,3.159,341,1.363,343,1.133,345,2.12,350,2.918,351,2.38,360,2.38,368,1.41,369,2.041,370,1.736,371,1.237,372,2.631,373,1.41,374,1.41,375,2.544,376,2.828,377,1.41,378,1.363,379,1.41,380,1.363,381,1.319,382,1.41,383,1.199,384,1.237,385,1.237,386,2.041,387,1.363,388,2.631,389,1.363,390,1.41,391,1.363,392,1.277,393,1.41,394,1.363,395,1.41,396,1.277,397,1.363,398,1.363,399,1.41,400,1.363,401,1.319,402,1.41,403,1.363,404,1.41,405,1.363,406,1.277,407,2.544,408,1.41,409,1.363,410,1.319,411,1.363,412,1.41,419,3.69,465,1.431,667,4.697,668,5.676,670,5.676,734,2.356,871,5.676,872,3.47,873,3.447,874,4.338,875,5.024,876,5.024,877,5.907,878,6.475,879,5.024,880,5.024,881,5.024,882,5.024,883,3.47,884,5.024,885,3.47,886,3.47,887,3.47,888,3.47,889,3.041,890,5.149,891,2.759,892,4.404,893,4.404,894,4.404,895,6.475,896,6.475,897,3.47,898,6.475,899,3.447,900,6.475,901,6.475,902,6.475,903,6.475,904,5.024,905,5.024,906,3.47]],["title/interfaces/DirHandleEntry.html",[0,0.149,907,3.439]],["body/interfaces/DirHandleEntry.html",[0,0.152,2,0.951,3,0.192,4,0.192,5,0.249,7,0.192,8,0.475,10,1.367,11,0.454,12,0.012,13,0.206,41,1.791,75,0.008,76,0.008,83,0.683,87,0.897,89,1.791,90,0.6,136,0.581,138,1.791,142,1.199,145,1.668,149,1.755,156,2.846,223,0.924,225,1.675,249,2.563,251,3.037,275,2.149,340,1.309,349,2.149,413,1.042,467,3.016,513,2.067,517,1.791,519,1.349,553,2.693,590,2.118,658,2.258,702,2.693,868,3.975,907,4.723,908,2.693,909,2.149,910,3.505,911,3.237,912,5.584,913,5.968,914,2.846,915,2.846,916,2.442,917,2.335,918,2.693,919,3.982,920,2.693,921,3.29,922,2.846,923,3.505,924,3.024,925,3.024,926,3.237,927,3.864,928,3.864,929,5.888,930,3.864,931,5.206,932,3.864,933,3.237,934,2.639,935,1.991,936,3.864,937,3.864,938,3.864,939,3.864,940,1.991,941,3.864,942,3.237,943,3.864,944,3.864,945,3.629,946,3.505,947,3.864,948,3.864,949,3.864,950,3.505,951,3.505,952,3.864,953,3.864,954,3.864,955,3.505,956,3.864,957,3.024,958,3.505,959,3.864,960,3.864,961,3.864,962,3.505,963,3.237,964,5.888,965,4.723,966,3.505,967,3.864,968,3.864,969,3.864]],["title/components/EqualizerComponent.html",[84,0.961,378,1.699]],["body/components/EqualizerComponent.html",[3,0.132,4,0.132,5,0.143,7,0.132,8,0.364,10,1.323,11,0.232,12,0.012,13,0.141,16,1.202,19,0.64,21,1.443,39,1.574,41,2.464,43,2.662,45,1.679,49,1.957,59,1.679,63,3.916,75,0.006,76,0.006,80,1.247,83,0.592,84,1.212,86,2.409,87,0.617,89,1.232,90,0.413,92,2.642,93,1.679,114,1.102,131,1.729,132,1.674,134,2.133,136,0.399,137,1.152,142,1.485,145,1.606,149,1.347,225,2.075,313,2.309,330,1.191,331,1.478,332,1.232,333,1.232,334,1.232,336,2.779,337,2.779,338,3.045,339,3.096,341,1.191,343,1.358,345,1.852,350,3.523,351,2.079,360,3.12,368,1.232,369,1.848,370,1.572,371,1.081,372,2.464,373,1.232,374,1.232,375,1.191,376,1.081,377,1.232,378,2.383,379,1.232,380,1.191,381,1.152,382,1.232,383,1.047,384,1.081,385,1.081,386,1.848,387,1.191,388,2.464,389,1.191,390,1.232,391,1.191,392,1.116,393,1.232,394,1.191,395,1.232,396,1.116,397,1.191,398,1.191,399,1.232,400,1.191,401,1.152,402,1.232,403,1.191,404,1.232,405,1.191,406,1.116,407,1.191,408,1.232,409,1.191,410,1.152,411,1.191,412,1.232,414,3.213,427,0.981,445,0.953,449,0.928,450,0.599,465,1.653,473,4.785,492,1.761,515,3.335,518,5.469,564,5.629,760,2.079,767,2.227,873,2.079,916,3.024,970,3.031,971,4.341,972,4.341,973,4.548,974,4.548,975,6.499,976,5.459,977,4.548,978,6.066,979,4.548,980,4.548,981,3.031,982,3.031,983,2.642,984,3.031,985,4.548,986,3.031,987,3.031,988,2.411,989,2.411,990,1.852,991,2.227,992,3.031,993,3.987,994,3.031,995,3.031,996,3.031,997,3.031,998,4.548,999,3.031,1000,3.031,1001,3.031,1002,4.548,1003,3.031,1004,4.459,1005,3.031,1006,5.469,1007,3.031,1008,2.411,1009,3.031,1010,5.317,1011,4.548,1012,4.548,1013,4.548,1014,3.031,1015,4.548,1016,3.031,1017,3.031,1018,3.031,1019,4.548,1020,3.031,1021,6.066,1022,3.031,1023,5.459,1024,3.987,1025,3.031,1026,3.031,1027,6.825,1028,6.499,1029,3.031,1030,3.031,1031,5.459,1032,3.031,1033,4.341,1034,4.548,1035,2.227,1036,6.499,1037,3.031,1038,3.031,1039,2.657,1040,3.031,1041,3.031,1042,3.031,1043,3.031,1044,3.031,1045,2.411,1046,3.031,1047,3.031,1048,3.031,1049,3.031,1050,3.031,1051,3.031,1052,3.031,1053,3.031,1054,3.031,1055,3.031,1056,3.031,1057,3.031,1058,3.031,1059,2.411,1060,3.031,1061,3.031]],["title/interfaces/FileData.html",[0,0.149,919,2.396]],["body/interfaces/FileData.html",[0,0.206,2,1.29,3,0.26,4,0.26,5,0.269,7,0.26,8,0.578,11,0.552,12,0.011,13,0.362,75,0.009,76,0.009,145,1.557,275,3.926,450,1.426,730,4.737,908,3.653,909,2.915,918,3.653,919,3.998,1062,3.312,1063,5.24,1064,5.24,1065,5.24,1066,5.24,1067,6.326,1068,5.24,1069,5.24,1070,5.24,1071,5.24,1072,5.24,1073,5.24,1074,5.24,1075,5.24,1076,5.24,1077,5.24,1078,5.24,1079,5.24,1080,5.24,1081,5.24]],["title/components/FileDropOverlayComponent.html",[84,0.961,380,1.699]],["body/components/FileDropOverlayComponent.html",[3,0.125,4,0.125,5,0.256,7,0.19,8,0.349,11,0.404,12,0.011,13,0.134,16,1.395,21,1.173,39,1.258,75,0.006,76,0.006,80,1.333,83,0.261,84,1.173,87,0.584,90,0.391,114,1.057,132,1.606,136,0.378,137,1.091,138,1.773,142,1.995,145,1.442,149,0.637,197,1.968,218,3.878,219,2.993,223,1.537,330,1.127,331,1.418,332,1.166,333,1.166,334,1.166,338,3.022,339,3.068,341,1.127,343,1.282,368,1.166,369,1.773,370,1.508,371,1.023,372,2.578,373,1.166,374,1.166,375,1.127,376,1.023,377,1.166,378,1.127,379,1.166,380,2.318,381,3.253,382,1.166,383,0.992,384,1.023,385,1.023,386,1.773,387,1.127,388,2.397,389,1.127,390,1.166,391,1.127,392,1.056,393,1.166,394,1.127,395,1.166,396,1.056,397,1.127,398,1.127,399,1.166,400,1.127,401,1.091,402,1.166,403,1.127,404,1.166,405,1.127,406,1.606,407,1.127,408,1.166,409,1.127,410,1.091,411,1.127,412,1.166,427,0.941,445,1.106,449,1.616,450,1.043,465,1.279,466,1.968,546,2.282,590,1.882,598,2.681,624,2.515,626,2.515,694,3.825,702,4.084,729,2.417,730,1.753,760,1.968,770,2.282,788,3.205,830,2.282,834,2.108,873,1.968,912,1.968,934,1.714,935,1.971,940,1.971,957,1.968,988,2.282,1045,2.282,1082,2.87,1083,5.103,1084,6.09,1085,6.947,1086,6.947,1087,2.87,1088,5.28,1089,3.409,1090,2.993,1091,4.364,1092,5.28,1093,4.364,1094,5.28,1095,5.28,1096,5.28,1097,4.364,1098,4.364,1099,4.364,1100,7.479,1101,2.87,1102,4.364,1103,2.87,1104,4.364,1105,2.87,1106,3.622,1107,2.87,1108,6.346,1109,2.87,1110,2.87,1111,2.87,1112,2.87,1113,2.87,1114,2.87,1115,2.87,1116,2.87,1117,2.87,1118,2.87,1119,2.87,1120,2.87,1121,2.87,1122,4.364,1123,6.346,1124,2.87,1125,4.364,1126,4.364,1127,2.87,1128,4.364,1129,2.87,1130,4.364,1131,4.364,1132,2.87,1133,4.364,1134,2.87,1135,1.853,1136,4.628,1137,4.628,1138,4.364,1139,2.87,1140,2.87,1141,4.364,1142,5.28,1143,2.515,1144,4.364,1145,2.87,1146,5.899,1147,2.87,1148,2.87,1149,2.87,1150,2.87,1151,3.825,1152,3.47,1153,2.87,1154,2.87,1155,2.87,1156,2.87,1157,2.87,1158,2.87,1159,2.87,1160,2.87,1161,2.87,1162,2.87,1163,5.28,1164,2.87,1165,5.28,1166,2.87,1167,2.515,1168,2.87,1169,3.47,1170,2.87,1171,2.515,1172,2.515,1173,2.87,1174,2.87,1175,2.87,1176,2.87,1177,2.87,1178,2.87,1179,2.87,1180,2.87,1181,2.87,1182,2.87,1183,2.87,1184,2.87,1185,2.87,1186,4.364,1187,2.87,1188,4.364,1189,2.87,1190,2.87,1191,2.87,1192,2.87,1193,2.87,1194,2.87,1195,2.515,1196,3.825,1197,2.87,1198,2.87,1199,2.87,1200,2.87,1201,4.364]],["title/classes/FileLoaderService.html",[136,0.57,921,2.396]],["body/classes/FileLoaderService.html",[3,0.254,4,0.254,5,0.224,7,0.254,8,0.568,11,0.445,12,0.011,13,0.272,75,0.009,76,0.009,83,0.646,90,0.793,136,0.767,343,1.47,427,1.532,445,1.488,908,4.876,909,3.891,919,3.225,920,3.558,921,3.934,926,5.629,933,5.861,934,3.135,942,5.861,1062,4.42,1202,5.823,1203,5.823,1204,8.618,1205,7.664,1206,5.823,1207,5.823,1208,5.823]],["title/interfaces/FrequencyBarsConfig.html",[0,0.149,301,2.196]],["body/interfaces/FrequencyBarsConfig.html",[0,0.281,2,1.017,3,0.205,4,0.205,5,0.149,7,0.205,8,0.497,10,1.788,11,0.615,12,0.011,13,0.392,18,2.823,19,1.04,22,1.736,25,2.613,75,0.008,76,0.008,284,2.612,285,2.612,286,3.601,287,2.739,288,2.739,289,2.739,290,2.498,291,2.394,292,2.498,293,2.498,294,2.498,295,2.394,296,2.498,297,2.498,298,2.498,299,2.612,300,2.612,301,3.155,302,4.066,303,3.897,304,3.897,305,3.897,306,2.394,307,3.155,308,2.498,309,2.706,310,2.706,311,3.155,312,2.498,313,2.394,314,2.498,315,2.612,316,2.739,317,2.394,318,3.528,319,2.498,320,2.299,321,3.849,322,2.914,323,2.498,324,3.155,325,3.601,326,3.601,327,2.394,328,3.155,329,3.601]],["title/interfaces/GamepadAction.html",[0,0.149,17,2.967]],["body/interfaces/GamepadAction.html",[0,0.256,1,3.09,2,1.032,3,0.208,4,0.208,5,0.151,6,3.09,7,0.345,8,0.502,9,3.283,10,1.684,11,0.626,12,0.012,13,0.386,14,4.796,15,3.515,16,1.264,17,5.096,18,3.018,19,0.985,20,4.796,21,1.65,22,2.576,23,5.282,24,3.09,25,2.638,26,3.283,27,3.283,28,3.09,29,2.924,30,3.283,31,3.09,32,3.09,33,3.09,34,2.924,35,2.924,36,4.608,37,2.779,38,3.283,39,1.809,40,3.283,41,2.549,42,3.283,43,3.059,44,3.283,45,3.475,46,3.283,47,3.09,48,3.283,49,3.09,50,3.283,51,3.283,52,3.283,53,3.283,54,3.283,55,2.924,56,3.283,57,3.283,58,3.283,59,2.651,60,3.283,61,3.09,62,3.283,63,3.09,64,3.283,65,3.283,66,3.283,67,3.283,68,3.283,69,3.283,70,2.924,71,3.283,72,3.283,73,3.283,74,3.283,75,0.008,76,0.008,450,1.468]],["title/injectables/GamepadService.html",[413,0.758,1209,2.792]],["body/injectables/GamepadService.html",[1,3.264,3,0.117,4,0.117,5,0.084,7,0.313,8,0.331,9,2.838,10,1.67,11,0.497,12,0.012,13,0.125,14,5.017,16,1.625,18,3.082,20,4.897,21,1.444,22,0.985,23,1.728,24,3.673,26,4.46,27,4.46,28,3.673,29,3.476,31,1.728,32,4.376,33,3.673,34,3.089,35,2.528,37,2.937,39,1.774,70,3.089,75,0.005,76,0.005,80,1.091,83,0.377,90,0.365,136,0.353,138,1.087,142,1.125,145,1.693,149,1.444,223,1.61,225,1.922,228,2.128,235,2.128,340,0.795,343,1.3,413,0.725,415,1.017,427,0.892,445,1.192,449,1.741,450,1.124,465,1.81,519,0.819,598,2.1,658,1.572,671,1.554,1089,2.671,1135,1.728,1209,2.671,1210,2.676,1211,5.056,1212,5.056,1213,4.137,1214,4.137,1215,5.056,1216,4.137,1217,4.137,1218,4.137,1219,2.676,1220,7.341,1221,4.137,1222,2.676,1223,7.341,1224,2.676,1225,5.688,1226,2.676,1227,7.002,1228,4.137,1229,2.676,1230,2.676,1231,2.676,1232,2.676,1233,2.676,1234,2.676,1235,2.676,1236,2.676,1237,2.676,1238,2.676,1239,5.056,1240,2.676,1241,5.056,1242,2.676,1243,2.676,1244,5.688,1245,2.676,1246,2.676,1247,2.676,1248,2.676,1249,4.137,1250,5.056,1251,5.391,1252,4.137,1253,2.346,1254,4.137,1255,2.676,1256,2.676,1257,2.676,1258,2.676,1259,4.137,1260,2.676,1261,2.676,1262,2.676,1263,2.676,1264,2.676,1265,2.676,1266,3.714,1267,6.15,1268,2.676,1269,2.676,1270,5.056,1271,2.676,1272,2.676,1273,2.676,1274,2.676,1275,2.676,1276,2.676,1277,2.676,1278,4.137,1279,2.676,1280,2.676,1281,2.676,1282,2.676,1283,2.676,1284,2.676,1285,5.056,1286,4.137,1287,3.038,1288,4.137,1289,4.137,1290,2.676,1291,2.676,1292,2.676,1293,4.137,1294,2.676,1295,2.676,1296,2.676,1297,4.137,1298,4.137,1299,5.056,1300,5.056,1301,5.688,1302,4.517,1303,5.056,1304,2.676,1305,5.688,1306,2.676,1307,5.699,1308,4.137,1309,4.137,1310,4.137,1311,2.676,1312,5.688,1313,2.676,1314,2.676,1315,4.137,1316,2.676,1317,2.676,1318,4.137,1319,4.137,1320,2.676,1321,2.676,1322,2.676]],["title/interfaces/Hotkey.html",[0,0.149,1323,2.967]],["body/interfaces/Hotkey.html",[0,0.191,2,0.857,3,0.173,4,0.173,5,0.125,7,0.173,8,0.443,11,0.526,12,0.012,13,0.297,19,1.121,75,0.007,76,0.007,83,0.659,87,0.809,90,0.541,136,0.523,145,1.717,149,1.607,166,2.173,175,3.064,207,1.671,223,1.333,340,1.18,348,2.308,349,1.937,370,2.5,383,1.373,384,1.972,385,1.417,413,0.97,431,2.918,467,3.902,517,1.614,519,1.216,557,2.918,598,2.809,658,2.103,716,2.565,945,3.38,1004,2.726,1266,2.918,1287,2.918,1323,3.795,1324,3.16,1325,5.314,1326,5.272,1327,5.645,1328,4.063,1329,2.918,1330,3.38,1331,2.308,1332,4.399,1333,3.795,1334,5.473,1335,3.16,1336,2.565,1337,2.428,1338,3.16,1339,3.16,1340,3.213,1341,2.918,1342,3.16,1343,4.063,1344,3.16,1345,3.16,1346,2.428,1347,3.16,1348,3.16,1349,3.16,1350,3.16,1351,3.16,1352,3.16,1353,3.16,1354,3.16,1355,4.399,1356,3.16,1357,4.399,1358,4.399,1359,4.399,1360,3.16,1361,3.16,1362,3.16,1363,3.16,1364,3.16,1365,4.063,1366,3.16,1367,3.16,1368,3.16,1369,3.16,1370,5.061,1371,3.16,1372,4.399,1373,3.16,1374,3.16,1375,4.399,1376,3.16,1377,3.16,1378,3.16,1379,3.16,1380,3.16,1381,3.16,1382,3.16,1383,4.399,1384,3.16,1385,3.16,1386,3.16,1387,3.16,1388,5.473,1389,3.16,1390,4.399,1391,3.16,1392,3.16,1393,3.16,1394,1.51,1395,2.726,1396,3.16,1397,3.16,1398,3.16]],["title/interfaces/HotkeyInfo.html",[0,0.149,1336,2.792]],["body/interfaces/HotkeyInfo.html",[0,0.193,2,0.871,3,0.176,4,0.176,5,0.127,7,0.176,8,0.448,11,0.428,12,0.012,13,0.3,19,1.087,75,0.007,76,0.007,83,0.663,87,0.822,90,0.55,136,0.532,145,1.724,149,1.616,166,2.198,175,3.1,207,1.699,223,1.345,340,1.2,348,2.346,349,1.97,370,1.934,383,1.396,384,1.995,385,1.44,413,0.981,431,2.967,467,3.92,517,1.641,519,1.236,557,2.967,598,2.841,658,2.127,716,2.608,1004,2.771,1266,2.967,1287,2.967,1323,2.771,1324,3.212,1325,4.11,1326,5.296,1327,5.091,1328,4.11,1329,2.967,1330,3.419,1331,2.346,1332,4.45,1333,3.839,1334,6.354,1335,3.212,1336,3.613,1337,2.468,1338,3.212,1339,3.212,1340,3.25,1341,2.967,1342,3.212,1343,4.11,1344,3.212,1345,3.212,1346,2.468,1347,3.212,1348,3.212,1349,3.212,1350,3.212,1351,3.212,1352,3.212,1353,3.212,1354,3.212,1355,4.45,1356,3.212,1357,4.45,1358,4.45,1359,4.45,1360,3.212,1361,3.212,1362,3.212,1363,3.212,1364,3.212,1365,4.11,1366,3.212,1367,3.212,1368,3.212,1369,3.212,1370,5.106,1371,3.212,1372,4.45,1373,3.212,1374,3.212,1375,4.45,1376,3.212,1377,3.212,1378,3.212,1379,3.212,1380,3.212,1381,3.212,1382,3.212,1383,4.45,1384,3.212,1385,3.212,1386,3.212,1387,3.212,1388,5.512,1389,3.212,1390,4.45,1391,3.212,1392,3.212,1393,3.212,1394,1.536,1395,2.771,1396,3.212,1397,3.212,1398,3.212]],["title/interfaces/HotkeysData.html",[0,0.149,1399,3.439]],["body/interfaces/HotkeysData.html",[0,0.193,2,1.208,3,0.244,4,0.244,5,0.177,7,0.244,8,0.555,11,0.428,12,0.011,13,0.323,75,0.009,76,0.009,83,0.75,84,1.54,87,1.139,90,0.762,94,4.476,95,3.614,104,2.842,106,2.529,131,2.128,132,2.06,134,2.625,136,0.737,149,1.243,175,4.172,338,2.06,339,2.128,383,1.934,384,2.685,385,2.806,1330,3.421,1331,3.251,1336,3.614,1340,3.251,1346,3.421,1394,2.128,1395,5.4,1399,5.513,1400,4.907,1401,4.112,1402,4.112,1403,5.092,1404,4.907,1405,4.236,1406,3.52,1407,4.112,1408,4.907,1409,4.112,1410,4.112,1411,4.907,1412,4.907,1413,4.452,1414,4.907]],["title/components/HotkeysHelpDialogComponent.html",[84,0.961,383,1.494]],["body/components/HotkeysHelpDialogComponent.html",[0,0.134,3,0.169,4,0.169,5,0.172,7,0.169,8,0.435,12,0.011,13,0.254,16,1.025,21,1.208,41,2.766,43,2.652,75,0.007,76,0.007,80,1.306,83,0.677,84,1.395,87,0.789,90,0.528,92,2.369,94,4.056,95,2.504,104,1.969,106,1.752,114,1.317,131,2.067,132,2.002,134,2.551,136,0.511,137,1.474,149,0.861,175,2.148,330,1.523,331,1.767,332,1.575,333,1.575,334,1.575,338,3.139,339,3.206,341,1.523,343,1.306,368,1.575,369,2.21,370,1.879,371,1.383,372,2.766,373,1.575,374,1.575,375,1.523,376,1.383,377,1.575,378,1.523,379,1.575,380,1.523,381,1.474,382,1.575,383,2.353,384,2.722,385,2.918,386,2.21,387,1.523,388,2.766,389,1.523,390,1.575,391,1.523,392,1.427,393,1.575,394,1.523,395,1.575,396,1.427,397,1.523,398,1.523,399,1.575,400,1.523,401,1.474,402,1.575,403,1.523,404,1.575,405,1.523,406,1.427,407,1.523,408,1.575,409,1.523,410,1.474,411,1.523,412,1.575,427,1.173,441,4.325,445,0.813,465,1.317,1323,3.731,1330,2.369,1331,2.252,1336,2.504,1340,3.159,1346,3.838,1394,2.388,1395,2.66,1399,3.084,1400,6.285,1401,2.848,1402,2.848,1403,4.614,1404,3.399,1405,3.838,1406,3.189,1407,3.995,1408,4.767,1409,3.995,1410,3.995,1411,6.285,1412,3.399,1413,5.415,1414,3.399,1415,3.878,1416,3.399,1417,3.878,1418,3.878,1419,3.878,1420,6.809,1421,7.434,1422,6.809,1423,5.439,1424,5.439,1425,6.809,1426,5.439,1427,5.439,1428,4.767,1429,5.439,1430,5.439,1431,5.439,1432,5.439]],["title/injectables/HotkeysService.html",[413,0.758,1337,2.643]],["body/injectables/HotkeysService.html",[0,0.175,3,0.153,4,0.153,5,0.111,7,0.153,8,0.407,11,0.529,12,0.012,13,0.278,16,1.827,19,1.07,21,1.449,75,0.007,76,0.007,80,0.975,83,0.629,87,0.717,90,0.48,136,0.464,145,1.67,149,1.536,166,2.341,175,3.613,207,2.137,223,1.249,340,1.047,343,1.527,348,2.047,349,1.719,370,2.059,383,1.218,384,2.325,385,1.257,413,0.891,415,1.34,427,1.096,431,4.791,445,1.509,449,1.555,450,1.289,465,1.58,467,3.931,517,1.432,519,1.079,557,4.791,598,2.58,658,1.932,716,3.281,1004,2.418,1266,2.589,1287,2.589,1323,2.418,1324,2.803,1325,3.732,1326,4.474,1327,5.079,1328,3.732,1329,2.589,1330,3.641,1331,2.047,1332,4.041,1333,3.486,1334,5.187,1335,2.803,1336,2.276,1337,3.105,1338,2.803,1339,2.803,1340,2.951,1341,2.589,1342,4.739,1343,5.079,1344,4.041,1345,4.739,1346,3.641,1347,4.739,1348,2.803,1349,2.803,1350,2.803,1351,2.803,1352,2.803,1353,2.803,1354,4.041,1355,4.041,1356,2.803,1357,4.041,1358,4.041,1359,4.041,1360,2.803,1361,2.803,1362,2.803,1363,2.803,1364,2.803,1365,3.732,1366,2.803,1367,2.803,1368,2.803,1369,2.803,1370,4.739,1371,2.803,1372,4.041,1373,2.803,1374,2.803,1375,4.041,1376,2.803,1377,2.803,1378,2.803,1379,2.803,1380,4.041,1381,2.803,1382,2.803,1383,4.041,1384,2.803,1385,2.803,1386,5.187,1387,5.187,1388,5.187,1389,2.803,1390,4.041,1391,2.803,1392,2.803,1393,2.803,1394,1.34,1395,2.418,1396,2.803,1397,2.803,1398,2.803,1433,5.082,1434,5.082,1435,3.525,1436,3.525,1437,3.525,1438,3.525,1439,3.525,1440,3.525,1441,3.525,1442,3.525,1443,3.525,1444,3.525,1445,3.525]],["title/interfaces/Id3CoverPicture.html",[0,0.149,724,2.643]],["body/interfaces/Id3CoverPicture.html",[0,0.249,2,1.287,3,0.26,4,0.26,5,0.188,7,0.26,8,0.577,10,1.467,11,0.551,12,0.011,13,0.336,19,1.192,75,0.009,76,0.009,77,2.196,81,3.16,83,0.543,92,2.599,114,1.445,165,2.424,193,2.424,320,3.777,671,4.186,724,4.733,725,3.646,728,4.654,729,3.305,734,3.863,854,2.424,857,2.599,1394,3.058,1446,5.23,1447,4.744]],["title/interfaces/Id3Tags.html",[0,0.149,857,1.884]],["body/interfaces/Id3Tags.html",[0,0.234,2,1.169,3,0.236,4,0.236,5,0.171,7,0.236,8,0.544,10,1.383,11,0.647,12,0.011,13,0.317,19,1.218,75,0.009,76,0.009,77,2.864,81,4.122,83,0.493,92,3.39,114,1.313,165,3.161,193,3.161,320,2.643,450,1.702,671,3.946,724,4.755,725,3.312,728,5.024,729,3.002,734,3.759,854,2.202,857,2.96,1394,2.06,1446,4.751,1447,6.188,1448,6.795]],["title/injectables/Id3TagsService.html",[413,0.758,1449,3.439]],["body/injectables/Id3TagsService.html",[3,0.184,4,0.184,5,0.241,7,0.184,10,1.174,11,0.441,12,0.012,13,0.197,16,1.954,20,2.726,21,0.938,39,1.218,75,0.007,76,0.007,80,0.81,83,0.598,90,0.575,136,0.556,138,1.715,145,1.647,149,1.281,166,2.581,175,2.339,192,2.726,223,1.549,225,2.498,340,1.254,343,1.107,413,1.012,415,1.605,427,1.244,445,0.885,449,1.292,450,0.834,458,2.452,465,1.023,519,1.292,536,3.357,590,2.836,598,3.336,725,4.015,726,1.775,854,2.67,857,1.839,858,1.98,867,3.525,868,3.917,869,2.58,870,2.813,934,2.266,963,5.187,1089,3.724,1135,2.726,1151,3.701,1449,4.587,1450,4.222,1451,5.056,1452,4.222,1453,5.056,1454,7.062,1455,4.222,1456,5.768,1457,2.452,1458,5.431,1459,4.222,1460,4.222,1461,7.394,1462,6.571,1463,3.701,1464,4.222,1465,3.701,1466,3.701,1467,4.222,1468,5.768,1469,4.222,1470,5.768,1471,4.222,1472,5.768,1473,4.222,1474,3.701,1475,4.222,1476,4.222,1477,4.222,1478,3.701,1479,6.571,1480,4.222,1481,3.357,1482,4.222,1483,3.701,1484,4.222,1485,3.701,1486,5.768,1487,4.222,1488,4.222,1489,4.222,1490,4.222,1491,4.222,1492,4.222,1493,4.222,1494,6.571,1495,4.222,1496,4.222,1497,4.222,1498,4.222,1499,4.222,1500,5.768,1501,5.768,1502,4.222,1503,4.222,1504,4.222,1505,4.222,1506,4.222,1507,4.222,1508,4.222,1509,4.222,1510,4.222,1511,4.222]],["title/interfaces/IndexedDbTrackMetadata.html",[0,0.149,91,2.396]],["body/interfaces/IndexedDbTrackMetadata.html",[0,0.265,2,1.135,3,0.229,4,0.229,5,0.231,7,0.229,8,0.534,11,0.589,12,0.011,13,0.385,19,1.185,25,2.805,75,0.009,76,0.009,77,1.937,79,3.057,81,2.788,82,2.535,83,0.666,91,3.695,92,2.905,114,1.865,115,3.398,145,1.439,165,2.138,193,2.138,275,3.873,309,2.293,310,2.293,450,1.318,453,4.076,487,3.398,488,3.398,489,3.398,490,3.398,491,3.398,492,3.057,493,3.398,494,3.398,495,3.398,496,3.398,515,3.216,575,3.61,722,2.788,723,3.398,724,4.076,725,3.216,726,2.213,727,3.387,728,4.306,729,2.915,730,4.704,731,4.971,732,3.057,733,3.61,734,2.468,735,3.61,736,3.398,737,3.866,738,3.61,739,3.866,740,3.866,741,3.398,742,3.057]],["title/interfaces/LastfmAlbum.html",[0,0.149,1512,2.792]],["body/interfaces/LastfmAlbum.html",[0,0.24,2,0.88,3,0.178,4,0.178,5,0.129,7,0.178,8,0.451,10,0.83,11,0.532,12,0.012,13,0.19,19,1.171,39,1.177,75,0.007,76,0.007,77,2.562,80,1.335,82,2.142,83,0.687,87,0.83,90,0.556,136,0.537,142,1.533,145,1.629,149,1.778,165,2.968,166,1.603,207,3.176,223,1.583,249,2.009,251,1.603,340,1.212,413,0.988,517,1.657,519,1.248,590,2.301,721,2.26,726,1.715,734,1.913,854,1.657,857,2.454,858,1.913,865,1.989,866,1.989,917,2.161,934,2.213,935,1.843,940,1.843,1394,2.453,1457,2.369,1512,4.167,1513,2.634,1514,2.634,1515,4.253,1516,4.494,1517,2.798,1518,2.634,1519,2.493,1520,2.634,1521,2.26,1522,3.443,1523,3.443,1524,3.443,1525,2.634,1526,3.637,1527,2.493,1528,2.798,1529,2.798,1530,2.798,1531,2.798,1532,2.798,1533,2.798,1534,2.634,1535,2.493,1536,3.443,1537,2.798,1538,2.798,1539,2.634,1540,2.634,1541,2.634,1542,2.798,1543,2.798,1544,2.798,1545,2.798,1546,2.634,1547,2.798,1548,3.637,1549,2.798,1550,2.798,1551,2.798,1552,2.798,1553,2.798,1554,2.798,1555,2.798,1556,2.798,1557,2.798,1558,4.427,1559,2.798,1560,2.798,1561,2.634,1562,4.427,1563,5.011,1564,5.011,1565,2.798,1566,2.798,1567,2.798,1568,3.865,1569,2.798,1570,2.798,1571,2.798,1572,2.798,1573,2.798,1574,2.798,1575,2.798]],["title/interfaces/LastfmErrorResponse.html",[0,0.149,1524,2.643]],["body/interfaces/LastfmErrorResponse.html",[0,0.241,2,0.889,3,0.179,4,0.179,5,0.13,7,0.179,8,0.454,10,1.32,11,0.496,12,0.012,13,0.192,19,1.155,39,1.188,75,0.007,76,0.007,77,2.572,80,0.79,82,2.156,83,0.69,87,0.838,90,0.561,136,0.543,142,1.543,145,1.634,149,1.782,165,2.305,166,1.619,207,3.186,223,1.587,249,2.022,251,1.619,340,1.224,413,0.995,517,1.674,519,1.261,590,2.701,721,2.282,726,1.732,734,1.932,854,1.674,857,2.471,858,1.932,865,2.009,866,2.009,917,2.182,934,2.228,935,1.861,940,1.861,1394,2.466,1457,2.393,1512,3.662,1513,2.66,1514,2.66,1515,2.517,1516,3.662,1517,2.826,1518,2.66,1519,2.517,1520,2.66,1521,2.282,1522,3.466,1523,3.466,1524,3.964,1525,4.513,1526,3.662,1527,2.517,1528,2.826,1529,2.826,1530,2.826,1531,2.826,1532,2.826,1533,2.826,1534,2.66,1535,2.517,1536,3.466,1537,2.826,1538,2.826,1539,2.66,1540,2.66,1541,2.66,1542,2.826,1543,2.826,1544,2.826,1545,2.826,1546,2.66,1547,2.826,1548,3.662,1549,2.826,1550,2.826,1551,2.826,1552,2.826,1553,2.826,1554,2.826,1555,2.826,1556,2.826,1557,2.826,1558,4.45,1559,2.826,1560,2.826,1561,2.66,1562,4.45,1563,5.028,1564,5.028,1565,2.826,1566,2.826,1567,2.826,1568,3.891,1569,2.826,1570,2.826,1571,2.826,1572,2.826,1573,2.826,1574,2.826,1575,2.826]],["title/interfaces/LastfmImage.html",[0,0.149,1516,2.792]],["body/interfaces/LastfmImage.html",[0,0.241,2,0.889,3,0.179,4,0.179,5,0.13,7,0.179,8,0.454,10,0.838,11,0.496,12,0.012,13,0.192,19,1.172,39,1.188,75,0.007,76,0.007,77,2.572,80,0.79,82,2.156,83,0.69,87,0.838,90,0.561,136,0.543,142,1.543,145,1.634,149,1.782,165,2.305,166,1.619,207,3.186,223,1.587,249,2.022,251,1.619,340,1.224,413,0.995,517,1.674,519,1.261,590,2.313,721,2.282,726,1.732,734,1.932,854,1.674,857,2.471,858,1.932,865,2.009,866,2.009,917,2.182,934,2.228,935,1.861,940,1.861,1394,2.466,1457,2.393,1512,3.662,1513,2.66,1514,2.66,1515,2.517,1516,4.189,1517,2.826,1518,2.66,1519,2.517,1520,2.66,1521,3.872,1522,4.479,1523,3.466,1524,3.466,1525,2.66,1526,3.662,1527,2.517,1528,2.826,1529,2.826,1530,2.826,1531,2.826,1532,2.826,1533,2.826,1534,2.66,1535,2.517,1536,3.466,1537,2.826,1538,2.826,1539,2.66,1540,2.66,1541,2.66,1542,2.826,1543,2.826,1544,2.826,1545,2.826,1546,2.66,1547,2.826,1548,3.662,1549,2.826,1550,2.826,1551,2.826,1552,2.826,1553,2.826,1554,2.826,1555,2.826,1556,2.826,1557,2.826,1558,4.45,1559,2.826,1560,2.826,1561,2.66,1562,4.45,1563,5.028,1564,5.028,1565,2.826,1566,2.826,1567,2.826,1568,3.891,1569,2.826,1570,2.826,1571,2.826,1572,2.826,1573,2.826,1574,2.826,1575,2.826]],["title/injectables/LastfmMetadataService.html",[413,0.758,1527,2.643]],["body/injectables/LastfmMetadataService.html",[0,0.24,3,0.178,4,0.178,5,0.129,7,0.178,10,0.831,11,0.431,12,0.012,13,0.191,19,1.128,39,1.178,75,0.007,76,0.007,77,2.563,80,1.082,82,2.144,83,0.688,87,0.831,90,0.556,136,0.538,142,1.534,145,1.63,149,1.779,165,2.291,166,1.605,207,3.177,223,1.583,249,2.483,251,1.605,340,1.213,343,0.784,413,0.989,415,1.553,427,1.217,445,0.856,449,1.25,450,0.807,517,1.66,519,1.25,590,2.303,721,2.263,726,1.718,734,1.916,854,2.291,857,3.034,858,1.916,865,1.992,866,1.992,870,1.992,917,2.164,934,2.537,935,1.845,940,1.845,1394,2.455,1457,2.373,1512,3.641,1513,3.641,1514,2.637,1515,2.496,1516,3.641,1517,2.802,1518,2.637,1519,2.496,1520,2.637,1521,2.263,1522,3.446,1523,3.446,1524,3.446,1525,2.637,1526,3.641,1527,3.446,1528,2.802,1529,2.802,1530,2.802,1531,2.802,1532,2.802,1533,2.802,1534,3.641,1535,2.496,1536,3.446,1537,2.802,1538,2.802,1539,2.637,1540,2.637,1541,2.637,1542,2.802,1543,2.802,1544,2.802,1545,2.802,1546,2.637,1547,2.802,1548,3.641,1549,2.802,1550,2.802,1551,2.802,1552,2.802,1553,2.802,1554,2.802,1555,2.802,1556,2.802,1557,2.802,1558,4.431,1559,2.802,1560,2.802,1561,2.637,1562,4.431,1563,5.013,1564,5.013,1565,2.802,1566,2.802,1567,2.802,1568,3.869,1569,2.802,1570,2.802,1571,2.802,1572,2.802,1573,2.802,1574,2.802,1575,2.802,1576,4.943,1577,4.085]],["title/interfaces/LastfmSuccessResponse.html",[0,0.149,1523,2.643]],["body/interfaces/LastfmSuccessResponse.html",[0,0.242,2,0.898,3,0.181,4,0.181,5,0.131,7,0.181,8,0.457,10,0.847,11,0.437,12,0.012,13,0.194,19,1.132,39,1.2,75,0.007,76,0.007,77,2.864,80,0.798,82,2.171,83,0.692,87,0.847,90,0.567,136,0.548,142,1.554,145,1.639,149,1.786,165,2.321,166,1.635,207,3.195,223,1.592,249,2.036,251,1.635,340,1.236,413,1.002,517,1.691,519,1.273,590,2.325,721,2.305,726,1.75,734,1.952,854,1.691,857,2.488,858,1.952,865,2.029,866,2.029,917,2.204,934,2.244,935,1.88,940,1.88,1394,2.479,1457,2.417,1512,4.532,1513,2.687,1514,2.687,1515,2.543,1516,3.688,1517,2.855,1518,2.687,1519,2.543,1520,2.687,1521,2.305,1522,3.49,1523,3.985,1524,3.49,1525,2.687,1526,3.688,1527,2.543,1528,2.855,1529,2.855,1530,2.855,1531,2.855,1532,2.855,1533,2.855,1534,2.687,1535,2.543,1536,3.49,1537,2.855,1538,2.855,1539,2.687,1540,2.687,1541,2.687,1542,2.855,1543,2.855,1544,2.855,1545,2.855,1546,2.687,1547,2.855,1548,3.688,1549,2.855,1550,2.855,1551,2.855,1552,2.855,1553,2.855,1554,2.855,1555,2.855,1556,2.855,1557,2.855,1558,4.474,1559,2.855,1560,2.855,1561,2.687,1562,4.474,1563,5.046,1564,5.046,1565,2.855,1566,2.855,1567,2.855,1568,3.918,1569,2.855,1570,2.855,1571,2.855,1572,2.855,1573,2.855,1574,2.855,1575,2.855]],["title/injectables/LegacyFileLoaderService.html",[413,0.758,1578,3.791]],["body/injectables/LegacyFileLoaderService.html",[3,0.211,4,0.211,5,0.27,7,0.307,8,0.506,12,0.012,13,0.226,21,1.075,39,1.396,75,0.008,76,0.008,83,0.641,89,1.967,90,0.659,136,0.638,138,1.967,142,1.915,145,1.364,149,1.075,156,4.081,166,1.902,223,1.475,225,2.675,249,2.76,251,1.902,340,1.438,343,1.431,413,1.108,415,1.84,427,1.364,445,1.324,465,1.173,519,1.481,546,3.85,598,2.458,658,1.84,702,4.559,908,4.73,909,3.774,911,3.556,918,2.958,919,2.682,920,2.958,921,3.501,922,3.126,926,5.17,933,5.17,934,2.765,942,5.48,1106,3.321,1474,4.244,1485,4.244,1578,5.541,1579,7.741,1580,4.842,1581,4.842,1582,4.842,1583,4.842,1584,4.842,1585,4.842,1586,4.842,1587,4.842,1588,4.842,1589,4.842,1590,4.842,1591,4.842,1592,4.842,1593,4.842,1594,4.842,1595,4.842,1596,4.842,1597,4.842,1598,4.842,1599,4.842,1600,4.842,1601,4.842,1602,4.842]],["title/components/LibraryComponent.html",[84,0.961,137,1.644]],["body/components/LibraryComponent.html",[0,0.051,3,0.065,4,0.065,5,0.155,7,0.173,8,0.204,10,1.327,11,0.474,12,0.012,13,0.119,16,1.295,19,1.039,21,1.415,39,1.149,75,0.003,76,0.003,77,2.738,78,1.299,79,1.948,80,1.389,81,1.777,82,0.969,83,0.617,84,0.745,85,2.941,86,1.35,87,0.302,88,2.301,89,1.363,90,0.202,91,3.871,92,3.185,93,0.821,94,2.165,95,0.957,96,2.667,97,2.94,98,2.94,99,2.463,100,1.017,101,2.11,102,0.906,103,2.667,104,0.752,105,2.667,106,0.669,107,2.667,108,2.667,109,2.667,110,1.179,111,2.667,112,1.089,113,0.752,114,1.087,115,0.957,116,2.206,117,0.906,118,2.667,119,1.089,120,2.94,121,2.94,122,2.94,123,2.94,124,2.94,125,1.299,126,2.94,127,1.089,128,1.089,129,2.925,130,1.299,131,0.969,132,0.938,133,2.234,134,1.195,135,2.234,136,0.195,137,1.514,138,1.036,139,1.558,140,1.48,141,2.234,142,2.039,143,4.6,144,2.94,145,1.724,146,3.491,147,2.234,148,2.234,149,1.624,150,2.234,151,2.234,152,2.234,153,2.234,154,2.234,155,2.94,156,3.165,157,3.934,158,2.667,159,2.94,160,5.836,161,4.6,162,2.234,163,2.234,164,2.234,165,3.125,166,1.565,167,2.234,168,3.898,169,2.234,170,2.94,171,3.491,172,4.857,173,3.491,174,4.297,175,2.206,176,2.027,177,2.667,178,4.6,179,2.234,180,1.872,181,3.491,182,2.234,183,2.234,184,2.234,185,2.234,186,2.234,187,2.234,188,2.234,189,5.437,190,2.234,191,2.234,192,2.571,193,1.618,194,2.234,195,4.297,196,2.234,197,1.749,198,4.297,199,2.234,200,2.234,201,4.297,202,2.234,203,2.234,204,1.558,205,3.491,206,2.234,207,2.939,208,3.491,209,2.234,210,3.491,211,2.234,212,2.234,213,2.234,214,2.234,215,2.234,216,2.234,217,2.027,218,1.872,219,1.749,220,2.234,221,2.234,222,2.234,223,0.534,224,1.299,225,1.275,226,1.179,227,1.299,228,1.179,229,1.179,230,1.089,231,1.089,232,2.94,233,1.299,234,3.491,235,1.179,236,2.234,237,1.299,238,1.299,239,1.017,240,1.299,241,2.234,242,1.299,243,1.299,244,2.027,245,2.234,246,1.299,247,2.234,248,1.299,249,2.417,250,2.027,251,2.276,252,1.179,253,1.299,254,1.299,255,2.234,256,2.94,257,1.299,258,3.491,259,1.299,260,2.234,261,2.234,262,3.491,263,1.179,264,1.299,265,1.299,266,1.299,267,1.299,268,1.299,269,2.234,270,1.299,271,2.234,272,2.234,273,2.94,274,1.299,275,0.723,276,1.299,277,1.299,278,1.299,279,1.179,280,2.234,281,2.234,282,2.027,283,1.299,330,0.582,331,0.828,332,0.602,333,0.602,334,0.602,338,2.606,339,2.577,341,0.582,343,1.427,368,0.602,369,1.036,370,0.881,371,0.528,372,1.618,373,0.602,374,0.602,375,0.582,376,0.528,377,0.602,378,0.582,379,0.602,380,0.582,381,0.563,382,0.602,383,0.512,384,0.528,385,0.528,386,1.036,387,0.582,388,1.618,389,0.582,390,0.602,391,0.582,392,0.545,393,0.602,394,0.582,395,0.602,396,0.545,397,0.582,398,0.582,399,0.602,400,0.582,401,0.563,402,0.602,403,0.582,404,0.602,405,0.582,406,0.545,407,0.582,408,0.602,409,0.582,410,0.563,411,0.582,412,0.602,427,0.55,445,1.3,449,1.898,450,1.226,465,1.503,597,3.6,1603,2.549,1604,2.549,1605,2.549,1606,2.234,1607,2.549,1608,2.549,1609,2.549,1610,2.549,1611,2.549,1612,2.549,1613,2.234,1614,1.482,1615,1.482,1616,1.482,1617,1.482,1618,1.482,1619,1.482,1620,1.482,1621,1.482,1622,1.482,1623,1.482,1624,1.482,1625,1.482,1626,1.482,1627,1.482,1628,1.482,1629,1.482,1630,1.482,1631,1.482,1632,1.482,1633,1.482,1634,1.482,1635,1.482,1636,1.482,1637,4.902,1638,2.549,1639,3.6,1640,2.549,1641,2.549,1642,3.983,1643,3.983,1644,2.549,1645,3.983,1646,3.983,1647,3.983,1648,2.549]],["title/injectables/LibraryService.html",[129,3.177,413,0.758]],["body/injectables/LibraryService.html",[3,0.222,4,0.222,5,0.161,7,0.222,8,0.523,12,0.011,13,0.238,21,1.451,75,0.008,76,0.008,83,0.716,87,1.037,89,2.93,90,0.694,91,2.823,93,2.823,114,1.235,116,3.62,117,3.114,129,4.8,136,0.671,139,3.114,142,2.255,145,1.41,149,1.132,223,1.369,249,2.572,251,2.567,340,1.514,343,1.384,413,1.146,415,1.937,421,5.736,427,1.41,445,1.068,465,1.583,498,4.8,513,2.39,517,2.071,519,1.56,590,2.572,592,4.053,595,4.053,914,3.291,915,3.291,916,2.823,917,2.7,924,3.496,925,3.496,934,2.567,935,2.302,940,2.302,1394,1.937,1649,5.097,1650,7.213,1651,7.608,1652,5.097,1653,5.097,1654,5.097,1655,5.097,1656,5.097,1657,5.097,1658,5.097,1659,6.535,1660,5.097,1661,5.097,1662,6.535,1663,5.097,1664,5.097,1665,5.097,1666,4.053,1667,5.097,1668,3.114,1669,5.097,1670,6.535,1671,5.097,1672,5.097,1673,5.097]],["title/interceptors/LoaderInterceptor.html",[1674,4.325,1675,3.439]],["body/interceptors/LoaderInterceptor.html",[3,0.252,4,0.252,5,0.182,7,0.252,11,0.442,12,0.011,13,0.269,75,0.009,76,0.009,80,1.108,83,0.743,87,1.175,90,0.787,136,0.761,138,2.347,149,1.283,223,1.21,343,1.108,413,1.239,427,1.525,445,1.21,449,1.767,450,1.141,517,2.347,963,4.243,1333,5.239,1518,3.729,1675,5.62,1676,5.776,1677,5.776,1678,7.068,1679,7.068,1680,7.957,1681,6.694,1682,7.957,1683,5.776,1684,5.776,1685,7.068,1686,5.776,1687,5.063,1688,5.191,1689,5.776,1690,5.063,1691,5.776,1692,5.776,1693,5.776]],["title/injectables/LoaderService.html",[413,0.758,1688,3.177]],["body/injectables/LoaderService.html",[3,0.244,4,0.244,5,0.177,7,0.244,8,0.555,12,0.011,13,0.261,16,1.832,21,1.243,39,2.27,41,2.817,75,0.009,76,0.01,83,0.51,89,2.274,90,0.762,136,0.737,142,2.049,223,1.173,340,1.663,343,1.445,413,1.216,415,2.128,421,5.989,427,1.496,445,1.453,465,1.356,498,5.092,519,1.713,592,4.452,595,4.452,621,4.907,1688,5.092,1694,5.598,1695,8.09,1696,8.09,1697,5.598,1698,5.598,1699,5.598,1700,5.598,1701,8.09,1702,5.598,1703,5.598,1704,4.907]],["title/injectables/MediaSessionService.html",[413,0.758,1705,2.967]],["body/injectables/MediaSessionService.html",[3,0.189,4,0.189,5,0.137,7,0.189,10,1.565,11,0.546,12,0.012,13,0.202,16,2.079,29,4.56,75,0.008,76,0.008,80,1.37,83,0.535,86,3.529,87,0.882,90,0.591,114,1.05,136,0.571,145,1.437,166,1.703,223,1.231,225,2.532,231,3.184,340,1.288,343,1.431,413,1.03,414,3.111,415,1.648,418,6.118,419,5.244,427,1.267,445,1.496,449,2.185,450,1.411,466,2.974,519,1.327,590,2.094,935,2.653,940,2.653,945,3.589,983,2.518,1365,5.244,1705,4.029,1706,6.743,1707,6.118,1708,4.335,1709,5.873,1710,5.873,1711,5.873,1712,5.873,1713,4.335,1714,5.873,1715,6.661,1716,7.462,1717,6.259,1718,4.335,1719,5.873,1720,6.661,1721,4.335,1722,5.873,1723,4.335,1724,5.873,1725,4.335,1726,4.335,1727,5.148,1728,5.148,1729,4.335,1730,3.8,1731,4.335,1732,4.335,1733,4.335,1734,4.335,1735,3.8,1736,4.335,1737,4.335,1738,5.873,1739,5.148,1740,5.873,1741,5.873,1742,4.335,1743,4.335,1744,4.335,1745,4.335,1746,4.335,1747,4.335,1748,4.335,1749,4.335,1750,4.335,1751,4.335]],["title/injectables/MetadataService.html",[116,2.396,413,0.758]],["body/injectables/MetadataService.html",[3,0.09,4,0.09,5,0.155,7,0.09,8,0.27,11,0.488,12,0.012,13,0.096,19,0.291,21,1.418,39,1.418,41,0.84,43,1.642,55,1.263,75,0.004,76,0.004,77,0.761,79,2.476,80,0.943,81,1.095,82,1.28,83,0.645,85,3.11,87,0.421,89,1.732,90,0.281,91,1.866,92,2.53,93,1.145,114,1.547,116,1.866,136,0.272,142,2.199,145,1.72,149,1.684,165,0.84,166,0.812,180,2.474,193,0.84,207,2.277,223,1.338,230,3.978,249,2.478,251,2.949,275,1.642,295,2.497,340,0.614,343,1.36,376,1.52,413,0.591,415,0.786,427,0.727,445,1.03,449,1.505,450,0.972,465,1.547,483,2.953,512,1.866,513,1.58,514,1.095,517,0.84,519,0.632,520,1.145,522,1.518,553,1.263,590,1.201,597,1.518,658,2.427,687,2.953,702,3.005,721,3.537,727,1.71,731,3.954,732,3.557,733,1.418,734,0.969,735,1.418,736,1.334,738,1.418,742,1.2,748,3.132,754,2.311,765,1.643,784,3.91,834,1.518,849,3.217,854,2.931,856,3.749,858,0.969,859,2.476,860,1.334,861,1.334,862,1.334,863,1.334,864,1.334,865,2.079,866,2.079,870,2.398,909,1.008,914,1.334,915,1.334,916,1.145,917,1.095,919,3.996,920,1.263,924,1.418,925,1.418,934,2.281,935,0.934,940,0.934,945,2.058,1035,1.518,1062,1.145,1449,2.679,1457,1.2,1521,3.217,1527,2.058,1535,2.058,1536,2.058,1666,1.643,1752,1.811,1753,4.264,1754,4.264,1755,4.264,1756,4.264,1757,4.264,1758,4.264,1759,4.264,1760,3.368,1761,3.368,1762,3.368,1763,3.368,1764,2.067,1765,2.067,1766,1.811,1767,3.368,1768,3.368,1769,2.067,1770,3.368,1771,2.067,1772,3.368,1773,2.067,1774,3.368,1775,2.067,1776,5.807,1777,2.067,1778,2.067,1779,4.917,1780,2.067,1781,6.124,1782,3.368,1783,3.368,1784,2.953,1785,2.067,1786,3.368,1787,2.067,1788,3.368,1789,2.067,1790,3.368,1791,2.067,1792,2.067,1793,1.811,1794,2.067,1795,2.679,1796,2.067,1797,1.643,1798,2.067,1799,2.067,1800,1.811,1801,2.067,1802,2.067,1803,2.067,1804,2.067,1805,2.067,1806,2.067,1807,2.067,1808,2.067,1809,2.067,1810,2.067,1811,2.067,1812,5.415,1813,2.067,1814,3.368,1815,2.067,1816,1.811,1817,1.811,1818,2.067,1819,2.067,1820,2.067,1821,2.067,1822,2.067,1823,2.067,1824,3.368,1825,2.067,1826,2.067,1827,3.368,1828,4.264,1829,2.067,1830,2.067,1831,3.368,1832,2.067,1833,4.917,1834,3.368,1835,3.368,1836,2.679,1837,2.953,1838,3.368,1839,4.264,1840,2.067,1841,2.067,1842,3.368,1843,4.264,1844,2.953,1845,2.067,1846,3.368,1847,2.067,1848,5.415,1849,2.067,1850,1.418,1851,2.067,1852,2.067,1853,2.067,1854,5.415,1855,2.067,1856,2.067,1857,3.368,1858,2.067,1859,2.067,1860,2.067,1861,2.067,1862,2.067,1863,2.067,1864,2.067,1865,2.067,1866,2.067,1867,2.067,1868,2.067,1869,2.067,1870,2.067,1871,2.067,1872,2.067,1873,2.067,1874,2.067,1875,2.067,1876,2.067,1877,2.067,1878,2.067,1879,2.067,1880,2.067,1881,2.067,1882,1.811,1883,4.917,1884,2.067,1885,1.811,1886,1.811,1887,2.067,1888,3.368,1889,4.264,1890,2.067,1891,2.067,1892,2.067,1893,4.264,1894,4.917,1895,2.067,1896,2.067,1897,2.067,1898,3.368,1899,2.067,1900,2.067,1901,3.368,1902,2.067,1903,2.067,1904,2.067,1905,3.368,1906,1.811,1907,2.067,1908,2.067,1909,2.067,1910,1.811,1911,4.264,1912,2.067,1913,2.067,1914,2.067,1915,2.067,1916,2.067,1917,2.067,1918,2.067,1919,2.067,1920,3.368,1921,2.067,1922,2.067,1923,2.067,1924,3.368,1925,2.067,1926,2.067,1927,3.737,1928,2.067,1929,2.067,1930,1.811,1931,2.067,1932,2.067,1933,2.067,1934,2.067,1935,2.067,1936,2.067,1937,2.067,1938,2.067,1939,2.067,1940,2.067,1941,2.067,1942,2.067,1943,2.067,1944,2.067]],["title/components/MetadataSettingsComponent.html",[84,0.961,387,1.699]],["body/components/MetadataSettingsComponent.html",[3,0.159,4,0.159,5,0.23,7,0.159,8,0.418,11,0.507,12,0.011,13,0.171,16,1.753,21,0.812,75,0.007,76,0.007,80,1.472,83,0.683,84,1.351,87,0.744,90,0.498,106,1.652,114,1.919,116,3.675,117,2.235,131,1.984,132,1.921,136,0.482,137,1.39,139,3.189,204,3.189,223,1.093,249,2.169,251,1.437,330,1.437,331,1.696,332,1.486,333,1.486,334,1.486,338,3.118,339,3.182,341,1.437,343,1.399,368,1.486,369,2.12,370,1.803,371,1.304,372,2.695,373,1.486,374,1.486,375,1.437,376,1.304,377,1.486,378,1.437,379,1.486,380,1.437,381,1.39,382,1.486,383,1.264,384,1.304,385,1.304,386,2.12,387,2.606,388,2.695,389,1.437,390,1.486,391,1.437,392,1.346,393,1.486,394,1.437,395,1.486,396,1.346,397,1.437,398,1.437,399,1.486,400,1.437,401,1.39,402,1.486,403,1.437,404,1.486,405,1.437,406,1.346,407,1.437,408,1.486,409,1.437,410,1.39,411,1.437,412,1.486,427,1.126,445,1.47,449,2.03,450,1.311,465,0.886,512,2.891,513,2.448,514,1.938,520,2.026,576,3.853,598,3.368,870,3.742,914,2.362,915,3.928,916,3.886,924,2.509,925,2.509,1008,4.15,1302,3.833,1406,3.089,1541,3.369,1945,7.507,1946,6.58,1947,2.909,1948,4.838,1949,6.084,1950,3.833,1951,6.634,1952,5.219,1953,5.219,1954,5.219,1955,5.219,1956,3.658,1957,5.219,1958,8.168,1959,3.658,1960,5.219,1961,3.658,1962,5.219,1963,3.658,1964,5.219,1965,3.658,1966,3.658,1967,3.658,1968,3.658,1969,3.206,1970,2.909,1971,3.658,1972,3.658,1973,6.634,1974,3.658,1975,3.658,1976,3.658,1977,3.658,1978,3.658,1979,3.658,1980,3.658,1981,5.219,1982,3.833,1983,6.634,1984,5.219]],["title/injectables/MusicbrainzService.html",[413,0.758,1795,3.439]],["body/injectables/MusicbrainzService.html",[3,0.178,4,0.178,5,0.129,7,0.178,11,0.313,12,0.012,13,0.191,19,0.911,39,1.182,75,0.007,76,0.007,77,1.508,80,0.786,82,1.557,83,0.688,90,0.558,136,0.54,142,1.537,145,1.704,149,1.82,166,2.22,192,2.645,197,2.81,204,3.453,207,3.321,218,3.009,219,2.81,223,1.461,249,2.608,251,2.874,279,3.258,340,1.217,343,0.786,376,2.306,413,0.991,415,1.557,427,1.219,445,0.858,449,1.254,450,0.809,519,1.254,540,2.81,590,2.306,721,2.269,726,1.723,854,2.296,857,3.037,858,1.921,865,1.998,866,1.998,868,2.17,870,1.998,934,2.739,935,3.15,940,2.922,957,2.81,1169,3.258,1394,1.557,1457,2.379,1515,3.453,1519,2.503,1520,2.645,1534,3.648,1535,2.503,1536,3.453,1539,3.648,1540,4.176,1546,2.645,1561,2.645,1576,4.953,1795,4.493,1982,4.15,1985,4.097,1986,4.097,1987,5.651,1988,5.651,1989,3.591,1990,3.258,1991,4.097,1992,4.097,1993,3.258,1994,4.097,1995,4.097,1996,4.097,1997,4.097,1998,4.097,1999,5.651,2000,4.097,2001,4.097,2002,4.097,2003,4.097,2004,4.097,2005,4.097,2006,4.097,2007,4.097,2008,5.651,2009,4.097,2010,4.097,2011,4.097,2012,4.097,2013,4.097,2014,4.097,2015,4.097,2016,4.097,2017,5.651,2018,4.097,2019,4.097,2020,5.651,2021,6.973,2022,4.097,2023,4.097,2024,4.097,2025,4.097,2026,4.097,2027,4.097,2028,4.097,2029,4.097,2030,5.651,2031,4.097,2032,5.651,2033,3.591,2034,4.097,2035,3.591,2036,3.591,2037,4.097,2038,4.097,2039,4.097]],["title/injectables/NativeBrowserFileLoaderService.html",[413,0.758,923,3.439]],["body/injectables/NativeBrowserFileLoaderService.html",[0,0.143,3,0.18,4,0.18,5,0.259,7,0.18,8,0.456,10,0.843,12,0.012,13,0.193,21,0.92,41,1.683,75,0.007,76,0.007,83,0.669,87,0.843,89,1.683,90,0.564,136,0.546,138,1.683,142,1.77,145,1.637,149,1.726,156,3.677,223,0.868,225,2.473,249,2.823,251,2.981,275,2.02,340,1.231,343,1.344,349,3.581,413,0.999,415,1.575,427,1.229,445,1.193,465,1.004,467,2.892,513,1.943,517,1.683,519,1.268,553,2.532,590,2.03,658,2.165,702,2.532,868,3.017,907,3.295,908,4.488,909,3.581,910,5.841,911,3.043,912,5.206,913,5.175,914,2.675,915,2.675,916,2.295,917,2.195,918,2.532,919,3.881,920,2.532,921,3.154,922,2.675,923,4.529,924,2.842,925,2.842,926,4.779,927,3.632,928,3.632,929,5.704,930,3.632,931,4.992,932,3.632,933,5.146,934,2.885,935,1.872,936,3.632,937,3.632,938,3.632,939,3.632,940,1.872,941,3.632,942,5.146,943,3.632,944,3.632,945,3.48,946,3.295,947,3.632,948,3.632,949,3.632,950,3.295,951,3.295,952,3.632,953,3.632,954,3.632,955,3.295,956,3.632,957,2.842,958,3.295,959,3.632,960,3.632,961,3.632,962,3.295,963,3.043,964,5.704,965,4.529,966,3.295,967,3.632,968,3.632,969,3.632,2040,5.695,2041,4.143,2042,4.143]],["title/interfaces/OscVisualizerOptions.html",[0,0.149,328,2.196]],["body/interfaces/OscVisualizerOptions.html",[0,0.282,2,1.027,3,0.207,4,0.207,5,0.15,7,0.207,8,0.5,10,1.772,11,0.589,12,0.011,13,0.392,18,3.211,19,1.044,22,1.753,25,2.936,75,0.008,76,0.008,284,2.638,285,2.638,286,3.615,287,2.766,288,2.766,289,2.766,290,2.523,291,2.418,292,2.523,293,2.523,294,2.523,295,2.418,296,2.523,297,2.523,298,2.523,299,2.638,300,2.638,301,2.418,302,3.312,303,3.175,304,3.175,305,3.175,306,2.418,307,3.909,308,2.523,309,2.724,310,2.724,311,3.175,312,2.523,313,2.418,314,2.523,315,2.638,316,2.766,317,2.418,318,3.545,319,2.523,320,2.322,321,4.107,322,2.933,323,2.523,324,3.175,325,3.615,326,3.853,327,2.418,328,3.545,329,3.985]],["title/interfaces/OsciloscopeConfig.html",[0,0.149,306,2.196]],["body/interfaces/OsciloscopeConfig.html",[0,0.283,2,1.053,3,0.213,4,0.213,5,0.154,7,0.213,8,0.509,10,1.776,11,0.572,12,0.011,13,0.394,18,2.871,19,1.054,22,1.797,25,2.673,75,0.008,76,0.008,284,2.704,285,2.704,286,3.65,287,2.836,288,2.836,289,2.836,290,2.586,291,2.479,292,2.586,293,2.586,294,2.586,295,2.479,296,2.586,297,2.586,298,2.586,299,2.704,300,2.704,301,2.479,302,3.367,303,3.227,304,3.227,305,3.227,306,3.227,307,3.941,308,2.586,309,2.769,310,2.769,311,3.227,312,2.586,313,2.479,314,2.586,315,2.704,316,2.836,317,2.479,318,3.588,319,2.586,320,2.381,321,3.914,322,2.981,323,2.586,324,3.227,325,3.65,326,3.65,327,2.479,328,3.227,329,3.65]],["title/components/PlayerComponent.html",[84,0.961,389,1.699]],["body/components/PlayerComponent.html",[3,0.183,4,0.183,5,0.206,7,0.183,8,0.459,12,0.011,13,0.196,21,1.454,75,0.007,76,0.007,80,1.351,83,0.76,84,1.454,87,0.853,88,4.491,90,0.571,100,2.875,101,3.73,102,2.561,104,2.128,106,1.893,114,1.39,131,2.182,132,2.112,134,2.692,136,0.552,137,1.593,138,2.332,140,3.334,223,1.203,239,2.875,330,1.647,331,1.865,332,1.703,333,1.703,334,1.703,336,3.507,337,3.507,338,3.165,339,3.237,341,1.647,343,1.101,345,2.561,368,1.703,369,2.332,370,1.983,371,1.494,372,2.86,373,1.703,374,1.703,375,2.766,376,2.046,377,1.703,378,1.647,379,1.703,380,1.647,381,1.593,382,1.703,383,1.448,384,1.494,385,1.494,386,2.332,387,1.647,388,2.86,389,2.766,390,1.703,391,1.647,392,2.409,393,1.703,394,2.766,395,1.703,396,1.543,397,1.647,398,1.647,399,1.703,400,1.647,401,1.593,402,1.703,403,1.647,404,1.703,405,1.647,406,1.543,407,1.647,408,1.703,409,1.647,410,1.593,411,1.647,412,1.703,414,3.73,465,1.39,871,3.674,909,2.044,921,3.179,922,2.706,972,5.206,983,3.334,990,2.561,991,3.079,1062,2.322,1405,4,1406,3.324,2043,4.191,2044,5.738,2045,5.206,2046,5.206,2047,5.74,2048,5.74,2049,4.191,2050,4.191,2051,4.216,2052,3.674,2053,3.079,2054,3.333,2055,4.191,2056,4.191,2057,3.674,2058,3.333,2059,4.191]],["title/injectables/PlayerService.html",[101,2.291,413,0.758]],["body/injectables/PlayerService.html",[3,0.084,4,0.084,5,0.188,7,0.084,8,0.256,10,1.386,11,0.508,12,0.012,13,0.09,16,1.756,19,0.574,21,1.433,39,1.796,41,1.922,43,0.945,75,0.004,76,0.004,77,0.713,80,1.238,83,0.62,85,3.025,86,1.693,87,0.394,89,1.657,90,0.264,92,3.436,93,1.074,101,1.693,114,0.47,116,1.77,117,1.184,136,0.255,139,1.184,142,2.146,145,1.681,149,1.692,156,3.054,158,4.162,165,0.787,193,0.787,197,2.192,207,2.369,223,1.458,225,1.55,230,1.424,244,1.541,249,2.827,250,1.541,251,2.446,252,1.541,275,1.558,309,2.454,310,2.454,317,2.402,340,0.576,343,1.536,350,1.856,351,1.33,360,1.33,413,0.56,414,1.693,415,0.737,418,3.243,427,0.689,432,1.699,445,1.582,449,1.975,450,1.346,458,2.369,463,3.575,465,1.717,467,2.402,512,1.77,513,0.909,514,1.027,519,0.593,520,1.074,553,1.184,560,1.699,590,1.454,600,1.33,658,1.55,675,4.147,722,2.506,732,1.856,736,2.063,741,1.251,742,1.126,909,1.558,918,1.184,919,3.12,920,1.184,921,1.77,922,1.251,934,1.602,935,0.876,940,0.876,945,1.184,950,1.541,983,1.126,990,1.184,1062,1.77,1167,1.699,1428,1.699,1483,1.699,1548,1.251,1606,2.801,1639,3.475,1666,1.541,1681,4.147,1705,2.192,1707,1.541,1717,1.699,1735,2.801,1766,2.801,2058,1.541,2060,1.699,2061,4.078,2062,4.078,2063,4.078,2064,4.078,2065,4.078,2066,3.196,2067,4.078,2068,3.196,2069,3.196,2070,4.078,2071,3.196,2072,2.801,2073,2.801,2074,4.731,2075,4.078,2076,3.196,2077,3.196,2078,4.147,2079,4.147,2080,1.938,2081,1.938,2082,1.938,2083,3.196,2084,1.938,2085,3.575,2086,1.938,2087,1.938,2088,1.938,2089,1.938,2090,1.938,2091,3.196,2092,1.938,2093,1.938,2094,3.196,2095,1.938,2096,3.196,2097,1.938,2098,4.731,2099,3.196,2100,1.938,2101,1.938,2102,1.938,2103,1.938,2104,1.938,2105,3.196,2106,1.938,2107,1.938,2108,1.938,2109,1.938,2110,3.196,2111,3.196,2112,3.196,2113,1.938,2114,1.938,2115,1.938,2116,5.633,2117,4.731,2118,3.196,2119,3.196,2120,1.938,2121,3.196,2122,1.938,2123,3.196,2124,1.938,2125,1.938,2126,3.196,2127,1.938,2128,1.541,2129,2.192,2130,1.938,2131,1.938,2132,1.938,2133,1.541,2134,1.424,2135,1.424,2136,1.938,2137,1.938,2138,1.541,2139,1.541,2140,3.196,2141,1.938,2142,3.196,2143,1.938,2144,1.938,2145,3.196,2146,1.938,2147,3.196,2148,1.938,2149,1.938,2150,1.938,2151,1.938,2152,1.938,2153,1.938,2154,1.938,2155,1.938,2156,1.938,2157,3.196,2158,1.938,2159,3.196,2160,1.938,2161,1.938,2162,1.938,2163,3.196,2164,1.938,2165,1.938,2166,1.938,2167,3.196,2168,1.699,2169,1.938,2170,1.938,2171,1.938,2172,1.938,2173,1.938,2174,1.938,2175,1.938,2176,1.699,2177,1.938,2178,4.078,2179,1.938,2180,1.938,2181,1.938,2182,1.938,2183,1.938,2184,1.938,2185,1.938,2186,1.938,2187,1.938,2188,1.938,2189,1.938,2190,1.938,2191,1.938,2192,1.938,2193,1.938,2194,1.938,2195,1.938,2196,1.938,2197,1.938,2198,1.938,2199,1.938,2200,1.938,2201,1.938,2202,1.938,2203,1.938,2204,1.938,2205,1.938,2206,1.938,2207,1.938,2208,1.938,2209,1.938,2210,1.938,2211,1.938,2212,1.699,2213,3.196,2214,3.196,2215,2.801,2216,1.938,2217,1.938,2218,1.938,2219,4.078,2220,1.938,2221,1.938,2222,1.938,2223,1.938,2224,1.938,2225,1.938,2226,3.196,2227,1.938,2228,3.196,2229,1.938,2230,1.938,2231,1.938,2232,1.699,2233,1.938,2234,4.731,2235,1.938,2236,1.938,2237,1.938,2238,1.938,2239,1.938,2240,1.938,2241,1.938,2242,1.938,2243,3.196,2244,1.938,2245,1.938,2246,1.938,2247,3.196,2248,1.184,2249,1.938,2250,2.369,2251,1.938,2252,2.798,2253,1.938,2254,1.938,2255,1.938,2256,1.938,2257,1.938,2258,1.699,2259,3.575,2260,3.243,2261,1.938,2262,1.938,2263,1.699,2264,1.938,2265,1.938,2266,1.938,2267,1.938,2268,1.938]],["title/components/PlayerToolbarComponent.html",[84,0.961,391,1.699]],["body/components/PlayerToolbarComponent.html",[3,0.105,4,0.105,5,0.149,7,0.105,8,0.304,10,1.591,11,0.498,12,0.012,13,0.112,16,1.881,19,0.535,21,1.298,34,1.469,35,3.798,37,1.396,39,1.361,70,1.469,75,0.005,76,0.005,80,1.393,83,0.706,84,1.048,85,2.396,87,0.489,88,3.237,90,0.327,96,3.753,99,3.466,100,1.649,101,2.842,102,1.469,103,3.753,104,1.22,105,3.753,106,1.086,114,1.143,116,2.972,117,1.469,131,1.446,132,1.4,134,1.784,136,0.317,137,0.914,138,1.545,139,2.324,140,2.209,142,1.284,149,0.534,223,0.989,239,1.649,249,1.913,291,1.22,330,0.944,331,1.236,332,0.977,333,0.977,334,0.977,336,2.324,337,2.324,338,2.941,339,2.918,341,0.944,343,1.5,345,1.469,368,0.977,369,1.545,370,1.314,371,0.857,372,2.18,373,0.977,374,0.977,375,0.944,376,0.857,377,0.977,378,0.944,379,0.977,380,0.944,381,0.914,382,0.977,383,0.831,384,0.857,385,0.857,386,1.545,387,0.944,388,2.18,389,0.944,390,0.977,391,2.108,392,2.396,393,0.977,394,0.944,395,0.977,396,0.885,397,0.944,398,0.944,399,0.977,400,0.944,401,0.914,402,0.977,403,0.944,404,0.977,405,0.944,406,0.885,407,0.944,408,0.977,409,0.944,410,0.914,411,0.944,412,0.977,414,2.842,426,2.107,427,0.82,445,1.548,449,1.992,450,1.373,458,2.209,465,1.923,658,1.446,671,1.396,742,2.209,767,1.766,874,3.466,889,2.107,891,3.024,899,3.68,909,1.172,921,2.972,922,1.552,983,2.209,990,1.469,991,1.766,1062,1.331,1089,3.047,1135,1.552,1209,2.455,1325,1.766,1326,1.649,1327,1.766,1337,2.324,1910,3.334,1990,1.912,2046,3.753,2053,1.766,2054,1.912,2058,3.024,2072,3.334,2073,3.334,2078,4.136,2079,4.136,2248,2.324,2250,3.61,2269,7.883,2270,6.91,2271,2.404,2272,3.803,2273,4.719,2274,4.719,2275,4.719,2276,4.719,2277,3.803,2278,3.803,2279,4.719,2280,3.803,2281,3.803,2282,3.803,2283,4.719,2284,3.803,2285,3.803,2286,4.719,2287,4.719,2288,2.404,2289,2.404,2290,2.404,2291,2.404,2292,2.404,2293,2.404,2294,2.404,2295,3.803,2296,2.404,2297,3.803,2298,2.404,2299,2.404,2300,2.404,2301,2.404,2302,2.404,2303,2.404,2304,2.404,2305,2.404,2306,2.404,2307,2.404,2308,2.404,2309,2.404,2310,2.404,2311,3.803,2312,2.404,2313,1.912,2314,2.107,2315,2.107,2316,2.404,2317,2.107,2318,2.404,2319,2.404,2320,2.404,2321,2.404,2322,2.404,2323,2.404,2324,3.803,2325,3.803,2326,2.404,2327,2.404,2328,2.404,2329,2.404,2330,2.404,2331,2.404,2332,2.404,2333,2.404,2334,3.803,2335,2.404,2336,3.803,2337,4.719,2338,2.404,2339,2.404,2340,2.404,2341,2.404,2342,2.404,2343,2.404,2344,2.404,2345,3.803,2346,2.404,2347,3.803,2348,2.404,2349,2.404,2350,2.404,2351,2.404,2352,2.404,2353,2.404,2354,2.404,2355,2.404,2356,2.404,2357,2.404,2358,2.404,2359,2.404,2360,2.404,2361,2.404,2362,2.404,2363,2.404,2364,2.404,2365,2.404,2366,2.404,2367,2.404,2368,2.404,2369,2.404,2370,2.404,2371,2.404,2372,2.404,2373,5.365,2374,2.404,2375,3.334,2376,5.365,2377,3.803,2378,3.803,2379,3.803,2380,3.803,2381,3.803,2382,3.803]],["title/components/PlaylistComponent.html",[84,0.961,394,1.699]],["body/components/PlaylistComponent.html",[3,0.098,4,0.098,5,0.114,7,0.157,8,0.289,10,0.918,11,0.432,12,0.012,13,0.105,16,1.193,19,0.507,21,1.147,39,1.04,41,1.465,43,2.201,45,1.245,75,0.005,76,0.005,80,1.304,83,0.696,84,1.002,85,2.292,86,2.736,87,0.457,89,2.452,90,0.306,92,3.417,93,1.245,94,2.914,95,1.451,99,1.651,100,1.542,101,2.736,102,1.373,104,1.141,106,1.015,107,3.589,108,3.589,109,3.589,110,1.787,111,3.589,112,1.651,113,1.141,114,0.873,118,3.589,119,1.651,127,1.651,128,1.651,131,1.37,132,1.327,134,1.691,136,0.296,137,0.854,140,2.094,142,1.725,145,1.715,149,1.464,204,1.373,223,1.082,225,1.716,249,1.609,282,2.867,330,0.883,331,1.171,332,0.913,333,0.913,334,0.913,336,2.203,337,2.203,338,2.907,339,2.934,341,0.883,343,1.338,345,1.373,368,0.913,369,1.465,370,1.246,371,0.801,372,2.098,373,0.913,374,0.913,375,0.883,376,0.801,377,0.913,378,0.883,379,0.913,380,0.883,381,0.854,382,0.913,383,0.777,384,0.801,385,0.801,386,1.465,387,0.883,388,2.098,389,0.883,390,0.913,391,0.883,392,0.827,393,0.913,394,2.029,395,0.913,396,0.827,397,0.883,398,0.883,399,0.913,400,0.883,401,0.854,402,0.913,403,0.883,404,0.913,405,0.883,406,0.827,407,0.883,408,0.913,409,0.883,410,1.963,411,0.883,412,0.913,414,2.736,424,4.527,427,0.778,445,1.185,449,1.73,450,1.117,465,1.251,466,3.096,498,1.651,536,1.787,552,1.97,598,2.871,713,1.97,760,1.542,890,4.107,934,1.416,951,2.867,965,2.867,983,2.094,989,1.787,990,1.373,993,3.16,1006,1.651,1035,1.651,1090,1.542,1136,1.97,1137,1.97,1143,3.16,1152,3.589,1195,3.16,1196,3.16,1405,2.758,1406,2.292,1413,1.787,1478,3.956,1613,3.16,1639,5.123,1727,1.97,1728,3.956,1730,1.97,1816,1.97,1885,1.97,1886,1.97,1927,3.16,2046,3.589,2085,6.631,2128,1.787,2133,1.787,2134,1.651,2135,1.651,2138,1.787,2139,1.787,2168,1.97,2212,3.16,2232,3.16,2383,2.247,2384,3.956,2385,3.956,2386,4.514,2387,3.605,2388,3.605,2389,4.514,2390,4.514,2391,3.605,2392,3.605,2393,3.605,2394,2.247,2395,5.165,2396,2.247,2397,5.165,2398,2.247,2399,3.605,2400,4.514,2401,2.247,2402,3.605,2403,2.247,2404,2.247,2405,2.247,2406,3.605,2407,2.247,2408,2.247,2409,3.605,2410,2.247,2411,2.247,2412,1.787,2413,2.247,2414,2.247,2415,2.247,2416,2.247,2417,6.035,2418,2.247,2419,3.956,2420,6.799,2421,4.514,2422,2.247,2423,2.247,2424,2.247,2425,3.605,2426,2.247,2427,3.605,2428,2.247,2429,2.247,2430,3.605,2431,2.247,2432,2.247,2433,1.97,2434,4.514,2435,2.247,2436,2.247,2437,2.247,2438,2.247,2439,2.247,2440,1.97,2441,3.605,2442,2.247,2443,1.373,2444,2.247,2445,2.247,2446,2.247,2447,2.247,2448,4.514,2449,2.247,2450,5.165,2451,2.247,2452,2.247,2453,2.247,2454,3.605,2455,2.247,2456,2.247,2457,2.247,2458,3.605,2459,3.605,2460,4.514,2461,2.247,2462,2.247,2463,3.605,2464,2.247,2465,2.247,2466,3.605,2467,2.247,2468,4.514,2469,2.247,2470,2.247,2471,3.605,2472,3.605,2473,2.247,2474,4.514,2475,2.247,2476,1.97,2477,2.247,2478,2.247,2479,3.605,2480,2.247,2481,2.247,2482,3.605,2483,2.247,2484,2.247,2485,1.97,2486,2.247,2487,2.247,2488,2.247,2489,2.247,2490,2.247,2491,2.247,2492,3.605,2493,2.247,2494,2.247,2495,2.247,2496,2.247,2497,2.247,2498,2.247,2499,2.247,2500,2.247,2501,2.247,2502,3.605,2503,3.605,2504,5.165,2505,3.605,2506,3.605,2507,3.605]],["title/components/PromptDialogComponent.html",[84,0.961,396,1.592]],["body/components/PromptDialogComponent.html",[0,0.149,3,0.188,4,0.188,5,0.185,7,0.188,8,0.469,12,0.011,13,0.273,16,1.549,19,0.936,21,1.302,75,0.008,76,0.008,80,1.368,83,0.605,84,1.477,87,0.88,90,0.589,106,1.953,114,1.42,131,2.228,132,2.157,136,0.569,137,1.643,193,1.756,330,1.698,331,1.905,332,1.756,333,1.756,334,1.756,338,3.175,339,3.249,341,1.698,343,1.368,368,1.756,369,2.381,370,2.025,371,1.541,372,2.897,373,1.756,374,1.756,375,1.698,376,1.541,377,1.756,378,1.698,379,1.756,380,1.698,381,1.643,382,1.756,383,1.494,384,1.541,385,1.541,386,2.381,387,1.698,388,2.897,389,1.698,390,1.756,391,1.698,392,1.591,393,1.756,394,1.698,395,1.756,396,2.625,397,2.928,398,1.698,399,1.756,400,1.698,401,1.643,402,1.756,403,1.698,404,1.756,405,1.698,406,1.591,407,1.698,408,1.756,409,1.698,410,1.643,411,1.698,412,1.756,427,1.265,445,1.228,465,1.42,600,5.273,1083,5.475,1330,2.641,1331,2.51,1340,3.404,1346,4.064,1394,2.528,1401,3.175,1402,3.175,1403,4.885,1406,3.377,1407,4.305,1409,4.305,1410,4.305,1416,3.789,1521,2.394,2508,6.534,2509,6.534,2510,6.251,2511,4.322,2512,4.322,2513,4.322,2514,3.175,2515,3.437,2516,3.789,2517,3.789,2518,5.862,2519,5.862,2520,5.862]],["title/interfaces/PromptDialogData.html",[0,0.149,2514,3.177]],["body/interfaces/PromptDialogData.html",[0,0.195,2,1.219,3,0.246,4,0.246,5,0.178,7,0.246,8,0.558,11,0.578,12,0.011,13,0.325,19,1.2,75,0.009,76,0.009,83,0.688,84,1.549,87,1.15,90,0.77,106,2.553,131,2.149,132,2.08,136,0.745,193,3.209,338,2.08,339,2.149,396,2.08,397,2.74,600,3.878,1083,4.152,1330,3.454,1331,3.283,1340,3.283,1346,3.454,1394,2.149,1401,4.152,1402,4.152,1403,5.123,1406,3.541,1407,4.152,1409,4.152,1410,4.152,1521,4.375,2508,4.955,2509,4.955,2510,4.955,2514,5.123,2515,6.281,2516,4.955,2517,4.955]],["title/interfaces/RemoteCoverArtUrls.html",[0,0.149,82,1.644]],["body/interfaces/RemoteCoverArtUrls.html",[0,0.281,2,1.239,3,0.25,4,0.25,5,0.24,7,0.25,8,0.564,11,0.539,12,0.011,13,0.38,19,1.217,75,0.009,76,0.009,82,2.677,83,0.523,590,2.047,726,2.414,727,2.915,849,3.181,853,5.424,854,2.333,855,3.939,856,3.707,857,3.068,858,2.693,859,3.335,860,3.707,861,3.707,862,3.707,863,3.707,864,3.707,865,3.872,866,3.872,867,3.509,868,3.73,869,3.509,870,2.8]],["title/components/SettingsComponent.html",[84,0.961,398,1.699]],["body/components/SettingsComponent.html",[3,0.214,4,0.214,5,0.202,12,0.011,13,0.23,21,1.093,75,0.008,76,0.008,80,1.441,83,0.684,84,1.576,90,0.671,114,1.719,131,2.429,132,2.352,134,2.997,136,0.649,137,1.872,330,1.934,331,2.077,332,2,333,2,334,2,338,3.214,339,3.296,341,1.934,368,2,369,2.596,370,2.208,371,1.755,372,3.051,373,2,374,2,375,1.934,376,1.755,377,2,378,1.934,379,2,380,1.934,381,1.872,382,2,383,1.701,384,1.755,385,1.755,386,2.596,387,2.95,388,3.051,389,1.934,390,2,391,1.934,392,1.812,393,2,394,1.934,395,2,396,1.812,397,1.934,398,2.95,399,2,400,1.934,401,1.872,402,2,403,2.95,404,2.596,405,2.95,406,2.352,407,1.934,408,2,409,1.934,410,1.872,411,1.934,412,2,576,3.712,1946,4.316,1950,4.694,2521,4.924,2522,6.391,2523,4.316,2524,7.096,2525,4.316]],["title/components/ShellComponent.html",[84,0.961,341,1.699]],["body/components/ShellComponent.html",[3,0.126,4,0.126,5,0.226,7,0.126,8,0.351,11,0.406,12,0.012,13,0.135,16,0.764,19,0.747,21,1.594,75,0.006,76,0.006,80,1.336,83,0.748,84,1.178,87,0.589,90,0.394,94,3.425,95,1.867,101,3.138,104,1.469,106,1.307,113,1.469,114,1.063,116,3.281,117,1.767,127,3.224,128,2.124,131,1.669,132,1.616,134,2.059,136,0.381,137,1.099,139,2.682,140,2.55,142,1.999,145,1.145,149,0.975,175,1.602,223,1.112,249,2.39,251,1.136,275,2.14,330,1.136,331,1.427,332,1.175,333,1.175,334,1.175,338,3.025,339,3.072,341,2.327,343,1.438,368,1.175,369,1.784,370,1.517,371,1.031,372,2.407,373,1.175,374,1.175,375,1.136,376,1.031,377,1.175,378,1.136,379,1.175,380,2.327,381,1.669,382,1.175,383,0.999,384,1.031,385,1.031,386,1.784,387,1.136,388,2.407,389,1.136,390,1.175,391,2.327,392,1.953,393,1.175,394,1.136,395,1.175,396,1.064,397,1.136,398,1.136,399,1.175,400,1.136,401,1.099,402,1.175,403,1.136,404,1.175,405,1.136,406,1.064,407,1.136,408,1.175,409,1.136,410,1.099,411,1.136,412,1.175,427,0.947,445,1.112,449,1.623,450,1.048,458,2.55,465,1.738,467,3.008,517,1.175,576,2.55,702,3.242,730,3.242,890,3.491,891,3.491,892,3.848,893,3.848,894,5.192,909,1.41,918,3.242,919,2.939,920,1.767,958,2.3,971,3.491,989,2.3,1062,1.602,1084,2.535,1090,1.984,1333,3.011,1405,3.242,1406,2.694,1668,2.682,1687,2.535,1688,4.351,1690,3.848,1969,2.535,2044,4.651,2051,4.351,2052,2.535,2054,2.3,2057,3.848,2134,2.124,2135,2.124,2176,2.535,2270,2.535,2385,4.651,2526,2.892,2527,4.39,2528,5.306,2529,5.306,2530,5.306,2531,4.39,2532,4.39,2533,5.306,2534,6.704,2535,5.306,2536,4.39,2537,4.39,2538,4.39,2539,4.39,2540,6.368,2541,2.892,2542,2.535,2543,4.39,2544,2.892,2545,4.39,2546,2.892,2547,2.892,2548,4.39,2549,4.39,2550,2.892,2551,2.892,2552,2.892,2553,2.892,2554,4.39,2555,2.892,2556,2.892,2557,4.39,2558,2.892,2559,2.892,2560,2.892,2561,2.892,2562,4.39,2563,2.535,2564,4.39,2565,2.892,2566,2.892,2567,2.3,2568,2.892,2569,2.892,2570,2.892,2571,2.892,2572,2.892,2573,2.892,2574,2.892,2575,2.892,2576,2.892,2577,2.892,2578,2.892,2579,2.892,2580,2.892,2581,2.892,2582,2.892,2583,2.892,2584,2.892,2585,2.892,2586,2.892,2587,5.923,2588,4.39,2589,4.39,2590,4.39]],["title/components/SlidePanelComponent.html",[84,0.961,400,1.699]],["body/components/SlidePanelComponent.html",[3,0.123,4,0.123,5,0.136,7,0.123,8,0.344,11,0.558,12,0.012,13,0.131,16,1.379,19,1.002,21,1.62,22,1.921,75,0.006,76,0.006,80,1.121,83,0.573,84,1.159,90,0.384,104,1.43,106,1.272,114,1.042,131,1.635,132,1.583,134,2.018,136,0.371,137,1.071,138,1.748,142,1.42,330,1.106,331,1.398,332,1.144,333,1.144,334,1.144,338,3.014,339,3.059,341,1.106,343,1.506,368,1.144,369,1.748,370,1.487,371,1.004,372,2.374,373,1.144,374,1.144,375,1.106,376,1.004,377,1.144,378,1.106,379,1.144,380,1.106,381,1.071,382,1.144,383,0.973,384,1.004,385,1.004,386,1.748,387,1.106,388,2.374,389,1.106,390,1.144,391,1.106,392,1.037,393,1.144,394,1.106,395,1.144,396,1.037,397,1.106,398,1.106,399,1.144,400,2.295,401,3.012,402,1.144,403,1.106,404,1.144,405,1.106,406,1.037,407,1.106,408,1.144,409,1.106,410,1.071,411,1.106,412,1.144,427,0.928,445,0.901,465,1.767,467,3.614,553,4.218,658,2.829,659,2.069,1004,3.581,1006,3.834,1059,4.646,1083,5.82,1106,5.556,1405,3.189,1406,2.65,2045,4.151,2053,2.069,2215,2.469,2248,2.629,2250,3.394,2252,4.552,2384,4.575,2412,2.24,2419,4.575,2485,4.575,2591,6.946,2592,7.924,2593,2.817,2594,5.22,2595,5.466,2596,4.302,2597,4.302,2598,5.22,2599,5.22,2600,5.843,2601,5.843,2602,3.771,2603,5.22,2604,6.294,2605,6.902,2606,5.22,2607,4.302,2608,4.302,2609,4.302,2610,2.817,2611,5.843,2612,2.817,2613,2.817,2614,6.635,2615,2.817,2616,2.817,2617,2.817,2618,2.817,2619,4.302,2620,4.302,2621,2.817,2622,2.817,2623,2.817,2624,4.302,2625,4.302,2626,4.302,2627,4.302,2628,6.635,2629,6.902,2630,7.117,2631,2.817,2632,2.469,2633,2.817,2634,2.817,2635,6.635,2636,6.294,2637,6.635,2638,2.817,2639,2.817,2640,2.817,2641,2.817,2642,2.817,2643,2.817,2644,2.817,2645,2.817,2646,2.817,2647,2.817,2648,2.817,2649,2.817,2650,5.22,2651,5.843,2652,5.843]],["title/components/StorageSettingsComponent.html",[84,0.961,403,1.699]],["body/components/StorageSettingsComponent.html",[3,0.204,4,0.204,5,0.195,7,0.204,12,0.011,13,0.219,16,1.238,75,0.008,76,0.008,80,1.413,83,0.671,84,1.538,87,0.953,90,0.638,106,2.116,114,1.499,131,2.352,132,2.277,136,0.617,137,1.781,223,0.982,330,1.841,331,2.01,332,1.903,333,1.903,334,1.903,338,3.199,339,3.278,341,1.841,343,0.899,368,1.903,369,2.513,370,2.138,371,1.67,372,2.993,373,1.903,374,1.903,375,1.841,376,1.67,377,1.903,378,1.841,379,1.903,380,1.841,381,1.781,382,1.903,383,1.619,384,1.67,385,1.67,386,2.513,387,1.841,388,2.993,389,1.841,390,1.903,391,1.841,392,1.724,393,1.903,394,1.841,395,1.903,396,1.724,397,1.841,398,1.841,399,1.903,400,1.841,401,1.781,402,1.903,403,2.894,404,3.259,405,1.841,406,1.724,407,1.841,408,1.903,409,1.841,410,1.781,411,1.841,412,1.903,427,1.335,445,0.982,512,2.595,513,2.197,514,2.482,520,2.595,576,4.569,577,3.726,1008,4.92,1302,4.544,1406,3.517,1836,4.92,1947,3.726,1948,5.508,1950,4.544,1970,3.726,2523,5.423,2653,6.186,2654,7.367,2655,4.107,2656,4.685]],["title/interfaces/TagsWorkerRequest.html",[0,0.149,867,2.643]],["body/interfaces/TagsWorkerRequest.html",[0,0.281,2,1.239,3,0.25,4,0.25,5,0.268,7,0.25,8,0.564,11,0.539,12,0.011,13,0.38,19,1.203,75,0.009,76,0.009,82,2.183,83,0.523,590,2.047,726,2.414,727,2.915,849,3.181,853,5.424,854,2.333,855,3.939,856,3.707,857,3.068,858,2.693,859,3.335,860,3.707,861,3.707,862,3.707,863,3.707,864,3.707,865,2.8,866,2.8,867,4.303,868,4.317,869,3.509,870,2.8]],["title/interfaces/TagsWorkerResponse.html",[0,0.149,869,2.643]],["body/interfaces/TagsWorkerResponse.html",[0,0.279,2,1.212,3,0.245,4,0.245,5,0.238,7,0.245,8,0.556,11,0.577,12,0.011,13,0.378,19,1.213,75,0.009,76,0.009,82,2.136,83,0.512,450,1.557,590,2.81,726,2.363,727,2.853,849,3.113,853,5.399,854,2.283,855,3.855,856,3.628,857,3.433,858,2.636,859,3.264,860,3.628,861,3.628,862,3.628,863,3.628,864,3.628,865,2.74,866,2.74,867,3.434,868,4.29,869,4.246,870,3.843]],["title/interfaces/ThemeColor.html",[0,0.149,750,3.177]],["body/interfaces/ThemeColor.html",[0,0.217,2,1.357,3,0.274,4,0.274,5,0.198,7,0.274,8,0.595,11,0.606,12,0.011,13,0.293,19,1.193,22,2.916,75,0.01,76,0.01,80,1.571,750,5.464,849,4.535,851,6.511,2657,6.289]],["title/injectables/ThemeService.html",[350,2.512,413,0.758]],["body/injectables/ThemeService.html",[0,0.105,3,0.132,4,0.132,5,0.096,7,0.132,8,0.364,10,0.926,11,0.464,12,0.012,13,0.142,16,1.718,19,1.048,21,1.516,22,2.01,39,0.875,59,1.681,75,0.006,76,0.006,80,1.358,83,0.644,85,3.302,86,3.444,87,0.617,89,1.233,90,0.413,136,0.4,142,2.201,145,1.178,149,1.213,223,1.484,225,2.076,340,1.352,343,1.478,348,1.762,349,1.48,350,2.644,406,2.01,413,0.798,415,1.153,427,0.982,445,1.362,449,1.857,450,1.199,465,1.575,512,2.521,513,1.423,514,1.607,519,0.929,520,1.681,625,3.122,722,3.215,743,3.62,744,2.66,745,6.529,746,6.384,747,7.14,748,3.343,749,4.826,750,4.012,751,2.66,752,4.776,753,4.776,754,4.163,755,2.66,756,2.66,757,2.66,758,2.66,759,2.66,760,2.082,761,2.66,762,2.66,763,3.99,764,2.66,765,2.413,766,2.66,767,2.229,768,2.66,769,3.99,770,2.413,771,2.66,772,2.66,773,2.66,774,2.66,775,2.66,776,2.66,777,2.66,778,2.66,779,2.66,780,2.66,781,2.66,782,2.66,783,2.66,784,2.413,785,5.32,786,3.99,787,3.99,788,5.572,789,5.32,790,3.99,791,4.788,792,3.99,793,4.788,794,3.99,795,4.788,796,3.99,797,4.788,798,3.99,799,2.66,800,2.66,801,2.66,802,2.66,803,3.99,804,3.99,805,2.66,806,4.788,807,2.66,808,3.99,809,2.66,810,2.66,811,5.32,812,3.99,813,2.66,814,3.99,815,2.66,816,2.66,817,3.99,818,2.66,819,3.99,820,2.66,821,2.66,822,2.66,823,4.788,824,2.413,825,2.66,826,3.99,827,2.66,828,3.99,829,3.99,830,3.62,831,2.66,832,2.66,833,2.66,834,2.229,835,2.66,836,3.99,837,2.66,838,2.66,839,2.66,840,2.66,841,2.66,842,2.66,843,2.66,844,2.66,845,2.66,846,3.99,847,2.66,848,2.66,849,1.681,850,2.66,851,2.413,852,2.66,2658,4.552,2659,4.552,2660,4.552,2661,4.552,2662,4.552,2663,3.035,2664,3.035,2665,3.035,2666,3.035,2667,3.035,2668,3.035,2669,3.035,2670,3.035,2671,3.035]],["title/components/ThemeSettingsComponent.html",[84,0.961,405,1.699]],["body/components/ThemeSettingsComponent.html",[3,0.199,4,0.199,5,0.192,7,0.199,8,0.487,11,0.349,12,0.011,13,0.213,16,1.207,18,2.471,21,1.014,75,0.008,76,0.008,80,1.457,83,0.664,84,1.519,87,0.929,90,0.622,114,1.473,131,2.312,132,2.239,136,0.602,137,1.736,330,1.794,331,1.977,332,1.856,333,1.856,334,1.856,338,3.192,339,3.269,341,1.794,343,1.167,350,4.235,351,3.133,360,4.173,368,1.856,369,2.471,370,2.102,371,1.628,372,2.963,373,1.856,374,1.856,375,1.794,376,1.628,377,1.856,378,1.794,379,1.856,380,1.794,381,1.736,382,1.856,383,1.578,384,1.628,385,1.628,386,2.471,387,1.794,388,2.963,389,1.794,390,1.856,391,1.794,392,1.681,393,1.856,394,1.794,395,1.856,396,1.681,397,1.794,398,1.794,399,1.856,400,1.794,401,1.736,402,1.856,403,1.794,404,1.856,405,2.865,406,2.934,407,1.794,408,1.856,409,1.794,410,1.736,411,1.794,412,1.856,427,1.312,445,0.957,449,1.398,450,0.902,465,1.106,576,3.533,598,2.319,754,4.173,824,4.837,1947,3.632,1948,5.439,1950,4.468,1970,3.632,2525,5.995,2655,4.003,2672,6.839,2673,6.839,2674,6.083,2675,6.083,2676,7.293,2677,4.567,2678,4.567,2679,4.567]],["title/pipes/TimePipe.html",[113,2.196,874,3.177]],["body/pipes/TimePipe.html",[3,0.258,4,0.258,5,0.187,10,1.571,11,0.453,12,0.011,13,0.276,19,1.01,75,0.009,76,0.009,80,1.481,83,0.653,90,0.806,113,3.642,114,1.433,136,0.78,138,2.404,149,1.314,207,3.245,343,1.135,427,1.277,445,1.24,449,1.811,450,1.169,458,3.437,465,1.433,655,4.346,657,5.704,658,2.726,659,4.346,660,5.704,662,5.704,874,5.268,899,4.92,1990,4.706,2313,4.706,2680,5.917,2681,7.718,2682,5.917,2683,5.187]],["title/injectables/TitleService.html",[413,0.758,2051,3.177]],["body/injectables/TitleService.html",[3,0.256,4,0.256,5,0.185,7,0.256,8,0.572,11,0.45,12,0.011,13,0.274,16,1.554,19,1.084,21,1.306,75,0.009,76,0.009,80,1.128,83,0.65,87,1.197,89,3.127,90,0.801,136,0.775,142,2.094,193,3.333,223,1.232,340,1.747,343,1.371,348,3.416,349,2.868,413,1.253,415,2.236,427,1.542,445,1.232,449,1.8,450,1.162,465,1.425,519,1.8,2051,5.249,2684,5.882,2685,7.146,2686,7.146,2687,5.882,2688,5.882,2689,5.882,2690,5.882,2691,5.882,2692,5.882]],["title/interfaces/Track.html",[0,0.149,92,1.884]],["body/interfaces/Track.html",[0,0.263,2,1.111,3,0.224,4,0.224,5,0.262,7,0.224,8,0.527,11,0.617,12,0.011,13,0.383,19,1.181,25,2.166,75,0.008,76,0.008,77,1.896,79,2.992,81,2.729,82,2.501,83,0.66,91,2.853,92,3.158,114,1.987,115,3.326,145,1.419,165,2.093,193,2.093,275,3.848,309,2.244,310,2.244,450,1.3,453,4.02,487,3.326,488,3.326,489,3.326,490,3.326,491,3.326,492,2.992,493,3.326,494,3.326,495,3.326,496,3.326,515,3.147,575,3.533,722,2.729,723,3.326,724,4.02,725,3.147,726,2.166,727,3.34,728,4.248,729,2.853,730,4.667,731,5.095,732,2.992,733,3.533,734,2.416,735,3.533,736,3.326,737,3.783,738,3.533,739,3.783,740,3.783,741,3.326,742,2.992]],["title/interfaces/TrackMetadata.html",[0,0.149,731,2.792]],["body/interfaces/TrackMetadata.html",[0,0.252,2,0.995,3,0.201,4,0.201,5,0.217,7,0.201,8,0.49,11,0.651,12,0.011,13,0.373,19,1.229,25,1.939,75,0.008,76,0.008,77,2.694,79,4.252,81,3.878,82,2.783,83,0.625,91,2.554,92,3.319,114,1.773,115,2.977,145,1.321,165,2.974,193,2.974,275,2.985,309,2.008,310,2.008,450,1.664,453,3.74,487,2.977,488,2.977,489,2.977,490,2.977,491,2.977,492,2.678,493,2.977,494,2.977,495,2.977,496,2.977,515,2.817,575,3.163,722,2.442,723,2.977,724,4.473,725,2.817,726,1.939,727,3.717,728,4.726,729,2.554,730,3.74,731,4.726,732,4.252,733,5.022,734,3.433,735,5.022,736,4.726,737,3.387,738,3.163,739,3.387,740,3.387,741,2.977,742,2.678]],["title/injectables/UpdateService.html",[352,3.439,413,0.758]],["body/injectables/UpdateService.html",[3,0.203,4,0.203,5,0.147,7,0.203,12,0.012,13,0.217,75,0.008,76,0.008,83,0.715,87,0.947,90,0.634,136,0.613,145,1.489,149,1.533,166,1.829,193,1.891,204,2.845,223,1.447,225,2.624,249,2.8,340,1.383,343,1.324,352,4.899,396,1.713,413,1.08,415,1.77,427,1.329,445,1.291,467,2.364,517,1.891,519,1.424,600,5.041,625,5.041,658,1.77,917,2.466,934,2.887,1253,4.08,1329,3.419,1331,2.704,1340,2.704,1341,3.419,1394,2.624,1458,3.419,1521,2.579,1817,4.08,2128,3.702,2133,3.702,2134,3.419,2135,3.419,2138,3.702,2139,3.702,2248,2.845,2250,4.01,2252,4.736,2514,4.525,2515,3.702,2567,3.702,2693,4.655,2694,7.348,2695,7.348,2696,4.655,2697,4.655,2698,4.655,2699,6.16,2700,6.904,2701,4.08,2702,4.655,2703,4.655,2704,4.655,2705,4.655,2706,4.655,2707,4.655,2708,4.655,2709,4.655,2710,5.397,2711,6.16,2712,4.655,2713,4.655,2714,4.655,2715,4.655,2716,4.655,2717,4.655,2718,4.655,2719,4.655,2720,4.655,2721,4.655,2722,4.655,2723,4.655,2724,4.655,2725,4.655,2726,4.655,2727,4.655,2728,4.655,2729,4.655,2730,4.655,2731,4.655,2732,4.655,2733,4.655,2734,4.655]],["title/components/VisualizerComponent.html",[84,0.961,407,1.699]],["body/components/VisualizerComponent.html",[3,0.08,4,0.08,5,0.097,7,0.08,8,0.245,10,1.591,11,0.524,12,0.012,13,0.086,16,1.77,21,1.674,37,1.069,43,1.493,47,1.976,55,1.87,75,0.004,76,0.004,80,1.34,83,0.665,84,0.873,85,3.213,87,0.374,88,2.697,89,0.748,90,0.251,92,1.333,101,2.427,102,1.124,104,0.934,106,0.831,114,0.742,131,1.164,132,1.127,134,1.436,136,0.242,137,0.699,138,1.244,140,1.778,142,2.264,149,1.354,223,0.386,225,1.494,239,1.262,286,3.085,290,1.622,291,1.554,292,1.622,293,1.622,294,1.622,295,1.554,296,2.427,297,1.622,298,1.622,299,1.696,300,1.696,301,0.934,302,2.695,303,2.583,304,2.955,305,2.583,306,0.934,307,2.326,311,2.583,322,3.33,325,3.182,326,2.972,329,2.972,330,0.723,331,0.995,332,0.748,333,0.748,334,0.748,336,1.87,337,1.87,338,2.798,339,2.808,341,0.723,343,1.537,345,1.124,368,0.748,369,1.244,370,1.058,371,0.656,372,1.861,373,0.748,374,0.748,375,0.723,376,0.656,377,0.748,378,0.723,379,0.748,380,0.723,381,0.699,382,0.748,383,0.636,384,0.656,385,0.656,386,1.244,387,0.723,388,1.861,389,0.723,390,0.748,391,0.723,392,0.677,393,0.748,394,0.723,395,0.748,396,0.677,397,0.723,398,0.723,399,0.748,400,1.8,401,0.699,402,0.748,403,0.723,404,0.748,405,0.723,406,0.677,407,1.8,408,2.067,409,0.723,410,1.742,411,0.723,412,0.748,414,2.427,427,0.66,445,1.326,447,2.434,449,1.936,450,1.29,451,3.126,465,2.038,508,2.434,512,2.538,513,0.863,514,0.975,520,1.696,658,0.699,671,4.706,722,2.082,916,1.696,972,3.126,983,1.778,990,1.124,991,1.351,1006,2.248,1033,2.434,1089,2.538,1135,1.188,1209,1.976,1405,2.402,1406,1.996,1522,1.87,1906,2.683,2045,3.126,2053,1.351,2248,1.87,2250,3.791,2260,2.434,2314,1.613,2315,1.613,2317,1.613,2375,2.683,2567,1.463,2591,1.613,2595,1.351,2735,1.84,2736,3.931,2737,3.931,2738,3.061,2739,3.061,2740,3.446,2741,5.087,2742,3.931,2743,3.931,2744,3.446,2745,5.087,2746,5.087,2747,3.643,2748,3.061,2749,3.061,2750,3.061,2751,3.061,2752,3.061,2753,3.061,2754,3.061,2755,3.061,2756,3.061,2757,3.061,2758,3.061,2759,1.84,2760,3.061,2761,1.84,2762,3.061,2763,1.84,2764,3.061,2765,1.84,2766,3.061,2767,1.84,2768,3.061,2769,1.84,2770,3.061,2771,1.84,2772,3.061,2773,1.84,2774,3.061,2775,1.84,2776,3.061,2777,1.84,2778,2.683,2779,1.84,2780,3.061,2781,1.84,2782,3.061,2783,3.061,2784,3.061,2785,3.061,2786,1.84,2787,3.061,2788,1.84,2789,3.061,2790,1.84,2791,3.061,2792,3.061,2793,1.84,2794,1.84,2795,3.061,2796,1.84,2797,3.061,2798,1.84,2799,3.061,2800,1.84,2801,1.84,2802,3.061,2803,3.061,2804,1.84,2805,3.061,2806,1.84,2807,1.84,2808,3.061,2809,1.84,2810,3.061,2811,3.061,2812,1.84,2813,3.061,2814,1.84,2815,1.84,2816,1.84,2817,1.84,2818,1.84,2819,1.84,2820,3.061,2821,1.84,2822,3.061,2823,1.84,2824,3.061,2825,1.84,2826,1.84,2827,1.84,2828,1.84,2829,1.84,2830,1.84,2831,1.84,2832,1.84,2833,1.84,2834,1.84,2835,1.84,2836,1.84,2837,1.84,2838,1.84,2839,1.84,2840,1.84,2841,1.84,2842,1.84,2843,1.84,2844,1.84,2845,1.84,2846,1.84,2847,1.84,2848,1.84,2849,1.84,2850,3.061,2851,3.061,2852,5.491,2853,3.061,2854,4.582,2855,3.061]],["title/interfaces/VisualsColorConfig.html",[0,0.149,308,2.291]],["body/interfaces/VisualsColorConfig.html",[0,0.281,2,1.019,3,0.206,4,0.206,5,0.149,7,0.206,8,0.498,10,1.77,11,0.603,12,0.011,13,0.392,18,2.825,19,1.148,22,1.738,25,2.615,75,0.008,76,0.008,284,2.616,285,2.616,286,3.603,287,2.743,288,2.743,289,2.743,290,2.502,291,2.398,292,2.502,293,2.502,294,2.502,295,2.398,296,2.502,297,2.502,298,2.502,299,2.616,300,2.616,301,2.398,302,3.295,303,3.158,304,3.158,305,3.158,306,2.398,307,3.158,308,3.295,309,3.345,310,3.345,311,3.899,312,2.502,313,2.398,314,2.502,315,2.616,316,2.743,317,2.398,318,3.531,319,2.502,320,2.303,321,3.852,322,2.917,323,2.502,324,3.158,325,3.603,326,3.603,327,2.398,328,3.158,329,3.603,450,1.558]],["title/directives/VisualsDirective.html",[371,1.542,410,1.644]],["body/directives/VisualsDirective.html",[3,0.121,4,0.121,5,0.088,7,0.121,8,0.341,10,0.565,11,0.444,12,0.012,13,0.13,16,1.368,18,2.542,21,1.289,22,2.429,39,1.673,41,2.357,43,2.076,75,0.005,76,0.005,80,0.817,83,0.471,86,2.256,87,0.565,90,0.379,114,0.673,136,0.366,138,1.73,142,2.15,145,1.772,149,1.15,166,1.673,192,3.342,207,1.79,219,1.906,223,1.485,225,1.968,286,1.355,301,1.411,302,2.742,303,2.628,304,2.628,305,2.628,306,1.411,307,2.628,308,1.472,309,1.855,310,1.855,311,2.162,312,3.639,313,2.628,314,3.073,315,2.359,317,1.411,318,2.162,319,1.472,320,1.355,322,1.303,323,2.256,325,2.829,326,3.456,327,1.411,329,2.829,338,1.567,343,1.447,371,1.518,409,1.092,410,1.619,411,1.673,414,2.256,427,0.919,441,3.386,445,1.085,447,4.975,449,1.303,450,0.841,451,4.975,465,1.405,508,3.386,537,2.436,540,1.906,597,2.041,658,1.056,689,2.436,722,3.314,752,3.802,753,3.802,899,1.906,983,1.614,988,2.21,990,1.698,1010,3.732,1033,3.386,1089,3.342,1106,4.862,1135,1.794,1172,2.436,1307,2.436,1394,1.968,1458,3.802,1463,2.436,1465,2.436,1466,2.436,1522,1.698,1525,1.794,1784,2.436,2248,1.698,2250,3.37,2252,3.98,2602,3.732,2740,4.537,2744,4.537,2778,2.436,2856,2.436,2857,5.802,2858,4.258,2859,4.258,2860,2.779,2861,4.258,2862,2.779,2863,4.258,2864,2.779,2865,4.258,2866,2.779,2867,2.779,2868,2.779,2869,4.258,2870,2.779,2871,2.779,2872,2.779,2873,2.779,2874,2.436,2875,2.436,2876,2.436,2877,2.779,2878,2.779,2879,2.779,2880,2.779,2881,4.258,2882,2.779,2883,2.779,2884,2.779,2885,2.779,2886,2.779,2887,2.779,2888,2.779,2889,2.779,2890,2.779,2891,6.87,2892,2.779,2893,2.779,2894,2.779,2895,2.041,2896,4.258,2897,2.779,2898,2.779,2899,2.779,2900,2.779,2901,2.779,2902,2.779,2903,5.176,2904,2.779,2905,4.258,2906,4.258,2907,2.779,2908,2.779,2909,2.779,2910,5.802,2911,2.779,2912,2.779,2913,2.779,2914,2.779,2915,2.779,2916,2.779,2917,4.258,2918,2.779,2919,2.779,2920,2.779,2921,5.176,2922,5.802,2923,2.779,2924,2.779,2925,2.779,2926,2.779,2927,4.258,2928,4.258,2929,4.258,2930,5.176,2931,2.779,2932,2.779,2933,2.779,2934,2.779,2935,2.779,2936,2.779,2937,2.779,2938,2.779,2939,2.779,2940,6.87,2941,4.258,2942,4.258,2943,2.779,2944,2.436,2945,2.779,2946,2.779,2947,2.779,2948,2.779,2949,4.537,2950,4.258,2951,4.258,2952,2.779,2953,2.779,2954,2.779,2955,2.779,2956,2.779,2957,2.779,2958,2.779,2959,2.779,2960,2.779,2961,2.779,2962,2.779,2963,2.779,2964,4.258,2965,2.779,2966,2.779,2967,2.779,2968,2.779,2969,2.779,2970,2.779,2971,2.779,2972,2.779,2973,2.779]],["title/injectables/VisualsService.html",[413,0.758,2747,3.439]],["body/injectables/VisualsService.html",[3,0.233,4,0.233,5,0.169,7,0.233,8,0.54,11,0.41,12,0.012,13,0.25,16,1.416,21,1.19,75,0.009,76,0.009,83,0.672,87,1.091,89,2.178,90,0.73,136,0.706,142,2.009,223,1.123,322,3.164,325,3.779,326,3.779,329,3.779,340,1.592,343,1.294,413,1.183,415,2.038,427,1.456,445,1.123,465,1.298,512,3.737,513,2.514,514,2.839,519,1.64,520,2.969,2248,3.275,2250,4.639,2252,5.48,2747,5.366,2874,4.698,2974,5.36,2975,7.384,2976,7.75,2977,5.36,2978,6.747,2979,5.36,2980,8.277,2981,5.36,2982,5.36,2983,5.36]],["title/interfaces/VisualsWorkerMessage.html",[0,0.149,312,2.291]],["body/interfaces/VisualsWorkerMessage.html",[0,0.28,2,0.993,3,0.2,4,0.2,5,0.145,7,0.2,8,0.489,10,1.757,11,0.62,12,0.011,13,0.39,18,2.79,19,1.03,22,2.527,25,2.571,75,0.008,76,0.008,284,2.55,285,2.55,286,3.567,287,2.674,288,2.674,289,2.674,290,2.439,291,2.337,292,2.439,293,2.439,294,2.439,295,2.337,296,2.439,297,2.439,298,2.439,299,2.55,300,2.55,301,2.337,302,3.239,303,3.105,304,3.105,305,3.105,306,2.337,307,3.105,308,2.439,309,2.664,310,2.664,311,3.105,312,3.239,313,3.714,314,3.637,315,4.052,316,3.988,317,3.714,318,4.119,319,3.875,320,3.348,321,3.803,322,2.868,323,2.439,324,3.105,325,3.567,326,3.567,327,2.337,328,3.105,329,3.567,450,1.603]],["title/injectables/WakelockService.html",[413,0.758,2129,2.967]],["body/injectables/WakelockService.html",[3,0.241,4,0.241,5,0.174,7,0.241,8,0.55,11,0.422,12,0.011,13,0.258,75,0.009,76,0.009,83,0.503,90,0.752,136,0.728,149,1.527,223,1.157,225,2.846,249,2.97,251,2.17,340,1.641,343,1.503,413,1.206,415,2.1,427,1.483,445,1.441,450,1.358,458,3.993,519,1.69,590,1.969,935,2.495,940,2.495,2129,4.716,2984,5.523,2985,6.562,2986,7.834,2987,7.834,2988,6.875,2989,5.523,2990,5.523,2991,6.875,2992,7.486,2993,5.523,2994,5.523,2995,5.523,2996,5.523,2997,5.523,2998,5.523,2999,5.523,3000,5.523]],["title/dependencies.html",[2895,3.813,3001,3.183]],["body/dependencies.html",[12,0.011,75,0.009,76,0.009,90,0.795,112,4.285,113,2.962,114,1.413,119,4.285,348,3.388,349,2.845,513,3.597,514,3.091,517,2.37,729,3.232,732,3.388,749,4.64,859,3.388,915,3.767,916,3.232,957,4.002,1458,4.285,1797,4.64,1800,5.114,1982,4.285,2412,4.64,2563,5.114,2701,5.114,2895,4.285,3002,5.834,3003,8.57,3004,5.834,3005,5.834,3006,5.834,3007,6.233,3008,7.111,3009,5.834,3010,5.834,3011,5.834,3012,5.834,3013,5.834,3014,5.834,3015,5.834,3016,5.834,3017,5.834,3018,5.834,3019,5.834,3020,5.834]],["title/miscellaneous/enumerations.html",[3021,2.109,3022,4.55]],["body/miscellaneous/enumerations.html",[6,3.714,7,0.251,12,0.011,37,4.095,38,3.947,40,3.947,41,2.864,42,3.947,43,3.438,44,3.947,45,3.905,46,3.947,47,3.714,48,3.947,49,3.714,50,3.947,51,3.947,52,3.947,53,3.947,54,3.947,55,3.515,56,3.947,57,3.947,58,3.947,59,3.187,60,3.947,61,3.714,62,3.947,63,3.714,64,3.947,65,3.947,66,3.947,67,3.947,68,3.947,69,3.947,70,4.308,71,3.947,72,3.947,73,3.947,74,3.947,75,0.009,76,0.009,465,2.136,3021,3.341,3022,5.043,3023,6.18]],["title/miscellaneous/functions.html",[3021,2.109,3024,4.55]],["body/miscellaneous/functions.html",[5,0.249,7,0.168,10,1.511,11,0.625,12,0.011,19,1.128,21,0.858,22,2.732,75,0.007,76,0.007,80,1.581,318,3.77,324,1.961,328,1.961,349,3.056,445,1.78,449,2.522,450,1.629,465,1.518,658,1.468,671,3.948,716,4.047,721,3.004,854,2.547,908,3.314,909,2.644,910,3.071,911,4.604,912,2.65,913,5.405,934,2.67,946,3.071,962,3.071,1062,2.139,1209,2.494,1337,2.36,1451,4.754,1453,3.385,1519,3.314,1705,2.65,1706,3.385,1707,3.071,1752,3.385,1882,3.385,1930,3.385,1989,4.754,2060,3.385,2129,2.65,2258,3.385,2259,4.754,2260,3.071,2313,4.313,2683,3.385,3021,2.243,3024,3.385,3025,6.268,3026,6.934,3027,6.268,3028,6.268,3029,6.268,3030,6.268,3031,3.862,3032,3.862,3033,5.424,3034,5.424,3035,5.424,3036,3.862,3037,5.494,3038,3.385,3039,5.424,3040,5.424,3041,5.424,3042,5.494,3043,5.424,3044,5.424,3045,5.424,3046,5.424,3047,5.424,3048,3.862,3049,5.494,3050,5.424,3051,6.268,3052,5.424,3053,6.268,3054,6.268,3055,6.268,3056,5.424,3057,6.268,3058,5.424,3059,6.268,3060,5.424,3061,5.494,3062,5.424,3063,5.424,3064,5.494,3065,3.385,3066,3.385,3067,3.862,3068,3.862,3069,3.862,3070,3.862,3071,3.862,3072,3.862,3073,3.862,3074,3.862,3075,3.862,3076,3.862,3077,5.424,3078,3.862,3079,5.424,3080,3.862,3081,3.862,3082,3.862,3083,3.862]],["title/index.html",[7,0.158,1850,2.491,3084,2.887]],["body/index.html",[5,0.216,12,0.011,59,3.031,75,0.009,76,0.009,77,2.014,114,1.891,165,2.223,180,4.019,193,2.223,349,2.668,376,2.437,392,2.014,406,2.014,518,5.02,522,5.02,576,3.178,577,4.351,625,3.753,729,3.031,754,4.689,788,4.019,859,3.178,870,2.668,971,4.351,1106,4.689,1251,4.796,1302,4.019,1447,4.351,1481,4.351,1739,4.796,1793,4.796,1797,4.351,1836,4.351,1844,5.991,1850,3.753,1982,4.019,1993,4.351,2895,4.019,2985,4.796,3085,5.991,3086,4.796,3087,5.471,3088,5.471,3089,5.471,3090,5.471,3091,5.471,3092,5.471,3093,5.471,3094,6.835,3095,6.835,3096,5.471,3097,5.471,3098,5.471,3099,5.471,3100,5.471,3101,5.471,3102,5.471,3103,5.471,3104,5.471,3105,5.471,3106,5.471,3107,5.471,3108,5.471,3109,5.471,3110,5.471,3111,5.471,3112,5.471,3113,5.471,3114,5.471,3115,5.471,3116,5.471,3117,5.471,3118,6.835,3119,3.753,3120,5.471,3121,7.454,3122,5.471,3123,6.835,3124,5.471,3125,5.471,3126,5.471]],["title/license.html",[1850,2.491,3084,2.887,3127,2.887]],["body/license.html",[10,0.865,12,0.005,29,3.542,61,1.791,75,0.005,76,0.005,86,1.469,168,2.206,192,1.791,193,1.127,204,4.195,217,3.381,226,2.206,229,2.206,343,0.532,371,1.516,419,3.123,458,1.611,516,3.381,540,1.903,564,2.206,681,2.431,688,2.431,873,1.903,899,2.917,955,4.97,966,2.206,1024,2.431,1035,4.257,1039,3.727,1045,2.206,1059,2.206,1169,2.206,1328,4.591,1343,2.037,1394,1.054,1481,2.206,1515,1.695,1704,6.018,2033,2.431,2036,3.727,2250,2.469,2440,3.727,2632,2.431,2710,2.037,2949,2.431,3007,2.431,3127,5.244,3128,6.865,3129,7.083,3130,6.25,3131,6.018,3132,2.431,3133,2.774,3134,2.774,3135,7.083,3136,2.774,3137,2.431,3138,2.774,3139,4.252,3140,2.774,3141,2.774,3142,2.774,3143,2.774,3144,5.17,3145,2.774,3146,5.17,3147,5.17,3148,2.774,3149,5.796,3150,2.774,3151,5.17,3152,2.774,3153,2.774,3154,2.774,3155,2.774,3156,7.083,3157,2.774,3158,2.774,3159,4.252,3160,4.252,3161,2.774,3162,4.252,3163,7.539,3164,7.539,3165,8.248,3166,4.252,3167,4.252,3168,2.774,3169,2.774,3170,2.774,3171,4.252,3172,8.369,3173,2.774,3174,5.17,3175,4.252,3176,2.774,3177,4.252,3178,2.774,3179,4.252,3180,2.774,3181,5.17,3182,2.774,3183,4.252,3184,4.252,3185,5.796,3186,2.774,3187,2.774,3188,2.774,3189,5.796,3190,4.252,3191,2.774,3192,2.774,3193,2.774,3194,4.252,3195,2.774,3196,2.774,3197,2.774,3198,2.774,3199,5.17,3200,6.25,3201,7.262,3202,6.25,3203,5.17,3204,2.774,3205,2.774,3206,2.774,3207,4.252,3208,2.774,3209,4.252,3210,2.431,3211,2.774,3212,2.774,3213,5.17,3214,2.774,3215,2.774,3216,2.774,3217,2.774,3218,1.903,3219,2.774,3220,2.774,3221,4.252,3222,2.774,3223,7.539,3224,6.25,3225,2.774,3226,2.774,3227,2.774,3228,4.252,3229,6.865,3230,2.774,3231,2.774,3232,2.774,3233,2.774,3234,2.774,3235,2.774,3236,2.774,3237,2.774,3238,2.774,3239,2.774,3240,2.774,3241,2.774,3242,2.774,3243,2.774,3244,2.774,3245,5.796,3246,2.774,3247,2.774,3248,2.774,3249,2.774,3250,5.17,3251,2.774,3252,2.774,3253,2.774,3254,4.252,3255,2.774,3256,2.774,3257,5.17,3258,4.252,3259,2.774,3260,2.774,3261,2.774,3262,2.774,3263,4.252,3264,2.774,3265,2.774,3266,2.774,3267,2.774,3268,2.774,3269,6.25,3270,2.774,3271,2.774,3272,2.774,3273,2.774,3274,2.774,3275,2.774,3276,2.774,3277,2.774,3278,2.774,3279,4.252,3280,2.774,3281,5.17,3282,2.774,3283,2.774,3284,2.774,3285,2.774,3286,2.774,3287,2.774,3288,6.865,3289,5.17,3290,2.774,3291,6.865,3292,4.252,3293,4.252,3294,2.774,3295,5.17,3296,2.774,3297,4.252,3298,2.774,3299,2.774,3300,2.774,3301,2.774,3302,2.774,3303,6.595,3304,4.252,3305,5.17,3306,4.252,3307,2.774,3308,2.774,3309,6.25,3310,4.252,3311,4.252,3312,5.17,3313,4.252,3314,4.252,3315,4.252,3316,4.252,3317,4.252,3318,2.774,3319,2.774,3320,2.774,3321,2.774,3322,2.774,3323,2.774,3324,5.796,3325,2.774,3326,2.774,3327,2.774,3328,2.774,3329,2.774,3330,2.774,3331,2.774,3332,2.774,3333,2.774,3334,5.796,3335,5.17,3336,4.252,3337,5.17,3338,4.252,3339,4.252,3340,4.252,3341,2.774,3342,2.774,3343,2.774,3344,2.774,3345,4.252,3346,2.774,3347,5.796,3348,2.774,3349,2.774,3350,2.774,3351,2.774,3352,4.252,3353,2.774,3354,2.774,3355,2.774,3356,2.774,3357,2.774,3358,2.774,3359,2.774,3360,2.774,3361,2.774,3362,4.252,3363,2.774,3364,2.774,3365,2.774,3366,2.774,3367,2.774,3368,2.774,3369,2.774,3370,2.774,3371,2.774,3372,2.774,3373,2.774,3374,2.774,3375,2.774,3376,2.774,3377,2.774,3378,2.774,3379,2.774,3380,2.774,3381,4.252,3382,2.774,3383,2.774,3384,2.774,3385,2.774,3386,2.774,3387,2.774,3388,2.774,3389,2.774,3390,4.252,3391,2.774,3392,2.774,3393,2.774,3394,2.774,3395,2.774,3396,2.774,3397,2.774,3398,2.774,3399,2.774,3400,2.774,3401,2.774,3402,2.774,3403,2.774]],["title/modules.html",[3404,5.14]],["body/modules.html",[12,0.01,75,0.01,76,0.01,3404,6.036]],["title/overview.html",[3405,5.14]],["body/overview.html",[2,1.444,12,0.01,41,3.135,45,3.709,75,0.01,76,0.01,136,0.882,331,2.176,371,2.387,415,2.545,655,4.918,3405,5.869,3406,6.696,3407,6.696,3408,6.696]],["title/properties.html",[8,0.415,3001,3.183]],["body/properties.html",[8,0.526,12,0.011,75,0.01,76,0.01,392,2.42,522,4.829,1326,4.51,2710,4.829,3085,5.763,3086,5.763,3127,5.228,3131,5.763,3132,5.763,3409,6.574,3410,6.574,3411,6.574,3412,6.574,3413,6.574,3414,6.574]],["title/todo.html",[553,2.219,1850,2.491,3084,2.887]],["body/todo.html",[12,0.01,18,2.689,75,0.01,76,0.01,748,4.862,870,3.227,1171,5.802,1639,4.862,3415,6.619,3416,6.619,3417,6.619,3418,6.619,3419,6.619,3420,5.802,3421,6.619,3422,6.619,3423,6.619,3424,6.619,3425,6.619,3426,6.619,3427,6.619]],["title/miscellaneous/typealiases.html",[3021,2.109,3428,5.191]],["body/miscellaneous/typealiases.html",[6,3.664,7,0.247,11,0.434,12,0.011,14,4.514,23,4.514,30,3.893,31,3.664,32,4.514,33,3.664,34,3.467,35,3.467,75,0.009,76,0.009,285,3.143,286,3.409,290,3.006,291,2.881,292,3.006,293,3.006,294,3.006,295,2.881,296,3.006,297,3.006,298,3.006,318,3.55,322,3.279,324,2.881,325,3.409,326,3.409,328,2.881,329,3.409,416,4.974,420,6.128,453,4.272,723,3.664,741,4.514,742,3.296,854,2.305,945,3.467,1513,3.664,1514,4.514,1523,3.467,1524,3.467,1526,4.514,3021,3.296,3023,6.642,3429,5.675,3430,5.675,3431,7.577,3432,6.128,3433,5.675,3434,5.675,3435,5.675]],["title/miscellaneous/variables.html",[3021,2.109,3436,4.55]],["body/miscellaneous/variables.html",[7,0.117,10,1.598,11,0.653,12,0.012,18,1.684,19,0.955,21,1.838,39,0.774,45,1.487,75,0.005,76,0.005,77,1.526,80,1.249,145,0.579,165,1.684,176,3.297,177,4.897,193,2.058,286,2.021,303,2.105,304,2.105,305,2.105,307,2.105,309,1.806,310,1.806,311,2.105,313,2.105,314,1.422,319,2.196,320,1.309,322,1.259,323,2.196,327,2.105,376,0.957,392,1.526,465,2.005,466,1.841,467,3.305,487,1.733,488,1.733,489,1.733,490,1.733,491,1.733,492,1.559,493,1.733,494,1.733,495,1.733,496,1.733,515,2.533,558,3.634,576,1.559,658,2.474,671,1.559,678,3.634,679,3.634,716,3.975,723,1.733,732,2.942,752,4.184,753,4.184,868,1.422,873,1.841,908,1.64,909,1.309,912,2.844,914,1.733,916,2.296,918,2.533,921,1.487,1062,1.487,1063,4.44,1064,2.352,1065,2.352,1066,2.352,1067,3.634,1068,2.352,1069,2.352,1070,2.352,1071,2.352,1072,2.352,1073,2.352,1074,2.352,1075,3.634,1076,2.352,1077,2.352,1078,2.352,1079,2.352,1080,2.352,1081,2.352,1152,2.134,1209,1.733,1337,1.64,1668,1.64,1675,2.134,1705,1.841,1837,3.634,1993,2.134,2035,2.352,2129,1.841,2433,2.352,2476,3.634,2542,2.352,2710,1.971,2856,2.352,2875,3.634,2876,3.634,2944,3.634,3021,1.559,3026,7.283,3037,2.352,3038,3.634,3042,2.352,3049,2.352,3061,2.352,3064,2.352,3065,2.352,3066,4.44,3137,5.947,3210,3.634,3432,2.352,3436,2.352,3437,4.145,3438,2.684,3439,4.145,3440,4.145,3441,4.145,3442,4.145,3443,4.145,3444,4.145,3445,2.684,3446,4.145,3447,5.697,3448,2.684,3449,2.684,3450,4.145,3451,5.065,3452,4.145,3453,4.145,3454,4.145,3455,2.684,3456,4.145,3457,6.509,3458,4.145,3459,4.145,3460,5.065,3461,4.145,3462,4.145,3463,4.145,3464,4.145,3465,4.145,3466,4.145,3467,4.145,3468,4.145,3469,2.684,3470,4.145,3471,2.684,3472,2.684,3473,2.684,3474,2.684,3475,2.684,3476,2.684,3477,2.684,3478,2.684,3479,2.684,3480,2.684,3481,2.684,3482,2.684,3483,2.684,3484,2.684,3485,2.684,3486,2.684,3487,2.684,3488,2.684,3489,2.684,3490,2.684,3491,2.684,3492,2.684,3493,2.684,3494,2.684,3495,6.158,3496,2.684,3497,2.684,3498,2.684,3499,2.684,3500,2.684,3501,2.684,3502,2.684,3503,2.684,3504,2.684,3505,2.684,3506,2.684,3507,2.684,3508,2.684,3509,2.684,3510,4.145,3511,6.785,3512,4.145,3513,4.145,3514,2.684,3515,2.684,3516,2.684,3517,2.684,3518,2.684,3519,2.684,3520,2.684,3521,2.684,3522,2.684,3523,2.684,3524,2.684,3525,2.684,3526,2.684,3527,2.684,3528,2.684,3529,2.684,3530,2.684,3531,2.684,3532,2.684,3533,2.684,3534,2.684,3535,2.684,3536,2.684,3537,2.684,3538,2.684,3539,6.509,3540,4.145,3541,2.684,3542,5.697,3543,2.684,3544,2.684,3545,2.684,3546,2.684,3547,2.684,3548,2.684]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.07,331,0.719,381,0.841,1090,1.517,2443,1.351,3218,1.517,3549,1.624]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.24,12,0.01,75,0.01,76,0.01,331,2.478,381,2.898,555,4.5,1090,5.231,1668,4.008,2443,4.659,3119,4.5,3550,5.6,3551,4.818,3552,5.6,3553,5.6,3554,4.818,3555,4.818]],["title/additional-documentation/ui-components-slide-panel.html",[331,0.796,401,0.932,2443,1.498,2595,1.8,3218,1.681,3549,1.8]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.01,75,0.01,76,0.01,331,2.484,401,2.906,555,4.52,1668,4.026,2443,4.671,2595,5.615,3119,4.52,3550,5.615,3551,4.84,3552,5.615,3553,5.615,3554,4.84,3555,4.84]],["title/additional-documentation/ui-components-dialogs.html",[331,0.893,2443,1.679,3218,1.885,3549,2.019,3556,2.409]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,331,2.491,555,4.541,1668,4.045,2443,4.684,3119,4.541,3550,5.63,3551,4.862,3552,5.63,3553,5.63,3554,4.862,3555,4.862,3556,6.719]],["title/additional-documentation/helpers.html",[3218,2.491,3549,2.667,3557,3.183]],["body/additional-documentation/helpers.html",[12,0.01,75,0.01,76,0.01,555,4.459,1668,3.972,2263,5.698,3119,4.459,3420,6.649,3550,5.899,3551,5.571,3552,5.571,3553,5.571,3554,5.571,3555,5.571,3557,7.04,3558,6.501,3559,8.031]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["0.05",{"_index":772,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.07",{"_index":1235,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.1",{"_index":774,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.15",{"_index":769,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.18",{"_index":777,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.2",{"_index":767,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/PlayerToolbarComponent.html":{},"injectables/ThemeService.html":{}}}],["0.21",{"_index":779,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.24",{"_index":781,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.25",{"_index":765,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["0.25.1",{"_index":3012,"title":{},"body":{"dependencies.html":{}}}],["0.27",{"_index":783,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.3",{"_index":763,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.35",{"_index":761,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.45",{"_index":759,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.5",{"_index":508,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.55",{"_index":758,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.7",{"_index":2811,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":1906,"title":{},"body":{"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)).then((entry",{"_index":928,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["1)?.['#text",{"_index":1573,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["1.0",{"_index":3132,"title":{},"body":{"license.html":{},"properties.html":{}}}],["1.0.0",{"_index":1995,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["100",{"_index":784,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":492,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["1000}k",{"_index":1050,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["1024",{"_index":295,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"injectables/MetadataService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.7.1",{"_index":3011,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.1",{"_index":3013,"title":{},"body":{"dependencies.html":{}}}],["125",{"_index":489,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["128",{"_index":292,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["12px",{"_index":1056,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["140",{"_index":2428,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["150",{"_index":847,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["16",{"_index":1263,"title":{},"body":{"injectables/GamepadService.html":{}}}],["16384",{"_index":3434,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["16_000",{"_index":496,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":299,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["17",{"_index":3406,"title":{},"body":{"overview.html":{}}}],["18",{"_index":3407,"title":{},"body":{"overview.html":{}}}],["199",{"_index":1193,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":3276,"title":{},"body":{"license.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/enumerations.html":{}}}],["2.8.1",{"_index":3020,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":3006,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":760,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{}}}],["20.0.0",{"_index":3015,"title":{},"body":{"dependencies.html":{}}}],["20.1.3",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["20.3.23",{"_index":3409,"title":{},"body":{"properties.html":{}}}],["200",{"_index":848,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["2000",{"_index":493,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["2048",{"_index":296,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["20rem",{"_index":2611,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21.0.0",{"_index":3014,"title":{},"body":{"dependencies.html":{}}}],["220",{"_index":2827,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["24",{"_index":1033,"title":{},"body":{"components/EqualizerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["25",{"_index":762,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["250",{"_index":490,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["255",{"_index":1201,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":293,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.4",{"_index":3018,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":764,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["300",{"_index":1233,"title":{},"body":{"injectables/GamepadService.html":{}}}],["30_000",{"_index":1456,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["31",{"_index":487,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["32",{"_index":290,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["32768",{"_index":3435,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":300,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["35",{"_index":766,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["360px",{"_index":1392,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["37",{"_index":3408,"title":{},"body":{"overview.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1531,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3db",{"_index":1017,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":3265,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":3016,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":3009,"title":{},"body":{"dependencies.html":{}}}],["4.12.0",{"_index":3010,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":768,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["4000",{"_index":494,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["4096",{"_index":297,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["424242",{"_index":2875,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["440hz",{"_index":711,"title":{},"body":{"interfaces/Chainable.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":770,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":491,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":237,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["512",{"_index":294,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":2204,"title":{},"body":{"injectables/PlayerService.html":{}}}],["5sec.mp3",{"_index":712,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["60",{"_index":771,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["63",{"_index":488,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["64",{"_index":291,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["6px",{"_index":1189,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["7.8.2",{"_index":3017,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":773,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["72",{"_index":2475,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["73",{"_index":2803,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["80",{"_index":775,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["800",{"_index":3500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8000",{"_index":495,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["8192",{"_index":298,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["8mb",{"_index":1897,"title":{},"body":{"injectables/MetadataService.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["90",{"_index":776,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["95",{"_index":778,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["96/9/ec",{"_index":3271,"title":{},"body":{"license.html":{}}}],["98",{"_index":780,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["99",{"_index":782,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["_audiocontext",{"_index":526,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audioelement",{"_index":524,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audiosourcenode",{"_index":528,"title":{},"body":{"injectables/AudioService.html":{}}}],["_connectedanalyzers",{"_index":535,"title":{},"body":{"injectables/AudioService.html":{}}}],["_eqgainnode",{"_index":532,"title":{},"body":{"injectables/AudioService.html":{}}}],["_frequencyfilters",{"_index":533,"title":{},"body":{"injectables/AudioService.html":{}}}],["_gainnode",{"_index":530,"title":{},"body":{"injectables/AudioService.html":{}}}],["_hasended",{"_index":538,"title":{},"body":{"injectables/AudioService.html":{}}}],["_internalanalyzer",{"_index":2877,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":1347,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a.album",{"_index":202,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.artist",{"_index":199,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.localecompare(b",{"_index":169,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":188,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.title",{"_index":221,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.track",{"_index":206,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["abandoned",{"_index":3369,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":3301,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2520,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["above",{"_index":3501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":3381,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2497,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["abstract",{"_index":1204,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":1305,"title":{},"body":{"injectables/GamepadService.html":{}}}],["accent",{"_index":830,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":793,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":797,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["accepts",{"_index":954,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":1172,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["accessors",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":3343,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":3384,"title":{},"body":{"license.html":{}}}],["achse",{"_index":1270,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":3400,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["action(details",{"_index":1743,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["activatewakelock",{"_index":2986,"title":{},"body":{"injectables/WakelockService.html":{}}}],["active",{"_index":2169,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeaxescaches",{"_index":1238,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["adapt",{"_index":3241,"title":{},"body":{"license.html":{}}}],["add",{"_index":597,"title":{},"body":{"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{}}}],["addalbumtoplaylist",{"_index":1603,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addalbumtoplaylist(album",{"_index":260,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addartisttoplaylist",{"_index":1604,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addartisttoplaylist(artist",{"_index":255,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addeventlistener('gamepadconnected",{"_index":1243,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":1246,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestolibrary",{"_index":1760,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(...filedatas",{"_index":1807,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(filedatas",{"_index":1764,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestoplaylist",{"_index":2066,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...filedatas",{"_index":2224,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(filedatas",{"_index":2081,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":3344,"title":{},"body":{"license.html":{}}}],["additional",{"_index":3218,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["addtrackstoplaylist",{"_index":1605,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addtrackstoplaylist(...dbtracks",{"_index":271,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addtracktoplaylist",{"_index":1606,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["addtracktoplaylist(song",{"_index":2083,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addtracktoplaylist(track",{"_index":269,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["adjust",{"_index":3097,"title":{},"body":{"index.html":{}}}],["advertising",{"_index":3316,"title":{},"body":{"license.html":{}}}],["affected",{"_index":3345,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":3223,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":3303,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3359,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":2190,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":2188,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":1088,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["against",{"_index":3259,"title":{},"body":{"license.html":{}}}],["aiff",{"_index":1067,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":77,"title":{"interfaces/Album.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["album.coverurl",{"_index":1641,"title":{},"body":{"components/LibraryComponent.html":{}}}],["album.name",{"_index":262,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["album.year",{"_index":1642,"title":{},"body":{"components/LibraryComponent.html":{}}}],["albumcompare",{"_index":201,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap",{"_index":179,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.has(albumname",{"_index":183,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.set(albumname",{"_index":184,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.values()].sort((a",{"_index":187,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumname",{"_index":181,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albums",{"_index":178,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumtracks",{"_index":266,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["aliases",{"_index":3429,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1194,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allowed_extensions",{"_index":1075,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":918,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":950,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1593,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":2533,"title":{},"body":{"components/ShellComponent.html":{}}}],["allowedtypes",{"_index":1094,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":311,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["amended",{"_index":3282,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analyserconfig",{"_index":284,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":319,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analyservalue",{"_index":2921,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyzer",{"_index":2970,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["and/or",{"_index":3174,"title":{},"body":{"license.html":{}}}],["angular/cdk",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2559,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":110,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":2412,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1518,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{}}}],["angular/compiler",{"_index":3004,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":90,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":2134,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":119,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3005,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":106,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1970,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2678,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2817,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":1331,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":2413,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":104,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":125,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["angular/material/list",{"_index":95,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":100,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/material/progress",{"_index":127,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2818,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2561,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1967,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":991,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":2054,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":2053,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":2563,"title":{},"body":{"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2701,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angulartitleservice",{"_index":2689,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2879,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["any).getasfilesystemhandle().then((handle",{"_index":1154,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["api",{"_index":957,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["api_key",{"_index":1553,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":1532,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["apis",{"_index":3089,"title":{},"body":{"index.html":{}}}],["app",{"_index":625,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"index.html":{}}}],["app.component.html",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":330,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":3437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontactinfo",{"_index":1996,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["applicable",{"_index":3288,"title":{},"body":{"license.html":{}}}],["application",{"_index":2631,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["applicationconfig",{"_index":3475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":1024,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["apply",{"_index":1039,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["appname",{"_index":1992,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["apps",{"_index":3098,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":3438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":3460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":3469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":3430,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../default",{"_index":3450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":3448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":3449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":3038,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":3043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":3023,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":3050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../idexed",{"_index":3445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../lastfm",{"_index":3433,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":3056,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":3031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":3035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":3036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":3046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":3457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":3048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":3432,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../settings.po.ts",{"_index":3455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":3452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":3431,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":3026,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":3060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":3530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":674,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":676,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":3522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":3518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:14",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":3474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":3538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/idexed",{"_index":3506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":416,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:135",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:142",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:150",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:157",{"_index":471,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:163",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:171",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:177",{"_index":480,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:185",{"_index":476,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:190",{"_index":464,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:198",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:202",{"_index":474,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:212",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:216",{"_index":479,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:224",{"_index":469,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:24",{"_index":499,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:25",{"_index":503,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":502,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":504,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":500,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":484,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":485,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":509,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":482,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":506,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":497,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:42",{"_index":511,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:44",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":668,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":656,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:9",{"_index":661,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":970,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:15",{"_index":984,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16",{"_index":987,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:17",{"_index":986,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19",{"_index":979,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:30",{"_index":981,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:35",{"_index":982,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":908,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":78,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:102",{"_index":1634,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:141",{"_index":1614,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:165",{"_index":1621,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:171",{"_index":1620,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:176",{"_index":1622,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:182",{"_index":1619,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:190",{"_index":1616,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:199",{"_index":1615,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:216",{"_index":1618,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:225",{"_index":1617,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:242",{"_index":1624,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:246",{"_index":1623,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:250",{"_index":1625,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:48",{"_index":1628,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:49",{"_index":1629,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:50",{"_index":1627,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:52",{"_index":1630,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:54",{"_index":1626,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:67",{"_index":1632,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:68",{"_index":1631,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:69",{"_index":1633,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:71",{"_index":1636,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:79",{"_index":1635,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts",{"_index":1649,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:14",{"_index":1654,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:15",{"_index":1653,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:17",{"_index":1652,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":854,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player",{"_index":2269,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":2043,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:25",{"_index":2050,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:26",{"_index":2049,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":2060,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:137",{"_index":2086,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:142",{"_index":2084,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:148",{"_index":2095,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:162",{"_index":2082,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:168",{"_index":2106,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:174",{"_index":2104,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:178",{"_index":2090,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:190",{"_index":2088,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:206",{"_index":2107,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:215",{"_index":2087,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:236",{"_index":2093,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:25",{"_index":2115,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:254",{"_index":2092,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:263",{"_index":2101,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:27",{"_index":2125,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:281",{"_index":2102,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:29",{"_index":2114,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:298",{"_index":2097,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:302",{"_index":2100,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":2124,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:316",{"_index":2108,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:32",{"_index":2127,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:335",{"_index":2109,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:34",{"_index":2113,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:41",{"_index":2122,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:45",{"_index":2120,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:51",{"_index":2080,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":723,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":2383,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:142",{"_index":2396,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:150",{"_index":2398,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:156",{"_index":2403,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:161",{"_index":2404,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:165",{"_index":2401,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:40",{"_index":2408,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:41",{"_index":2405,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:44",{"_index":2407,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:46",{"_index":2410,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:48",{"_index":2394,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2680,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:9",{"_index":2682,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2735,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2767,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2761,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2765,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2763,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2771,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2769,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26",{"_index":2794,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2779,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2807,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31",{"_index":2814,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2801,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2812,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2804,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2777,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2781,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2796,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2790,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2798,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2788,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2800,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2757,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2809,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2793,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2786,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2806,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2775,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2773,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2759,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2856,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:103",{"_index":2864,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:124",{"_index":2866,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:13",{"_index":2870,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2867,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2871,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:186",{"_index":2862,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2868,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2861,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:31",{"_index":2860,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:91",{"_index":2873,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2974,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2979,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2977,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":285,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":3065,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":3080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":1210,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":1229,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":1222,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":1226,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":1219,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15",{"_index":1230,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":1217,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1400,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":3082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":1324,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:103",{"_index":1439,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:25",{"_index":1442,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:29",{"_index":1445,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:31",{"_index":1444,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:33",{"_index":1443,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:35",{"_index":1441,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:37",{"_index":1435,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:47",{"_index":1437,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:84",{"_index":1440,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:95",{"_index":1436,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:99",{"_index":1438,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1677,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1683,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1694,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1698,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1697,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1699,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1706,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2684,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2688,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2687,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":3083,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2984,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:11",{"_index":2989,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:28",{"_index":2990,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:7",{"_index":2988,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1945,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2521,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2653,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2672,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2526,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:42",{"_index":2556,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:43",{"_index":2551,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:44",{"_index":2553,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:45",{"_index":2552,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:47",{"_index":2547,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:56",{"_index":2550,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:58",{"_index":2555,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:60",{"_index":2541,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:65",{"_index":2546,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:69",{"_index":2544,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":3517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":744,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:41",{"_index":2669,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:43",{"_index":2670,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:45",{"_index":2668,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:47",{"_index":2671,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:48",{"_index":2662,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:70",{"_index":2663,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:75",{"_index":2666,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:79",{"_index":2665,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:84",{"_index":2667,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:88",{"_index":2664,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":2657,"title":{},"body":{"interfaces/ThemeColor.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2693,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2696,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:45",{"_index":2698,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:52",{"_index":2697,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":3515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":3516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appversion",{"_index":1994,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["arguments_",{"_index":2681,"title":{},"body":{"pipes/TimePipe.html":{}}}],["arial",{"_index":1057,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["arising",{"_index":3270,"title":{},"body":{"license.html":{}}}],["array",{"_index":738,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["array.from(droppedfiles",{"_index":1178,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["array.from(event.datatransfer.items",{"_index":1153,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["art",{"_index":1844,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["artist",{"_index":165,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist:${escapelucenequerystring(artist",{"_index":2004,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["artistcompare",{"_index":198,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artists",{"_index":196,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artwork",{"_index":2199,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2694,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":3361,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1805,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":3304,"title":{},"body":{"license.html":{}}}],["associating",{"_index":3222,"title":{},"body":{"license.html":{}}}],["async",{"_index":249,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["asyncgenerator",{"_index":1767,"title":{},"body":{"injectables/MetadataService.html":{}}}],["atrack",{"_index":205,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["attorney",{"_index":3140,"title":{},"body":{"license.html":{}}}],["audio",{"_index":522,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"index.html":{},"properties.html":{}}}],["audio.service",{"_index":990,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":1071,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":1064,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":1073,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":1065,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":1068,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":1074,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":1070,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":1069,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":1072,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/x",{"_index":1066,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":527,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.creategain",{"_index":565,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":563,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement",{"_index":541,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.autoplay",{"_index":547,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.controls",{"_index":548,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.id",{"_index":543,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.loop",{"_index":542,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.preload",{"_index":551,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.style.display",{"_index":545,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.volume",{"_index":549,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioservice",{"_index":414,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audioservice.isplaying",{"_index":2375,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":562,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiosource.connect(eqgain",{"_index":571,"title":{},"body":{"injectables/AudioService.html":{}}}],["author",{"_index":3413,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":3248,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":3173,"title":{},"body":{"license.html":{}}}],["auto",{"_index":552,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["autoincrement",{"_index":3512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":226,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["automatische",{"_index":799,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["autoscroll",{"_index":2432,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":192,"title":{},"body":{"interfaces/Album.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2956,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2948,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2957,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avoid",{"_index":1475,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["await",{"_index":251,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":2470,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis.valueof",{"_index":1312,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":1317,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":1316,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":1211,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":1315,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":1318,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":1220,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":168,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["b.track",{"_index":211,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["back",{"_index":219,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{}}}],["background",{"_index":1199,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["backgroundcolor",{"_index":877,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["band",{"_index":518,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"index.html":{}}}],["bandfrequency",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":648,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains[bandfrequency",{"_index":650,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandpipe",{"_index":654,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{}}}],["bands",{"_index":975,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bar",{"_index":2572,"title":{},"body":{"components/ShellComponent.html":{}}}],["barcount",{"_index":302,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["barkscalebandenergy",{"_index":3439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":325,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2740,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":324,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":3440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":710,"title":{},"body":{"interfaces/Chainable.html":{}}}],["basecolor",{"_index":836,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["basecolor.darken(variant.darkenfactor",{"_index":842,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["basecolor.lighten(variant.lightenfactor",{"_index":840,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["based",{"_index":229,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["basegain",{"_index":417,"title":{},"body":{"injectables/AudioService.html":{}}}],["basevisualizeroptions",{"_index":321,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":3145,"title":{},"body":{"license.html":{}}}],["bcbcbc",{"_index":2876,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["behavior",{"_index":2462,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["bei",{"_index":801,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["below",{"_index":3166,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":3318,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":2156,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":1287,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["bessere",{"_index":1660,"title":{},"body":{"injectables/LibraryService.html":{}}}],["better",{"_index":2943,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["biquadfilternode",{"_index":534,"title":{},"body":{"injectables/AudioService.html":{}}}],["bitrate",{"_index":670,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["bitrate.pipe",{"_index":887,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":667,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1880,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1840,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1858,"title":{},"body":{"injectables/MetadataService.html":{}}}],["bold",{"_index":1055,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2627,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["border",{"_index":1188,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["both",{"_index":213,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["bottom",{"_index":2419,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":1186,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["break",{"_index":2252,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2557,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2558,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2579,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2578,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2577,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2580,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["btrack",{"_index":210,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["buffer",{"_index":2940,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffer.buffer",{"_index":2963,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":323,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2945,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2942,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2939,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["build",{"_index":3191,"title":{},"body":{"license.html":{}}}],["buildapiurl(method",{"_index":1547,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["button",{"_index":1285,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.pressed",{"_index":1298,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":1300,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":1212,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":1303,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":1308,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":1223,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2515,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2598,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":3389,"title":{},"body":{"license.html":{}}}],["caapi",{"_index":1998,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["cache",{"_index":1302,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":1310,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":1304,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":1309,"title":{},"body":{"injectables/GamepadService.html":{}}}],["calculate",{"_index":2459,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["call",{"_index":621,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":1325,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["called",{"_index":1703,"title":{},"body":{"injectables/LoaderService.html":{}}}],["caller",{"_index":1672,"title":{},"body":{"injectables/LibraryService.html":{}}}],["cancel",{"_index":2510,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2966,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":3327,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":313,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["canvas.getcontext('2d",{"_index":1003,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.height",{"_index":1007,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.width",{"_index":1005,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvasgradient",{"_index":3472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":3441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasref",{"_index":976,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvaswidth",{"_index":3442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2854,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":305,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":303,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":3443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":3520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2250,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":3487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1502,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":940,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":3305,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":3131,"title":{},"body":{"license.html":{},"properties.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":107,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":108,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":109,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["center",{"_index":1196,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":3176,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2026,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["chainable",{"_index":673,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2436,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["changedarkmode",{"_index":2674,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2675,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changes",{"_index":993,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{}}}],["check",{"_index":953,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":1295,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":1236,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":713,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlaylistComponent.html":{}}}],["child(${link",{"_index":3533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chrome",{"_index":3093,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":1911,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunk.length",{"_index":1924,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks",{"_index":1920,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks.push(new",{"_index":1894,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks.reduce((sum",{"_index":1922,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize",{"_index":1916,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize).arraybuffer",{"_index":1893,"title":{},"body":{"injectables/MetadataService.html":{}}}],["circular",{"_index":326,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":3189,"title":{},"body":{"license.html":{}}}],["class",{"_index":136,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["class.closed",{"_index":2608,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2609,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":1202,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":623,"title":{},"body":{"injectables/AudioService.html":{}}}],["clear",{"_index":1008,"title":{},"body":{"components/EqualizerComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":3391,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":1322,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":1275,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.processinginterval",{"_index":238,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["clearmetadatacache",{"_index":1951,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2654,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1486,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":3141,"title":{},"body":{"license.html":{}}}],["close",{"_index":1413,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2599,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2732,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2600,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["code",{"_index":2632,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":788,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["color.brightness",{"_index":852,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.hex",{"_index":829,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.name",{"_index":828,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.tohex",{"_index":850,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color_variants",{"_index":757,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":722,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2929,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2927,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2928,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colord",{"_index":749,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["colord(hex",{"_index":837,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["colorful",{"_index":3410,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":754,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"index.html":{}}}],["colors.ts",{"_index":3451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorvariant",{"_index":743,"title":{"interfaces/ColorVariant.html":{}},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["combination",{"_index":2636,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["combine",{"_index":1919,"title":{},"body":{"injectables/MetadataService.html":{}}}],["combined",{"_index":1925,"title":{},"body":{"injectables/MetadataService.html":{}}}],["combined.set(chunk",{"_index":1928,"title":{},"body":{"injectables/MetadataService.html":{}}}],["command",{"_index":699,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":686,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":682,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":3203,"title":{},"body":{"license.html":{}}}],["commons",{"_index":3129,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":3243,"title":{},"body":{"license.html":{}}}],["compare",{"_index":195,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["comparison",{"_index":220,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["compensation",{"_index":3220,"title":{},"body":{"license.html":{}}}],["competition",{"_index":3261,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2438,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["component",{"_index":84,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["component_template",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":331,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2702,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2508,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":1084,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/ShellComponent.html":{}}}],["components/slide",{"_index":2591,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":690,"title":{},"body":{"interfaces/Chainable.html":{}}}],["computecolors(hex",{"_index":835,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["computed",{"_index":85,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":3375,"title":{},"body":{"license.html":{}}}],["confer",{"_index":3161,"title":{},"body":{"license.html":{}}}],["config",{"_index":2730,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config).afterclosed",{"_index":2734,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config.ts",{"_index":3446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":570,"title":{},"body":{"injectables/AudioService.html":{}}}],["connected",{"_index":1255,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":1248,"title":{},"body":{"injectables/GamepadService.html":{}}}],["consents",{"_index":3395,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":3219,"title":{},"body":{"license.html":{}}}],["console.error('error",{"_index":1666,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["console.error('file",{"_index":278,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('worker",{"_index":1499,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":591,"title":{},"body":{"injectables/AudioService.html":{}}}],["console.log('button",{"_index":1265,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":2164,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":1271,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":941,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":1269,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":1281,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":1277,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2713,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2709,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2720,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":1273,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":1253,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2889,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":1256,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1820,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1822,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":1284,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":1292,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":1539,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('file",{"_index":1170,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["console.warn('loaderservice",{"_index":1702,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('no",{"_index":2039,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":2998,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":1357,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1738,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":145,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":225,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["contains",{"_index":1912,"title":{},"body":{"injectables/MetadataService.html":{}}}],["contemplated",{"_index":3333,"title":{},"body":{"license.html":{}}}],["content",{"_index":834,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["context",{"_index":558,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/variables.html":{}}}],["contrary",{"_index":3363,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":3294,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":3204,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":3182,"title":{},"body":{"license.html":{}}}],["control",{"_index":2643,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["controls",{"_index":3101,"title":{},"body":{"index.html":{}}}],["converttobarkscale",{"_index":3025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":3315,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1140,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":3163,"title":{},"body":{"license.html":{}}}],["core",{"_index":521,"title":{},"body":{"injectables/AudioService.html":{}}}],["corporation",{"_index":3134,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2908,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["corresponding",{"_index":3287,"title":{},"body":{"license.html":{}}}],["council",{"_index":3274,"title":{},"body":{"license.html":{}}}],["cover",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["coverart",{"_index":1983,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["coverartarchiveapi",{"_index":1987,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":878,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":853,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":727,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":736,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":2111,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":2112,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":2017,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":2022,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images.length",{"_index":2024,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images?.length",{"_index":2019,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images[0",{"_index":2025,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdisplaycomponent",{"_index":375,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":2021,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.image",{"_index":2032,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.large",{"_index":2030,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":2031,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails['500",{"_index":2029,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverurl",{"_index":79,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1848,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.originalurl",{"_index":1855,"title":{},"body":{"injectables/MetadataService.html":{}}}],["create",{"_index":540,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":1268,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":1264,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture",{"_index":1761,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1768,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile",{"_index":1762,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(filedata",{"_index":1770,"title":{},"body":{"injectables/MetadataService.html":{}}}],["creative",{"_index":3128,"title":{},"body":{"license.html":{}}}],["creator",{"_index":3168,"title":{},"body":{"license.html":{}}}],["ctx",{"_index":1002,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.beginpath",{"_index":1046,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.clearrect(0",{"_index":1009,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.fillstyle",{"_index":1052,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(`gain",{"_index":1060,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(label",{"_index":1051,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.font",{"_index":1054,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.linewidth",{"_index":1015,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.moveto(freqpoints[0].x",{"_index":1047,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.strokestyle",{"_index":1013,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.textalign",{"_index":1058,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["cultural",{"_index":3183,"title":{},"body":{"license.html":{}}}],["culture",{"_index":3208,"title":{},"body":{"license.html":{}}}],["current",{"_index":2440,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["currentalbum",{"_index":265,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentalbum.name",{"_index":267,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentanalyser",{"_index":2904,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2898,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2902,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":926,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":2463,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":2215,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":2061,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2896,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2900,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":2062,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentposition",{"_index":2234,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":418,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":890,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack.metadata?.hash",{"_index":2453,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":893,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":895,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":894,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":902,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":901,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":900,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":898,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":903,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":892,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":896,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["curve",{"_index":1023,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["custom",{"_index":685,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":706,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":3524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#load_files_menu",{"_index":3525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":3536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":3528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":3529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":3526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":3537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":3519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":3523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":3532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":701,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.wait(300",{"_index":704,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":554,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":718,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":714,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":700,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":719,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":3398,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3153,"title":{},"body":{"license.html":{}}}],["dark",{"_index":824,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["dark)').matches",{"_index":790,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":851,"title":{},"body":{"interfaces/ColorVariant.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["darkenfactor",{"_index":745,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":785,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":862,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":861,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2727,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":1190,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":1394,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["data.album.image",{"_index":1559,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2519,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2518,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":2008,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["database",{"_index":3175,"title":{},"body":{"license.html":{}}}],["databaseconfig",{"_index":3444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":3278,"title":{},"body":{"license.html":{}}}],["date",{"_index":3007,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["db",{"_index":916,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dbconfig",{"_index":3507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbtrack",{"_index":272,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle",{"_index":276,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle?.getfile",{"_index":274,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtracks",{"_index":273,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dddddd",{"_index":1014,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["declare",{"_index":696,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorators",{"_index":2624,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":2280,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["decreasevolume(value",{"_index":2288,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["deemed",{"_index":3353,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":1234,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":1232,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":1342,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["defects",{"_index":3383,"title":{},"body":{"license.html":{}}}],["defined",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1432,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":2442,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dependencies",{"_index":2895,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"dependencies.html":{},"index.html":{}}}],["depicted",{"_index":3256,"title":{},"body":{"license.html":{}}}],["deps",{"_index":3496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":1213,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":1218,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":1214,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":1221,"title":{},"body":{"injectables/GamepadService.html":{}}}],["derive",{"_index":737,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["description",{"_index":1326,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"properties.html":{}}}],["deselect",{"_index":2218,"title":{},"body":{"injectables/PlayerService.html":{}}}],["desktop",{"_index":3111,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":2138,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1510,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":2128,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["details",{"_index":1716,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":2246,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":2245,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":2437,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["determine",{"_index":2461,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":3320,"title":{},"body":{"license.html":{}}}],["dialog",{"_index":1340,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":1335,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1407,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1408,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1401,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2512,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":2513,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1417,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1416,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1419,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2511,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1415,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2509,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":1346,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1390,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1397,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":3556,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["didn't",{"_index":968,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["diesen",{"_index":1351,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["directive",{"_index":371,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":956,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":2379,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["directoryhandles",{"_index":3514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirhandle",{"_index":3081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirhandle.values",{"_index":947,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry",{"_index":907,"title":{"interfaces/DirHandleEntry.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry).topromise",{"_index":939,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":2264,"title":{},"body":{"injectables/PlayerService.html":{}}}],["disableclose",{"_index":2731,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabletooltipinteractivity",{"_index":3502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":3364,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":3151,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2968,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["disconnectallanalyzers",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnected",{"_index":1274,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":1272,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":3387,"title":{},"body":{"license.html":{}}}],["display",{"_index":873,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":2055,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":875,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":876,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":872,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":886,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":885,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":883,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":669,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:8",{"_index":672,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":871,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayfunction",{"_index":977,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":980,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":1372,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":3330,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":3267,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2460,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":3228,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3139,"title":{},"body":{"license.html":{}}}],["document",{"_index":1328,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":556,"title":{},"body":{"injectables/AudioService.html":{}}}],["document.body.append(this.fileinput",{"_index":1595,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1587,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style",{"_index":822,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2718,"title":{},"body":{"injectables/UpdateService.html":{}}}],["document.queryselector('.cdk",{"_index":2493,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dom",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":316,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["double",{"_index":952,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["download",{"_index":1981,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2909,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["dragend",{"_index":1132,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":1119,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":1124,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":1116,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":1100,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":1129,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":1118,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":1127,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":1117,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":1010,"title":{},"body":{"components/EqualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":3027,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":3028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":3029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawequalizerresponse",{"_index":978,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["drawosc",{"_index":3030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":381,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":1099,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":1120,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dual",{"_index":717,"title":{},"body":{"interfaces/Chainable.html":{}}}],["duration",{"_index":419,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":2063,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2728,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":3402,"title":{},"body":{"license.html":{}}}],["e",{"_index":1366,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2646,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":1368,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":1369,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["each",{"_index":1035,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{},"license.html":{}}}],["early",{"_index":1166,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["effect",{"_index":86,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":3354,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":3214,"title":{},"body":{"license.html":{}}}],["eine",{"_index":1288,"title":{},"body":{"injectables/GamepadService.html":{}}}],["elects",{"_index":3226,"title":{},"body":{"license.html":{}}}],["element",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":988,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":523,"title":{},"body":{"injectables/AudioService.html":{}}}],["elementscrolled",{"_index":2422,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2882,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2885,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embeddedpicture",{"_index":735,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["emit",{"_index":1159,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["empty",{"_index":1428,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":2416,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":2433,"title":{},"body":{"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1545,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1544,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":709,"title":{},"body":{"interfaces/Chainable.html":{}}}],["end",{"_index":1042,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["endchunk",{"_index":1914,"title":{},"body":{"injectables/MetadataService.html":{}}}],["enjoyment",{"_index":3332,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2953,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":2168,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":1519,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(largeimage",{"_index":1575,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(original",{"_index":2038,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ensurehttps(smallimage",{"_index":1574,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(thumb",{"_index":2037,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ensurehttps(url",{"_index":3071,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entire",{"_index":1887,"title":{},"body":{"injectables/MetadataService.html":{}}}],["entries",{"_index":1648,"title":{},"body":{"components/LibraryComponent.html":{}}}],["entries[0].contentrect",{"_index":2919,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":929,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.getfile",{"_index":949,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":948,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":3022,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":3447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":3482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":575,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["eqgain",{"_index":566,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.connect(eqinput",{"_index":572,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.gain.value",{"_index":581,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqinput",{"_index":567,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput",{"_index":568,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput.connect(gain",{"_index":573,"title":{},"body":{"injectables/AudioService.html":{}}}],["equalizer",{"_index":971,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"index.html":{}}}],["equalizer'},{'name",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizer.component.html",{"_index":973,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":974,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":378,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["equitable",{"_index":3329,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":3286,"title":{},"body":{"license.html":{}}}],["eqvalues[freq",{"_index":1041,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands.at",{"_index":1044,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands[0",{"_index":1032,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["error",{"_index":590,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/WakelockService.html":{}}}],["error('metadata",{"_index":1472,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1509,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1495,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1504,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error.message",{"_index":2999,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errorevent",{"_index":1498,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":3386,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1876,"title":{},"body":{"injectables/MetadataService.html":{}}}],["es",{"_index":1429,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["escape.helper.ts",{"_index":3033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escapelucenequerystring",{"_index":1989,"title":{},"body":{"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["escapelucenequerystring(querystring",{"_index":3073,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslint",{"_index":2263,"title":{},"body":{"injectables/PlayerService.html":{},"additional-documentation/helpers.html":{}}}],["establish",{"_index":2894,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["european",{"_index":3272,"title":{},"body":{"license.html":{}}}],["event",{"_index":598,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["event.checked",{"_index":1973,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["event.clientx}px",{"_index":2499,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.clienty}px",{"_index":2501,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.currentversion.hash",{"_index":2714,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1492,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2946,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2947,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":1139,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer.items[0",{"_index":1149,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":1138,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.items",{"_index":1147,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2722,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":1254,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2715,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":1136,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.stoppropagation",{"_index":1137,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2707,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2711,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventmanager",{"_index":1332,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":624,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":691,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusive",{"_index":3162,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3555,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["exercise",{"_index":3352,"title":{},"body":{"license.html":{}}}],["existing",{"_index":688,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["exists",{"_index":2971,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["exit",{"_index":626,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["expect",{"_index":2160,"title":{},"body":{"injectables/PlayerService.html":{}}}],["expectation",{"_index":3217,"title":{},"body":{"license.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":3334,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2645,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":3313,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3224,"title":{},"body":{"license.html":{}}}],["extractcolorswithnodevibrant",{"_index":3034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurls.originalurl",{"_index":1856,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(objecturl",{"_index":1860,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1930,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1557,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extracting",{"_index":1944,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extraction",{"_index":1481,"title":{},"body":{"injectables/Id3TagsService.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":3096,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1451,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1453,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extralarge')?.['#text",{"_index":1570,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["failed",{"_index":1173,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fall",{"_index":218,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{}}}],["fallback",{"_index":1169,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["fallback_accent_color",{"_index":752,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":753,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2855,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["false",{"_index":467,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2469,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["fear",{"_index":3187,"title":{},"body":{"license.html":{}}}],["features",{"_index":3090,"title":{},"body":{"index.html":{}}}],["fetchalbuminfo(artist",{"_index":1542,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":2014,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ffnet",{"_index":1350,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2851,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2741,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":286,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2414,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.size",{"_index":1884,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(math.max(0",{"_index":1915,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(middlepos",{"_index":1892,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(quarterpos",{"_index":1903,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(threequarterpos",{"_index":1908,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata",{"_index":919,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filedata.file",{"_index":1823,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.file.name",{"_index":1862,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.filehandle",{"_index":1824,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.push",{"_index":958,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["filedata.push(...subfiles",{"_index":961,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedatas",{"_index":1766,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["filedatas.values",{"_index":1811,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedatas?.length",{"_index":1808,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":380,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":275,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filehandle.getfile",{"_index":2176,"title":{},"body":{"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filehandles",{"_index":1150,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.length",{"_index":1161,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.push(handle",{"_index":1156,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandlesdropped",{"_index":1095,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileinput",{"_index":1584,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":1177,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":921,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice.currentfolderhandle",{"_index":2378,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["fileloaderservicefactory",{"_index":3037,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":733,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filepath",{"_index":707,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":702,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["files.push(file",{"_index":1180,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesdroped",{"_index":1096,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesize",{"_index":1883,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesize).arraybuffer",{"_index":1917,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filestoprocess",{"_index":1806,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesystemdirectoryhandle",{"_index":913,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filesystemfilehandle",{"_index":730,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["fill",{"_index":2958,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":263,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/LibraryComponent.html":{}}}],["filter((artist",{"_index":164,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filter.gain.value",{"_index":579,"title":{},"body":{"injectables/AudioService.html":{}}}],["filtered",{"_index":160,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.filter((item",{"_index":172,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.sort((a",{"_index":194,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filteredbyserchterm",{"_index":144,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtering",{"_index":2220,"title":{},"body":{"injectables/PlayerService.html":{}}}],["finalize",{"_index":1686,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["finally",{"_index":1673,"title":{},"body":{"injectables/LibraryService.html":{}}}],["find",{"_index":1561,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["findreleasegroupid(artist",{"_index":2002,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":1784,"title":{},"body":{"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":1280,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebuttonaction(index",{"_index":1276,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":3136,"title":{},"body":{"license.html":{}}}],["first",{"_index":197,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{}}}],["firstvaluefrom",{"_index":917,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2733,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":1546,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getall('library",{"_index":1656,"title":{},"body":{"injectables/LibraryService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('directoryhandles",{"_index":927,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('library",{"_index":1829,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":3379,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1185,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["flac",{"_index":1077,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":1184,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["float32array",{"_index":3066,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2644,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["fns",{"_index":3008,"title":{},"body":{"dependencies.html":{}}}],["focus",{"_index":2166,"title":{},"body":{"injectables/PlayerService.html":{}}}],["folder/files",{"_index":2377,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["following",{"_index":3239,"title":{},"body":{"license.html":{}}}],["forcefully",{"_index":2488,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["form",{"_index":3198,"title":{},"body":{"license.html":{}}}],["format",{"_index":734,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formatlabel",{"_index":2281,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formatlabel(value",{"_index":2290,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formats",{"_index":3092,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":2313,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":2683,"title":{},"body":{"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatwithleadingzero",{"_index":3041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatwithleadingzero(value",{"_index":3078,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":118,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["found",{"_index":279,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":3207,"title":{},"body":{"license.html":{}}}],["freely",{"_index":3196,"title":{},"body":{"license.html":{}}}],["freq",{"_index":1036,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints",{"_index":1026,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints.push",{"_index":1031,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints[0].y",{"_index":1048,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency",{"_index":1021,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency_bands",{"_index":515,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["frequency_bands)[number",{"_index":740,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["frequencyband",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["frequencybarsconfig",{"_index":301,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":3453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":2020,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["full",{"_index":2035,"title":{},"body":{"injectables/MusicbrainzService.html":{},"miscellaneous/variables.html":{}}}],["fullscreen/multiwindow",{"_index":3426,"title":{},"body":{"todo.html":{}}}],["fully",{"_index":3297,"title":{},"body":{"license.html":{}}}],["function",{"_index":945,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":3024,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":3209,"title":{},"body":{"license.html":{}}}],["future",{"_index":3309,"title":{},"body":{"license.html":{}}}],["für",{"_index":1659,"title":{},"body":{"injectables/LibraryService.html":{}}}],["gain",{"_index":564,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":574,"title":{},"body":{"injectables/AudioService.html":{}}}],["gain.gain.value",{"_index":583,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainnode",{"_index":531,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainvalue",{"_index":473,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{}}}],["gainvalue.tofixed(1)}x",{"_index":1061,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["gamepad",{"_index":1251,"title":{},"body":{"injectables/GamepadService.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":1296,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":1231,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":2338,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":2348,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":2339,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":1244,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":1249,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":1252,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":1209,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":3042,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":304,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gblaster",{"_index":1993,"title":{},"body":{"injectables/MusicbrainzService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gblasterdb",{"_index":3508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1879,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":3119,"title":{},"body":{"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":3044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1882,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehash(filedata.file",{"_index":1826,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generating",{"_index":1825,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator.bitdroid.de/#section",{"_index":3122,"title":{},"body":{"index.html":{}}}],["getanalysernode",{"_index":2872,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getasfilesystemhandle",{"_index":1148,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["getaudiofilesfromdirhandle",{"_index":3045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":946,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":960,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(handle",{"_index":944,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2937,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2938,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":3454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverdisplay",{"_index":3456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1576,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":1534,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1597,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethasended",{"_index":510,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1418,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":678,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":703,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getloadfilesmenuentry",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesmenuentry().click",{"_index":705,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1763,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(filedata",{"_index":1772,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":3458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":3047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":2231,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":2258,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":3459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":3461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getthemecolor(color",{"_index":845,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["getting",{"_index":1850,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["gettoolbartitle",{"_index":3462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":3463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":2372,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["getvolumeslider",{"_index":3464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getxpos(freq",{"_index":1038,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["give",{"_index":2907,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":2158,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":2162,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":787,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":235,"title":{},"body":{"interfaces/Album.html":{},"injectables/GamepadService.html":{},"components/LibraryComponent.html":{}}}],["gp",{"_index":1259,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":1258,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":1260,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":3465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":969,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":931,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":966,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":3117,"title":{},"body":{"index.html":{}}}],["greater",{"_index":3212,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3292,"title":{},"body":{"license.html":{}}}],["grid",{"_index":1011,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["group",{"_index":2007,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["group/${releasegroupid",{"_index":2016,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":2013,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":2009,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":2010,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["handle",{"_index":912,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.kind",{"_index":1155,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handle.requestpermission",{"_index":967,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":1176,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1497,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlefilefallback(event",{"_index":1174,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handlemessage",{"_index":1490,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":1365,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{}}}],["handles",{"_index":1146,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handling",{"_index":1168,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hanging",{"_index":1476,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1393,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{}}}],["hash",{"_index":732,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1006,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":3321,"title":{},"body":{"license.html":{}}}],["held",{"_index":3367,"title":{},"body":{"license.html":{}}}],["help",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["helpers",{"_index":3557,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":1345,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":694,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":3295,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":3150,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":3155,"title":{},"body":{"license.html":{}}}],["hex",{"_index":849,"title":{},"body":{"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":1144,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1590,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1695,"title":{},"body":{"injectables/LoaderService.html":{}}}],["highest",{"_index":1043,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["hilfe",{"_index":1352,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk",{"_index":1383,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":1385,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["horizontal",{"_index":1016,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["host",{"_index":1182,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2628,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2642,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2625,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2626,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2638,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2641,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2639,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2640,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2607,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":1112,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hotkey",{"_index":1323,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1421,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1424,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1427,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":1336,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1411,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeys.service",{"_index":1404,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1399,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":383,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":1337,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":3049,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["htmlaudioelement",{"_index":525,"title":{},"body":{"injectables/AudioService.html":{}}}],["htmlcanvaselement",{"_index":2878,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlelement",{"_index":2495,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["htmlinputelement",{"_index":1585,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":1528,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["http_interceptors",{"_index":3503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1517,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["httpevent",{"_index":1684,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1682,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1685,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1680,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":3120,"title":{},"body":{"index.html":{}}}],["https://github.com/motabass/gblaster",{"_index":3412,"title":{},"body":{"properties.html":{}}}],["https://on.cypress.io/custom",{"_index":695,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":3124,"title":{},"body":{"index.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1533,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["icon",{"_index":3118,"title":{},"body":{"index.html":{}}}],["iconregistry",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgicon('logo",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgiconset(sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":3123,"title":{},"body":{"index.html":{}}}],["id",{"_index":868,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":858,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["id3coverpicture",{"_index":724,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":857,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["id3tagsservice",{"_index":1449,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":3206,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":728,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ii",{"_index":3245,"title":{},"body":{"license.html":{}}}],["iii",{"_index":3250,"title":{},"body":{"license.html":{}}}],["image",{"_index":1515,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["image.front",{"_index":2023,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["images",{"_index":1558,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.at",{"_index":1572,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.find((img",{"_index":1563,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.length",{"_index":1560,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images[0]?.['#text",{"_index":1567,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["img.size",{"_index":1564,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["immediately",{"_index":2181,"title":{},"body":{"injectables/PlayerService.html":{}}}],["implementation",{"_index":3280,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":3290,"title":{},"body":{"license.html":{}}}],["implements",{"_index":138,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":3376,"title":{},"body":{"license.html":{}}}],["import",{"_index":83,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":3545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":3547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":3543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":3548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1465,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["important",{"_index":1913,"title":{},"body":{"injectables/MetadataService.html":{}}}],["imports",{"_index":131,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["include",{"_index":3237,"title":{},"body":{"license.html":{}}}],["including",{"_index":3201,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":3193,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":2282,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["increasevolume(value",{"_index":2292,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":915,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":3107,"title":{},"body":{"index.html":{}}}],["indexeddbservice",{"_index":924,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["indexeddbtrackmetadata",{"_index":91,"title":{"interfaces/IndexedDbTrackMetadata.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["indexeddbtracks",{"_index":1650,"title":{},"body":{"injectables/LibraryService.html":{}}}],["ineffective",{"_index":3340,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":3356,"title":{},"body":{"license.html":{}}}],["influence",{"_index":1040,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":3144,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3190,"title":{},"body":{"license.html":{}}}],["init",{"_index":2695,"title":{},"body":{"injectables/UpdateService.html":{}}}],["initbarkscale",{"_index":3051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":557,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["initializetheme",{"_index":811,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2549,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":87,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["inject(audioservice",{"_index":983,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2573,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":2139,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":1339,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":1113,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":1338,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":2058,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["inject(gamepadservice",{"_index":2317,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":2318,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["inject(httpclient",{"_index":1529,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["inject(id3tagsservice",{"_index":1801,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1802,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(libraryservice",{"_index":141,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["inject(loaderservice",{"_index":1690,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":520,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1410,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":1341,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":2137,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":756,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":139,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["inject(musicbrainzservice",{"_index":1803,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":925,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(playerservice",{"_index":140,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":1115,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":2574,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2703,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2690,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":2057,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":2813,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":2136,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2883,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1409,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":413,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":415,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":1106,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"index.html":{}}}],["input('bars",{"_index":2869,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":2602,"title":{},"body":{"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{}}}],["inset",{"_index":1191,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2721,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":3115,"title":{},"body":{"index.html":{}}}],["instant",{"_index":2468,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["intended",{"_index":3233,"title":{},"body":{"license.html":{}}}],["intending",{"_index":3323,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1678,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1679,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1674,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1676,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["internal",{"_index":2969,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":2135,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":228,"title":{},"body":{"interfaces/Album.html":{},"injectables/GamepadService.html":{},"components/LibraryComponent.html":{}}}],["invalid",{"_index":3339,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":3357,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":3355,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":3350,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":3298,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":2391,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":2395,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":2415,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":1311,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":3052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":3067,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":3053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2534,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":3054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{}}}],["ismediasessionsupported",{"_index":3055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions",{"_index":3058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":3068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{}}}],["isplaying",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":2397,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isprocessing",{"_index":232,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["isstopped",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{}}}],["ist",{"_index":1358,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":3059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":1816,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["item",{"_index":1152,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["item.album",{"_index":174,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item.artist",{"_index":173,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item__content",{"_index":3535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1195,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["itemsize",{"_index":2474,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":3257,"title":{},"body":{"license.html":{}}}],["jest",{"_index":3558,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["json",{"_index":1555,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["judged",{"_index":3337,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":3158,"title":{},"body":{"license.html":{}}}],["justify",{"_index":1197,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["keine",{"_index":1431,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":3099,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1367,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":1363,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":3511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":1327,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["keys.replaceall",{"_index":1382,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":3374,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3231,"title":{},"body":{"license.html":{}}}],["known",{"_index":3307,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1877,"title":{},"body":{"injectables/MetadataService.html":{}}}],["kvalue",{"_index":663,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kvalue.tofixed(1)}k",{"_index":665,"title":{},"body":{"pipes/BandPipe.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["large",{"_index":2033,"title":{},"body":{"injectables/MusicbrainzService.html":{},"license.html":{}}}],["large')?.['#text",{"_index":1571,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["largeimage",{"_index":1568,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["larger",{"_index":1896,"title":{},"body":{"injectables/MetadataService.html":{}}}],["last",{"_index":1910,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlayerToolbarComponent.html":{}}}],["last.fm",{"_index":1541,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1793,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1530,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1512,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1524,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1516,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1527,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1526,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1523,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2951,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["latencyhint",{"_index":559,"title":{},"body":{"injectables/AudioService.html":{}}}],["latent",{"_index":3382,"title":{},"body":{"license.html":{}}}],["later",{"_index":3188,"title":{},"body":{"license.html":{}}}],["latest",{"_index":3088,"title":{},"body":{"index.html":{}}}],["launch",{"_index":2165,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters",{"_index":2163,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":2175,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":2173,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":2157,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":3135,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3157,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3110,"title":{},"body":{"index.html":{}}}],["leadingminutezero",{"_index":3077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":1097,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":1102,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2614,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1578,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":3130,"title":{},"body":{"license.html":{}}}],["legally",{"_index":3338,"title":{},"body":{"license.html":{}}}],["legend",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":3152,"title":{},"body":{"license.html":{}}}],["library",{"_index":1668,"title":{},"body":{"injectables/LibraryService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":133,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":135,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.service",{"_index":130,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":137,"title":{"components/LibraryComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libraryservice",{"_index":129,"title":{"injectables/LibraryService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{}}}],["libraryservice.isloading",{"_index":1637,"title":{},"body":{"components/LibraryComponent.html":{}}}],["libs/.../lucene",{"_index":3032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../time.helper.ts",{"_index":3040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/lucene",{"_index":3072,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/time.helper.ts",{"_index":3076,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":1083,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":3127,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":3371,"title":{},"body":{"license.html":{}}}],["light",{"_index":825,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightenfactor",{"_index":746,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":864,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":846,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":863,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":3255,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":3202,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":3263,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3238,"title":{},"body":{"license.html":{}}}],["line",{"_index":2265,"title":{},"body":{"injectables/PlayerService.html":{}}}],["lines",{"_index":1012,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["linethickness",{"_index":2742,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":3531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3559,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["list",{"_index":2476,"title":{},"body":{"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":599,"title":{},"body":{"injectables/AudioService.html":{}}}],["literal",{"_index":1448,"title":{},"body":{"interfaces/Id3Tags.html":{}}}],["load",{"_index":2376,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["loadcomponent",{"_index":3542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":2216,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loadedtrack",{"_index":2226,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":909,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":920,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["loader.helpers.ts",{"_index":1063,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1689,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":922,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["loader.service.abstract.ts",{"_index":1203,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":1206,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:6",{"_index":1207,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:7",{"_index":1208,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":3039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":911,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:11",{"_index":1580,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:18",{"_index":2040,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:24",{"_index":1583,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:26",{"_index":1581,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:32",{"_index":2042,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:42",{"_index":2041,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:43",{"_index":1582,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1675,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1688,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2588,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":675,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":1667,"title":{},"body":{"injectables/LibraryService.html":{}}}],["loadingcounter",{"_index":1700,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadlastdirectory",{"_index":2283,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["loadlibraryfromdb",{"_index":1651,"title":{},"body":{"injectables/LibraryService.html":{}}}],["local",{"_index":1836,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localecompare(b.album",{"_index":203,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.artist",{"_index":200,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.title",{"_index":222,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localization",{"_index":3427,"title":{},"body":{"todo.html":{}}}],["localstorage",{"_index":577,"title":{},"body":{"injectables/AudioService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":512,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["locking",{"_index":3103,"title":{},"body":{"index.html":{}}}],["loop",{"_index":477,"title":{},"body":{"injectables/AudioService.html":{}}}],["lowersearchterm",{"_index":147,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["lowest",{"_index":1030,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["made",{"_index":3234,"title":{},"body":{"license.html":{}}}],["main_audio",{"_index":544,"title":{},"body":{"injectables/AudioService.html":{}}}],["maincolor",{"_index":309,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":622,"title":{},"body":{"injectables/AudioService.html":{}}}],["makes",{"_index":3146,"title":{},"body":{"license.html":{}}}],["manage",{"_index":227,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["management",{"_index":3416,"title":{},"body":{"todo.html":{}}}],["map",{"_index":175,"title":{},"body":{"interfaces/Album.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2581,"title":{},"body":{"components/ShellComponent.html":{}}}],["map((tag",{"_index":162,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["march",{"_index":3275,"title":{},"body":{"license.html":{}}}],["markus.mohoritsch@gmx.at",{"_index":1997,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["mat",{"_index":3527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1402,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":3497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1406,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1948,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2676,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2673,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":1329,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2699,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1403,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":1330,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":3121,"title":{},"body":{"index.html":{}}}],["matformfield",{"_index":120,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matformfieldmodule",{"_index":2386,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":2465,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":2261,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":2464,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(chunksize",{"_index":1890,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(filesize",{"_index":1889,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(kvalue)}k",{"_index":664,"title":{},"body":{"pipes/BandPipe.html":{}}}],["math.floor(math.random",{"_index":2268,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":2262,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":2119,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.log10(freq",{"_index":1018,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(maxfreq",{"_index":1020,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(minfreq",{"_index":1019,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.max(0",{"_index":2477,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":2121,"title":{},"body":{"injectables/PlayerService.html":{}}}],["mathint",{"_index":121,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticon",{"_index":103,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonbutton",{"_index":105,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonmodule",{"_index":1405,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":122,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matlistmodule",{"_index":94,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenu",{"_index":96,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["matmenucontent",{"_index":97,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenuitem",{"_index":98,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenumodule",{"_index":2046,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matmenutrigger",{"_index":99,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matoptionmodule",{"_index":2737,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprefix",{"_index":123,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressbar",{"_index":2530,"title":{},"body":{"components/ShellComponent.html":{}}}],["matprogressspinner",{"_index":126,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressspinnermodule",{"_index":2385,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2736,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2560,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2528,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslider",{"_index":2273,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidermodule",{"_index":972,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matsliderthumb",{"_index":2274,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidetogglechange",{"_index":1958,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1949,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matsuffix",{"_index":124,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mattoolbar",{"_index":2275,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattoolbarmodule",{"_index":2044,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltip",{"_index":2276,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattooltipmodule",{"_index":2045,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":2259,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":287,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":3312,"title":{},"body":{"license.html":{}}}],["mbapi",{"_index":1991,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["md5",{"_index":1799,"title":{},"body":{"injectables/MetadataService.html":{}}}],["md5(combined",{"_index":1929,"title":{},"body":{"injectables/MetadataService.html":{}}}],["mdc",{"_index":3534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaning",{"_index":3232,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":2427,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["media",{"_index":1739,"title":{},"body":{"injectables/MediaSessionService.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":529,"title":{},"body":{"injectables/AudioService.html":{}}}],["mediametadata(metadata",{"_index":1748,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1720,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionaction",{"_index":1715,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1717,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1750,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1705,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":3061,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":3314,"title":{},"body":{"license.html":{}}}],["medium')?.['#text",{"_index":1566,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["mega')?.['#text",{"_index":1569,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["member",{"_index":3319,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2490,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["menutrigger",{"_index":2389,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["merchantability",{"_index":3378,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1360,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.description",{"_index":1378,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":1379,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1525,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1491,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["meta",{"_index":748,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"todo.html":{}}}],["meta.coverurl.originalurl",{"_index":1871,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl?.originalurl?.startswith('blob",{"_index":1872,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl?.thumburl?.startswith('blob",{"_index":1874,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1870,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1881,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":114,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1868,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":1520,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1794,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1514,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:36",{"_index":1577,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":1457,"title":{},"body":{"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1828,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.coverurl.thumburl",{"_index":1832,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1830,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1841,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":116,"title":{"injectables/MetadataService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["metadataservice.processing",{"_index":2589,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadataservice.statustext",{"_index":2590,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadatasettingscomponent",{"_index":387,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["meter",{"_index":3104,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":3466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1552,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["methods",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["mic",{"_index":3422,"title":{},"body":{"todo.html":{}}}],["middlechunk",{"_index":1891,"title":{},"body":{"injectables/MetadataService.html":{}}}],["middlepos",{"_index":1888,"title":{},"body":{"injectables/MetadataService.html":{}}}],["migrating",{"_index":2637,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2630,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["min",{"_index":2260,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2743,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["mindecibels",{"_index":288,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["minfreq",{"_index":1049,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["miscellaneous",{"_index":3021,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":3112,"title":{},"body":{"index.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":3192,"title":{},"body":{"license.html":{}}}],["module",{"_index":1466,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["modules",{"_index":3404,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monochrome.svg",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["moral",{"_index":3246,"title":{},"body":{"license.html":{}}}],["more",{"_index":689,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{}}}],["motabass",{"_index":3414,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":1990,"title":{},"body":{"injectables/MusicbrainzService.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":2567,"title":{},"body":{"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":3216,"title":{},"body":{"license.html":{}}}],["mouseevent",{"_index":2400,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["mp3",{"_index":1076,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":1081,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mtb",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":3505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":729,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":1982,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1796,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzapi",{"_index":1988,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":1795,"title":{"injectables/MusicbrainzService.html":{}},"body":{"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":860,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":697,"title":{},"body":{"interfaces/Chainable.html":{}}}],["narrowing",{"_index":2648,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":3279,"title":{},"body":{"license.html":{}}}],["nativebrowserfileloaderservice",{"_index":923,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigateto",{"_index":2536,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2539,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigator.getgamepads",{"_index":1250,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1747,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1751,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1742,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1737,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1746,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1745,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2995,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2996,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":897,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nderungen",{"_index":802,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["nearby",{"_index":2467,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["necessary",{"_index":3394,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":3236,"title":{},"body":{"license.html":{}}}],["new",{"_index":166,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["newsize",{"_index":315,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["newtrack",{"_index":2183,"title":{},"body":{"injectables/PlayerService.html":{}}}],["next",{"_index":1681,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1692,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1459,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2980,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ngafterviewinit",{"_index":1121,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngclass",{"_index":2384,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2647,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2649,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":1135,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":239,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngx",{"_index":513,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":914,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1266,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":1797,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{},"index.html":{}}}],["nodes",{"_index":561,"title":{},"body":{"injectables/AudioService.html":{}}}],["non",{"_index":3347,"title":{},"body":{"license.html":{}}}],["none",{"_index":546,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["nothing",{"_index":2171,"title":{},"body":{"injectables/PlayerService.html":{}}}],["now",{"_index":2949,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["null",{"_index":671,"title":{},"body":{"pipes/BitratePipe.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(a.track",{"_index":209,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(axisindex",{"_index":1241,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(b.track",{"_index":212,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(buttonindex",{"_index":1239,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(atrack",{"_index":215,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(btrack",{"_index":216,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(duration",{"_index":1734,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number.nan",{"_index":208,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbers",{"_index":214,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbervalue",{"_index":998,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["nx",{"_index":3550,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["object",{"_index":1837,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":3509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1843,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":3403,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1333,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":1364,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":1376,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2576,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2917,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":1371,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2920,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtained",{"_index":1164,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["obtaining",{"_index":3393,"title":{},"body":{"license.html":{}}}],["offers",{"_index":3372,"title":{},"body":{"license.html":{}}}],["offline",{"_index":3114,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":314,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":3471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":1927,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["ogg",{"_index":1078,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["oldsource",{"_index":629,"title":{},"body":{"injectables/AudioService.html":{}}}],["onchanges",{"_index":2594,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["oncontextmenu",{"_index":2392,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["oncontextmenu(event",{"_index":2399,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ondestroy",{"_index":1089,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":742,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["onfilehandlesdropped",{"_index":2537,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilehandlesdropped(files",{"_index":2543,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped",{"_index":2538,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped(files",{"_index":2545,"title":{},"body":{"components/ShellComponent.html":{}}}],["oninit",{"_index":88,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["onlibraryupdate",{"_index":240,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1952,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1957,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onsliderpositionchanged",{"_index":2284,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":2295,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1953,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1960,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1954,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1962,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1955,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1964,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":2285,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onvolumechange(value",{"_index":2297,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["open",{"_index":2485,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["opened",{"_index":2491,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["openedstate",{"_index":2603,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":942,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2601,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["option",{"_index":2852,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["optional",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":716,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":1355,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":1362,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":1080,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":2036,"title":{},"body":{"injectables/MusicbrainzService.html":{},"license.html":{}}}],["originalfn",{"_index":720,"title":{},"body":{"interfaces/Chainable.html":{}}}],["originalurl",{"_index":866,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["os",{"_index":3100,"title":{},"body":{"index.html":{}}}],["osc",{"_index":329,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2744,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":3105,"title":{},"body":{"index.html":{}}}],["oscilloscopepath",{"_index":3467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":306,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":328,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":3116,"title":{},"body":{"index.html":{}}}],["others",{"_index":3215,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":217,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["out",{"_index":1483,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{}}}],["output",{"_index":1108,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":2457,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":1098,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":1104,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":1090,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":1093,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":1092,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":1087,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":1107,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":1110,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:15",{"_index":1109,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:39",{"_index":1105,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:49",{"_index":1103,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:55",{"_index":1101,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":1086,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":1085,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlayref",{"_index":2492,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.left",{"_index":2498,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.position",{"_index":2496,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.top",{"_index":2500,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overtly",{"_index":3296,"title":{},"body":{"license.html":{}}}],["overview",{"_index":3405,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":687,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["owner",{"_index":3171,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":3170,"title":{},"body":{"license.html":{}}}],["owners",{"_index":3177,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2962,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":3001,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":3549,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{}}],["palette",{"_index":1854,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1940,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1941,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1934,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1935,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1942,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1943,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1936,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1937,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1938,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1939,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1932,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1933,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pane:last",{"_index":2494,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["panel",{"_index":2595,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2596,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2597,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2593,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2613,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2610,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2617,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2618,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2612,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2615,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2616,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2623,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2619,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2620,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2622,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2621,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2592,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":3264,"title":{},"body":{"license.html":{}}}],["parallele",{"_index":1657,"title":{},"body":{"injectables/LibraryService.html":{}}}],["parameters",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1548,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":698,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":3273,"title":{},"body":{"license.html":{}}}],["part",{"_index":3213,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1343,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":3380,"title":{},"body":{"license.html":{}}}],["party",{"_index":3401,"title":{},"body":{"license.html":{}}}],["passed",{"_index":2954,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":3366,"title":{},"body":{"license.html":{}}}],["path",{"_index":3539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":3473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":3541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":310,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1500,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1460,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["perform",{"_index":3242,"title":{},"body":{"license.html":{}}}],["performance",{"_index":1661,"title":{},"body":{"injectables/LibraryService.html":{}}}],["performance.now",{"_index":1307,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":3249,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3179,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":3388,"title":{},"body":{"license.html":{}}}],["permission",{"_index":964,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":3396,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3293,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":3108,"title":{},"body":{"index.html":{}}}],["person",{"_index":3221,"title":{},"body":{"license.html":{}}}],["person's",{"_index":3254,"title":{},"body":{"license.html":{}}}],["persons",{"_index":3392,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":3253,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1447,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pictures",{"_index":1851,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pipe",{"_index":113,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":2423,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":655,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":662,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1804,"title":{},"body":{"injectables/MetadataService.html":{}}}],["play",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["play/pause",{"_index":2323,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playback",{"_index":560,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["player",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player'},{'name",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.component.html",{"_index":2047,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":2048,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":102,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":93,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1726,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":3544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/file",{"_index":2569,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/library",{"_index":3546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1969,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/ShellComponent.html":{}}}],["player/player",{"_index":2570,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.service",{"_index":2568,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.types",{"_index":755,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":389,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":101,"title":{"injectables/PlayerService.html":{}},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":891,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["playerservice.currentlyloadedtrack();@let",{"_index":906,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["playerservice.currenttime",{"_index":2380,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playerservice.repeat",{"_index":2382,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playertoolbarcomponent",{"_index":391,"title":{"components/PlayerToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playing",{"_index":1727,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["playlist",{"_index":1639,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"todo.html":{}}}],["playlist'},{'name",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":2387,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":2388,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.filter((t",{"_index":2222,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.find((playlisttrack",{"_index":2237,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.findindex((track",{"_index":2451,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":2235,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":2232,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":2056,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":394,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.hash",{"_index":2211,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlisttrack.metadata?.hash",{"_index":2238,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":2067,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":2393,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":2402,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":2068,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":2089,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":3091,"title":{},"body":{"index.html":{}}}],["playtrack",{"_index":1607,"title":{},"body":{"components/LibraryComponent.html":{}}}],["playtrack(track",{"_index":250,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["playtrackbyhash",{"_index":2069,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playtrackbyhash(hash",{"_index":2091,"title":{},"body":{"injectables/PlayerService.html":{}}}],["please",{"_index":692,"title":{},"body":{"interfaces/Chainable.html":{}}}],["pluginnewanalysernode",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{}}}],["pointer",{"_index":1183,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["points",{"_index":1034,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["pool",{"_index":2941,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":2118,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":466,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":3197,"title":{},"body":{"license.html":{}}}],["prefertagembeddedpicture",{"_index":1753,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefix",{"_index":3488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["present",{"_index":3385,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":3341,"title":{},"body":{"license.html":{}}}],["pressedbuttonscaches",{"_index":1237,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prevents",{"_index":2634,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":2070,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":715,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":826,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":791,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":795,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":2005,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1984,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":3252,"title":{},"body":{"license.html":{}}}],["private",{"_index":223,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["process",{"_index":2952,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["processing",{"_index":230,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["processingfile",{"_index":1754,"title":{},"body":{"injectables/MetadataService.html":{}}}],["processinginterval",{"_index":224,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["processionpercent",{"_index":1755,"title":{},"body":{"injectables/MetadataService.html":{}}}],["production",{"_index":3210,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":934,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1474,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promise.all(promises",{"_index":1160,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promise.all(result.map((track",{"_index":1663,"title":{},"body":{"injectables/LibraryService.html":{}}}],["promise.reject(new",{"_index":1471,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1151,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{}}}],["promises.push(promise",{"_index":1157,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promote",{"_index":3205,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":3317,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":396,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2514,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"properties.html":{}}}],["protected",{"_index":3235,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":3258,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3277,"title":{},"body":{"license.html":{}}}],["provide",{"_index":3137,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":3478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":3149,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":519,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":3490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":3479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":3485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":3143,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":3480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonelesschangedetection",{"_index":3477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":3185,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":3251,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3227,"title":{},"body":{"license.html":{}}}],["pure",{"_index":657,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":3156,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3200,"title":{},"body":{"license.html":{}}}],["pwa",{"_index":3086,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quarter",{"_index":1898,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterchunk",{"_index":1902,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterpos",{"_index":1901,"title":{},"body":{"injectables/MetadataService.html":{}}}],["query",{"_index":1540,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["queryparams",{"_index":1550,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["querystring",{"_index":3074,"title":{},"body":{"miscellaneous/functions.html":{}}}],["queue",{"_index":2172,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":3331,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["random",{"_index":2267,"title":{},"body":{"injectables/PlayerService.html":{}}}],["randomposition",{"_index":2230,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":2454,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["rate",{"_index":905,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["re",{"_index":1671,"title":{},"body":{"injectables/LibraryService.html":{}}}],["react",{"_index":992,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["read",{"_index":693,"title":{},"body":{"interfaces/Chainable.html":{}}}],["reader",{"_index":3126,"title":{},"body":{"index.html":{}}}],["reading",{"_index":1846,"title":{},"body":{"injectables/MetadataService.html":{}}}],["readonly",{"_index":142,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":1817,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/UpdateService.html":{}}}],["realkeys",{"_index":1381,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":3336,"title":{},"body":{"license.html":{}}}],["record",{"_index":1549,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2910,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["redirectto",{"_index":3540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":3195,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":3148,"title":{},"body":{"license.html":{}}}],["regards",{"_index":3262,"title":{},"body":{"license.html":{}}}],["register",{"_index":1433,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":1354,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":1215,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":1224,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":1216,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":1228,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1395,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":3484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":3483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":1359,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["regular",{"_index":1163,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["reject",{"_index":1461,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1488,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1480,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":3164,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":3142,"title":{},"body":{"license.html":{}}}],["release",{"_index":2012,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["release:${escapelucenequerystring(album",{"_index":2003,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":1999,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2987,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":3186,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":3180,"title":{},"body":{"license.html":{}}}],["remainder",{"_index":3358,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":3360,"title":{},"body":{"license.html":{}}}],["remote",{"_index":1842,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverarturls",{"_index":82,"title":{"interfaces/RemoteCoverArtUrls.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":951,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["removed",{"_index":2214,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist",{"_index":2071,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist(track",{"_index":2094,"title":{},"body":{"injectables/PlayerService.html":{}}}],["renderer",{"_index":1114,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":1111,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renew",{"_index":1835,"title":{},"body":{"injectables/MetadataService.html":{}}}],["repeat",{"_index":2064,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":741,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["repository",{"_index":3411,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":3373,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":3240,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":3211,"title":{},"body":{"license.html":{}}}],["request",{"_index":963,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["request.reject(new",{"_index":1494,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1496,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe(draw",{"_index":2965,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1501,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestwakelock",{"_index":2994,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":3397,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":3326,"title":{},"body":{"license.html":{}}}],["reset",{"_index":2489,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["resetfrequencybandgain",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{}}}],["resetfrequencybandgain(bandfrequency",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{}}}],["resizeobserver",{"_index":2881,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2918,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1485,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(tags",{"_index":1487,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1601,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["resolved",{"_index":1158,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["respect",{"_index":3362,"title":{},"body":{"license.html":{}}}],["response",{"_index":1022,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["responsibility",{"_index":3390,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":3109,"title":{},"body":{"index.html":{}}}],["result",{"_index":1655,"title":{},"body":{"injectables/LibraryService.html":{}}}],["result.matches",{"_index":2582,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":3154,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":1386,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["retained",{"_index":3247,"title":{},"body":{"license.html":{}}}],["return",{"_index":149,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":3194,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":3325,"title":{},"body":{"license.html":{}}}],["rgb(255",{"_index":1200,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0,0",{"_index":882,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["right",{"_index":1059,"title":{},"body":{"components/EqualizerComponent.html":{},"components/SlidePanelComponent.html":{},"license.html":{}}}],["rights",{"_index":3165,"title":{},"body":{"license.html":{}}}],["root",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["root'},{'name",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["root.setproperty",{"_index":823,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["rotation",{"_index":2944,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":2542,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":2562,"title":{},"body":{"components/ShellComponent.html":{}}}],["routeroutlet",{"_index":2529,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":3468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":3346,"title":{},"body":{"license.html":{}}}],["run",{"_index":3554,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":3551,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":517,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1687,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":112,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":111,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["sample",{"_index":904,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":327,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["samples",{"_index":1900,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sandbox",{"_index":3125,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["saving",{"_index":3418,"title":{},"body":{"todo.html":{}}}],["scheme",{"_index":789,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["scientific",{"_index":3184,"title":{},"body":{"license.html":{}}}],["screen",{"_index":3102,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":2417,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollbehavior",{"_index":2471,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":2429,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":2466,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollposition",{"_index":2425,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":2418,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":2446,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":2449,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":2390,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["search",{"_index":2011,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["searchterm",{"_index":143,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["searchterm.tolowercase",{"_index":148,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["seconds",{"_index":2098,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft",{"_index":2072,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekleft(seconds",{"_index":2096,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":2299,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekright",{"_index":2073,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekright(seconds",{"_index":2099,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":2301,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekto",{"_index":1744,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["seektohandler(details",{"_index":2244,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1608,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":245,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1609,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":241,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selected",{"_index":2217,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectedalbum",{"_index":157,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":155,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":158,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selectnext",{"_index":2074,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":2075,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":2076,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":2103,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1610,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":247,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["send",{"_index":2960,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":1278,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separator",{"_index":3486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service/file",{"_index":1062,"title":{},"body":{"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":725,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1513,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1579,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":3070,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":117,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["service/metadata.service.ts",{"_index":1752,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:152",{"_index":1769,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:24",{"_index":1791,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:25",{"_index":1789,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1787,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1775,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:31",{"_index":1780,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:35",{"_index":1777,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:39",{"_index":1778,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:41",{"_index":1785,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:48",{"_index":1765,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:64",{"_index":1771,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:79",{"_index":1773,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":115,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":855,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":3075,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":1985,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:18",{"_index":1986,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":910,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":3138,"title":{},"body":{"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":2315,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":2314,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":2316,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["services/loader/loader.service",{"_index":2565,"title":{},"body":{"components/ShellComponent.html":{}}}],["services/media",{"_index":2131,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":2052,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":2130,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1740,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service",{"_index":2132,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":3057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1708,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1718,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1723,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1725,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1721,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1713,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1707,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":536,"title":{},"body":{"injectables/AudioService.html":{},"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["set(filtered.tosorted((a",{"_index":167,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["set.svg",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor",{"_index":2658,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setaccentcolor(color",{"_index":819,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1709,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1714,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2748,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2758,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2749,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2760,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":468,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1710,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1719,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2750,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2762,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2751,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2764,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2659,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":814,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2660,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":812,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2752,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2766,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":470,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":472,"title":{},"body":{"injectables/AudioService.html":{}}}],["setgap",{"_index":2753,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2768,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2754,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2770,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":475,"title":{},"body":{"injectables/AudioService.html":{}}}],["setmindb",{"_index":2755,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2772,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setplaybackstate(state",{"_index":1749,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor",{"_index":2661,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setprimarycolor(color",{"_index":817,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":2077,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":2105,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1711,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1722,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2756,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2774,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1478,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["settings",{"_index":576,"title":{},"body":{"injectables/AudioService.html":{},"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2524,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1950,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":2522,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1947,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2677,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":2655,"title":{},"body":{"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":1966,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":1965,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":1963,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1961,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:34",{"_index":1959,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":1956,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1946,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2523,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2525,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":398,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2685,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2686,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2916,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupvisualsworkerwithoptions",{"_index":3062,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":3069,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":478,"title":{},"body":{"injectables/AudioService.html":{}}}],["shall",{"_index":3324,"title":{},"body":{"license.html":{}}}],["share",{"_index":3423,"title":{},"body":{"todo.html":{}}}],["sharereplay",{"_index":2564,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell",{"_index":2527,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell'},{'name",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2531,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2532,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":341,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":1349,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":2322,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["show",{"_index":1696,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showdelay",{"_index":3499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":936,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["showfilepickerandloadfiles",{"_index":2286,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["showpicker",{"_index":933,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["shows",{"_index":683,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2745,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":2065,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2604,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["sidenav",{"_index":2535,"title":{},"body":{"components/ShellComponent.html":{}}}],["signal",{"_index":89,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["signal(0",{"_index":483,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{}}}],["signal(44_100",{"_index":505,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(false",{"_index":498,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('accentcolor",{"_index":794,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2776,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2780,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('basegain",{"_index":481,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2787,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2789,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":786,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2795,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2797,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2799,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2802,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1774,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('primarycolor",{"_index":792,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":2123,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":2126,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2810,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1786,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1788,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1790,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2978,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.localstorageservice.retrieve('volume",{"_index":507,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(true",{"_index":501,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(undefined",{"_index":156,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["signals",{"_index":537,"title":{},"body":{"injectables/AudioService.html":{},"directives/VisualsDirective.html":{}}}],["similar",{"_index":3285,"title":{},"body":{"license.html":{}}}],["sind",{"_index":1430,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1522,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["sizes",{"_index":2203,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":1187,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2540,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2629,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":3470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":401,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":400,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["small",{"_index":1886,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["small')?.['#text",{"_index":1565,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smallimage",{"_index":1562,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smooth",{"_index":2448,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2746,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":289,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["soll",{"_index":2726,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs/pseudo",{"_index":2266,"title":{},"body":{"injectables/PlayerService.html":{}}}],["song",{"_index":2085,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song.file.name",{"_index":2506,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":2502,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":2503,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.hash",{"_index":2481,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.hash",{"_index":2212,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":2507,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":2505,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":2504,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["soon",{"_index":1815,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sort",{"_index":191,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["sorting",{"_index":3417,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["specified",{"_index":2221,"title":{},"body":{"injectables/PlayerService.html":{}}}],["spinner",{"_index":128,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["src",{"_index":2201,"title":{},"body":{"injectables/PlayerService.html":{}}}],["start",{"_index":1029,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":3084,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["startvisualization(getdatamethod",{"_index":2936,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":231,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":3335,"title":{},"body":{"license.html":{}}}],["statustext",{"_index":1756,"title":{},"body":{"injectables/MetadataService.html":{}}}],["statutory",{"_index":3377,"title":{},"body":{"license.html":{}}}],["stop",{"_index":317,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2857,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storagesettingscomponent",{"_index":403,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":176,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":3510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":3513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(this.equalizergainvalues",{"_index":649,"title":{},"body":{"injectables/AudioService.html":{}}}],["styles",{"_index":1082,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":134,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["styleurls",{"_index":1091,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["sub",{"_index":1375,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":959,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":516,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"license.html":{}}}],["sublicensable",{"_index":3349,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2424,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":1334,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":3169,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1423,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1426,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":3283,"title":{},"body":{"license.html":{}}}],["successors",{"_index":3322,"title":{},"body":{"license.html":{}}}],["such",{"_index":3269,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":747,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["sum",{"_index":1923,"title":{},"body":{"injectables/MetadataService.html":{}}}],["supported",{"_index":1741,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":3094,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":3370,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":3302,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":634,"title":{},"body":{"injectables/AudioService.html":{}}}],["switch",{"_index":2248,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["swupdate",{"_index":2700,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.activateupdate().then",{"_index":2717,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2705,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntildestroyed(this.destroref)).subscribe((event",{"_index":2706,"title":{},"body":{"injectables/UpdateService.html":{}}}],["system",{"_index":1171,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"todo.html":{}}}],["t",{"_index":2223,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tag",{"_index":180,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"index.html":{}}}],["tag.album",{"_index":182,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.album?.tolowercase().includes(lowersearchterm",{"_index":154,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist",{"_index":163,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist?.tolowercase().includes(lowersearchterm",{"_index":152,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.coverurl",{"_index":186,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.filename?.tolowercase().includes(lowersearchterm",{"_index":153,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.title?.tolowercase().includes(lowersearchterm",{"_index":151,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.year",{"_index":185,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tags",{"_index":870,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"index.html":{},"todo.html":{}}}],["tags.album",{"_index":1536,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":1535,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1866,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1857,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1859,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1792,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1450,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1455,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1452,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1863,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1864,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":726,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1446,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1865,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagsworkerrequest",{"_index":867,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":869,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":2133,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":3342,"title":{},"body":{"license.html":{}}}],["target",{"_index":3424,"title":{},"body":{"todo.html":{}}}],["targetindex",{"_index":2450,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1420,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":708,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templateurl",{"_index":132,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["termination",{"_index":3328,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3230,"title":{},"body":{"license.html":{}}}],["territories",{"_index":3310,"title":{},"body":{"license.html":{}}}],["test",{"_index":555,"title":{},"body":{"injectables/AudioService.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":3553,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1521,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":856,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["theme",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["theme.types",{"_index":751,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themecolor",{"_index":750,"title":{"interfaces/ThemeColor.html":{}},"body":{"interfaces/ColorVariant.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["themeservice",{"_index":350,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice.initializetheme",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["themesettingscomponent",{"_index":405,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":3281,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":307,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["this._audiocontext",{"_index":586,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.createanalyser",{"_index":615,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.resume",{"_index":635,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.state",{"_index":633,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement",{"_index":584,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":596,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":603,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":613,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":589,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":593,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":594,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":610,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":605,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":601,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.currenttime",{"_index":645,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.fastseek(position",{"_index":644,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.loop",{"_index":642,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.pause",{"_index":638,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.play",{"_index":636,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.src",{"_index":630,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiosourcenode",{"_index":585,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers",{"_index":627,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":617,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.clear",{"_index":628,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":620,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":618,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode",{"_index":587,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.connect(analyser",{"_index":616,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.disconnect(analyser",{"_index":619,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[band",{"_index":578,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":647,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._gainnode",{"_index":588,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.asobservable",{"_index":539,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.next(true",{"_index":614,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._internalanalyzer",{"_index":2922,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":1370,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":810,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolor.set(color",{"_index":820,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolor.set(colors.peakcolor",{"_index":816,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolorpalette().foreach((color",{"_index":831,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":1320,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...filedatas",{"_index":2209,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(...validfiles",{"_index":2179,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addtrackstoplaylist(...this.filteredbyserchterm",{"_index":259,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(...tracks",{"_index":258,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(track",{"_index":270,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtracktoplaylist(track",{"_index":252,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":2207,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.allowedtypes().includes(file.type",{"_index":1179,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.alpha",{"_index":2792,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2836,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2905,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2820,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2826,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2824,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2822,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2931,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2930,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2959,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2691,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2964,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1556,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.askuserforupdate().then((update",{"_index":2716,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.basegain",{"_index":996,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.currenttime",{"_index":1735,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2972,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2831,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1733,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.equalizergainvalues",{"_index":995,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":2186,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":2227,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1730,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1728,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":2117,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":2205,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2778,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2932,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":2193,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":2255,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":2253,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(value",{"_index":2371,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":1242,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":1293,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":1291,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":1282,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.bands",{"_index":1037,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.barcount",{"_index":2782,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2840,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2899,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2923,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2926,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2925,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2924,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":582,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.breakpointobserver",{"_index":2575,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1543,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":1240,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":1289,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":1283,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":1297,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":1306,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":1279,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.caapi.getreleasegroupcovers(releasegroupid",{"_index":2018,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.canvas",{"_index":2884,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2911,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2890,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvasref",{"_index":1000,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.canvasref()!.nativeelement",{"_index":1001,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.capfalldown",{"_index":2785,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2844,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2783,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2842,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":1262,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":1261,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":1321,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":1257,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2652,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.color_variants.map((variant",{"_index":838,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.colorconfig",{"_index":2903,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":798,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":796,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":1245,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":2015,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":1294,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":1290,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":569,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1869,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1845,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(filedata",{"_index":1813,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.currentfolderhandle",{"_index":943,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(entry.handle",{"_index":932,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(handle",{"_index":937,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":2116,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":2110,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":2206,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":2228,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":2241,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().length",{"_index":2182,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":2210,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist()[this.currentplaylist().length",{"_index":2184,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":2213,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":602,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.darkmode",{"_index":806,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":813,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1412,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":2340,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.default_deadspace",{"_index":1313,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":1227,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":1361,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1391,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1398,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1414,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2517,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2516,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1389,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":1247,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":1344,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":1131,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":1122,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":1128,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":1126,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drawequalizerresponse",{"_index":997,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.drop.bind(this",{"_index":1134,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":1133,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":604,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[band",{"_index":580,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":646,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":652,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":1373,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1538,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1537,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":2001,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2821,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2838,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.filehandlesdropped.emit(filehandles",{"_index":1162,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.fileinput",{"_index":1586,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1592,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1600,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1599,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1598,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1589,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1594,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1591,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1588,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.openfiles",{"_index":2208,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.files",{"_index":1602,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.files.map((file",{"_index":1596,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filesdroped.emit(files",{"_index":1181,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.filestoprocess",{"_index":1776,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.set(filedatas.length",{"_index":1810,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.update((files",{"_index":1818,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filteredbyserchterm",{"_index":161,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.filteredbyserchterm().filter((track",{"_index":256,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":2000,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":1319,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":1299,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":2325,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":2367,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":2369,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":2368,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":2355,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":2356,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":2363,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":2362,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":2365,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":2359,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":2364,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":2360,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":2361,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":2366,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":2357,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":2358,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":2337,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":2326,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":2327,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":2346,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":2344,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":2351,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":2333,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":2349,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":2335,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":2342,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":2353,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":2329,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":2331,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2830,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2828,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2784,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2848,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getmetadata(filedata",{"_index":1821,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.getthemecolor(color",{"_index":843,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":2311,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer.files",{"_index":1175,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1470,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlefilefallback(event",{"_index":1165,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handlemessage",{"_index":1468,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.helpopen",{"_index":1388,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1396,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":1374,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":1356,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":1384,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":1377,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":2319,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":2320,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.register",{"_index":2321,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.id3tagsservice.extracttags(filedata.file",{"_index":1847,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":2341,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.indexeddbservice.add('library",{"_index":1867,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('library').topromise",{"_index":1980,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.update('directoryhandles",{"_index":938,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.indexeddbtracks.set",{"_index":1669,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.indexeddbtracks.set(trackswithbloburls",{"_index":1665,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.isautoscrollenabled",{"_index":2430,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":2431,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":1314,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":592,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":595,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":643,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(false",{"_index":609,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(true",{"_index":612,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying",{"_index":637,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(false",{"_index":611,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(true",{"_index":608,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(false",{"_index":607,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(true",{"_index":641,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.lastfm_api_key",{"_index":1554,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1852,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":1145,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":1130,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.libraryservice.indexeddbtracks().filter((tag",{"_index":150,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.libraryservice.loadlibraryfromdb",{"_index":236,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.linethickness",{"_index":2805,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2846,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1693,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loaderservice.show",{"_index":1691,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loadingcounter",{"_index":1701,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2656,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.retrieve('equalizergainvalues",{"_index":486,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('accentcolor",{"_index":809,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2837,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2841,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2845,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2843,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":805,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('equalizergainvalues",{"_index":651,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2839,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2849,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2847,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2835,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('prefertagembeddedpicture",{"_index":1979,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('primarycolor",{"_index":807,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2833,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('usetagembeddedpicture",{"_index":1977,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usetagscache",{"_index":1975,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usewebmetainfos",{"_index":1972,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2983,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mbapi.search('release",{"_index":2006,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.mediasessionservice",{"_index":2140,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":2146,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":2143,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":2141,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":2148,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":2150,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":2152,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":2144,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":2195,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":2154,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.menutrigger",{"_index":2483,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.meta.updatetag",{"_index":833,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.metadataservice.addfilestolibrary(...filedatas",{"_index":2225,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.createobjecturlforembeddedpicture(track",{"_index":1664,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1978,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.processing",{"_index":233,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1976,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1974,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1971,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2825,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2834,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2897,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1853,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":2147,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1473,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2651,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2650,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2901,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2934,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":1125,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":639,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.pendingrequests.clear",{"_index":1511,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1479,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1503,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1493,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1484,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1508,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1833,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice.addfilestoplaylist(...filedata",{"_index":2586,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addfilestoplaylist(...files.map((file",{"_index":2585,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addtracktoplaylist(track",{"_index":277,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2791,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":2441,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.darkmuted?.hex",{"_index":880,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.lightmuted?.hex",{"_index":881,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.coverurl?.originalurl",{"_index":884,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.hash",{"_index":2479,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":2434,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":2381,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.next",{"_index":2350,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpause",{"_index":2324,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":2480,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.playtrackbyhash(track.hash",{"_index":253,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.previous",{"_index":2352,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectnext",{"_index":2347,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":2345,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":2370,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.stop",{"_index":2328,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playpause",{"_index":2142,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(newtrack",{"_index":2185,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":2233,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":2240,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":2236,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":2239,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1834,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":1301,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":2149,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":808,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolor.set(color",{"_index":818,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolor.set(colors.maincolor",{"_index":815,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolorpalette().foreach((color",{"_index":827,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.processing",{"_index":1782,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile",{"_index":1783,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile.set(filedata.file.name",{"_index":1812,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processinginterval",{"_index":234,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.register",{"_index":1348,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":1123,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":1141,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":2249,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":2251,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":2256,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":2254,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2993,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2892,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2967,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate(['/player",{"_index":254,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.router.navigate([route",{"_index":2584,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":606,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.scrolltobottom",{"_index":2439,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":2445,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":2421,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":146,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.seekleft(10",{"_index":2151,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":2334,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seekright(10",{"_index":2153,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":2336,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seektohandler(details",{"_index":2155,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":640,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.selectedalbum",{"_index":190,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(album",{"_index":246,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(undefined",{"_index":243,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":171,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist.set(artist",{"_index":242,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":2219,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":2242,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(track",{"_index":248,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack.set(undefined",{"_index":244,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.selectsong(track",{"_index":2192,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setfrequencybandgain(bandfrequency",{"_index":653,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.setplaybackstate('none",{"_index":1732,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1731,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1729,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setseekposition(details.seektime",{"_index":2247,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":2243,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2893,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.showfilepickerandloadfiles",{"_index":2354,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.shuffle",{"_index":2229,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":2257,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":2583,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2823,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2832,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2933,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2935,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":2145,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2906,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.swupdate",{"_index":2704,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2724,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2723,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.accentcolor",{"_index":1053,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.darkmode",{"_index":879,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.primarycolor",{"_index":1025,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":2187,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2679,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2692,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":2059,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":1353,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":2343,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.togglerepeat",{"_index":2332,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.toggleshuffle",{"_index":2330,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.totalfilestoprocess",{"_index":1779,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(0",{"_index":1819,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(filedatas.length",{"_index":1809,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.uniquealbums",{"_index":264,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.updatecssproperties",{"_index":803,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1736,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.updatemetathemecolor",{"_index":804,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.usetagembeddedpicture",{"_index":1831,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1827,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1849,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2912,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2915,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2913,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2914,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2886,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2891,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2973,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2981,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2982,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2829,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2808,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":550,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.wakelock",{"_index":2992,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2997,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":3000,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":2189,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":2191,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1462,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1469,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1467,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2888,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1489,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1506,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1505,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1507,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":3181,"title":{},"body":{"license.html":{}}}],["three",{"_index":1899,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterchunk",{"_index":1907,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterpos",{"_index":1905,"title":{},"body":{"injectables/MetadataService.html":{}}}],["through",{"_index":1045,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{}}}],["throughout",{"_index":3159,"title":{},"body":{"license.html":{}}}],["throw",{"_index":1670,"title":{},"body":{"injectables/LibraryService.html":{}}}],["thumb",{"_index":2028,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumbnail",{"_index":2034,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumbnails",{"_index":2027,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumburl",{"_index":865,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["time",{"_index":899,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["time.pipe",{"_index":889,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["timed",{"_index":1482,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1477,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1454,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":874,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2950,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["title",{"_index":193,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":3521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":2051,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2587,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":553,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["todos",{"_index":3415,"title":{},"body":{"todo.html":{}}}],["toggle",{"_index":1968,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["togglehelpdialog",{"_index":1387,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2605,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":2287,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["togglerepeat",{"_index":2078,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["toggleshuffle",{"_index":2079,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["togglevisualmode",{"_index":2976,"title":{},"body":{"injectables/VisualsService.html":{}}}],["toolbar",{"_index":2272,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["toolbar.component",{"_index":2571,"title":{},"body":{"components/ShellComponent.html":{}}}],["toolbar.component.html",{"_index":2277,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2278,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":2271,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:106",{"_index":2296,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:112",{"_index":2298,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:123",{"_index":2291,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:127",{"_index":2305,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:131",{"_index":2306,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:135",{"_index":2303,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:140",{"_index":2294,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:144",{"_index":2300,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:148",{"_index":2302,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:152",{"_index":2293,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:156",{"_index":2289,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:160",{"_index":2304,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:29",{"_index":2308,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:30",{"_index":2310,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":2307,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:32",{"_index":2309,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:34",{"_index":2312,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar/player",{"_index":2270,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["top",{"_index":2606,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["tosignal",{"_index":2566,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2548,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1422,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["totalfilestoprocess",{"_index":1781,"title":{},"body":{"injectables/MetadataService.html":{}}}],["totallength",{"_index":1921,"title":{},"body":{"injectables/MetadataService.html":{}}}],["touppercase",{"_index":1425,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":92,"title":{"interfaces/Track.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{}}}],["track.album",{"_index":261,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.artist",{"_index":257,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.coverurl",{"_index":1644,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.filename",{"_index":1647,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.hash",{"_index":283,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.metadata",{"_index":2194,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":2198,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":2197,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.originalurl",{"_index":2202,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.originalurl",{"_index":2200,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":2196,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.hash",{"_index":2452,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["track.title",{"_index":1646,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.track",{"_index":1645,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum",{"_index":1611,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum(index",{"_index":281,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyartist",{"_index":1612,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyartist(index",{"_index":280,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyhash",{"_index":1613,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackbyhash(index",{"_index":282,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackmetadata",{"_index":731,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":189,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tracks().length",{"_index":1643,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tracks.push(...albumtracks",{"_index":268,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackswithbloburls",{"_index":1662,"title":{},"body":{"injectables/LibraryService.html":{}}}],["trademark",{"_index":3365,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":3348,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2961,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":659,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":660,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["translate",{"_index":3244,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2853,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["treaty",{"_index":3289,"title":{},"body":{"license.html":{}}}],["tree",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trigger",{"_index":2482,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menu",{"_index":2487,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menudata",{"_index":2484,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.openmenu",{"_index":2486,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["true",{"_index":658,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":935,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["ts",{"_index":2159,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tslib",{"_index":3019,"title":{},"body":{"dependencies.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":1225,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3428,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":739,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["types",{"_index":2161,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ui",{"_index":2443,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":320,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["uint8array(endchunk",{"_index":1918,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(middlechunk",{"_index":1895,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(quarterchunk",{"_index":1904,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(threequarterchunk",{"_index":1909,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(totallength",{"_index":1926,"title":{},"body":{"injectables/MetadataService.html":{}}}],["unconditional",{"_index":3351,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":3299,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":207,"title":{},"body":{"interfaces/Album.html":{},"pipes/BitratePipe.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":3229,"title":{},"body":{"license.html":{}}}],["understands",{"_index":3399,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":3260,"title":{},"body":{"license.html":{}}}],["unique",{"_index":177,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["uniquealbums",{"_index":170,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniquealbums().length",{"_index":1640,"title":{},"body":{"components/LibraryComponent.html":{}}}],["uniqueartists",{"_index":159,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniqueartists().length",{"_index":1638,"title":{},"body":{"components/LibraryComponent.html":{}}}],["unit",{"_index":3552,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":3133,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{},"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1434,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":1380,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["update",{"_index":600,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["update.service",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["updatecssproperties",{"_index":821,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updated",{"_index":2444,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["updateinterval",{"_index":2955,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1712,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1724,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemetathemecolor",{"_index":832,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updates",{"_index":800,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updateservice",{"_index":352,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["updateservice.init",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["upload",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":3167,"title":{},"body":{"license.html":{}}}],["url",{"_index":721,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1464,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2887,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":631,"title":{},"body":{"injectables/AudioService.html":{}}}],["url.createobjecturl(new",{"_index":1839,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.originalurl",{"_index":1873,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.thumburl",{"_index":1875,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1861,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":632,"title":{},"body":{"injectables/AudioService.html":{}}}],["urls",{"_index":1838,"title":{},"body":{"injectables/MetadataService.html":{}}}],["urlsearchparams",{"_index":1551,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["use",{"_index":204,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"license.html":{}}}],["useclass",{"_index":3504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2635,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":3495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useleadingzero",{"_index":3079,"title":{},"body":{"miscellaneous/functions.html":{}}}],["user",{"_index":965,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["usermediainput",{"_index":3421,"title":{},"body":{"todo.html":{}}}],["uses",{"_index":3095,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1757,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1758,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":3498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1759,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":3087,"title":{},"body":{"index.html":{}}}],["v",{"_index":3266,"title":{},"body":{"license.html":{}}}],["validfiles",{"_index":2174,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.length",{"_index":2178,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.push",{"_index":2177,"title":{},"body":{"injectables/PlayerService.html":{}}}],["value",{"_index":465,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":999,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":666,"title":{},"body":{"pipes/BandPipe.html":{}}}],["values",{"_index":994,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["var",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":3436,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":2374,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["variant.darkenfactor",{"_index":841,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variant.lightenfactor",{"_index":839,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variant.suffix",{"_index":844,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["various",{"_index":684,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verarbeitung",{"_index":1658,"title":{},"body":{"injectables/LibraryService.html":{}}}],["verfügbar",{"_index":2725,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":3063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle).then((granted",{"_index":930,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":962,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2710,"title":{},"body":{"injectables/UpdateService.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2708,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2719,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2712,"title":{},"body":{"injectables/UpdateService.html":{}}}],["very",{"_index":1885,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["vi",{"_index":3268,"title":{},"body":{"license.html":{}}}],["via",{"_index":3420,"title":{},"body":{"todo.html":{},"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":859,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"dependencies.html":{},"index.html":{}}}],["vibrant.from(url).getpalette",{"_index":1931,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1798,"title":{},"body":{"injectables/MetadataService.html":{}}}],["viewchild",{"_index":989,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":2554,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('menutrigger",{"_index":2406,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild('scrollviewport",{"_index":2409,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild>('eqcanvas",{"_index":985,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["viewport",{"_index":2420,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":2456,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":2473,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":2426,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":2447,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":2478,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":2472,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":3284,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":1142,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visible",{"_index":1143,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":2455,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":2458,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":3106,"title":{},"body":{"index.html":{}}}],["visualizefrequencybars",{"_index":2858,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2863,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2859,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2865,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizer.component.html",{"_index":2738,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2739,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":888,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":2411,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":407,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":322,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":318,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizerworker",{"_index":2880,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2975,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals",{"_index":3419,"title":{},"body":{"todo.html":{}}}],["visuals.types",{"_index":2874,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2819,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2816,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2815,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":308,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":410,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":2747,"title":{"injectables/VisualsService.html":{}},"body":{"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":2850,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":312,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":2373,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["volume",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{},"components/PlayerToolbarComponent.html":{}}}],["volumeicon",{"_index":2279,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["voluntarily",{"_index":3225,"title":{},"body":{"license.html":{}}}],["wait",{"_index":2435,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":3368,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3291,"title":{},"body":{"license.html":{}}}],["waives",{"_index":3300,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2985,"title":{},"body":{"injectables/WakelockService.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2991,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":2129,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":3064,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2180,"title":{},"body":{"injectables/PlayerService.html":{}}}],["warranties",{"_index":3147,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":1800,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["wav",{"_index":1079,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["we're",{"_index":1167,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/PlayerService.html":{}}}],["web",{"_index":3085,"title":{},"body":{"index.html":{},"properties.html":{}}}],["webstorage",{"_index":514,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["well",{"_index":3308,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1878,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2729,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":3199,"title":{},"body":{"license.html":{}}}],["whether",{"_index":3306,"title":{},"body":{"license.html":{}}}],["white",{"_index":1198,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["width",{"_index":1004,"title":{},"body":{"components/EqualizerComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window",{"_index":2167,"title":{},"body":{"injectables/PlayerService.html":{}}}],["window.focus",{"_index":2170,"title":{},"body":{"injectables/PlayerService.html":{}}}],["wish",{"_index":3178,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":3493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":3491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":3489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1704,"title":{},"body":{"injectables/LoaderService.html":{},"license.html":{}}}],["withviewtransitions",{"_index":3494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":3172,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1458,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1463,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":3481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":3113,"title":{},"body":{"index.html":{}}}],["works",{"_index":955,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":3160,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":3311,"title":{},"body":{"license.html":{}}}],["writablesignal",{"_index":1205,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["writes",{"_index":2633,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["writing",{"_index":3425,"title":{},"body":{"todo.html":{}}}],["wurde",{"_index":1286,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x",{"_index":1027,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y",{"_index":1028,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":81,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["yield",{"_index":1814,"title":{},"body":{"injectables/MetadataService.html":{}}}],["z",{"_index":1192,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zugewiesen",{"_index":1267,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Album.html":{"url":"interfaces/Album.html","title":"interface - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverArtUrls\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverArtUrls\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, computed, effect, inject, OnInit, signal } from '@angular/core';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverArtUrls } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { LibraryService } from './library.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverArtUrls;\n}\n\n@Component({\n  imports: [\n    MatListModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix,\n    MatProgressSpinner\n  ],\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss'\n})\nexport default class LibraryComponent implements OnInit {\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n  libraryService = inject(LibraryService);\n\n  readonly searchTerm = signal('');\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  private processingInterval: any;\n\n  constructor() {\n    // Automatically manage the interval based on processing state\n    effect(() => {\n      const isProcessing = this.metadataService.processing();\n\n      if (isProcessing && !this.processingInterval) {\n        this.processingInterval = globalThis.setInterval(() => {\n          void this.libraryService.loadLibraryFromDb();\n        }, 5000);\n      } else if (!isProcessing && this.processingInterval) {\n        clearInterval(this.processingInterval);\n        this.processingInterval = undefined;\n      }\n    });\n  }\n\n  ngOnInit() {\n    void this.libraryService.loadLibraryFromDb();\n  }\n\n  private onLibraryUpdate() {}\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  imports: [ShellComponent],\n  templateUrl: './app.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    const updateService = inject(UpdateService);\n    const iconRegistry = inject(MatIconRegistry);\n    const sanitizer = inject(DomSanitizer);\n    const themeService = inject(ThemeService);\n\n    void updateService.init();\n\n    themeService.initializeTheme();\n\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    iconRegistry.addSvgIcon('logo', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                resetFrequencyBandGain\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nresetFrequencyBandGain(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FREQUENCY_BANDS, FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport type EqualizerGainValues = {\n  [Band in FrequencyBand]: number;\n};\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private localStorageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.localStorageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.localStorageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._eqGainNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      this._eqGainNode.disconnect(analyser);\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    for (const analyser of this._connectedAnalyzers) {\n      this._eqGainNode.disconnect(analyser);\n    }\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = structuredClone(this.equalizerGainValues());\n    bandGains[bandFrequency] = gainValue;\n\n    this.localStorageService.store('equalizerGainValues', bandGains);\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  resetFrequencyBandGain(bandFrequency: FrequencyBand) {\n    this.setFrequencyBandGain(bandFrequency, 0);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand): string {\n    if (!value || value = 1000) {\n      const kValue = value / 1000;\n      return kValue % 1 === 0 ? `${Math.floor(kValue)}K` : `${kValue.toFixed(1)}K`;\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate',\n  pure: true\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | null | undefined): string {\n    if (value == null || value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton, getLoadFilesMenuEntry } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.wait(300);\n  getLoadFilesMenuEntry().click();\n\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorVariant.html":{"url":"interfaces/ColorVariant.html","title":"interface - ColorVariant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorVariant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkenFactor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightenFactor\n                                        \n                                \n                                \n                                        \n                                            suffix\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkenFactor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkenFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightenFactor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightenFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suffix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { computed, effect, inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { Colord, colord } from 'colord';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { ThemeColor } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\ninterface ColorVariant {\n  suffix: string;\n  lightenFactor?: number;\n  darkenFactor?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly COLOR_VARIANTS: ColorVariant[] = [\n    { suffix: '0', lightenFactor: 0.55 },\n    { suffix: '10', lightenFactor: 0.45 },\n    { suffix: '20', lightenFactor: 0.35 },\n    { suffix: '25', lightenFactor: 0.3 },\n    { suffix: '30', lightenFactor: 0.25 },\n    { suffix: '35', lightenFactor: 0.2 },\n    { suffix: '40', lightenFactor: 0.15 },\n    { suffix: '50' },\n    { suffix: '60', darkenFactor: 0.05 },\n    { suffix: '70', darkenFactor: 0.1 },\n    { suffix: '80', darkenFactor: 0.15 },\n    { suffix: '90', darkenFactor: 0.18 },\n    { suffix: '95', darkenFactor: 0.21 },\n    { suffix: '98', darkenFactor: 0.24 },\n    { suffix: '99', darkenFactor: 0.27 },\n    { suffix: '100', darkenFactor: 0.3 }\n  ];\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  readonly primaryColor = signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR);\n\n  readonly accentColor = signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR);\n\n  readonly primaryColorPalette = computed(() => this.computeColors(this.primaryColor()));\n  readonly accentColorPalette = computed(() => this.computeColors(this.accentColor()));\n\n  constructor() {\n    // Automatische Updates bei Änderungen\n    effect(() => {\n      this.updateCSSProperties();\n      this.updateMetaThemeColor();\n    });\n\n    effect(() => {\n      this.localStorageService.store('darkMode', this.darkMode());\n    });\n\n    effect(() => {\n      this.localStorageService.store('primaryColor', this.primaryColor());\n    });\n\n    effect(() => {\n      this.localStorageService.store('accentColor', this.accentColor());\n    });\n  }\n\n  initializeTheme() {\n    this.updateCSSProperties();\n    this.updateMetaThemeColor();\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n  }\n\n  setColors(colors: ColorConfig) {\n    this.primaryColor.set(colors.mainColor || FALLBACK_PRIMARY_COLOR);\n    this.accentColor.set(colors.peakColor || FALLBACK_ACCENT_COLOR);\n  }\n\n  setPrimaryColor(color: string) {\n    this.primaryColor.set(color || FALLBACK_PRIMARY_COLOR);\n  }\n\n  setAccentColor(color: string) {\n    this.accentColor.set(color || FALLBACK_ACCENT_COLOR);\n  }\n\n  private updateCSSProperties() {\n    const root = document.documentElement.style;\n\n    // App color scheme\n    root.setProperty('--app-color-scheme', this.darkMode() ? 'dark' : 'light');\n\n    // Primary colors\n    this.primaryColorPalette().forEach((color) => {\n      root.setProperty(`--theme-primary-${color.name}`, color.hex);\n    });\n\n    // Accent colors\n    this.accentColorPalette().forEach((color) => {\n      root.setProperty(`--theme-accent-${color.name}`, color.hex);\n    });\n  }\n\n  private updateMetaThemeColor() {\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor() });\n  }\n\n  private computeColors(hex: string): ThemeColor[] {\n    const baseColor = colord(hex);\n\n    return this.COLOR_VARIANTS.map((variant) => {\n      let color = baseColor;\n\n      if (variant.lightenFactor) {\n        color = baseColor.lighten(variant.lightenFactor);\n      } else if (variant.darkenFactor) {\n        color = baseColor.darken(variant.darkenFactor);\n      }\n\n      return this.getThemeColor(color, variant.suffix);\n    });\n  }\n\n  private getThemeColor(color: Colord, name: string): ThemeColor {\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name,\n      hex: color.toHex(),\n      darkContrast: color.brightness() > lightnessLimit\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            TimePipe\n                            BitratePipe\n                                VisualizerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Readonly\n                                coverUrl\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.originalUrl)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BitratePipe } from './bitrate.pipe';\nimport { VisualizerComponent } from '../visualizer/visualizer.component';\nimport { PlayerService } from '../player.service';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  imports: [TimePipe, BitratePipe, VisualizerComponent],\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CoverDisplayComponent {\n  private themeService = inject(ThemeService);\n  playerService = inject(PlayerService);\n\n  readonly coverUrl = computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.originalUrl);\n\n  readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = playerService.currentlyLoadedTrack();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = playerService.currentlyLoadedTrack();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirHandleEntry.html":{"url":"interfaces/DirHandleEntry.html","title":"interface - DirHandleEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirHandleEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:     FileSystemDirectoryHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemDirectoryHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-equalizer\n            \n\n\n            \n                imports\n                \n                            MatSliderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                BANDS\n                            \n                            \n                                    Readonly\n                                canvasRef\n                            \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                            \n                                drawEqualizerResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawEqualizerResponse\n                        \n                    \n                \n            \n            \n                \ndrawEqualizerResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild>('eqCanvas')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, effect, ElementRef, inject, viewChild } from '@angular/core';\nimport { AudioService } from '../audio.service';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FREQUENCY_BANDS } from '../player.types';\nimport { ThemeService } from '../../theme/theme.service';\n\n@Component({\n  selector: 'mtb-equalizer',\n  imports: [MatSliderModule],\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  audioService = inject(AudioService);\n  themeService = inject(ThemeService);\n  readonly canvasRef = viewChild>('eqCanvas');\n\n  BANDS = FREQUENCY_BANDS;\n\n  constructor() {\n    // React to changes in equalizer values\n    effect(() => {\n      this.audioService.equalizerGainValues(); // Track the signal\n      this.audioService.baseGain(); // Track gain changes\n      this.drawEqualizerResponse();\n    });\n  }\n\n  displayFunction(value: number): string {\n    const numberValue = value.toFixed(1);\n    return numberValue + ' dB';\n  }\n\n  drawEqualizerResponse(): void {\n    if (!this.canvasRef()) return;\n\n    const canvas = this.canvasRef()!.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw grid lines\n    ctx.strokeStyle = '#dddddd';\n    ctx.lineWidth = 0.2;\n\n    // Horizontal grid lines (every 3dB)\n    for (let db = -12; db  {\n      return ((Math.log10(freq) - Math.log10(minFreq)) / (Math.log10(maxFreq) - Math.log10(minFreq))) * width;\n    };\n\n    // Draw frequency response curve with gain applied\n    ctx.strokeStyle = this.themeService.primaryColor();\n    ctx.lineWidth = 3;\n\n    const freqPoints: { x: number; y: number }[] = [];\n\n    // Start with the lowest frequency\n    freqPoints.push({\n      x: 0,\n      y: height / 2 - ((eqValues[this.BANDS[0]] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw points for each frequency band with gain applied\n    for (const freq of this.BANDS) {\n      const x = getXPos(freq);\n      // Apply gain influence to the curve\n      const y = height / 2 - ((eqValues[freq] + (gainValue - 1) * 12) * height) / 24;\n      freqPoints.push({ x, y });\n    }\n\n    // End with the highest frequency\n    freqPoints.push({\n      x: width,\n      y: height / 2 - ((eqValues[this.BANDS.at(-1)!] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw curve through points\n    ctx.beginPath();\n    ctx.moveTo(freqPoints[0].x, freqPoints[0].y);\n\n    for (let i = 0; i  freq >= minFreq && freq = 1000 ? `${freq / 1000}k` : `${freq}`;\n      ctx.fillText(label, x, height - 5);\n    }\n\n    // Display gain value\n    ctx.fillStyle = this.themeService.accentColor();\n    ctx.font = 'bold 12px Arial';\n    ctx.textAlign = 'right';\n    ctx.fillText(`Gain: ${gainValue.toFixed(1)}x`, width - 10, 20);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  @for (band of BANDS; track band) {\n    \n      \n        {{ band | band }}-->\n        \n      \n    \n  }\n\n  \n    \n      GAIN-->\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          @for (band of BANDS; track band) {                  {{ band | band }}-->                    }            GAIN-->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ALLOWED_MIMETYPES = [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n];\n\nexport const ALLOWED_EXTENSIONS = ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4'];\n\nexport interface FileData {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Readonly\n                                fileHandlesDropped\n                            \n                            \n                                    Readonly\n                                filesDroped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(['*/*'])\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fileHandlesDropped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filesDroped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n  readonly fileHandlesDropped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n\n    // Try to get file handles first\n    if (event.dataTransfer?.items && 'getAsFileSystemHandle' in event.dataTransfer.items[0]) {\n      try {\n        const fileHandles: FileSystemFileHandle[] = [];\n        const promises: Promise[] = [];\n\n        for (const item of Array.from(event.dataTransfer.items)) {\n          const promise = (item as any).getAsFileSystemHandle().then((handle: any) => {\n            if (handle && handle.kind === 'file') {\n              fileHandles.push(handle);\n            }\n          });\n          promises.push(promise);\n        }\n\n        // When all promises are resolved, emit the file handles\n        Promise.all(promises)\n          .then(() => {\n            if (fileHandles.length > 0) {\n              this.fileHandlesDropped.emit(fileHandles);\n            } else {\n              // Fall back to regular files if no file handles were obtained\n              this.handleFileFallback(event);\n            }\n          })\n          .catch(() => {\n            // Fall back to regular files on error\n            this.handleFileFallback(event);\n          });\n\n        return; // Exit early - we're handling with file handles\n      } catch (error) {\n        // Fall through to file fallback\n        console.warn('File System Access API failed:', error);\n      }\n    }\n\n    // Fallback to regular files\n    this.handleFileFallback(event);\n  }\n\n  private handleFileFallback(event: DragEvent) {\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (const file of Array.from(droppedFiles)) {\n      if (file && this.allowedTypes().includes(file.type)) {\n        files.push(file);\n      }\n    }\n    this.filesDroped.emit(files);\n  }\n}\n\n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileData } from './file-loader.helpers';\nimport { WritableSignal } from '@angular/core';\n\nexport abstract class FileLoaderService {\n  abstract currentFolderHandle: WritableSignal;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                            \n                                buttonActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ButtonGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private checkIntervals: number[] = [];\n  private pressedButtonsCaches: ActionCache[][] = [];\n  private activeAxesCaches: ActionCache[][] = [];\n\n  buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule],\n  templateUrl: './hotkeys-help-dialog.component.html',\n  styleUrl: './hotkeys-help-dialog.component.scss'\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-hotkeys-help-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule],\n  templateUrl: './hotkeys-help-dialog.component.html',\n  styleUrl: './hotkeys-help-dialog.component.scss'\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _pause\n                            \n                            \n                                defaults\n                            \n                            \n                                    Optional\n                                dialogRef\n                            \n                            \n                                helpOpen\n                            \n                            \n                                hotkeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    element: this.document\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hotkeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private worker: Worker;\n  private nextId = 0;\n  private pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexedDbTrackMetadata.html":{"url":"interfaces/IndexedDbTrackMetadata.html","title":"interface - IndexedDbTrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IndexedDbTrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TrackMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService implements FileLoaderService {\n  private fileInput!: HTMLInputElement;\n\n  private files: File[] = [];\n\n  constructor() {\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  readonly currentFolderHandle = signal(undefined);\n\n  async openFiles(): Promise {\n    return this.files.map((file) => ({ file }));\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            MatMenu\n                            MatMenuContent\n                            MatMenuItem\n                            MatMenuTrigger\n                            MatIcon\n                            MatIconButton\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            SafePipe\n                            MatHint\n                            FormsModule\n                            MatFormField\n                            MatInput\n                            MatPrefix\n                            MatSuffix\n                            MatProgressSpinner\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                filteredBySerchterm\n                            \n                            \n                                libraryService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                searchTerm\n                            \n                            \n                                    Readonly\n                                selectedAlbum\n                            \n                            \n                                    Readonly\n                                selectedArtist\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                uniqueAlbums\n                            \n                            \n                                    Readonly\n                                uniqueArtists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAlbumToPlaylist\n                            \n                            \n                                    Async\n                                addArtistToPlaylist\n                            \n                            \n                                    Async\n                                addTracksToPlaylist\n                            \n                            \n                                    Async\n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                playTrack\n                            \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                trackByAlbum\n                            \n                            \n                                trackByArtist\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:141\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAlbumToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAlbumToPlaylist(album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addArtistToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addArtistToPlaylist(artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTracksToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbTracks\n                                            \n                                                        IndexedDbTrackMetadata[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTrackToPlaylist(track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAlbum\n                        \n                    \n                \n            \n            \n                \ntrackByAlbum(index: number, album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:246\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByArtist\n                        \n                    \n                \n            \n            \n                \ntrackByArtist(index: number, artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:242\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:250\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredBySerchterm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        libraryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LibraryService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedAlbum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedArtist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueAlbums\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueArtists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, effect, inject, OnInit, signal } from '@angular/core';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverArtUrls } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { LibraryService } from './library.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverArtUrls;\n}\n\n@Component({\n  imports: [\n    MatListModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix,\n    MatProgressSpinner\n  ],\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss'\n})\nexport default class LibraryComponent implements OnInit {\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n  libraryService = inject(LibraryService);\n\n  readonly searchTerm = signal('');\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  private processingInterval: any;\n\n  constructor() {\n    // Automatically manage the interval based on processing state\n    effect(() => {\n      const isProcessing = this.metadataService.processing();\n\n      if (isProcessing && !this.processingInterval) {\n        this.processingInterval = globalThis.setInterval(() => {\n          void this.libraryService.loadLibraryFromDb();\n        }, 5000);\n      } else if (!isProcessing && this.processingInterval) {\n        clearInterval(this.processingInterval);\n        this.processingInterval = undefined;\n      }\n    });\n  }\n\n  ngOnInit() {\n    void this.libraryService.loadLibraryFromDb();\n  }\n\n  private onLibraryUpdate() {}\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ uniqueArtists().length }}) \n        \n          \n            \n           \n      \n        {{ artist }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ uniqueAlbums().length }})\n        \n          \n            \n           \n      \n        \n          @if (album && album.coverUrl) {\n            \n          }\n        \n        {{ album.name }}{{ album.year ? ` | ${album.year}` : '' }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ tracks().length }})\n        \n          \n            \n          \n        \n      \n      \n        \n          @if (track && track.coverUrl) {\n            \n          }\n        \n        @if (selectedAlbum()) {\n          {{ track.track ? `${track.track}. ` : '' }}{{ track.title || track.fileName }}\n        } @else {\n          {{ track.title || track.fileName }}\n        }\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ tracks().length }} entries\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (libraryService.isLoading()) {                                        }        ALL ({{ uniqueArtists().length }})                                                        {{ artist }}                                                                          Add to Playlist                          @if (libraryService.isLoading()) {                                        }        ALL ({{ uniqueAlbums().length }})                                                                 @if (album && album.coverUrl) {                      }                {{ album.name }}{{ album.year ? ` | ${album.year}` : \\'\\' }}                                                                          Add to Playlist                          @if (libraryService.isLoading()) {                                        }        ALL ({{ tracks().length }})                                                                              @if (track && track.coverUrl) {                      }                @if (selectedAlbum()) {          {{ track.track ? `${track.track}. ` : \\'\\' }}{{ track.title || track.fileName }}        } @else {          {{ track.title || track.fileName }}        }                                                                          Add to Playlist            @if (searchTerm()) {                }  {{ tracks().length }} entries'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LibraryService.html":{"url":"injectables/LibraryService.html","title":"injectable - LibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                indexedDbTracks\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadLibraryFromDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLibraryFromDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLibraryFromDb()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        indexedDbTracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata } from '../player.types';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibraryService {\n  private readonly indexedDbService = inject(NgxIndexedDBService);\n  private readonly metadataService = inject(MetadataService);\n\n  readonly isLoading = signal(false);\n  readonly indexedDbTracks = signal([]);\n\n  async loadLibraryFromDb(): Promise {\n    try {\n      this.isLoading.set(true);\n\n      const result = await firstValueFrom(this.indexedDbService.getAll('library'));\n\n      // Parallele Verarbeitung für bessere Performance\n      const tracksWithBlobUrls = await Promise.all(result.map((track) => this.metadataService.createObjectUrlForEmbeddedPicture(track)));\n\n      this.indexedDbTracks.set(tracksWithBlobUrls);\n      return tracksWithBlobUrls;\n    } catch (error) {\n      console.error('Error loading library data:', error);\n      this.indexedDbTracks.set([]);\n      throw error; // Re-throw für Caller\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => void) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                processing\n                            \n                            \n                                    Readonly\n                                processingFile\n                            \n                            \n                                    Readonly\n                                processionPercent\n                            \n                            \n                                    Readonly\n                                statusText\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToLibrary\n                            \n                            \n                                createObjectUrlForEmbeddedPicture\n                            \n                            \n                                    Async\n                                createTrackFromFile\n                            \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToLibrary\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToLibrary(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AsyncGenerator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createObjectUrlForEmbeddedPicture\n                        \n                    \n                \n            \n            \n                \ncreateObjectUrlForEmbeddedPicture(meta: TrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meta\n                                            \n                                                            TrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TrackMetadata\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTrackFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTrackFromFile(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.filesToProcess() > 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processingFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processionPercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        statusText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata, type Track, TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\nimport { FileData } from '../file-loader-service/file-loader.helpers';\nimport { md5 } from 'hash-wasm';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private id3TagsService = inject(Id3TagsService);\n  private lastfmMetadataService = inject(LastfmMetadataService);\n  private musicbrainzService = inject(MusicbrainzService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  private readonly totalFilesToProcess = signal(0);\n  private readonly filesToProcess = signal(0);\n  readonly processionPercent = computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  });\n\n  readonly processing = computed(() => {\n    return this.filesToProcess() > 0;\n  });\n\n  readonly processingFile = signal('');\n\n  readonly statusText = computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  });\n\n  async *addFilesToLibrary(...fileDatas: FileData[]): AsyncGenerator {\n    if (fileDatas?.length) {\n      this.totalFilesToProcess.set(fileDatas.length);\n      this.filesToProcess.set(fileDatas.length);\n      for (const fileData of fileDatas.values()) {\n        this.processingFile.set(fileData.file.name);\n        const track = await this.createTrackFromFile(fileData);\n        if (track) {\n          yield track; // Yield each track as soon as it's ready\n        }\n        this.filesToProcess.update((files) => files - 1);\n      }\n      this.totalFilesToProcess.set(0);\n    }\n  }\n\n  async createTrackFromFile(fileData: FileData): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.getMetadata(fileData);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: fileData.file,\n      fileHandle: fileData.fileHandle,\n      metadata: metadata\n    };\n  }\n\n  async getMetadata(fileData: FileData): Promise {\n    this.processingFile.set(fileData.file.name + ' - Generating hash...');\n    const hash = await generateFileHash(fileData.file);\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('library', hash));\n\n      if (metadataCache) {\n        if (\n          metadataCache.embeddedPicture &&\n          this.useTagEmbeddedPicture() &&\n          (metadataCache.coverUrl.thumbUrl === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())\n        ) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumbUrl: url, originalUrl: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    this.processingFile.set(fileData.file.name + ' - Reading tags...');\n    const tags = await this.id3TagsService.extractTags(fileData.file);\n\n    if (!tags) {\n      // if no tags\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverArtUrls | undefined;\n\n    if (this.useWebMetainfos() && tags.artist && tags.album) {\n      this.processingFile.set(fileData.file.name + ' - Getting cover pictures...');\n      coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n      if (!coverUrls) {\n        coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n    this.processingFile.set(fileData.file.name + ' - Reading colors...');\n    if (coverUrls?.originalUrl) {\n      palette = await extractColorsWithNodeVibrant(coverUrls.originalUrl);\n    } else if (tags.picture) {\n      const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n      palette = await extractColorsWithNodeVibrant(objectUrl);\n      URL.revokeObjectURL(objectUrl);\n    }\n\n    const metadata: IndexedDbTrackMetadata = {\n      hash: hash,\n      fileName: fileData.file.name,\n      fileHandle: fileData.fileHandle,\n      coverUrl: coverUrls ?? { thumbUrl: this.PLACEHOLDER_URL, originalUrl: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await this.indexedDBService.add('library', metadata).toPromise();\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (meta.coverUrl.originalUrl === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      if (meta.coverUrl?.originalUrl?.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.originalUrl);\n      }\n      if (meta.coverUrl?.thumbUrl?.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.thumbUrl);\n      }\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumbUrl: url, originalUrl: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nasync function generateFileHash(file: File): Promise {\n  const fileSize = file.size;\n\n  // For very small files, hash the entire content\n  if (fileSize  1024 * 1024) {\n    const middlePos = Math.floor(fileSize / 2) - Math.floor(chunkSize / 2);\n    const middleChunk = await file.slice(middlePos, middlePos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(middleChunk));\n  }\n\n  // For files larger than 8MB, add quarter and three-quarter samples\n  if (fileSize > 8 * 1024 * 1024) {\n    const quarterPos = Math.floor(fileSize * 0.25);\n    const quarterChunk = await file.slice(quarterPos, quarterPos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(quarterChunk));\n\n    const threeQuarterPos = Math.floor(fileSize * 0.75);\n    const threeQuarterChunk = await file.slice(threeQuarterPos, threeQuarterPos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(threeQuarterChunk));\n  }\n\n  // Last chunk - often contains important metadata in audio files\n  const endChunk = await file.slice(Math.max(0, fileSize - chunkSize), fileSize).arrayBuffer();\n  chunks.push(new Uint8Array(endChunk));\n\n  // Combine all chunks into one array\n  const totalLength = chunks.reduce((sum, chunk) => sum + chunk.length, 0);\n  const combined = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const chunk of chunks) {\n    combined.set(chunk, offset);\n    offset += chunk.length;\n  }\n\n  return await md5(combined);\n}\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  try {\n    const palette = await Vibrant.from(url).getPalette();\n    return {\n      vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n      darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n      lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n      muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n      darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n      lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n    };\n  } catch (error) {\n    console.error('Error extracting colors with Vibrant:', error);\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule],\n  templateUrl: './metadata-settings.component.html'\n})\nexport class MetadataSettingsComponent {\n  metadataService = inject(MetadataService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n    this.localStorageService.store('useWebMetainfos', event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n    this.localStorageService.store('useTagsCache', event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('useTagEmbeddedPicture', event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('preferTagEmbeddedPicture', event.checked);\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('library').toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { CoverArtArchiveApi, MusicBrainzApi } from 'musicbrainz-api';\nimport { ensureHttps } from './metadata.helper';\nimport { escapeLuceneQueryString } from '@motabass/helpers';\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private readonly mbApi = new MusicBrainzApi({\n    appName: 'gblaster',\n    appVersion: '1.0.0',\n    appContactInfo: 'markus.mohoritsch@gmx.at'\n  });\n\n  private readonly caApi = new CoverArtArchiveApi();\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${escapeLuceneQueryString(album)} AND artist:${escapeLuceneQueryString(artist)} AND primarytype:Album`;\n\n    try {\n      const data = await this.mbApi.search('release-group', { query });\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      // const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      // const coverData = await firstValueFrom(this.http.get(url));\n      const coverData = await this.caApi.getReleaseGroupCovers(releaseGroupId);\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image;\n\n      // Use large thumbnail or fall back to the full image\n      const original = coverImage.thumbnails.large || coverImage.image;\n\n      return { thumbUrl: ensureHttps(thumb), originalUrl: ensureHttps(original) };\n    } catch {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-player\n            \n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { PlayerService } from './player.service';\nimport { TitleService } from '../services/title.service';\nimport { AudioService } from './audio.service';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  selector: 'mtb-player',\n  imports: [PlaylistComponent, MatButtonModule, MatIconModule, CoverDisplayComponent, MatToolbarModule, MatTooltipModule, MatSliderModule, MatMenuModule],\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class PlayerComponent implements OnInit {\n  private titleService = inject(TitleService);\n  private fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n\n  ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                playTrackByHash\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                removeTrackFromPlaylist\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:51\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \naddTrackToPlaylist(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:215\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrackByHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrackByHash(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:254\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:236\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTrackFromPlaylist\n                        \n                    \n                \n            \n            \n                \nremoveTrackFromPlaylist(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:298\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:302\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:281\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:316\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:335\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n  private audioService = inject(AudioService);\n  private localStorageService = inject(LocalStorageService);\n  private fileLoaderService = inject(FileLoaderService);\n  private metadataService = inject(MetadataService);\n  private themeService = inject(ThemeService);\n  private wakelockService = inject(WakelockService, { optional: true });\n  private mediaSessionService = inject(MediaSessionService, { optional: true });\n\n  private destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  readonly durationSeconds = computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Focus the window first to ensure we're the active window\n        window.focus();\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n\n        const validFiles: FileData[] = [];\n\n        for (const fileHandle of launchParameters.files) {\n          try {\n            const file = await fileHandle.getFile();\n            if (ALLOWED_MIMETYPES.includes(file.type)) {\n              validFiles.push({ file, fileHandle });\n            }\n          } catch (error) {\n            console.error('Error processing file:', error);\n          }\n        }\n\n        if (validFiles.length > 0) {\n          await this.addFilesToPlaylist(...validFiles);\n          // If you want to play the first file immediately\n          // if (validFiles.length && this.currentPlaylist().length) {\n          //   const newTrack = this.currentPlaylist()[this.currentPlaylist().length - validFiles.length];\n          //   await this.playTrack(newTrack);\n          // }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.originalUrl ? [{ src: track.metadata.coverUrl.originalUrl, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const fileDatas: FileData[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...fileDatas);\n  }\n\n  addTrackToPlaylist(song: Track) {\n    if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.hash === song.metadata?.hash)) {\n      this.currentPlaylist.update((playlist) => [...playlist, song]);\n    }\n  }\n\n  removeTrackFromPlaylist(track: Track) {\n    // If the removed track is currently loaded, stop playback\n    if (this.currentlyLoadedTrack() === track) {\n      void this.stop();\n    }\n\n    // If the removed track is currently selected, deselect it\n    if (this.selectedTrack() === track) {\n      this.selectedTrack.set(undefined);\n    }\n    // Update the playlist by filtering out the specified track\n    this.currentPlaylist.update((playlist) => playlist.filter((t) => t !== track));\n  }\n\n  async addFilesToPlaylist(...fileDatas: FileData[]) {\n    for await (const track of this.metadataService.addFilesToLibrary(...fileDatas)) {\n      this.addTrackToPlaylist(track);\n    }\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async playTrackByHash(hash: string) {\n    const playlist = this.currentPlaylist();\n\n    const track = playlist.find((playlistTrack) => playlistTrack.metadata?.hash === hash);\n    if (track) {\n      await this.playTrack(track);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // eslint-disable-next-line sonarjs/pseudo-random\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerToolbarComponent.html":{"url":"components/PlayerToolbarComponent.html","title":"component - PlayerToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-toolbar\n            \n\n\n            \n                imports\n                \n                            MatIcon\n                            MatIconButton\n                            MatMenu\n                            MatSlider\n                            MatSliderThumb\n                            MatToolbar\n                            MatTooltip\n                            TimePipe\n                            MatMenuTrigger\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-toolbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player-toolbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                fileLoaderService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadLastDirectory\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showFilePickerAndLoadFiles\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLastDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLastDirectory()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showFilePickerAndLoadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    showFilePickerAndLoadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileLoaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FileLoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\n\nimport { MatMenu, MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { TimePipe } from '../time.pipe';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { PlayerService } from '../player.service';\nimport { AudioService } from '../audio.service';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { GamepadAxes, GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { HotkeysService } from '../../services/hotkeys/hotkeys.service';\nimport { FileLoaderService } from '../file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Component({\n  selector: 'player-toolbar',\n  imports: [MatIcon, MatIconButton, MatMenu, MatSlider, MatSliderThumb, MatToolbar, MatTooltip, TimePipe, MatMenuTrigger, MatMenuModule],\n  templateUrl: './player-toolbar.component.html',\n  styleUrl: './player-toolbar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayerToolbarComponent implements OnInit, OnDestroy {\n  private gamepadService = inject(GamepadService, { optional: true });\n  private hotkeysService = inject(HotkeysService, { optional: true });\n  fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  metadataService = inject(MetadataService);\n\n  readonly volumeIcon = computed(() => this.getVolumeIconForLevel(this.audioService.volume()));\n\n  ngOnInit() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showFilePickerAndLoadFiles());\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n\n  onSliderPositionChanged(value: number) {\n    if (value !== null) {\n      this.playerService.setSeekPosition(value);\n    }\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol \n    \n\n    \n        \n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n    \n      \n      Load folder/files...\n    \n    @if (fileLoaderService.currentFolderHandle()) {\n      \n        \n        Load last directory\n      \n    }\n  \n\n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (audioService.isPlaying()) {          } @else {          }                                                    Load folder/files...        @if (fileLoaderService.currentFolderHandle()) {                      Load last directory          }      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            FormsModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                menuTrigger\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                scrollViewport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                onContextMenu\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContextMenu\n                        \n                    \n                \n            \n            \n                \nonContextMenu(event: MouseEvent, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        menuTrigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('menuTrigger')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scrollViewport\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('scrollViewport')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'mtb-playlist',\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    FormsModule,\n    MatMenuModule\n  ],\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaylistComponent {\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  private destroRef = inject(DestroyRef);\n\n  readonly menuTrigger = viewChild('menuTrigger');\n\n  readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 140;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled()) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.playerService.currentPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.playerService.currentPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.playerService.currentPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.hash === currentTrack.metadata?.hash);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (\n        (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash\n      );\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByHash(index: number, song: Track): string {\n    return song.metadata.hash;\n  }\n\n  onContextMenu(event: MouseEvent, song: Track): void {\n    event.preventDefault();\n    const trigger = this.menuTrigger();\n    if (!trigger) return;\n    trigger.menuData = { song: song };\n\n    // Open with position\n    trigger.openMenu();\n\n    // set position\n    if (trigger.menu) {\n      // Forcefully reset the menu position after it's opened\n      setTimeout(() => {\n        const overlayRef = document.querySelector('.cdk-overlay-pane:last-child') as HTMLElement;\n        if (overlayRef) {\n          overlayRef.style.position = 'absolute';\n          overlayRef.style.left = `${event.clientX}px`;\n          overlayRef.style.top = `${event.clientY}px`;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying) {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n\n\n\n  \n\n\n\n\n  \n    \n      \n      Remove from playlist\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (song && song.metadata && song.metadata.coverUrl) {                  }        @let songPlaying = isPlaying(song)();        @if (songPlaying) {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }                          Remove from playlist      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverArtUrls.html":{"url":"interfaces/RemoteCoverArtUrls.html","title":"interface - RemoteCoverArtUrls","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverArtUrls\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            originalUrl\n                                        \n                                \n                                \n                                        \n                                            thumbUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-settings\n            \n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  selector: 'mtb-settings',\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent],\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss'\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                                FileDropOverlayComponent\n                                PlayerToolbarComponent\n                            MatProgressBar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                    Readonly\n                                isHandset\n                            \n                            \n                                loaderService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                sidenav\n                            \n                            \n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                    Async\n                                onFileHandlesDropped\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFileHandlesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFileHandlesDropped(files: FileSystemFileHandle[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        FileSystemFileHandle[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('drawer')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { PlayerService } from '../player/player.service';\nimport { ALLOWED_MIMETYPES, FileData } from '../player/file-loader-service/file-loader.helpers';\nimport { PlayerToolbarComponent } from '../player/player-toolbar/player-toolbar.component';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../player/metadata-service/metadata.service';\n\n@Component({\n  selector: 'mtb-shell',\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    RouterOutlet,\n    FileDropOverlayComponent,\n    PlayerToolbarComponent,\n    MatProgressBar\n  ],\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss'\n})\nexport class ShellComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  private router = inject(Router);\n  titleService = inject(TitleService);\n  loaderService = inject(LoaderService);\n  playerService = inject(PlayerService);\n  metadataService = inject(MetadataService);\n\n  readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  private isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files.map((file) => ({ file })));\n  }\n\n  async onFileHandlesDropped(files: FileSystemFileHandle[]) {\n    const fileData: FileData[] = [];\n    for (const fileHandle of files) {\n      const file = await fileHandle.getFile();\n      fileData.push({ file, fileHandle });\n    }\n\n    return this.playerService.addFilesToPlaylist(...fileData);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n\n      @if (loaderService.isLoading()) {\n        \n      }\n\n      \n\n      @let currentTrack = playerService.currentlyLoadedTrack();\n      {{ currentTrack?.metadata?.artist ? `${currentTrack?.metadata?.artist} - ` : '' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n    \n\n    @if (metadataService.processing()) {\n      \n      {{ metadataService.statusText() }}\n    }\n    \n\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }            @let currentTrack = playerService.currentlyLoadedTrack();      {{ currentTrack?.metadata?.artist ? `${currentTrack?.metadata?.artist} - ` : \\'\\' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}        @if (metadataService.processing()) {            {{ metadataService.statusText() }}    }              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                buttonTooltip\n                            \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        buttonTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  imports: [MatCardModule, MatButtonModule],\n  templateUrl: './storage-settings.component.html'\n})\nexport class StorageSettingsComponent {\n  private localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThemeColor.html":{"url":"interfaces/ThemeColor.html","title":"interface - ThemeColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ThemeColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ThemeColor {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                accentColor\n                            \n                            \n                                    Readonly\n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                    Readonly\n                                primaryColor\n                            \n                            \n                                    Readonly\n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setAccentColor\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                            \n                                setPrimaryColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:48\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccentColor\n                        \n                    \n                \n            \n            \n                \nsetAccentColor(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPrimaryColor\n                        \n                    \n                \n            \n            \n                \nsetPrimaryColor(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        accentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.computeColors(this.accentColor()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.computeColors(this.primaryColor()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:47\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, effect, inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { Colord, colord } from 'colord';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { ThemeColor } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\ninterface ColorVariant {\n  suffix: string;\n  lightenFactor?: number;\n  darkenFactor?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly COLOR_VARIANTS: ColorVariant[] = [\n    { suffix: '0', lightenFactor: 0.55 },\n    { suffix: '10', lightenFactor: 0.45 },\n    { suffix: '20', lightenFactor: 0.35 },\n    { suffix: '25', lightenFactor: 0.3 },\n    { suffix: '30', lightenFactor: 0.25 },\n    { suffix: '35', lightenFactor: 0.2 },\n    { suffix: '40', lightenFactor: 0.15 },\n    { suffix: '50' },\n    { suffix: '60', darkenFactor: 0.05 },\n    { suffix: '70', darkenFactor: 0.1 },\n    { suffix: '80', darkenFactor: 0.15 },\n    { suffix: '90', darkenFactor: 0.18 },\n    { suffix: '95', darkenFactor: 0.21 },\n    { suffix: '98', darkenFactor: 0.24 },\n    { suffix: '99', darkenFactor: 0.27 },\n    { suffix: '100', darkenFactor: 0.3 }\n  ];\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  readonly primaryColor = signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR);\n\n  readonly accentColor = signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR);\n\n  readonly primaryColorPalette = computed(() => this.computeColors(this.primaryColor()));\n  readonly accentColorPalette = computed(() => this.computeColors(this.accentColor()));\n\n  constructor() {\n    // Automatische Updates bei Änderungen\n    effect(() => {\n      this.updateCSSProperties();\n      this.updateMetaThemeColor();\n    });\n\n    effect(() => {\n      this.localStorageService.store('darkMode', this.darkMode());\n    });\n\n    effect(() => {\n      this.localStorageService.store('primaryColor', this.primaryColor());\n    });\n\n    effect(() => {\n      this.localStorageService.store('accentColor', this.accentColor());\n    });\n  }\n\n  initializeTheme() {\n    this.updateCSSProperties();\n    this.updateMetaThemeColor();\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n  }\n\n  setColors(colors: ColorConfig) {\n    this.primaryColor.set(colors.mainColor || FALLBACK_PRIMARY_COLOR);\n    this.accentColor.set(colors.peakColor || FALLBACK_ACCENT_COLOR);\n  }\n\n  setPrimaryColor(color: string) {\n    this.primaryColor.set(color || FALLBACK_PRIMARY_COLOR);\n  }\n\n  setAccentColor(color: string) {\n    this.accentColor.set(color || FALLBACK_ACCENT_COLOR);\n  }\n\n  private updateCSSProperties() {\n    const root = document.documentElement.style;\n\n    // App color scheme\n    root.setProperty('--app-color-scheme', this.darkMode() ? 'dark' : 'light');\n\n    // Primary colors\n    this.primaryColorPalette().forEach((color) => {\n      root.setProperty(`--theme-primary-${color.name}`, color.hex);\n    });\n\n    // Accent colors\n    this.accentColorPalette().forEach((color) => {\n      root.setProperty(`--theme-accent-${color.name}`, color.hex);\n    });\n  }\n\n  private updateMetaThemeColor() {\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor() });\n  }\n\n  private computeColors(hex: string): ThemeColor[] {\n    const baseColor = colord(hex);\n\n    return this.COLOR_VARIANTS.map((variant) => {\n      let color = baseColor;\n\n      if (variant.lightenFactor) {\n        color = baseColor.lighten(variant.lightenFactor);\n      } else if (variant.darkenFactor) {\n        color = baseColor.darken(variant.darkenFactor);\n      }\n\n      return this.getThemeColor(color, variant.suffix);\n    });\n  }\n\n  private getThemeColor(color: Colord, name: string): ThemeColor {\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name,\n      hex: color.toHex(),\n      darkContrast: color.brightness() > lightnessLimit\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  imports: [MatCardModule, MatCheckboxModule],\n  templateUrl: './theme-settings.component.html'\n})\nexport class ThemeSettingsComponent {\n  themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverArtUrls\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverArtUrls\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private swUpdate = inject(SwUpdate);\n  private dialog = inject(MatDialog);\n  private destroRef = inject(DestroyRef);\n\n  constructor() {\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroRef)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alpha\n                            \n                            \n                                analyser\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Readonly\n                                gap\n                            \n                            \n                                    Readonly\n                                lineThickness\n                            \n                            \n                                localStorageService\n                            \n                            \n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Readonly\n                                smoothing\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LocalStorageService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule],\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  private gamepadService = inject(GamepadService, { optional: true });\n  audioService = inject(AudioService);\n  playerService = inject(PlayerService);\n  visualsService = inject(VisualsService);\n  localStorageService = inject(LocalStorageService);\n\n  readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                analyser\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                mode\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({})\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('bars')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ thickness: 2 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:91\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]'\n})\nexport class VisualsDirective implements OnDestroy {\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i  {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                wakelock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        wakelock\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WakeLockSentinel\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  wakelock?: WakeLockSentinel;\n\n  constructor() {}\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : 20.1.3\n        \n            @angular/common : 20.1.3\n        \n            @angular/compiler : 20.1.3\n        \n            @angular/core : 20.1.3\n        \n            @angular/forms : 20.1.3\n        \n            @angular/material : 20.1.3\n        \n            @angular/platform-browser : 20.1.3\n        \n            @angular/router : 20.1.3\n        \n            @angular/service-worker : 20.1.3\n        \n            colord : ^2.9.3\n        \n            date-fns : 4.1.0\n        \n            hash-wasm : 4.12.0\n        \n            music-metadata : 11.7.1\n        \n            musicbrainz-api : 0.25.1\n        \n            ngx-date-fns : 12.0.1\n        \n            ngx-indexed-db : 21.0.0\n        \n            ngx-webstorage : 20.0.0\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            escapeLuceneQueryString   (libs/.../lucene-escape.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../time.helper.ts)\n                        \n                        \n                            formatWithLeadingZero   (libs/.../time.helper.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/helpers/src/lib/lucene-escape.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        escapeLuceneQueryString\n                        \n                    \n                \n            \n            \n                \nescapeLuceneQueryString(queryString: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/time.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatWithLeadingZero\n                        \n                    \n                \n            \n            \n                \nformatWithLeadingZero(value: number, useLeadingZero: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                useLeadingZero\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nGraph\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    37 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.3.23\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : CC0-1.0\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs:\n\nPlaylist management (Sorting, Saving)\nVisuals via UserMediaInput from mic or system\nShare target\nWriting Meta-Tags\nFullscreen/Multiwindow Mode\nLocalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            EqualizerGainValues   (apps/.../audio.service.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/audio.service.ts\n    \n    \n        \n            \n                \n                    \n                    EqualizerGainValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../idexed-db-config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../player.types.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesMenuEntry   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZonelessChangeDetection(),\n    provideBrowserGlobalErrorListeners(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/idexed-db-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'gblasterDB',\n  version: 3,\n  objectStoresMeta: [\n    {\n      store: 'library',\n      storeConfig: { keyPath: 'hash', autoIncrement: false },\n      storeSchema: [\n        { name: 'hash', keypath: 'hash', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'directoryHandles',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/player.types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesMenuEntry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files_menu')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
