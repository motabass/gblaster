var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.159,1,2.787]],["body/interfaces/ActionCache.html",[0,0.279,1,4.166,2,1.084,3,0.229,4,0.229,5,0.169,6,3.22,7,0.393,8,0.65,9,5.188,10,1.717,11,0.645,12,0.011,13,0.41,14,4.884,15,3.662,16,2.102,17,4.907,18,2.102,19,0.689,20,3.22,21,1.148,22,1.841,23,4.619,24,3.22,25,2.719,26,3.421,27,3.421,28,3.22,29,3.048,30,3.421,31,3.22,32,3.22,33,3.22,34,3.048,35,3.048,36,4.738,37,2.898,38,3.421,39,1.817,40,3.421,41,2.628,42,3.421,43,3.151,44,3.421,45,3.577,46,3.421,47,3.22,48,3.421,49,3.22,50,3.421,51,3.421,52,3.421,53,3.421,54,3.421,55,3.048,56,3.421,57,3.421,58,3.421,59,2.765,60,3.421,61,3.22,62,3.421,63,3.22,64,3.421,65,3.421,66,3.421,67,3.421,68,3.421,69,3.421,70,3.048,71,3.421,72,3.421,73,3.421,74,3.421,75,0.008,76,0.008]],["title/interfaces/Album.html",[0,0.159,77,1.593]],["body/interfaces/Album.html",[0,0.098,2,0.579,3,0.122,4,0.122,5,0.209,7,0.131,8,0.416,10,1.262,11,0.415,12,0.011,13,0.202,19,1.076,21,0.614,39,1.162,75,0.005,76,0.005,77,2.714,78,2.333,79,3.574,80,1.26,81,3.261,82,2.167,83,0.726,84,0.923,85,3.126,86,0.547,87,2.664,88,1.68,89,0.368,90,3.76,91,3.267,92,1.477,93,2.664,94,1.72,95,3.279,96,3.613,97,3.613,98,3.029,99,1.828,100,2.287,101,1.72,102,3.279,103,1.354,104,3.279,105,1.206,106,3.279,107,3.279,108,3.279,109,2.118,110,3.279,111,1.956,112,1.354,113,1.006,114,1.72,115,3.279,116,1.956,117,3.613,118,3.613,119,3.613,120,3.613,121,3.613,122,2.333,123,3.613,124,1.956,125,1.956,126,3.029,127,2.333,128,1.016,129,0.984,130,2.333,131,1.206,132,2.333,133,0.356,134,1.016,135,1.05,136,1.134,137,1.466,138,1.629,139,3.306,140,2.333,141,3.613,142,2.333,143,1.85,144,3.613,145,2.333,146,2.333,147,1.701,148,2.333,149,2.333,150,2.333,151,2.333,152,2.333,153,2.333,154,3.26,155,2.333,156,2.118,157,2.333,158,5.941,159,4.979,160,2.333,161,2.333,162,2.333,163,3.136,164,1.625,165,2.333,166,4.013,167,2.333,168,2.333,169,3.613,170,4.979,171,3.613,172,4.422,173,2.287,174,2.118,175,3.279,176,5.386,177,2.333,178,1.956,179,3.613,180,2.333,181,2.333,182,2.333,183,2.333,184,2.333,185,2.333,186,2.333,187,5.941,188,2.333,189,2.333,190,2.664,191,1.68,192,2.333,193,4.422,194,2.333,195,1.828,196,4.422,197,2.333,198,2.333,199,4.422,200,2.333,201,2.333,202,1.629,203,3.613,204,2.333,205,2.649,206,3.613,207,2.333,208,3.613,209,2.333,210,2.333,211,2.333,212,2.333,213,2.333,214,2.333,215,2.118,216,1.956,217,1.828,218,2.333,219,2.333,220,2.333,221,1.72,222,1.196,223,2.333,224,2.333,225,2.333,226,2.333,227,3.279,228,2.333,229,2.333,230,2.333,231,2.333,232,2.2,233,2.118,234,2.743,235,2.118,236,2.333,237,2.333,238,2.333,239,4.422,240,2.333,241,4.979,242,2.333,243,2.333,244,3.613,245,3.613,246,2.118,247,2.333,248,2.333,249,2.333,250,2.333,251,2.333,252,2.333,253,2.333,254,2.333,255,3.613,256,3.613,257,2.333,258,1.301,259,2.333,260,2.333,261,2.333,262,2.118,263,2.333,264,2.333,265,2.118,266,2.333]],["title/interfaces/AnalyserConfig.html",[0,0.159,267,2.392]],["body/interfaces/AnalyserConfig.html",[0,0.302,2,1.024,3,0.216,4,0.216,5,0.16,7,0.231,8,0.626,10,1.805,11,0.663,12,0.011,13,0.413,18,2.932,19,1.023,22,1.738,25,2.619,75,0.008,76,0.008,267,3.445,268,2.61,269,4.04,270,4.299,271,4.299,272,4.299,273,2.497,274,2.394,275,2.497,276,2.497,277,2.497,278,2.394,279,2.497,280,2.497,281,2.497,282,2.61,283,2.61,284,2.394,285,3.295,286,3.159,287,3.159,288,3.159,289,2.394,290,3.159,291,2.497,292,2.713,293,2.713,294,3.159,295,2.497,296,2.394,297,2.497,298,2.61,299,2.736,300,2.394,301,3.536,302,2.497,303,2.299,304,3.856,305,2.919,306,2.497,307,3.159,308,3.612,309,3.612,310,2.394,311,3.159,312,3.612]],["title/components/AppComponent.html",[84,0.966,313,1.7]],["body/components/AppComponent.html",[3,0.211,4,0.211,5,0.208,12,0.011,13,0.225,75,0.008,76,0.008,80,1.575,83,0.731,84,1.538,86,0.943,87,4.438,89,0.635,103,2.336,113,1.491,128,2.331,129,2.258,133,0.615,134,1.752,135,2.409,136,1.461,137,1.461,221,2.967,222,1.773,313,2.886,314,1.995,315,1.872,316,1.872,317,1.872,318,4.589,319,3.738,320,3.738,321,3.32,322,3.345,323,1.825,324,2.886,325,6.108,326,3,327,0.916,328,4.589,329,2.809,330,4.589,331,4.589,332,2.67,333,2.244,334,3.554,335,3.152,336,4.86,337,4.589,338,4.589,339,4.589,340,4.589,341,4.589,342,4.589,343,4.589,344,3.152,345,4.589,346,4.589,347,4.589,348,4.589,349,4.589,350,4.589,351,4.589,352,1.872,353,2.491,354,2.121,355,1.644,356,2.984,357,1.872,358,1.872,359,1.81,360,1.644,361,1.872,362,1.81,363,1.81,364,1.752,365,1.872,366,1.593,367,1.81,368,2.799,369,1.81,370,1.81,371,1.696,372,1.872,373,1.81,374,1.872,375,1.696,376,1.81,377,1.872,378,1.81,379,1.872,380,1.81,381,1.752,382,1.872,383,1.81,384,1.872,385,1.81,386,1.696,387,1.81,388,1.872,389,1.81,390,1.752,391,1.81,392,1.872]],["title/injectables/AudioService.html",[393,0.765,394,2.392]],["body/injectables/AudioService.html",[3,0.103,4,0.103,5,0.193,7,0.11,8,0.364,10,1.519,11,0.576,12,0.011,13,0.177,16,0.949,21,1.677,22,1.671,39,2.259,41,1.472,75,0.005,76,0.005,80,1.321,83,0.483,85,1.837,86,0.462,88,1.843,89,0.311,92,1.248,133,0.301,136,1.36,137,1.676,143,1.63,147,1.159,164,2.04,222,2.144,232,1.619,234,0.859,246,1.79,300,2.633,310,2.301,323,0.672,326,1.975,327,1.637,354,0.781,393,0.64,394,2.003,395,0.859,396,1.972,397,4.52,398,3.597,399,3.323,400,5.301,401,3.597,402,4.52,403,4.52,404,3.963,405,4.52,406,4.536,407,0.786,408,5.173,409,3.609,410,3.609,411,3.803,412,4.536,413,5.173,414,3.609,415,3.609,416,3.609,417,3.609,418,3.609,419,3.609,420,3.609,421,2.872,422,4.52,423,2.249,424,2.249,425,1.585,426,3.609,427,4.507,428,2.249,429,2.097,430,1.4,431,4.116,432,3.609,433,4.371,434,2.249,435,4.52,436,2.249,437,2.249,438,2.249,439,3.609,440,2.249,441,3.609,442,4.966,443,2.249,444,1.96,445,2.479,446,3.143,447,2.249,448,2.249,449,3.609,450,2.249,451,3.609,452,4.966,453,2.249,454,3.609,455,2.249,456,3.609,457,3.609,458,2.249,459,2.249,460,3.609,461,2.249,462,4.536,463,2.249,464,2.249,465,3.609,466,2.333,467,2.333,468,2.333,469,2.333,470,2.333,471,2.003,472,2.333,473,2.333,474,2.333,475,2.333,476,2.249,477,4.445,478,2.249,479,2.249,480,5.173,481,2.249,482,2.249,483,2.249,484,3.609,485,2.249,486,3.609,487,2.872,488,2.249,489,2.249,490,2.249,491,2.003,492,1.058,493,1.194,494,2.209,495,2.872,496,0.887,497,3.323,498,0.692,499,1.248,500,2.249,501,4.445,502,2.249,503,2.249,504,2.249,505,2.249,506,5.173,507,2.249,508,2.249,509,2.249,510,3.609,511,2.249,512,2.249,513,2.249,514,2.249,515,2.872,516,1.972,517,3.165,518,2.249,519,2.249,520,2.479,521,3.609,522,2.249,523,2.249,524,2.249,525,2.249,526,1.79,527,2.249,528,2.249,529,2.249,530,3.609,531,2.249,532,1.972,533,1.377,534,1.972,535,1.545,536,2.249,537,1.654,538,1.972,539,2.249,540,1.972,541,3.609,542,3.609,543,2.249,544,2.872,545,3.609,546,3.609,547,2.249,548,2.249,549,2.249,550,2.249,551,2.249,552,2.249,553,2.249,554,2.249,555,1.545,556,1.377,557,1.79,558,2.249,559,2.249,560,2.249,561,2.249,562,2.249,563,2.249,564,3.609,565,2.249,566,2.249,567,2.249,568,2.249,569,2.249,570,1.293,571,2.249,572,2.872,573,2.249,574,2.249,575,1.79,576,2.249,577,1.654,578,1.1,579,2.249,580,1.545,581,2.249,582,2.249,583,2.249,584,2.249,585,2.249,586,2.249,587,2.249,588,2.249,589,2.249,590,2.249,591,2.249,592,2.249,593,2.249,594,2.249,595,2.249,596,2.249,597,2.249,598,2.249,599,3.609,600,2.249,601,1.972,602,2.249,603,2.249,604,1.972,605,1.545,606,1.972,607,2.249,608,2.249,609,2.249,610,3.609,611,2.249,612,2.249,613,2.249,614,2.249,615,2.249,616,2.249,617,3.609,618,2.249,619,2.249,620,2.249,621,2.249,622,2.249,623,2.249,624,2.249,625,2.249,626,2.249,627,2.249,628,3.609,629,2.249,630,2.249,631,2.249,632,2.249,633,2.249]],["title/interfaces/AxisGamepadAction.html",[0,0.159,24,2.787]],["body/interfaces/AxisGamepadAction.html",[0,0.279,1,3.209,2,1.081,3,0.228,4,0.228,5,0.169,6,3.209,7,0.35,8,0.649,9,3.409,10,1.606,11,0.644,12,0.011,13,0.41,14,5.341,15,3.649,16,2.094,17,5.182,18,2.094,19,0.687,20,3.209,21,1.144,22,1.835,23,4.611,24,4.157,25,3.01,26,5.182,27,5.182,28,3.209,29,3.038,30,3.409,31,3.209,32,3.209,33,3.209,34,3.038,35,3.038,36,4.727,37,2.888,38,3.409,39,1.813,40,3.409,41,2.622,42,3.409,43,3.144,44,3.409,45,3.569,46,3.409,47,3.209,48,3.409,49,3.209,50,3.409,51,3.409,52,3.409,53,3.409,54,3.409,55,3.038,56,3.409,57,3.409,58,3.409,59,2.755,60,3.409,61,3.209,62,3.409,63,3.209,64,3.409,65,3.409,66,3.409,67,3.409,68,3.409,69,3.409,70,3.038,71,3.409,72,3.409,73,3.409,74,3.409,75,0.008,76,0.008]],["title/pipes/BandPipe.html",[112,2.194,634,3.78]],["body/pipes/BandPipe.html",[3,0.266,4,0.266,5,0.197,11,0.477,12,0.011,13,0.284,19,0.98,39,1.631,41,2.359,75,0.009,76,0.009,80,1.484,83,0.661,89,0.801,92,3.212,112,3.605,113,1.413,133,0.775,135,2.282,143,1.296,147,1.587,327,1.155,407,1.26,425,1.224,429,1.781,430,1.189,433,4.881,444,2.062,471,3.931,497,5.207,634,6.21,635,4.254,636,5.786,637,5.636,638,2.703,639,4.254,640,5.636,641,5.786,642,5.636,643,7.082,644,5.786,645,5.786,646,5.786]],["title/interfaces/BarsVisualizerOptions.html",[0,0.159,307,2.194]],["body/interfaces/BarsVisualizerOptions.html",[0,0.299,2,0.977,3,0.206,4,0.206,5,0.153,7,0.22,8,0.607,10,1.813,11,0.681,12,0.011,13,0.409,18,3.285,19,1.004,22,1.659,25,2.865,75,0.008,76,0.008,267,2.491,268,2.491,269,3.888,270,2.612,271,2.612,272,2.612,273,2.383,274,2.285,275,2.383,276,2.383,277,2.383,278,2.285,279,2.383,280,2.383,281,2.383,282,2.491,283,2.491,284,2.285,285,4.016,286,3.85,287,3.85,288,3.85,289,2.285,290,3.063,291,2.383,292,2.63,293,2.63,294,3.063,295,2.383,296,2.285,297,2.383,298,2.491,299,2.612,300,2.285,301,3.455,302,2.383,303,2.194,304,4.026,305,2.83,306,2.383,307,3.455,308,3.952,309,3.806,310,3.692,311,3.063,312,3.546]],["title/interfaces/BaseVisualizerOptions.html",[0,0.159,304,2.392]],["body/interfaces/BaseVisualizerOptions.html",[0,0.301,2,1.012,3,0.214,4,0.214,5,0.158,7,0.228,8,0.622,10,1.797,11,0.671,12,0.011,13,0.412,18,3.318,19,1.127,22,1.718,25,2.599,75,0.008,76,0.008,267,2.58,268,2.58,269,3.596,270,2.705,271,2.705,272,2.705,273,2.468,274,2.366,275,2.468,276,2.468,277,2.468,278,2.366,279,2.468,280,2.468,281,2.468,282,2.58,283,2.58,284,2.366,285,3.271,286,3.135,287,3.135,288,3.135,289,2.366,290,3.135,291,2.468,292,3.344,293,3.344,294,3.895,295,2.468,296,2.366,297,2.468,298,2.58,299,2.705,300,2.366,301,3.516,302,2.468,303,2.273,304,4.083,305,3.46,306,3.905,307,3.135,308,3.596,309,3.596,310,2.366,311,3.135,312,3.596]],["title/pipes/BitratePipe.html",[112,2.194,647,3.43]],["body/pipes/BitratePipe.html",[3,0.273,4,0.273,5,0.202,10,1.591,11,0.49,12,0.011,13,0.292,19,0.996,75,0.009,76,0.009,80,1.501,83,0.555,89,0.822,112,3.664,113,1.451,133,0.796,135,2.344,205,3.158,327,1.186,407,1.294,425,1.257,429,1.829,430,1.221,444,2.002,635,4.368,637,5.728,638,2.747,639,4.368,640,5.728,642,5.728,647,5.728,648,6.311,649,5.942,650,6.311,651,4.926,652,5.942]],["title/interfaces/ButtonGamepadAction.html",[0,0.159,28,2.787]],["body/interfaces/ButtonGamepadAction.html",[0,0.28,1,3.248,2,1.094,3,0.231,4,0.231,5,0.171,6,3.248,7,0.352,8,0.654,9,3.451,10,1.612,11,0.624,12,0.011,13,0.411,14,5.194,15,3.694,16,2.12,17,5.206,18,2.12,19,0.695,20,3.248,21,1.159,22,1.857,23,4.638,24,3.248,25,3.027,26,3.451,27,3.451,28,4.19,29,4.639,30,3.451,31,3.248,32,3.248,33,3.248,34,3.075,35,3.075,36,4.765,37,2.923,38,3.451,39,1.827,40,3.451,41,2.643,42,3.451,43,3.168,44,3.451,45,3.597,46,3.451,47,3.248,48,3.451,49,3.248,50,3.451,51,3.451,52,3.451,53,3.451,54,3.451,55,3.075,56,3.451,57,3.451,58,3.451,59,2.789,60,3.451,61,3.248,62,3.451,63,3.248,64,3.451,65,3.451,66,3.451,67,3.451,68,3.451,69,3.451,70,3.075,71,3.451,72,3.451,73,3.451,74,3.451,75,0.008,76,0.008]],["title/interfaces/Chainable.html",[0,0.159,653,3.78]],["body/interfaces/Chainable.html",[0,0.189,2,1.111,3,0.235,4,0.235,5,0.223,7,0.251,12,0.011,75,0.008,76,0.008,83,0.611,222,1.9,327,1.019,354,1.772,407,1.426,425,1.08,430,1.049,495,5.21,520,3.506,534,5.741,653,5.741,654,5.105,655,6.686,656,5.105,657,5.105,658,4.476,659,4.476,660,5.105,661,4.476,662,5.105,663,5.105,664,5.105,665,6.548,666,7.625,667,5.741,668,5.741,669,5.741,670,5.105,671,5.105,672,5.105,673,5.105,674,4.476,675,5.105,676,5.105,677,5.105,678,5.105,679,7.625,680,5.105,681,5.105,682,3.124,683,5.105,684,5.105,685,5.105,686,5.105,687,6.548,688,5.105,689,6.548,690,6.548,691,5.105,692,5.105,693,4.476,694,5.105,695,6.548,696,4.673,697,5.105,698,5.105,699,5.105,700,5.105,701,2.834]],["title/interfaces/ColorConfig.html",[0,0.159,702,2.288]],["body/interfaces/ColorConfig.html",[0,0.283,2,1.13,3,0.239,4,0.239,5,0.248,7,0.255,8,0.668,11,0.653,12,0.011,13,0.404,19,1.194,25,2.189,75,0.008,76,0.008,77,1.918,79,3.019,81,2.755,82,2.525,83,0.68,90,2.88,91,2.891,113,1.873,114,3.354,143,1.482,163,2.116,191,2.116,258,3.234,292,3.352,293,3.352,430,1.576,433,4.049,466,3.354,467,3.354,468,3.354,469,3.354,470,3.354,471,2.88,472,3.354,473,3.354,474,3.354,475,3.354,494,3.175,555,3.563,702,3.512,703,3.354,704,4.049,705,3.175,706,2.189,707,3.367,708,4.277,709,2.88,710,4.049,711,4.709,712,3.175,713,3.563,714,2.44,715,3.563,716,3.354,717,3.814,718,3.563,719,3.814,720,3.814,721,3.354,722,3.019]],["title/interfaces/ColorVariant.html",[0,0.159,723,3.43]],["body/interfaces/ColorVariant.html",[0,0.127,2,0.75,3,0.158,4,0.158,5,0.117,7,0.169,8,0.505,10,1.471,11,0.485,12,0.011,13,0.169,19,1.047,21,0.795,22,1.274,39,0.971,59,1.913,75,0.006,76,0.006,80,1.142,83,0.689,85,2.998,86,0.708,88,1.405,89,0.477,133,0.462,136,1.475,137,1.511,143,1.538,147,1.32,323,1.03,326,1.506,332,2.005,333,1.685,334,2.005,386,2.177,393,0.888,430,1.328,491,2.777,492,1.621,493,1.83,498,1.061,499,1.913,605,2.367,702,2.656,723,4.687,724,3.022,725,7.036,726,6.96,727,7.393,728,3.994,729,3.981,730,5.143,731,4.33,732,3.022,733,4.751,734,4.751,735,2.367,736,3.022,737,3.022,738,3.022,739,3.022,740,3.022,741,2.367,742,3.022,743,3.022,744,4.387,745,3.022,746,2.742,747,3.022,748,2.533,749,3.022,750,4.387,751,2.742,752,2.742,753,3.022,754,3.022,755,3.022,756,3.022,757,3.022,758,3.022,759,3.022,760,3.022,761,3.022,762,3.022,763,3.022,764,3.022,765,2.742,766,3.022,767,3.022,768,3.022,769,5.197,770,4.387,771,3.022,772,3.022,773,3.022,774,3.022,775,3.022,776,3.022,777,3.022,778,3.022,779,3.022,780,3.022,781,3.022,782,3.022,783,3.022,784,4.387,785,4.387,786,3.022,787,5.165,788,3.022,789,4.387,790,3.022,791,3.022,792,3.022,793,3.022,794,3.022,795,3.022,796,3.022,797,3.022,798,3.022,799,3.022,800,3.022,801,3.022,802,3.022,803,2.533,804,2.742,805,3.022,806,3.022,807,4.387,808,3.022,809,4.387,810,4.387,811,3.022,812,2.742,813,3.022,814,3.022,815,3.022,816,3.022,817,2.533,818,3.022,819,4.387,820,3.022,821,3.022,822,3.022,823,3.022,824,3.022,825,3.022,826,3.022,827,3.022,828,3.022,829,4.387,830,3.022,831,3.022,832,1.913,833,3.022,834,2.742,835,3.022]],["title/interfaces/CoverColor.html",[0,0.159,836,2.787]],["body/interfaces/CoverColor.html",[0,0.301,2,1.24,3,0.262,4,0.262,5,0.258,7,0.279,8,0.708,11,0.578,12,0.011,13,0.4,19,1.198,75,0.009,76,0.009,82,2.173,83,0.531,430,1.63,570,2.039,706,2.403,707,2.898,832,4.402,836,5.487,837,2.322,838,3.911,839,5.128,840,3.065,841,2.678,842,3.313,843,3.681,844,3.681,845,3.681,846,3.681,847,3.681,848,2.784,849,2.784,850,3.485,851,3.723,852,3.485,853,2.898]],["title/interfaces/CoverColorPalette.html",[0,0.159,707,2.194]],["body/interfaces/CoverColorPalette.html",[0,0.295,2,1.157,3,0.244,4,0.244,5,0.25,7,0.261,8,0.678,11,0.672,12,0.011,13,0.392,19,1.146,75,0.009,76,0.009,82,2.028,83,0.496,430,1.77,570,1.903,706,2.242,707,3.419,832,2.949,836,5.686,837,2.167,838,3.649,839,3.435,840,2.935,841,2.499,842,4.503,843,5.003,844,5.003,845,5.003,846,5.003,847,5.003,848,2.598,849,2.598,850,3.252,851,3.566,852,3.252,853,2.705]],["title/components/CoverDisplayComponent.html",[84,0.966,359,1.7]],["body/components/CoverDisplayComponent.html",[3,0.155,4,0.155,5,0.168,7,0.166,8,0.498,12,0.011,13,0.166,21,1.342,75,0.006,76,0.006,77,1.822,79,3.961,80,1.459,81,2.617,83,0.664,84,1.305,85,3.465,86,0.694,89,0.467,100,3.553,101,2.183,113,1.204,128,1.882,129,1.822,131,2.234,133,0.452,134,1.289,136,0.674,137,1.557,138,3.017,139,3.906,143,1.105,147,1.105,313,1.332,314,1.61,315,1.377,316,1.377,317,1.377,319,3.017,320,3.017,321,3.21,322,3.183,324,1.332,327,1.162,329,2.067,334,2.868,335,2.319,344,2.319,352,1.377,353,2.01,354,1.712,355,1.209,356,2.61,357,1.377,358,1.377,359,2.525,360,2.831,361,1.377,362,1.332,363,1.332,364,1.289,365,1.377,366,1.172,367,1.332,368,2.374,369,1.332,370,1.332,371,1.248,372,1.377,373,1.332,374,1.377,375,1.248,376,1.332,377,1.377,378,1.332,379,1.377,380,1.332,381,1.289,382,1.377,383,1.332,384,1.377,385,1.332,386,1.248,387,2.525,388,1.377,389,1.332,390,1.289,391,1.332,392,1.377,399,3.624,444,1.505,647,4.633,648,5.613,650,5.613,714,2.319,769,3.386,854,5.613,855,3.377,856,3.386,857,4.28,858,4.93,859,4.93,860,5.822,861,6.402,862,4.93,863,4.93,864,4.93,865,4.93,866,3.377,867,4.93,868,3.377,869,3.377,870,3.377,871,3.377,872,2.961,873,5.094,874,2.687,875,4.323,876,4.323,877,4.323,878,6.402,879,6.402,880,4.93,881,6.402,882,3.386,883,6.402,884,6.402,885,6.402,886,6.402,887,4.93,888,4.93,889,4.93,890,4.323,891,3.377]],["title/interfaces/DirHandleEntry.html",[0,0.159,892,3.43]],["body/interfaces/DirHandleEntry.html",[0,0.164,2,0.968,3,0.205,4,0.205,5,0.27,7,0.218,8,0.604,10,1.389,11,0.493,12,0.011,13,0.218,41,1.813,75,0.008,76,0.008,83,0.704,86,0.914,88,1.813,89,0.615,133,0.596,135,1.754,136,0.888,137,1.194,143,1.74,147,1.689,154,2.875,232,2.588,234,2.964,258,2.174,323,1.329,326,1.943,333,2.174,393,1.061,492,2.092,496,1.754,498,1.369,533,3.66,570,2.142,638,1.697,682,2.722,851,4.003,892,5.376,893,2.722,894,2.263,895,3.539,896,3.269,897,5.283,898,6,899,2.875,900,2.875,901,2.468,902,2.263,903,2.722,904,4.011,905,2.722,906,3.48,907,3.054,908,3.539,909,3.054,910,3.054,911,3.269,912,3.899,913,3.899,914,3.899,915,5.924,916,3.899,917,5.244,918,3.899,919,3.269,920,2.665,921,2.015,922,3.899,923,3.899,924,3.899,925,2.015,926,3.899,927,3.269,928,3.899,929,3.899,930,3.66,931,3.539,932,3.899,933,3.899,934,3.899,935,3.539,936,3.539,937,3.899,938,3.899,939,3.899,940,3.539,941,3.899,942,3.054,943,3.539,944,3.899,945,3.899,946,3.899,947,3.539,948,3.269,949,5.244,950,3.539,951,3.539,952,3.899]],["title/components/EqualizerComponent.html",[84,0.966,362,1.7]],["body/components/EqualizerComponent.html",[3,0.14,4,0.14,5,0.155,7,0.15,8,0.461,10,1.341,11,0.251,12,0.011,13,0.15,19,0.632,21,1.264,39,1.545,41,2.483,43,2.679,45,1.691,49,1.969,59,1.691,63,3.936,75,0.006,76,0.006,80,1.448,83,0.609,84,1.228,86,0.626,88,1.242,89,0.422,91,2.661,92,1.691,113,1.115,128,1.744,129,1.688,131,2.07,133,0.408,134,1.163,136,0.912,137,1.458,139,3.486,143,1.705,147,1.364,222,1.326,296,2.325,313,1.201,314,1.492,315,1.242,316,1.242,317,1.242,319,2.796,320,2.796,321,3.136,322,3.047,324,1.201,326,2.395,327,1.302,329,1.864,334,2.658,335,2.092,344,2.092,352,1.242,353,1.863,354,1.586,355,1.091,356,2.483,357,1.242,358,1.242,359,1.201,360,1.091,361,1.242,362,2.401,363,1.201,364,1.163,365,1.242,366,1.058,367,1.201,368,2.235,369,1.201,370,1.201,371,1.126,372,1.242,373,1.201,374,1.242,375,1.126,376,1.201,377,1.242,378,1.201,379,1.242,380,1.201,381,1.163,382,1.242,383,1.201,384,1.242,385,1.201,386,1.126,387,1.201,388,1.242,389,1.201,390,1.163,391,1.201,392,1.242,394,3.379,407,0.995,425,0.966,429,0.938,430,0.626,444,1.574,452,4.805,471,1.691,494,3.354,497,5.492,544,5.651,728,2.658,741,2.092,748,2.239,856,2.092,901,3.042,953,3.046,954,4.361,955,4.568,956,4.568,957,6.523,958,4.568,959,6.088,960,4.568,961,4.568,962,3.046,963,3.046,964,2.796,965,3.046,966,2.424,967,2.424,968,1.969,969,2.239,970,5.48,971,3.046,972,3.046,973,4.005,974,2.424,975,3.046,976,3.046,977,3.046,978,3.046,979,4.568,980,3.046,981,3.046,982,3.046,983,4.568,984,3.046,985,4.48,986,3.046,987,5.492,988,3.046,989,2.424,990,3.046,991,5.339,992,4.568,993,4.568,994,4.568,995,3.046,996,4.568,997,3.046,998,3.046,999,3.046,1000,4.568,1001,3.046,1002,6.088,1003,3.046,1004,5.48,1005,4.005,1006,3.046,1007,3.046,1008,6.848,1009,6.523,1010,3.046,1011,3.046,1012,5.48,1013,3.046,1014,4.361,1015,4.568,1016,2.239,1017,6.523,1018,3.046,1019,3.046,1020,2.671,1021,3.046,1022,3.046,1023,3.046,1024,3.046,1025,3.046,1026,2.424,1027,3.046,1028,3.046,1029,3.046,1030,3.046,1031,3.046,1032,3.046,1033,3.046,1034,3.046,1035,3.046,1036,3.046,1037,3.046,1038,3.046,1039,3.046,1040,2.424,1041,3.046,1042,3.046]],["title/interfaces/FileData.html",[0,0.159,904,2.392]],["body/interfaces/FileData.html",[0,0.221,2,1.302,3,0.275,4,0.275,5,0.291,7,0.293,8,0.729,11,0.595,12,0.011,13,0.381,75,0.009,76,0.009,143,1.619,258,3.943,430,1.485,710,4.752,893,3.66,894,3.043,903,3.66,904,4.01,1043,3.479,1044,5.243,1045,5.243,1046,5.243,1047,5.243,1048,6.335,1049,5.243,1050,5.243,1051,5.243,1052,5.243,1053,5.243,1054,5.243,1055,5.243,1056,5.243,1057,5.243,1058,5.243,1059,5.243,1060,5.243,1061,5.243,1062,5.243]],["title/components/FileDropOverlayComponent.html",[84,0.966,363,1.7]],["body/components/FileDropOverlayComponent.html",[3,0.131,4,0.131,5,0.278,7,0.214,11,0.551,12,0.011,13,0.14,19,0.396,21,0.659,39,1.227,75,0.006,76,0.006,80,1.475,83,0.267,84,1.181,86,0.587,89,0.396,113,1.063,129,1.609,133,0.383,134,1.091,135,1.717,136,1.465,137,1.052,143,1.497,147,0.64,195,1.963,216,3.876,217,2.989,222,1.53,313,1.127,314,1.422,315,1.165,316,1.165,317,1.165,321,3.139,322,3.08,324,1.127,327,1.334,352,1.165,353,1.775,354,1.511,355,1.024,356,2.587,357,1.165,358,1.165,359,1.127,360,1.024,361,1.165,362,1.127,363,2.325,364,3.272,365,1.165,366,0.992,367,1.127,368,2.15,369,1.127,370,1.127,371,1.056,372,1.165,373,1.127,374,1.165,375,1.056,376,1.127,377,1.165,378,1.127,379,1.165,380,1.127,381,1.091,382,1.165,383,1.127,384,1.165,385,1.127,386,1.609,387,1.127,388,1.165,389,1.127,390,1.091,391,1.127,392,1.165,407,0.948,425,1.115,429,1.622,430,1.083,444,0.739,445,1.963,526,2.274,570,1.888,578,2.577,604,2.506,606,2.506,674,3.817,682,4.09,709,2.416,710,2.664,741,1.963,751,2.274,769,2.989,812,2.274,817,2.101,856,1.963,897,1.848,920,1.717,921,1.972,925,1.972,942,1.963,966,2.274,1026,2.274,1063,2.858,1064,5.109,1065,6.093,1066,6.949,1067,6.949,1068,2.858,1069,5.272,1070,3.408,1071,2.989,1072,4.353,1073,5.272,1074,4.353,1075,4.353,1076,4.353,1077,3.464,1078,5.272,1079,4.353,1080,5.272,1081,5.272,1082,2.858,1083,2.858,1084,2.858,1085,4.353,1086,7.485,1087,2.858,1088,4.353,1089,2.858,1090,4.353,1091,2.858,1092,2.989,1093,5.272,1094,2.858,1095,2.858,1096,2.858,1097,2.858,1098,2.858,1099,2.858,1100,2.858,1101,2.858,1102,2.858,1103,2.858,1104,2.858,1105,4.353,1106,6.343,1107,2.858,1108,4.353,1109,4.353,1110,2.858,1111,4.353,1112,2.858,1113,4.353,1114,4.353,1115,2.858,1116,4.353,1117,2.858,1118,1.848,1119,4.623,1120,4.623,1121,4.353,1122,2.858,1123,2.858,1124,4.353,1125,5.272,1126,2.506,1127,4.353,1128,2.858,1129,5.894,1130,2.858,1131,2.858,1132,2.858,1133,2.858,1134,3.817,1135,3.464,1136,2.858,1137,2.858,1138,2.858,1139,2.858,1140,2.858,1141,2.858,1142,2.858,1143,2.858,1144,2.858,1145,2.858,1146,5.272,1147,2.858,1148,5.272,1149,2.858,1150,2.506,1151,2.858,1152,3.464,1153,2.858,1154,2.858,1155,2.506,1156,2.858,1157,2.858,1158,2.858,1159,2.858,1160,2.858,1161,2.858,1162,2.858,1163,2.858,1164,2.858,1165,2.858,1166,2.858,1167,2.858,1168,2.858,1169,4.353,1170,2.858,1171,4.353,1172,2.858,1173,2.858,1174,2.858,1175,2.858,1176,2.858,1177,2.858,1178,2.506,1179,3.817,1180,2.858,1181,2.858,1182,2.858,1183,2.858,1184,4.353,1185,2.858,1186,2.858,1187,1.663,1188,2.858]],["title/classes/FileLoaderService.html",[133,0.577,906,2.508]],["body/classes/FileLoaderService.html",[3,0.268,4,0.268,5,0.242,7,0.286,8,0.717,11,0.48,12,0.011,13,0.286,75,0.009,76,0.009,83,0.664,89,0.806,133,0.78,327,1.532,407,1.548,425,1.504,893,4.891,894,4.068,904,3.231,905,3.563,906,4.136,911,5.642,919,5.876,920,3.152,927,5.876,1043,4.65,1189,5.821,1190,5.821,1191,8.636,1192,7.674,1193,5.821,1194,5.821,1195,5.821]],["title/interfaces/FrequencyBarsConfig.html",[0,0.159,284,2.194]],["body/interfaces/FrequencyBarsConfig.html",[0,0.302,2,1.024,3,0.216,4,0.216,5,0.16,7,0.231,8,0.626,10,1.81,11,0.663,12,0.011,13,0.413,18,2.932,19,1.023,22,1.738,25,2.619,75,0.008,76,0.008,267,2.61,268,2.61,269,3.612,270,2.736,271,2.736,272,2.736,273,2.497,274,2.394,275,2.497,276,2.497,277,2.497,278,2.394,279,2.497,280,2.497,281,2.497,282,2.61,283,2.61,284,3.159,285,4.078,286,3.91,287,3.91,288,3.91,289,2.394,290,3.159,291,2.497,292,2.713,293,2.713,294,3.159,295,2.497,296,2.394,297,2.497,298,2.61,299,2.736,300,2.394,301,3.536,302,2.497,303,2.299,304,3.856,305,2.919,306,2.497,307,3.159,308,3.612,309,3.612,310,2.394,311,3.159,312,3.612]],["title/interfaces/GamepadAction.html",[0,0.159,17,2.96]],["body/interfaces/GamepadAction.html",[0,0.275,1,3.086,2,1.039,3,0.22,4,0.22,5,0.162,6,3.086,7,0.389,8,0.633,9,3.278,10,1.703,11,0.675,12,0.011,13,0.407,14,4.805,15,3.509,16,2.014,17,5.104,18,3.136,19,0.969,20,4.805,21,1.714,22,2.587,23,5.297,24,3.086,25,2.645,26,3.278,27,3.278,28,3.086,29,2.921,30,3.278,31,3.086,32,3.086,33,3.086,34,2.921,35,2.921,36,4.608,37,2.777,38,3.278,39,1.767,40,3.278,41,2.556,42,3.278,43,3.064,44,3.278,45,3.479,46,3.278,47,3.086,48,3.278,49,3.086,50,3.278,51,3.278,52,3.278,53,3.278,54,3.278,55,2.921,56,3.278,57,3.278,58,3.278,59,2.649,60,3.278,61,3.086,62,3.278,63,3.086,64,3.278,65,3.278,66,3.278,67,3.278,68,3.278,69,3.278,70,2.921,71,3.278,72,3.278,73,3.278,74,3.278,75,0.008,76,0.008,430,1.527]],["title/injectables/GamepadService.html",[393,0.765,1196,2.787]],["body/injectables/GamepadService.html",[1,3.268,3,0.123,4,0.123,5,0.091,7,0.353,8,0.417,9,2.838,10,1.69,11,0.507,12,0.011,13,0.131,14,5.032,18,3.206,20,4.911,21,1.419,22,0.987,23,1.727,24,3.678,26,4.468,27,4.468,28,3.268,29,3.482,31,1.727,32,4.386,33,3.678,34,3.094,35,2.529,37,2.941,39,1.734,70,3.094,75,0.005,76,0.005,80,1.103,83,0.386,89,0.37,133,0.358,135,1.053,136,1.554,137,1.299,143,1.761,147,1.458,222,1.786,323,0.798,326,2.209,327,1.299,393,0.733,395,1.02,407,0.9,425,1.204,429,1.751,430,1.169,444,1.9,498,0.822,578,2.02,638,1.577,651,1.635,1070,2.672,1118,1.727,1196,2.672,1197,2.671,1198,5.055,1199,4.133,1200,4.133,1201,5.055,1202,4.133,1203,4.133,1204,4.133,1205,2.671,1206,7.35,1207,4.133,1208,2.671,1209,7.35,1210,2.671,1211,5.689,1212,2.671,1213,7.009,1214,4.133,1215,2.671,1216,2.671,1217,2.671,1218,2.671,1219,2.671,1220,2.671,1221,2.671,1222,2.671,1223,2.671,1224,2.671,1225,5.055,1226,2.671,1227,5.055,1228,2.671,1229,2.671,1230,5.689,1231,2.671,1232,2.671,1233,2.671,1234,2.671,1235,4.133,1236,5.055,1237,5.395,1238,4.133,1239,2.342,1240,4.133,1241,2.671,1242,2.671,1243,2.671,1244,2.671,1245,2.671,1246,4.133,1247,2.671,1248,2.671,1249,2.671,1250,2.671,1251,2.671,1252,2.671,1253,3.716,1254,6.153,1255,2.671,1256,2.671,1257,5.055,1258,2.671,1259,2.671,1260,2.671,1261,2.671,1262,2.671,1263,2.671,1264,2.671,1265,4.133,1266,2.671,1267,2.671,1268,2.671,1269,2.671,1270,2.671,1271,2.671,1272,5.055,1273,4.133,1274,3.038,1275,4.133,1276,4.133,1277,2.671,1278,2.671,1279,2.671,1280,4.133,1281,2.671,1282,2.671,1283,2.671,1284,4.133,1285,4.133,1286,5.055,1287,5.055,1288,5.689,1289,4.523,1290,5.055,1291,2.671,1292,5.689,1293,2.671,1294,5.705,1295,4.133,1296,4.133,1297,4.133,1298,2.671,1299,5.689,1300,2.671,1301,2.671,1302,4.133,1303,2.671,1304,2.671,1305,4.133,1306,4.133,1307,2.671,1308,2.671,1309,2.671,1310,2.671]],["title/interfaces/Hotkey.html",[0,0.159,1311,2.96]],["body/interfaces/Hotkey.html",[0,0.199,2,0.835,3,0.176,4,0.176,5,0.13,7,0.188,8,0.545,11,0.559,12,0.011,13,0.307,16,1.618,19,1.095,75,0.007,76,0.007,83,0.668,86,0.788,89,0.531,133,0.513,136,1.554,137,1.428,143,1.773,147,1.662,164,2.129,173,2.997,205,1.563,323,1.146,332,2.231,333,1.874,354,2.483,366,1.331,393,0.958,411,2.818,446,4.231,496,1.512,498,1.18,537,2.818,578,2.64,638,2.061,696,2.478,930,3.304,985,2.633,1253,2.818,1274,2.818,1311,3.708,1312,3.051,1313,5.258,1314,5.235,1315,5.604,1316,4.595,1317,3.969,1318,2.818,1319,3.304,1320,2.231,1321,4.296,1322,3.708,1323,5.399,1324,3.708,1325,2.633,1326,3.051,1327,2.478,1328,2.346,1329,3.051,1330,3.051,1331,3.491,1332,2.818,1333,3.051,1334,3.969,1335,3.051,1336,3.051,1337,2.346,1338,3.051,1339,3.051,1340,3.051,1341,3.051,1342,3.051,1343,3.051,1344,3.051,1345,3.051,1346,4.296,1347,3.051,1348,4.296,1349,4.296,1350,4.296,1351,3.051,1352,3.051,1353,3.051,1354,3.051,1355,3.051,1356,3.969,1357,3.051,1358,3.051,1359,3.051,1360,3.051,1361,4.973,1362,3.051,1363,3.051,1364,4.296,1365,3.051,1366,3.051,1367,4.296,1368,3.051,1369,3.051,1370,3.051,1371,3.051,1372,3.051,1373,3.051,1374,3.051,1375,4.296,1376,3.051,1377,3.051,1378,3.051,1379,3.051,1380,5.399,1381,3.051,1382,4.296,1383,3.051,1384,3.051,1385,3.051,1386,1.463,1387,2.633,1388,3.051,1389,3.051,1390,3.051]],["title/interfaces/HotkeyInfo.html",[0,0.159,1327,2.787]],["body/interfaces/HotkeyInfo.html",[0,0.202,2,0.851,3,0.18,4,0.18,5,0.133,7,0.192,8,0.552,11,0.451,12,0.011,13,0.31,16,1.649,19,1.061,75,0.007,76,0.007,83,0.672,86,0.803,89,0.541,133,0.523,136,1.561,137,1.438,143,1.781,147,1.673,164,2.158,173,3.037,205,1.593,323,1.167,332,2.273,333,1.91,354,1.9,366,1.356,393,0.971,411,2.872,446,4.254,496,1.541,498,1.202,537,2.872,578,2.675,638,2.088,696,2.526,985,2.683,1253,2.872,1274,2.872,1311,2.683,1312,3.109,1313,4.022,1314,5.263,1315,5.03,1316,2.872,1317,4.022,1318,2.872,1319,3.349,1320,2.273,1321,4.354,1322,3.758,1323,6.324,1324,3.758,1325,2.683,1326,3.109,1327,3.537,1328,2.391,1329,3.109,1330,3.109,1331,3.537,1332,2.872,1333,3.109,1334,4.022,1335,3.109,1336,3.109,1337,2.391,1338,3.109,1339,3.109,1340,3.109,1341,3.109,1342,3.109,1343,3.109,1344,3.109,1345,3.109,1346,4.354,1347,3.109,1348,4.354,1349,4.354,1350,4.354,1351,3.109,1352,3.109,1353,3.109,1354,3.109,1355,3.109,1356,4.022,1357,3.109,1358,3.109,1359,3.109,1360,3.109,1361,5.025,1362,3.109,1363,3.109,1364,4.354,1365,3.109,1366,3.109,1367,4.354,1368,3.109,1369,3.109,1370,3.109,1371,3.109,1372,3.109,1373,3.109,1374,3.109,1375,4.354,1376,3.109,1377,3.109,1378,3.109,1379,3.109,1380,5.444,1381,3.109,1382,4.354,1383,3.109,1384,3.109,1385,3.109,1386,1.491,1387,2.683,1388,3.109,1389,3.109,1390,3.109]],["title/interfaces/HotkeysData.html",[0,0.159,1391,3.43]],["body/interfaces/HotkeysData.html",[0,0.209,2,1.23,3,0.26,4,0.26,5,0.192,7,0.277,8,0.704,11,0.465,12,0.011,13,0.342,75,0.009,76,0.009,83,0.773,84,1.564,86,1.161,89,0.782,93,4.512,94,3.652,103,2.875,105,2.56,128,2.156,129,2.088,131,2.56,133,0.757,147,1.266,173,4.203,366,1.961,1319,3.457,1320,3.287,1324,4.793,1325,5.201,1327,3.652,1337,3.457,1386,2.156,1387,5.432,1391,5.553,1392,4.953,1393,4.153,1394,4.153,1395,5.13,1396,4.953,1397,4.271,1398,3.552,1399,4.153,1400,4.953,1401,4.153,1402,4.153,1403,4.953,1404,4.953,1405,4.495,1406,4.953]],["title/components/HotkeysHelpDialogComponent.html",[84,0.966,366,1.497]],["body/components/HotkeysHelpDialogComponent.html",[0,0.146,3,0.181,4,0.181,5,0.187,7,0.194,8,0.556,12,0.011,13,0.27,21,1.27,41,2.802,43,2.693,75,0.007,76,0.007,80,1.52,83,0.699,84,1.422,86,0.811,89,0.546,91,2.407,93,4.104,94,2.55,103,2.008,105,1.787,113,1.345,128,2.103,129,2.036,131,2.496,133,0.528,134,1.506,147,0.884,173,2.189,222,1.145,313,1.556,314,1.799,315,1.608,316,1.608,317,1.608,321,3.247,322,3.215,324,1.556,327,1.372,352,1.608,353,2.246,354,1.912,355,1.413,356,2.802,357,1.608,358,1.608,359,1.556,360,1.413,361,1.608,362,1.556,363,1.556,364,1.506,365,1.608,366,2.385,367,1.556,368,2.588,369,1.556,370,1.556,371,1.458,372,1.608,373,1.556,374,1.608,375,1.458,376,1.556,377,1.608,378,1.556,379,1.608,380,1.556,381,1.506,382,1.608,383,1.556,384,1.608,385,1.556,386,1.458,387,1.556,388,1.608,389,1.556,390,1.506,391,1.556,392,1.608,407,1.199,421,4.383,425,0.834,444,1.424,1311,3.783,1319,2.414,1320,2.295,1324,4.718,1325,5.47,1327,2.55,1337,3.885,1386,2.423,1387,2.709,1391,3.139,1392,6.337,1393,2.9,1394,2.9,1395,4.666,1396,3.459,1397,3.885,1398,3.231,1399,4.049,1400,4.83,1401,4.049,1402,4.049,1403,6.337,1404,3.459,1405,5.467,1406,3.459,1407,3.944,1408,3.944,1409,3.459,1410,3.944,1411,3.944,1412,6.87,1413,7.487,1414,6.87,1415,5.508,1416,5.508,1417,6.87,1418,5.508,1419,5.508,1420,4.83,1421,5.508,1422,5.508,1423,5.508,1424,5.508]],["title/injectables/HotkeysService.html",[393,0.765,1328,2.638]],["body/injectables/HotkeysService.html",[0,0.193,3,0.168,4,0.168,5,0.124,7,0.179,11,0.429,12,0.011,13,0.298,16,1.539,19,1.064,75,0.007,76,0.007,80,1.011,83,0.655,86,0.75,89,0.505,133,0.489,136,1.534,137,1.401,143,1.753,147,1.636,164,2.056,173,2.893,205,2.126,222,2.037,323,1.09,327,1.457,332,2.123,333,1.783,354,1.81,366,1.267,393,0.925,395,1.392,407,1.135,411,4.878,425,1.544,429,1.604,430,1.071,446,4.171,496,1.439,498,1.123,537,4.878,578,2.548,638,1.99,696,3.37,985,2.505,1253,2.682,1274,2.682,1311,2.505,1312,2.903,1313,3.832,1314,4.557,1315,5.16,1316,2.682,1317,3.832,1318,2.682,1319,3.19,1320,2.123,1321,4.148,1322,3.58,1323,5.28,1324,3.58,1325,2.505,1326,2.903,1327,2.358,1328,3.19,1329,2.903,1330,2.903,1331,3.37,1332,2.682,1333,2.903,1334,4.878,1335,2.903,1336,2.903,1337,2.233,1338,2.903,1339,2.903,1340,2.903,1341,2.903,1342,2.903,1343,2.903,1344,2.903,1345,4.148,1346,4.148,1347,2.903,1348,4.148,1349,4.148,1350,4.148,1351,2.903,1352,2.903,1353,2.903,1354,2.903,1355,2.903,1356,3.832,1357,2.903,1358,2.903,1359,2.903,1360,2.903,1361,4.84,1362,2.903,1363,2.903,1364,4.148,1365,2.903,1366,2.903,1367,4.148,1368,2.903,1369,2.903,1370,2.903,1371,2.903,1372,4.148,1373,2.903,1374,2.903,1375,4.148,1376,2.903,1377,2.903,1378,5.28,1379,5.28,1380,5.28,1381,2.903,1382,4.148,1383,2.903,1384,2.903,1385,2.903,1386,1.392,1387,2.505,1388,2.903,1389,2.903,1390,2.903,1425,5.212,1426,5.212,1427,3.648,1428,3.648,1429,3.648,1430,3.648,1431,3.648,1432,3.648]],["title/interfaces/Id3CoverPicture.html",[0,0.159,704,2.638]],["body/interfaces/Id3CoverPicture.html",[0,0.267,2,1.299,3,0.274,4,0.274,5,0.203,7,0.293,8,0.728,10,1.483,11,0.594,12,0.011,13,0.354,19,1.174,75,0.009,76,0.009,77,2.206,81,3.168,83,0.557,91,2.608,113,1.457,163,2.433,191,2.433,303,3.793,651,4.416,704,4.748,705,3.652,708,4.665,709,3.312,714,3.882,837,2.433,840,2.608,1386,3.076,1433,5.232,1434,4.748]],["title/interfaces/Id3Tags.html",[0,0.159,840,1.884]],["body/interfaces/Id3Tags.html",[0,0.251,2,1.179,3,0.249,4,0.249,5,0.184,7,0.266,8,0.686,10,1.397,11,0.699,12,0.011,13,0.334,19,1.2,75,0.009,76,0.009,77,2.88,81,4.136,83,0.505,91,3.405,113,1.322,163,3.177,191,3.177,303,2.647,430,1.774,651,4.16,704,4.768,705,3.314,708,5.037,709,3.005,714,3.775,837,2.208,840,2.97,1386,2.067,1433,4.747,1434,6.2,1435,6.796]],["title/injectables/Id3TagsService.html",[393,0.765,1436,3.43]],["body/injectables/Id3TagsService.html",[3,0.193,4,0.193,5,0.259,7,0.206,10,1.181,11,0.473,12,0.011,13,0.206,16,1.769,20,2.711,21,0.967,39,1.182,75,0.007,76,0.007,80,0.813,83,0.612,89,0.58,133,0.562,135,1.654,136,1.475,137,1.147,143,1.71,147,1.287,164,2.585,173,2.327,190,2.711,222,2.144,323,1.253,326,2.865,327,1.147,393,1.02,395,1.6,407,1.251,425,0.887,429,1.29,430,0.862,444,1.084,498,1.29,515,3.336,570,2.85,578,3.205,705,4.012,706,1.769,837,2.673,840,1.832,841,1.972,850,3.517,851,3.922,852,2.566,853,2.925,920,2.266,948,5.184,1070,3.715,1118,2.711,1134,3.677,1436,4.572,1437,4.193,1438,5.038,1439,4.193,1440,5.038,1441,7.052,1442,4.193,1443,5.746,1444,2.44,1445,5.431,1446,4.193,1447,4.193,1448,7.388,1449,6.555,1450,3.677,1451,4.193,1452,3.677,1453,3.336,1454,4.193,1455,5.746,1456,4.193,1457,5.746,1458,4.193,1459,5.746,1460,4.193,1461,3.677,1462,4.193,1463,4.193,1464,4.193,1465,3.677,1466,6.555,1467,4.193,1468,3.336,1469,4.193,1470,3.677,1471,4.193,1472,3.677,1473,5.746,1474,4.193,1475,4.193,1476,4.193,1477,4.193,1478,4.193,1479,4.193,1480,4.193,1481,6.555,1482,4.193,1483,4.193,1484,4.193,1485,4.193,1486,4.193,1487,5.746,1488,5.746,1489,4.193,1490,4.193,1491,4.193,1492,4.193,1493,4.193,1494,4.193,1495,4.193,1496,4.193,1497,4.193,1498,4.193]],["title/interfaces/IndexedDbTrackMetadata.html",[0,0.159,90,2.392]],["body/interfaces/IndexedDbTrackMetadata.html",[0,0.285,2,1.144,3,0.242,4,0.242,5,0.249,7,0.258,8,0.673,11,0.635,12,0.011,13,0.405,19,1.168,25,2.814,75,0.008,76,0.008,77,1.942,79,3.058,81,2.79,82,2.546,83,0.684,90,3.702,91,2.915,113,1.882,114,3.397,143,1.494,163,2.143,191,2.143,258,3.889,292,2.297,293,2.297,430,1.371,433,4.082,466,3.397,467,3.397,468,3.397,469,3.397,470,3.397,471,2.917,472,3.397,473,3.397,474,3.397,475,3.397,494,3.216,555,3.609,702,2.79,703,3.397,704,4.082,705,3.216,706,2.217,707,3.395,708,4.312,709,2.917,710,4.717,711,4.983,712,3.216,713,3.609,714,2.472,715,3.609,716,3.397,717,3.863,718,3.609,719,3.863,720,3.863,721,3.397,722,3.058]],["title/interfaces/LastfmAlbum.html",[0,0.159,1499,2.787]],["body/interfaces/LastfmAlbum.html",[0,0.257,2,0.883,3,0.187,4,0.187,5,0.138,7,0.199,8,0.567,10,0.834,11,0.573,12,0.011,13,0.199,19,1.152,39,1.143,75,0.007,76,0.007,77,2.57,80,1.348,82,2.144,83,0.705,86,0.834,89,0.561,133,0.543,136,1.508,137,1.286,143,1.692,147,1.796,163,2.977,164,1.6,205,3.08,232,2.012,234,1.548,323,1.212,393,0.997,496,1.6,498,1.248,570,2.307,701,2.251,706,1.712,714,1.908,837,1.654,840,2.455,841,1.908,848,1.983,849,1.983,902,2.065,920,2.215,921,1.838,925,1.838,1187,3.268,1386,2.459,1444,2.36,1499,4.165,1500,2.622,1501,2.622,1502,4.256,1503,4.496,1504,2.786,1505,2.622,1506,2.483,1507,2.622,1508,2.251,1509,3.437,1510,3.437,1511,2.622,1512,3.631,1513,2.483,1514,2.786,1515,2.786,1516,2.786,1517,2.786,1518,2.786,1519,2.786,1520,2.622,1521,2.483,1522,3.437,1523,2.786,1524,2.786,1525,2.622,1526,2.622,1527,2.622,1528,2.786,1529,2.786,1530,2.786,1531,2.786,1532,2.622,1533,2.786,1534,3.631,1535,2.786,1536,2.786,1537,2.786,1538,2.786,1539,2.786,1540,2.786,1541,2.786,1542,2.786,1543,2.786,1544,4.425,1545,2.786,1546,2.786,1547,2.622,1548,4.425,1549,5.014,1550,5.014,1551,2.786,1552,2.786,1553,2.786,1554,3.857,1555,2.786,1556,2.786,1557,2.786,1558,2.786,1559,2.786,1560,2.786,1561,2.786]],["title/interfaces/LastfmErrorResponse.html",[0,0.159,1510,2.638]],["body/interfaces/LastfmErrorResponse.html",[0,0.258,2,0.892,3,0.188,4,0.188,5,0.139,7,0.201,8,0.571,10,1.331,11,0.534,12,0.011,13,0.201,19,1.136,39,1.155,75,0.007,76,0.007,77,2.581,80,0.794,82,2.159,83,0.707,86,0.842,89,0.567,133,0.549,136,1.513,137,1.293,143,1.698,147,1.8,163,2.306,164,1.616,205,3.09,232,2.025,234,1.564,323,1.224,393,1.004,496,1.616,498,1.261,570,2.714,701,2.274,706,1.729,714,1.927,837,1.671,840,2.472,841,1.927,848,2.003,849,2.003,902,2.085,920,2.23,921,1.856,925,1.856,1187,3.29,1386,2.472,1444,2.384,1499,3.656,1500,2.649,1501,2.649,1502,2.507,1503,3.656,1504,2.814,1505,2.649,1506,2.507,1507,2.649,1508,2.274,1509,3.461,1510,3.964,1511,4.515,1512,3.656,1513,2.507,1514,2.814,1515,2.814,1516,2.814,1517,2.814,1518,2.814,1519,2.814,1520,2.649,1521,2.507,1522,3.461,1523,2.814,1524,2.814,1525,2.649,1526,2.649,1527,2.649,1528,2.814,1529,2.814,1530,2.814,1531,2.814,1532,2.649,1533,2.814,1534,3.656,1535,2.814,1536,2.814,1537,2.814,1538,2.814,1539,2.814,1540,2.814,1541,2.814,1542,2.814,1543,2.814,1544,4.448,1545,2.814,1546,2.814,1547,2.649,1548,4.448,1549,5.032,1550,5.032,1551,2.814,1552,2.814,1553,2.814,1554,3.884,1555,2.814,1556,2.814,1557,2.814,1558,2.814,1559,2.814,1560,2.814,1561,2.814]],["title/interfaces/LastfmImage.html",[0,0.159,1503,2.787]],["body/interfaces/LastfmImage.html",[0,0.258,2,0.892,3,0.188,4,0.188,5,0.139,7,0.201,8,0.571,10,0.842,11,0.534,12,0.011,13,0.201,19,1.154,39,1.155,75,0.007,76,0.007,77,2.581,80,0.794,82,2.159,83,0.707,86,0.842,89,0.567,133,0.549,136,1.513,137,1.293,143,1.698,147,1.8,163,2.306,164,1.616,205,3.09,232,2.025,234,1.564,323,1.224,393,1.004,496,1.616,498,1.261,570,2.32,701,2.274,706,1.729,714,1.927,837,1.671,840,2.472,841,1.927,848,2.003,849,2.003,902,2.085,920,2.23,921,1.856,925,1.856,1187,4.264,1386,2.472,1444,2.384,1499,3.656,1500,2.649,1501,2.649,1502,2.507,1503,4.187,1504,2.814,1505,2.649,1506,2.507,1507,2.649,1508,3.876,1509,3.461,1510,3.461,1511,2.649,1512,3.656,1513,2.507,1514,2.814,1515,2.814,1516,2.814,1517,2.814,1518,2.814,1519,2.814,1520,2.649,1521,2.507,1522,3.461,1523,2.814,1524,2.814,1525,2.649,1526,2.649,1527,2.649,1528,2.814,1529,2.814,1530,2.814,1531,2.814,1532,2.649,1533,2.814,1534,3.656,1535,2.814,1536,2.814,1537,2.814,1538,2.814,1539,2.814,1540,2.814,1541,2.814,1542,2.814,1543,2.814,1544,4.448,1545,2.814,1546,2.814,1547,2.649,1548,4.448,1549,5.032,1550,5.032,1551,2.814,1552,2.814,1553,2.814,1554,3.884,1555,2.814,1556,2.814,1557,2.814,1558,2.814,1559,2.814,1560,2.814,1561,2.814]],["title/injectables/LastfmMetadataService.html",[393,0.765,1513,2.638]],["body/injectables/LastfmMetadataService.html",[0,0.257,3,0.187,4,0.187,5,0.138,7,0.199,10,0.835,11,0.463,12,0.011,13,0.199,19,1.11,39,1.145,75,0.007,76,0.007,77,2.572,80,1.09,82,2.146,83,0.705,86,0.835,89,0.562,133,0.544,136,1.509,137,1.287,143,1.693,147,1.796,163,2.293,164,1.602,205,3.081,232,2.492,234,1.55,323,1.214,327,0.811,393,0.998,395,1.55,407,1.224,425,0.859,429,1.25,430,0.835,496,1.602,498,1.25,570,2.309,701,2.255,706,1.714,714,1.911,837,2.293,840,3.041,841,1.911,848,1.986,849,1.986,853,2.068,902,2.068,920,2.543,921,1.841,925,1.841,1187,3.271,1386,2.461,1444,2.363,1499,3.635,1500,3.635,1501,2.626,1502,2.486,1503,3.635,1504,2.79,1505,2.626,1506,2.486,1507,2.626,1508,2.255,1509,3.441,1510,3.441,1511,2.626,1512,3.635,1513,3.441,1514,2.79,1515,2.79,1516,2.79,1517,2.79,1518,2.79,1519,2.79,1520,3.635,1521,2.486,1522,3.441,1523,2.79,1524,2.79,1525,2.626,1526,2.626,1527,2.626,1528,2.79,1529,2.79,1530,2.79,1531,2.79,1532,2.626,1533,2.79,1534,3.635,1535,2.79,1536,2.79,1537,2.79,1538,2.79,1539,2.79,1540,2.79,1541,2.79,1542,2.79,1543,2.79,1544,4.428,1545,2.79,1546,2.79,1547,2.626,1548,4.428,1549,5.017,1550,5.017,1551,2.79,1552,2.79,1553,2.79,1554,3.861,1555,2.79,1556,2.79,1557,2.79,1558,2.79,1559,2.79,1560,2.79,1561,2.79,1562,4.93,1563,4.062]],["title/interfaces/LastfmSuccessResponse.html",[0,0.159,1509,2.638]],["body/interfaces/LastfmSuccessResponse.html",[0,0.259,2,0.901,3,0.19,4,0.19,5,0.141,7,0.203,8,0.575,10,0.85,11,0.469,12,0.011,13,0.203,19,1.114,39,1.167,75,0.007,76,0.007,77,2.878,80,0.802,82,2.174,83,0.709,86,0.85,89,0.573,133,0.554,136,1.517,137,1.3,143,1.703,147,1.803,163,2.322,164,1.632,205,3.099,232,2.04,234,1.58,323,1.237,393,1.011,496,1.632,498,1.274,570,2.332,701,2.297,706,1.746,714,1.946,837,1.688,840,2.489,841,1.946,848,2.023,849,2.023,902,2.106,920,2.246,921,1.875,925,1.875,1187,3.313,1386,2.485,1444,2.408,1499,4.534,1500,2.676,1501,2.676,1502,2.533,1503,3.682,1504,2.842,1505,2.676,1506,2.533,1507,2.676,1508,2.297,1509,3.985,1510,3.485,1511,2.676,1512,3.682,1513,2.533,1514,2.842,1515,2.842,1516,2.842,1517,2.842,1518,2.842,1519,2.842,1520,2.676,1521,2.533,1522,3.485,1523,2.842,1524,2.842,1525,2.676,1526,2.676,1527,2.676,1528,2.842,1529,2.842,1530,2.842,1531,2.842,1532,2.676,1533,2.842,1534,3.682,1535,2.842,1536,2.842,1537,2.842,1538,2.842,1539,2.842,1540,2.842,1541,2.842,1542,2.842,1543,2.842,1544,4.471,1545,2.842,1546,2.842,1547,2.676,1548,4.471,1549,5.051,1550,5.051,1551,2.842,1552,2.842,1553,2.842,1554,3.911,1555,2.842,1556,2.842,1557,2.842,1558,2.842,1559,2.842,1560,2.842,1561,2.842]],["title/injectables/LegacyFileLoaderService.html",[393,0.765,1564,3.78]],["body/injectables/LegacyFileLoaderService.html",[3,0.219,4,0.219,5,0.291,7,0.343,8,0.631,12,0.011,13,0.233,21,1.097,39,1.341,75,0.008,76,0.008,83,0.652,88,1.94,89,0.658,133,0.637,135,1.876,136,1.395,137,1.482,143,1.401,147,1.066,154,4.044,164,1.876,232,2.762,234,2.387,323,1.422,326,3.054,327,1.482,393,1.11,395,1.816,407,1.362,425,1.323,444,1.23,498,1.464,526,3.786,578,2.326,638,1.816,682,4.543,893,4.719,894,3.924,896,3.497,903,2.912,904,2.64,905,2.912,906,3.639,907,3.267,911,5.137,919,5.137,920,2.756,927,5.457,1092,3.267,1461,4.171,1472,4.171,1564,5.484,1565,7.71,1566,4.757,1567,4.757,1568,4.757,1569,4.757,1570,4.757,1571,4.757,1572,4.757,1573,4.757,1574,4.757,1575,4.757,1576,4.757,1577,4.757,1578,4.757,1579,4.757,1580,4.757,1581,4.757,1582,3.786,1583,4.171,1584,3.786,1585,4.171,1586,4.757,1587,4.757,1588,4.757,1589,4.757,1590,4.757,1591,4.757,1592,4.757,1593,4.757,1594,4.757]],["title/components/LibraryComponent.html",[84,0.966,134,1.645]],["body/components/LibraryComponent.html",[0,0.057,3,0.072,4,0.072,5,0.171,7,0.202,8,0.268,10,1.365,11,0.521,12,0.011,13,0.13,19,1.034,21,1.242,39,1.161,75,0.003,76,0.003,77,2.785,78,1.364,79,2.026,80,1.471,81,1.848,82,1.015,83,0.632,84,0.78,85,2.889,86,0.32,87,2.251,88,1.42,89,0.215,90,3.939,91,3.238,92,0.864,93,2.251,94,1.006,95,2.77,96,3.052,97,3.052,98,2.559,99,1.069,100,1.476,101,1.006,102,2.77,103,0.792,104,2.77,105,0.705,106,2.77,107,2.77,108,2.77,109,1.238,110,2.77,111,1.144,112,0.792,113,1.005,114,1.006,115,2.77,116,1.144,117,3.052,118,3.052,119,3.052,120,3.052,121,3.052,122,1.364,123,3.052,124,1.144,125,1.144,126,3.027,127,1.364,128,1.015,129,0.983,130,2.331,131,1.205,132,2.331,133,0.208,134,1.572,135,1.049,136,0.822,137,1.492,138,0.952,139,3.657,140,2.331,141,4.419,142,1.364,143,1.789,144,3.052,145,1.364,146,1.364,147,1.628,148,1.364,149,1.364,150,1.364,151,1.364,152,1.364,153,1.364,154,2.662,155,4.056,156,1.238,157,3.052,158,5.939,159,4.721,160,2.331,161,2.331,162,2.331,163,3.171,164,1.624,165,2.331,166,4.01,167,2.331,168,3.052,169,3.611,170,4.976,171,3.611,172,4.419,173,2.286,174,2.116,175,2.77,176,4.721,177,2.331,178,1.955,179,3.611,180,2.331,181,2.331,182,2.331,183,2.331,184,2.331,185,2.331,186,2.331,187,5.549,188,2.331,189,2.331,190,2.662,191,1.679,192,2.331,193,4.419,194,2.331,195,1.826,196,4.419,197,2.331,198,2.331,199,4.419,200,2.331,201,2.331,202,1.627,203,3.611,204,2.331,205,2.854,206,3.611,207,2.331,208,3.611,209,2.331,210,2.331,211,2.331,212,2.331,213,2.331,214,2.331,215,2.116,216,1.955,217,1.826,218,2.331,219,2.331,220,2.331,221,1.006,222,1.342,223,1.364,224,2.331,225,1.364,226,1.364,227,2.116,228,2.331,229,1.364,230,2.331,231,1.364,232,2.468,233,2.116,234,2.261,235,1.238,236,1.364,237,1.364,238,2.331,239,3.052,240,1.364,241,3.611,242,1.364,243,2.331,244,2.331,245,3.611,246,1.238,247,1.364,248,1.364,249,1.364,250,1.364,251,1.364,252,2.331,253,1.364,254,2.331,255,2.331,256,3.052,257,1.364,258,0.761,259,1.364,260,1.364,261,1.364,262,1.238,263,2.331,264,2.331,265,2.116,266,1.364,313,0.614,314,0.869,315,0.635,316,0.635,317,0.635,321,2.742,322,2.496,324,0.614,327,1.417,352,0.635,353,1.084,354,0.923,355,0.557,356,1.679,357,0.635,358,0.635,359,0.614,360,0.557,361,0.635,362,0.614,363,0.614,364,0.594,365,0.635,366,0.54,367,0.614,368,1.42,369,0.614,370,0.614,371,0.575,372,0.635,373,0.614,374,0.635,375,0.575,376,0.614,377,0.635,378,0.614,379,0.635,380,0.614,381,0.594,382,0.635,383,0.614,384,0.635,385,0.614,386,0.575,387,0.614,388,0.635,389,0.614,390,0.594,391,0.614,392,0.635,407,0.579,425,1.339,429,1.947,430,1.3,444,1.303,577,3.705,1595,2.659,1596,2.659,1597,2.659,1598,2.331,1599,2.659,1600,2.659,1601,2.659,1602,2.659,1603,2.659,1604,2.659,1605,2.331,1606,1.556,1607,1.556,1608,1.556,1609,1.556,1610,1.556,1611,1.556,1612,1.556,1613,1.556,1614,1.556,1615,1.556,1616,1.556,1617,1.556,1618,1.556,1619,1.556,1620,1.556,1621,1.556,1622,1.556,1623,5.04,1624,2.659,1625,4.01,1626,2.659,1627,2.659,1628,4.118,1629,4.118,1630,2.659,1631,4.118,1632,4.118,1633,4.118,1634,2.659]],["title/injectables/LibraryService.html",[126,3.169,393,0.765]],["body/injectables/LibraryService.html",[3,0.234,4,0.234,5,0.173,7,0.25,8,0.66,12,0.011,13,0.25,21,1.508,75,0.008,76,0.008,83,0.736,86,1.047,88,2.945,89,0.705,90,2.828,92,2.828,113,1.244,126,4.808,133,0.683,136,1.306,137,1.658,143,1.465,147,1.142,232,2.587,234,1.945,323,1.523,327,1.442,393,1.161,395,1.945,401,5.747,407,1.424,425,1.078,444,1.691,477,4.808,492,2.397,496,2.01,498,1.568,570,2.587,572,4.055,575,4.055,899,3.295,900,3.295,901,2.828,902,2.594,909,3.5,910,3.5,920,2.579,921,2.309,925,2.309,1386,1.945,1635,5.096,1636,7.222,1637,7.62,1638,5.096,1639,5.096,1640,5.096,1641,4.003,1642,3.5,1643,3.5,1644,5.096,1645,5.096,1646,5.096,1647,5.096,1648,6.54,1649,5.096,1650,5.096,1651,6.54,1652,5.096,1653,5.096,1654,5.096,1655,3.746,1656,5.096,1657,2.965,1658,5.096,1659,6.54,1660,5.096,1661,5.096,1662,5.096]],["title/interceptors/LoaderInterceptor.html",[1663,4.31,1664,3.43]],["body/interceptors/LoaderInterceptor.html",[3,0.265,4,0.265,5,0.196,7,0.283,11,0.475,12,0.011,13,0.283,75,0.009,76,0.009,80,1.117,83,0.763,86,1.184,89,0.798,133,0.772,135,2.273,136,1.15,137,1.15,147,1.291,327,1.15,393,1.254,407,1.538,425,1.219,429,1.774,430,1.184,496,2.273,948,4.237,1322,5.247,1505,3.726,1584,6.08,1664,5.622,1665,5.763,1666,5.763,1667,7.065,1668,7.065,1669,7.964,1670,7.964,1671,5.763,1672,5.763,1673,7.065,1674,5.763,1675,5.053,1676,5.194,1677,5.763,1678,5.053,1679,5.763,1680,5.763,1681,5.763]],["title/injectables/LoaderService.html",[393,0.765,1676,3.169]],["body/injectables/LoaderService.html",[3,0.257,4,0.257,5,0.19,7,0.275,8,0.7,12,0.011,13,0.275,21,1.29,39,2.222,41,2.829,75,0.009,76,0.01,83,0.522,88,2.281,89,0.774,133,0.749,136,1.117,137,1.505,222,2.013,323,1.672,327,1.505,393,1.231,395,2.135,401,5.999,407,1.51,425,1.467,444,1.446,477,5.099,498,1.722,572,4.451,575,4.451,601,4.905,1676,5.099,1682,5.594,1683,8.103,1684,8.103,1685,5.594,1686,5.594,1687,5.594,1688,5.594,1689,8.103,1690,5.594,1691,5.594,1692,4.905]],["title/injectables/MediaSessionService.html",[393,0.765,1693,2.96]],["body/injectables/MediaSessionService.html",[3,0.198,4,0.198,5,0.147,7,0.212,10,1.581,11,0.588,12,0.011,13,0.212,16,1.82,29,4.566,75,0.007,76,0.007,80,1.384,83,0.547,86,0.886,89,0.597,113,1.053,133,0.578,136,1.169,143,1.49,164,1.701,222,2.284,323,1.289,326,2.907,327,1.49,393,1.039,394,3.251,395,1.646,398,6.123,399,5.246,407,1.275,425,1.509,429,2.196,430,1.466,445,2.962,498,1.327,516,3.782,570,2.098,728,3.87,921,2.654,925,2.654,930,3.585,964,2.64,1356,5.246,1693,4.023,1694,6.748,1695,6.123,1696,4.313,1697,5.858,1698,5.858,1699,5.858,1700,5.858,1701,4.313,1702,5.858,1703,6.652,1704,7.461,1705,6.257,1706,4.313,1707,5.858,1708,6.652,1709,4.313,1710,5.858,1711,4.313,1712,5.858,1713,4.313,1714,4.313,1715,5.136,1716,5.136,1717,4.313,1718,3.782,1719,4.313,1720,4.313,1721,4.313,1722,4.313,1723,3.782,1724,4.313,1725,4.313,1726,5.858,1727,5.136,1728,5.858,1729,5.858,1730,4.313,1731,4.313,1732,4.313,1733,4.313,1734,4.313,1735,4.313,1736,4.313,1737,4.313,1738,4.313,1739,4.313]],["title/injectables/MetadataService.html",[393,0.765,1641,2.638]],["body/injectables/MetadataService.html",[3,0.094,4,0.094,5,0.166,7,0.1,8,0.336,11,0.524,12,0.011,13,0.1,19,0.282,21,1.467,39,1.377,41,0.832,43,1.63,55,1.248,75,0.004,76,0.004,77,0.754,79,2.46,80,0.947,81,1.083,82,1.272,83,0.672,85,3.104,86,0.419,88,1.724,89,0.282,90,1.85,91,2.526,92,1.132,113,1.608,133,0.273,136,1.27,137,1.644,143,1.786,147,1.698,163,0.832,164,0.804,178,2.451,191,0.832,205,2.196,232,2.484,234,2.828,258,1.63,278,2.486,323,0.609,327,1.413,360,1.514,393,0.592,395,0.778,407,0.726,425,1.033,429,1.503,430,1.004,444,1.645,462,2.923,491,1.85,492,1.568,493,1.083,496,0.804,498,0.628,499,1.132,501,1.499,533,1.248,570,1.194,577,1.499,638,2.429,667,2.923,682,2.989,701,3.532,707,1.697,711,3.943,712,3.537,713,1.401,714,0.959,715,1.401,716,1.318,718,1.401,722,1.187,729,3.365,735,2.29,746,1.623,765,3.886,817,1.499,832,3.208,837,2.937,839,3.736,841,0.959,842,2.46,843,1.318,844,1.318,845,1.318,846,1.318,847,1.318,848,2.067,849,2.067,853,2.152,890,4.721,894,1.038,899,1.318,900,1.318,901,1.132,902,1.038,904,3.997,905,1.248,909,1.401,910,1.401,920,2.279,921,0.924,925,0.924,930,2.04,1016,1.499,1043,1.187,1436,2.653,1444,1.187,1508,3.208,1513,2.04,1521,2.04,1522,2.04,1641,2.04,1655,1.499,1740,1.788,1741,4.228,1742,4.721,1743,4.228,1744,4.228,1745,4.228,1746,4.228,1747,4.228,1748,4.228,1749,3.334,1750,3.334,1751,3.334,1752,3.334,1753,2.039,1754,2.039,1755,1.788,1756,3.334,1757,3.334,1758,2.039,1759,3.334,1760,2.039,1761,3.334,1762,2.039,1763,3.334,1764,2.039,1765,5.779,1766,2.039,1767,2.039,1768,4.884,1769,2.039,1770,6.099,1771,3.334,1772,3.334,1773,2.923,1774,2.039,1775,3.334,1776,2.039,1777,3.334,1778,2.039,1779,3.334,1780,2.039,1781,2.039,1782,1.788,1783,2.039,1784,2.653,1785,2.039,1786,1.623,1787,2.039,1788,2.039,1789,2.039,1790,2.039,1791,2.039,1792,2.039,1793,2.039,1794,2.039,1795,2.039,1796,2.039,1797,2.039,1798,2.039,1799,2.039,1800,2.039,1801,2.039,1802,2.039,1803,5.384,1804,2.039,1805,3.334,1806,2.039,1807,1.788,1808,1.788,1809,2.039,1810,2.039,1811,2.039,1812,2.039,1813,2.039,1814,2.039,1815,3.334,1816,2.039,1817,2.039,1818,3.334,1819,4.228,1820,2.039,1821,2.039,1822,3.334,1823,2.039,1824,4.884,1825,3.334,1826,3.334,1827,2.653,1828,2.923,1829,3.334,1830,4.228,1831,2.039,1832,2.039,1833,3.334,1834,4.228,1835,2.923,1836,2.039,1837,3.334,1838,2.039,1839,5.384,1840,2.039,1841,1.788,1842,2.039,1843,2.039,1844,2.039,1845,2.039,1846,2.039,1847,3.334,1848,2.039,1849,2.039,1850,2.039,1851,2.039,1852,2.039,1853,2.039,1854,2.039,1855,2.039,1856,2.039,1857,2.039,1858,2.039,1859,2.039,1860,2.039,1861,2.039,1862,2.039,1863,2.039,1864,2.039,1865,2.039,1866,2.039,1867,2.039,1868,2.039,1869,2.039,1870,2.039,1871,1.788,1872,4.884,1873,2.039,1874,1.788,1875,1.788,1876,2.039,1877,3.334,1878,4.228,1879,2.039,1880,2.039,1881,2.039,1882,4.228,1883,4.884,1884,2.039,1885,2.039,1886,2.039,1887,3.334,1888,2.039,1889,2.039,1890,3.334,1891,2.039,1892,2.039,1893,2.039,1894,3.334,1895,1.788,1896,2.039,1897,2.039,1898,2.039,1899,1.788,1900,4.228,1901,2.039,1902,2.039,1903,2.039,1904,2.039,1905,2.039,1906,2.039,1907,2.039,1908,2.039,1909,3.334,1910,2.039,1911,2.039,1912,2.039,1913,3.334,1914,2.039,1915,2.039,1916,3.708,1917,2.039,1918,2.039,1919,1.788,1920,2.039,1921,2.039,1922,2.039,1923,2.039,1924,2.039,1925,2.039,1926,2.039,1927,2.039,1928,2.039,1929,2.039,1930,2.039,1931,2.039,1932,2.039,1933,2.039]],["title/components/MetadataSettingsComponent.html",[84,0.966,367,1.7]],["body/components/MetadataSettingsComponent.html",[3,0.165,4,0.165,5,0.247,7,0.176,8,0.519,11,0.542,12,0.011,13,0.176,21,0.825,75,0.007,76,0.007,80,1.567,83,0.714,84,1.348,86,0.736,89,0.495,105,1.622,113,1.974,128,1.963,129,1.901,131,2.33,133,0.479,134,1.366,136,1.027,137,1.391,139,3.063,202,3.147,222,1.909,232,2.155,234,1.366,313,1.412,314,1.68,315,1.46,316,1.46,317,1.46,321,3.233,322,3.216,324,1.412,327,1.448,352,1.46,353,2.097,354,1.785,355,1.282,356,2.682,357,1.46,358,1.46,359,1.412,360,1.282,361,1.46,362,1.412,363,1.412,364,1.366,365,1.46,366,1.243,367,2.594,368,2.454,369,1.412,370,1.412,371,1.323,372,1.46,373,1.412,374,1.46,375,1.323,376,1.412,377,1.46,378,1.412,379,1.46,380,1.412,381,1.366,382,1.46,383,1.412,384,1.46,385,1.412,386,1.323,387,1.412,388,1.46,389,1.412,390,1.366,391,1.412,392,1.46,407,1.12,425,1.474,429,2.024,430,1.352,444,0.926,491,2.854,492,2.419,493,1.9,496,1.412,499,1.987,556,4.026,578,3.216,853,3.892,899,2.314,900,3.891,901,3.867,902,1.822,909,2.458,910,2.458,989,4.092,1289,3.78,1398,3.063,1527,3.325,1641,4.026,1642,2.458,1643,3.532,1934,7.472,1935,6.552,1936,2.848,1937,4.789,1938,6.018,1939,3.78,1940,4.509,1941,6.578,1942,5.142,1943,5.142,1944,5.142,1945,5.142,1946,3.579,1947,5.142,1948,8.154,1949,3.579,1950,5.142,1951,3.579,1952,5.142,1953,3.579,1954,5.142,1955,3.579,1956,3.579,1957,3.579,1958,3.579,1959,3.139,1960,2.848,1961,3.579,1962,3.579,1963,6.578,1964,3.579,1965,3.579,1966,3.579,1967,3.579,1968,3.579,1969,3.579,1970,3.579,1971,5.142,1972,3.78,1973,6.578,1974,5.142]],["title/injectables/MusicbrainzService.html",[393,0.765,1784,3.43]],["body/injectables/MusicbrainzService.html",[3,0.188,4,0.188,5,0.139,7,0.2,11,0.336,12,0.011,13,0.2,19,0.894,39,1.15,75,0.007,76,0.007,77,1.508,80,0.791,82,1.557,83,0.706,89,0.565,133,0.546,136,1.392,137,1.126,143,1.771,147,1.838,164,2.224,190,2.637,195,2.802,202,3.451,205,3.223,216,2.999,217,2.802,232,2.62,234,2.793,262,3.246,323,1.219,327,0.814,360,2.314,393,1.001,395,1.557,407,1.228,425,0.863,429,1.255,430,0.838,498,1.255,520,2.802,570,2.314,701,2.264,706,1.721,837,2.299,840,3.046,841,1.919,848,1.994,849,1.994,851,2.166,853,2.076,920,2.749,921,3.158,925,2.928,942,2.802,1152,3.246,1386,1.557,1444,2.374,1502,3.451,1506,2.497,1507,2.637,1520,3.645,1521,2.497,1522,3.451,1525,3.645,1526,4.178,1532,2.637,1547,2.637,1562,4.944,1784,4.487,1972,4.145,1975,4.079,1976,4.079,1977,6.462,1978,6.462,1979,3.577,1980,3.246,1981,4.079,1982,3.246,1983,4.079,1984,4.079,1985,4.079,1986,4.079,1987,5.638,1988,4.079,1989,4.079,1990,4.079,1991,4.079,1992,4.079,1993,4.079,1994,4.079,1995,4.079,1996,5.638,1997,4.079,1998,4.079,1999,4.079,2000,4.079,2001,4.079,2002,4.079,2003,4.079,2004,4.079,2005,5.638,2006,4.079,2007,4.079,2008,5.638,2009,6.97,2010,4.079,2011,4.079,2012,4.079,2013,4.079,2014,4.079,2015,4.079,2016,4.079,2017,4.079,2018,5.638,2019,4.079,2020,5.638,2021,3.577,2022,4.079,2023,3.577,2024,3.577,2025,4.079,2026,4.079,2027,4.079]],["title/injectables/NativeBrowserFileLoaderService.html",[393,0.765,908,3.43]],["body/injectables/NativeBrowserFileLoaderService.html",[0,0.154,3,0.192,4,0.192,5,0.28,7,0.205,8,0.578,10,0.858,12,0.011,13,0.205,21,0.963,41,1.702,75,0.007,76,0.007,83,0.689,86,0.858,88,1.702,89,0.578,133,0.559,135,1.646,136,0.833,137,1.405,143,1.707,147,1.653,154,3.704,232,2.847,234,2.909,258,2.041,323,1.247,326,2.858,327,1.405,333,3.606,393,1.017,395,1.593,407,1.247,425,1.212,444,1.079,492,1.963,496,1.646,498,1.285,533,3.506,570,2.052,638,1.593,682,2.555,851,3.041,892,4.559,893,4.515,894,3.755,895,5.87,896,3.069,897,4.927,898,5.204,899,2.699,900,2.699,901,2.317,902,2.125,903,2.555,904,3.907,905,2.555,906,3.333,907,2.867,908,4.559,909,2.867,910,2.867,911,4.808,912,3.66,913,3.66,914,3.66,915,5.735,916,3.66,917,5.023,918,3.66,919,5.175,920,2.909,921,1.892,922,3.66,923,3.66,924,3.66,925,1.892,926,3.66,927,5.175,928,3.66,929,3.66,930,3.506,931,3.322,932,3.66,933,3.66,934,3.66,935,3.322,936,3.322,937,3.66,938,3.66,939,3.66,940,3.322,941,3.66,942,2.867,943,3.322,944,3.66,945,3.66,946,3.66,947,3.322,948,3.069,949,5.023,950,3.322,951,3.322,952,3.66,2028,5.729,2029,4.174,2030,4.174]],["title/interfaces/OscVisualizerOptions.html",[0,0.159,311,2.194]],["body/interfaces/OscVisualizerOptions.html",[0,0.302,2,1.034,3,0.218,4,0.218,5,0.162,7,0.233,8,0.631,10,1.793,11,0.635,12,0.011,13,0.413,18,3.338,19,1.027,22,1.756,25,2.946,75,0.008,76,0.008,267,2.636,268,2.636,269,3.626,270,2.763,271,2.763,272,2.763,273,2.522,274,2.417,275,2.522,276,2.522,277,2.522,278,2.417,279,2.522,280,2.522,281,2.522,282,2.636,283,2.636,284,2.417,285,3.317,286,3.18,287,3.18,288,3.18,289,2.417,290,3.922,291,2.522,292,2.73,293,2.73,294,3.18,295,2.522,296,2.417,297,2.522,298,2.636,299,2.763,300,2.417,301,3.554,302,2.522,303,2.322,304,4.117,305,2.938,306,2.522,307,3.18,308,3.626,309,3.868,310,2.417,311,3.554,312,4.001]],["title/interfaces/OsciloscopeConfig.html",[0,0.159,289,2.194]],["body/interfaces/OsciloscopeConfig.html",[0,0.304,2,1.06,3,0.224,4,0.224,5,0.166,7,0.239,8,0.641,10,1.797,11,0.617,12,0.011,13,0.415,18,2.982,19,1.037,22,1.8,25,2.68,75,0.008,76,0.008,267,2.703,268,2.703,269,3.662,270,2.834,271,2.834,272,2.834,273,2.586,274,2.479,275,2.586,276,2.586,277,2.586,278,2.479,279,2.586,280,2.586,281,2.586,282,2.703,283,2.703,284,2.479,285,3.372,286,3.233,287,3.233,288,3.233,289,3.233,290,3.954,291,2.586,292,2.776,293,2.776,294,3.233,295,2.586,296,2.479,297,2.586,298,2.703,299,2.834,300,2.479,301,3.597,302,2.586,303,2.381,304,3.923,305,2.987,306,2.586,307,3.233,308,3.662,309,3.662,310,2.479,311,3.233,312,3.662]],["title/components/PlayerComponent.html",[84,0.966,369,1.7]],["body/components/PlayerComponent.html",[3,0.21,4,0.21,5,0.207,12,0.011,13,0.224,21,1.052,75,0.008,76,0.008,80,1.573,83,0.774,84,1.533,86,0.937,87,4.424,89,0.631,99,3.132,103,2.321,105,2.066,113,1.485,128,2.321,129,2.248,131,2.756,133,0.611,134,1.741,135,2.399,136,0.91,137,0.91,221,2.948,313,1.798,314,1.987,315,1.86,316,1.86,317,1.86,319,3.722,320,3.722,321,3.3,322,3.299,324,1.798,329,2.791,352,1.86,353,2.48,354,2.112,355,1.633,356,2.977,357,1.86,358,1.86,359,2.879,360,2.178,361,1.86,362,1.798,363,1.798,364,1.741,365,1.86,366,1.583,367,1.798,368,2.79,369,2.879,370,1.798,371,1.686,372,1.86,373,2.879,374,1.86,375,1.686,376,1.798,377,1.86,378,1.798,379,1.86,380,1.798,381,1.741,382,1.86,383,1.798,384,1.86,385,1.798,386,1.686,387,1.798,388,1.86,389,1.798,390,1.741,391,1.798,392,1.86,854,3.999,954,5.445,969,3.352,1397,4.188,1398,3.483,2031,4.56,2032,6,2033,5.445,2034,5.445,2035,6.082,2036,6.082,2037,4.471,2038,3.999,2039,3.352,2040,3.629,2041,4.56,2042,4.56,2043,3.999,2044,4.56]],["title/injectables/PlayerService.html",[100,2.392,393,0.765]],["body/injectables/PlayerService.html",[3,0.088,4,0.088,5,0.201,7,0.093,8,0.318,10,1.395,11,0.545,12,0.011,13,0.093,16,1.701,19,0.558,21,1.481,39,1.746,41,1.911,43,0.931,75,0.004,76,0.004,77,0.704,80,1.245,83,0.634,85,3.013,86,0.392,88,1.644,89,0.264,91,3.445,92,1.057,100,1.75,113,0.465,133,0.255,136,1.385,137,1.629,143,1.744,147,1.705,154,3.029,156,4.131,163,0.777,191,0.777,195,2.165,205,2.281,222,1.921,227,1.516,232,2.838,233,1.516,234,2.364,235,1.516,258,1.541,292,2.444,293,2.444,300,2.385,323,0.569,326,1.762,327,1.598,334,1.834,335,1.308,344,1.308,393,0.559,394,1.75,395,0.727,398,3.208,407,0.686,412,1.67,425,1.595,429,1.976,430,1.395,442,3.535,444,1.827,446,2.601,491,1.75,492,0.896,493,1.011,498,0.586,499,1.057,533,1.929,540,1.67,570,1.444,580,1.308,638,1.539,655,4.109,702,2.488,712,1.929,716,2.038,721,1.232,722,1.108,728,1.834,894,1.604,903,1.166,904,3.104,905,1.166,906,1.834,907,1.308,920,1.59,921,0.863,925,0.863,930,1.166,935,1.516,964,1.166,968,1.232,1043,1.834,1150,1.67,1420,1.67,1470,1.67,1534,1.232,1582,1.516,1583,1.67,1584,3.729,1585,1.67,1598,2.764,1625,3.729,1641,1.929,1642,1.308,1643,1.308,1655,1.4,1657,1.108,1693,2.165,1695,1.516,1705,1.67,1723,2.764,1742,1.67,1755,2.764,2045,1.67,2046,4.032,2047,4.032,2048,4.032,2049,4.032,2050,4.032,2051,3.152,2052,4.032,2053,3.152,2054,3.152,2055,4.032,2056,3.152,2057,2.764,2058,2.764,2059,4.686,2060,4.032,2061,3.152,2062,3.152,2063,4.109,2064,4.109,2065,1.905,2066,1.905,2067,1.905,2068,3.152,2069,1.905,2070,3.535,2071,1.905,2072,1.905,2073,1.905,2074,1.905,2075,1.905,2076,3.152,2077,1.905,2078,1.905,2079,3.152,2080,1.905,2081,3.152,2082,1.905,2083,4.686,2084,3.152,2085,1.905,2086,1.905,2087,1.905,2088,1.905,2089,1.905,2090,3.152,2091,1.905,2092,1.905,2093,1.905,2094,1.905,2095,3.152,2096,3.152,2097,3.152,2098,1.905,2099,1.905,2100,1.905,2101,5.593,2102,4.686,2103,3.152,2104,3.152,2105,1.905,2106,3.152,2107,1.905,2108,3.152,2109,1.905,2110,1.905,2111,3.152,2112,1.905,2113,1.516,2114,2.165,2115,1.905,2116,1.905,2117,1.905,2118,1.516,2119,1.4,2120,1.4,2121,1.67,2122,1.905,2123,1.905,2124,1.67,2125,1.516,2126,3.152,2127,1.905,2128,3.152,2129,1.905,2130,1.905,2131,3.152,2132,1.905,2133,3.152,2134,1.905,2135,1.905,2136,1.905,2137,1.905,2138,1.905,2139,1.905,2140,1.905,2141,1.905,2142,1.905,2143,3.152,2144,1.905,2145,3.152,2146,1.905,2147,1.905,2148,1.905,2149,3.152,2150,1.905,2151,1.905,2152,1.905,2153,3.152,2154,1.67,2155,1.67,2156,1.905,2157,1.905,2158,1.905,2159,1.905,2160,1.905,2161,1.905,2162,1.67,2163,1.905,2164,4.032,2165,1.905,2166,1.905,2167,1.905,2168,1.905,2169,1.905,2170,1.905,2171,1.905,2172,1.905,2173,1.905,2174,1.905,2175,1.905,2176,1.905,2177,1.905,2178,1.905,2179,1.905,2180,1.905,2181,1.905,2182,1.905,2183,1.905,2184,1.905,2185,1.905,2186,1.905,2187,1.905,2188,1.905,2189,1.905,2190,1.905,2191,1.905,2192,1.905,2193,1.905,2194,1.905,2195,1.905,2196,1.905,2197,1.905,2198,1.67,2199,3.152,2200,3.152,2201,2.764,2202,1.905,2203,1.905,2204,1.905,2205,4.032,2206,1.905,2207,1.905,2208,1.905,2209,1.905,2210,1.905,2211,1.905,2212,1.905,2213,3.152,2214,1.905,2215,3.152,2216,1.905,2217,1.905,2218,1.905,2219,1.67,2220,1.905,2221,4.686,2222,1.905,2223,1.905,2224,1.905,2225,1.905,2226,1.905,2227,1.905,2228,1.905,2229,1.905,2230,3.152,2231,1.905,2232,1.905,2233,1.905,2234,3.152,2235,1.166,2236,1.905,2237,2.346,2238,1.905,2239,2.769,2240,1.905,2241,1.905,2242,1.905,2243,1.905,2244,1.905,2245,1.67,2246,3.535,2247,3.208,2248,1.905,2249,1.905,2250,1.905,2251,1.905,2252,1.905]],["title/components/PlayerToolbarComponent.html",[84,0.966,370,1.7]],["body/components/PlayerToolbarComponent.html",[3,0.108,4,0.108,5,0.158,7,0.115,8,0.377,10,1.603,11,0.532,12,0.011,13,0.115,16,1.577,19,0.517,21,1.334,34,1.438,35,3.772,37,1.367,39,1.311,70,1.438,75,0.005,76,0.005,80,1.484,83,0.722,84,1.042,85,2.368,86,0.483,87,3.008,89,0.325,95,3.702,98,3.42,99,1.613,100,2.943,101,1.519,102,3.702,103,1.196,104,3.702,105,1.064,113,1.136,128,1.426,129,1.381,131,1.693,133,0.315,134,0.897,135,1.474,136,0.929,137,1.558,138,2.287,139,3.896,147,0.526,221,1.519,222,2.056,232,1.899,274,1.196,313,0.926,314,1.221,315,0.958,316,0.958,317,0.958,319,2.287,320,2.287,321,3.044,322,2.851,324,0.926,327,1.558,329,1.438,352,0.958,353,1.524,354,1.297,355,0.841,356,2.162,357,0.958,358,0.958,359,0.926,360,0.841,361,0.958,362,0.926,363,0.926,364,0.897,365,0.958,366,0.816,367,0.926,368,1.897,369,0.926,370,2.091,371,2.389,372,0.958,373,0.926,374,0.958,375,0.868,376,0.926,377,0.958,378,0.926,379,0.958,380,0.926,381,0.897,382,0.958,383,0.926,384,0.958,385,0.926,386,0.868,387,0.926,388,0.958,389,0.926,390,0.897,391,0.926,392,0.958,394,2.943,406,2.06,407,0.813,425,1.556,429,1.989,430,1.42,444,2.034,638,1.426,722,2.174,748,1.727,857,3.42,872,2.06,874,2.973,882,3.641,894,1.196,906,3.085,907,1.613,964,2.287,968,1.519,969,1.727,1043,1.367,1070,3.008,1118,1.519,1196,2.416,1313,1.727,1314,1.613,1315,1.727,1328,2.287,1641,3.245,1642,1.613,1643,2.566,1899,3.276,1980,1.869,2034,3.702,2039,1.727,2040,1.869,2057,3.276,2058,3.276,2063,4.079,2064,4.079,2121,3.276,2235,2.287,2237,3.586,2253,7.866,2254,6.897,2255,2.349,2256,3.736,2257,4.652,2258,4.652,2259,4.652,2260,4.652,2261,3.736,2262,3.736,2263,4.652,2264,3.736,2265,3.736,2266,3.736,2267,4.652,2268,3.736,2269,3.736,2270,4.652,2271,4.652,2272,2.349,2273,2.349,2274,2.349,2275,2.349,2276,2.349,2277,2.349,2278,2.349,2279,3.736,2280,2.349,2281,3.736,2282,2.349,2283,2.349,2284,2.349,2285,2.349,2286,2.349,2287,2.349,2288,2.349,2289,2.349,2290,2.349,2291,2.349,2292,2.349,2293,2.349,2294,2.349,2295,3.736,2296,2.349,2297,1.869,2298,2.06,2299,2.06,2300,2.349,2301,2.06,2302,2.349,2303,2.349,2304,2.349,2305,2.349,2306,2.349,2307,2.349,2308,3.736,2309,3.736,2310,2.349,2311,2.349,2312,2.349,2313,2.349,2314,2.349,2315,2.349,2316,2.349,2317,2.349,2318,3.736,2319,2.349,2320,3.736,2321,4.652,2322,2.349,2323,2.349,2324,2.349,2325,2.349,2326,2.349,2327,2.349,2328,2.349,2329,3.736,2330,2.349,2331,3.736,2332,2.349,2333,2.349,2334,2.349,2335,2.349,2336,2.349,2337,2.349,2338,2.349,2339,2.349,2340,2.349,2341,2.349,2342,2.349,2343,2.349,2344,2.349,2345,2.349,2346,2.349,2347,2.349,2348,2.349,2349,2.349,2350,2.349,2351,2.349,2352,2.349,2353,2.349,2354,2.349,2355,2.349,2356,2.349,2357,5.302,2358,2.349,2359,3.276,2360,5.302,2361,3.736,2362,3.736,2363,3.736,2364,3.736,2365,3.736,2366,3.736]],["title/components/PlaylistComponent.html",[84,0.966,373,1.7]],["body/components/PlaylistComponent.html",[3,0.104,4,0.104,5,0.124,7,0.178,8,0.367,10,0.934,11,0.469,12,0.011,13,0.111,19,0.503,21,0.523,39,1.025,41,1.482,43,2.223,45,1.259,75,0.005,76,0.005,80,1.436,83,0.717,84,1.019,85,2.314,86,0.466,88,2.475,89,0.314,91,3.441,92,1.259,93,2.939,94,1.467,98,1.668,99,1.558,100,2.885,101,1.467,103,1.155,105,1.028,106,3.618,107,3.618,108,3.618,109,1.805,110,3.618,111,1.668,112,1.155,113,0.887,115,3.618,116,1.668,124,1.668,125,1.668,128,1.387,129,1.343,131,1.647,133,0.304,134,0.866,136,1.273,137,1.322,138,2.224,139,2.314,143,1.788,147,1.484,202,1.389,222,1.319,232,1.628,265,2.892,313,0.895,314,1.187,315,0.925,316,0.925,317,0.925,319,2.224,320,2.224,321,3.026,322,2.92,324,0.895,326,1.987,327,1.273,329,1.389,352,0.925,353,1.482,354,1.262,355,0.813,356,2.12,357,0.925,358,0.925,359,0.895,360,0.813,361,0.925,362,0.895,363,0.895,364,0.866,365,0.925,366,0.788,367,0.895,368,1.854,369,0.895,370,0.895,371,0.839,372,0.925,373,2.05,374,0.925,375,0.839,376,0.895,377,0.925,378,0.895,379,0.925,380,0.895,381,0.866,382,0.925,383,0.895,384,0.925,385,0.895,386,0.839,387,0.895,388,0.925,389,0.895,390,1.984,391,0.895,392,0.925,394,2.017,404,4.558,407,0.791,425,1.203,429,1.751,430,1.169,444,0.587,445,3.122,477,1.668,515,1.805,532,1.989,578,2.781,693,1.989,728,3.025,741,1.558,873,4.137,920,1.433,936,2.892,950,2.892,964,1.389,967,1.805,968,1.467,973,3.187,987,1.668,1016,1.668,1071,1.558,1119,1.989,1120,1.989,1126,3.187,1135,3.618,1178,3.187,1179,3.187,1316,1.668,1397,2.782,1398,2.314,1405,1.805,1465,3.986,1605,3.187,1625,5.577,1715,1.989,1716,3.986,1718,1.989,1807,1.989,1874,1.989,1875,1.989,1916,3.187,2034,3.618,2070,6.661,2113,1.805,2118,1.805,2119,1.668,2120,1.668,2124,1.989,2125,1.805,2154,1.989,2198,3.187,2219,3.187,2367,2.269,2368,3.986,2369,3.986,2370,4.546,2371,3.634,2372,3.634,2373,3.634,2374,3.634,2375,3.634,2376,2.269,2377,5.198,2378,2.269,2379,5.198,2380,2.269,2381,3.634,2382,4.546,2383,2.269,2384,3.634,2385,2.269,2386,2.269,2387,2.269,2388,2.269,2389,1.805,2390,2.269,2391,2.269,2392,2.269,2393,2.269,2394,2.269,2395,2.269,2396,2.269,2397,2.269,2398,6.069,2399,2.269,2400,3.986,2401,6.832,2402,4.546,2403,2.269,2404,2.269,2405,2.269,2406,3.634,2407,2.269,2408,3.634,2409,2.269,2410,2.269,2411,3.634,2412,2.269,2413,2.269,2414,1.989,2415,4.546,2416,2.269,2417,2.269,2418,2.269,2419,2.269,2420,2.269,2421,1.989,2422,3.634,2423,2.269,2424,1.389,2425,2.269,2426,2.269,2427,2.269,2428,2.269,2429,4.546,2430,2.269,2431,5.198,2432,2.269,2433,2.269,2434,2.269,2435,3.634,2436,2.269,2437,2.269,2438,2.269,2439,3.634,2440,3.634,2441,4.546,2442,2.269,2443,2.269,2444,3.634,2445,2.269,2446,2.269,2447,3.634,2448,2.269,2449,4.546,2450,2.269,2451,2.269,2452,3.634,2453,3.634,2454,2.269,2455,4.546,2456,2.269,2457,1.989,2458,2.269,2459,2.269,2460,3.634,2461,2.269,2462,2.269,2463,3.634,2464,2.269,2465,2.269,2466,1.989,2467,2.269,2468,2.269,2469,2.269,2470,2.269,2471,2.269,2472,2.269,2473,3.634,2474,2.269,2475,2.269,2476,2.269,2477,2.269,2478,2.269,2479,2.269,2480,2.269,2481,2.269,2482,3.634,2483,3.634,2484,5.198,2485,3.634,2486,3.634,2487,3.634]],["title/components/PromptDialogComponent.html",[84,0.966,375,1.593]],["body/components/PromptDialogComponent.html",[0,0.161,3,0.2,4,0.2,5,0.2,7,0.213,8,0.594,12,0.011,13,0.289,19,0.924,21,1.358,75,0.007,76,0.007,80,1.556,83,0.623,84,1.496,86,0.893,89,0.601,105,1.969,113,1.438,128,2.247,129,2.176,133,0.582,134,1.659,191,1.772,222,1.709,313,1.714,314,1.923,315,1.772,316,1.772,317,1.772,321,3.302,322,3.319,324,1.714,327,1.429,352,1.772,353,2.401,354,2.044,355,1.556,356,2.919,357,1.772,358,1.772,359,1.714,360,1.556,361,1.772,362,1.714,363,1.714,364,1.659,365,1.772,366,1.509,367,1.714,368,2.723,369,1.714,370,1.714,371,1.606,372,1.772,373,1.714,374,1.772,375,2.646,376,2.95,377,1.772,378,1.714,379,1.772,380,1.714,381,1.659,382,1.772,383,1.714,384,1.772,385,1.714,386,1.606,387,1.714,388,1.772,389,1.714,390,1.659,391,1.714,392,1.772,407,1.282,425,1.246,444,1.522,580,5.297,1064,5.499,1319,2.66,1320,2.529,1331,3.807,1337,4.087,1386,2.549,1393,3.195,1394,3.195,1395,4.909,1398,3.399,1399,4.328,1401,4.328,1402,4.328,1409,3.81,1508,2.412,2488,6.559,2489,6.559,2490,6.276,2491,4.346,2492,4.346,2493,4.346,2494,3.195,2495,3.458,2496,3.81,2497,3.81,2498,5.888,2499,5.888,2500,5.888]],["title/interfaces/PromptDialogData.html",[0,0.159,2494,3.169]],["body/interfaces/PromptDialogData.html",[0,0.209,2,1.23,3,0.26,4,0.26,5,0.192,7,0.277,8,0.704,11,0.624,12,0.011,13,0.342,19,1.182,75,0.009,76,0.009,83,0.707,84,1.564,86,1.161,89,0.782,105,2.56,128,2.156,129,2.088,133,0.757,191,3.225,321,2.156,322,2.228,375,2.088,376,2.752,580,3.88,1064,4.153,1319,3.457,1320,3.287,1331,3.652,1337,3.457,1386,2.156,1393,4.153,1394,4.153,1395,5.13,1398,3.552,1399,4.153,1401,4.153,1402,4.153,1508,4.39,2488,4.953,2489,4.953,2490,4.953,2494,5.13,2495,6.294,2496,4.953,2497,4.953]],["title/interfaces/RemoteCoverArtUrls.html",[0,0.159,82,1.645]],["body/interfaces/RemoteCoverArtUrls.html",[0,0.302,2,1.25,3,0.264,4,0.264,5,0.259,7,0.282,8,0.711,11,0.581,12,0.011,13,0.401,19,1.199,75,0.009,76,0.009,82,2.69,83,0.536,570,2.056,706,2.422,707,2.921,832,3.186,836,5.442,837,2.341,838,3.942,839,3.711,840,3.08,841,2.7,842,3.34,843,3.711,844,3.711,845,3.711,846,3.711,847,3.711,848,3.888,849,3.888,850,3.513,851,3.742,852,3.513,853,2.921]],["title/components/SettingsComponent.html",[84,0.966,378,1.7]],["body/components/SettingsComponent.html",[3,0.231,4,0.231,5,0.22,12,0.011,13,0.246,21,1.157,75,0.008,76,0.008,80,1.605,83,0.707,84,1.606,89,0.694,113,1.75,128,2.471,129,2.393,131,2.933,133,0.672,134,1.914,313,1.978,314,2.115,315,2.045,316,2.045,317,2.045,321,3.332,322,3.35,324,1.978,352,2.045,353,2.64,354,2.248,355,1.796,356,3.089,357,2.045,358,2.045,359,1.978,360,1.796,361,2.045,362,1.978,363,1.978,364,1.914,365,2.045,366,1.741,367,2.987,368,2.923,369,1.978,370,1.978,371,1.854,372,2.045,373,1.978,374,2.045,375,1.854,376,1.978,377,2.045,378,2.987,379,2.045,380,1.978,381,1.914,382,2.045,383,2.987,384,2.64,385,2.987,386,2.393,387,1.978,388,2.045,389,1.978,390,1.914,391,1.978,392,2.045,1935,4.398,1939,4.759,1940,5.676,2501,5.016,2502,4.398,2503,7.168,2504,4.398]],["title/components/ShellComponent.html",[84,0.966,324,1.7]],["body/components/ShellComponent.html",[3,0.129,4,0.129,5,0.242,7,0.138,8,0.434,11,0.43,12,0.011,13,0.138,16,1.816,19,0.723,21,1.594,75,0.005,76,0.005,80,1.47,83,0.766,84,1.17,86,0.579,89,0.39,93,3.377,94,1.82,100,3.246,103,1.433,105,1.276,112,1.433,113,1.051,124,3.164,125,2.07,128,1.643,129,1.591,131,1.95,133,0.377,134,1.075,136,1.168,137,1.654,138,2.634,139,4.131,143,1.17,147,0.964,173,1.563,222,1.516,232,2.38,234,1.075,258,2.104,313,1.11,314,1.406,315,1.148,316,1.148,317,1.148,321,3.133,322,3.07,324,2.307,327,1.459,352,1.148,353,1.755,354,1.494,355,1.008,356,2.385,357,1.148,358,1.148,359,1.11,360,1.008,361,1.148,362,1.11,363,2.307,364,1.643,365,1.148,366,0.978,367,1.11,368,2.13,369,1.11,370,2.307,371,1.931,372,1.148,373,1.11,374,1.148,375,1.041,376,1.11,377,1.148,378,1.11,379,1.148,380,1.11,381,1.075,382,1.148,383,1.11,384,1.148,385,1.11,386,1.041,387,1.11,388,1.148,389,1.11,390,1.075,391,1.11,392,1.148,407,0.937,425,1.105,429,1.608,430,1.074,444,1.787,446,3.246,496,1.11,556,2.634,682,3.197,710,3.197,873,3.424,874,3.424,875,3.774,876,3.774,877,5.129,894,1.433,903,3.197,904,2.899,905,1.723,943,2.24,967,2.24,974,3.424,1043,1.638,1065,2.469,1071,1.934,1322,2.956,1397,3.197,1398,2.659,1641,3.58,1642,1.934,1643,2.956,1657,2.504,1675,2.469,1676,4.3,1678,3.774,1959,2.469,2032,4.58,2037,4.3,2038,2.469,2040,2.24,2043,3.774,2119,2.07,2120,2.07,2162,2.469,2254,2.469,2369,4.58,2505,2.816,2506,4.303,2507,5.224,2508,5.224,2509,5.224,2510,4.303,2511,4.303,2512,5.224,2513,6.644,2514,4.303,2515,4.303,2516,4.303,2517,4.303,2518,6.302,2519,2.816,2520,2.469,2521,4.303,2522,2.816,2523,4.303,2524,2.816,2525,2.816,2526,4.303,2527,4.303,2528,2.816,2529,2.816,2530,2.816,2531,2.816,2532,2.816,2533,4.303,2534,2.816,2535,2.816,2536,2.816,2537,2.816,2538,4.303,2539,2.469,2540,4.303,2541,2.816,2542,2.816,2543,2.24,2544,2.816,2545,2.816,2546,2.816,2547,2.816,2548,2.816,2549,2.816,2550,2.816,2551,2.816,2552,2.816,2553,2.816,2554,2.816,2555,2.816,2556,2.816,2557,2.816,2558,2.816,2559,2.816,2560,2.816,2561,2.816,2562,2.816,2563,2.816,2564,2.816,2565,5.849,2566,4.303,2567,4.303,2568,4.303]],["title/components/SlidePanelComponent.html",[84,0.966,380,1.7]],["body/components/SlidePanelComponent.html",[3,0.129,4,0.129,5,0.146,7,0.138,8,0.433,11,0.614,12,0.011,13,0.138,19,1.01,21,1.683,22,1.926,75,0.005,76,0.005,80,1.381,83,0.587,84,1.168,89,0.388,103,1.427,105,1.271,113,1.048,128,1.638,129,1.586,131,1.944,133,0.376,134,1.07,135,1.692,137,0.56,205,1.144,222,1.512,313,1.106,314,1.402,315,1.144,316,1.144,317,1.144,321,3.131,322,3.068,324,1.106,327,1.569,352,1.144,353,1.75,354,1.49,355,1.004,356,2.38,357,1.144,358,1.144,359,1.106,360,1.004,361,1.144,362,1.106,363,1.106,364,1.07,365,1.144,366,0.974,367,1.106,368,2.125,369,1.106,370,1.106,371,1.037,372,1.144,373,1.106,374,1.144,375,1.037,376,1.106,377,1.144,378,1.106,379,1.144,380,2.302,381,3.028,382,1.144,383,1.106,384,1.144,385,1.106,386,1.037,387,1.106,388,1.144,389,1.106,390,1.07,391,1.106,392,1.144,407,0.934,425,0.908,444,1.887,446,3.952,533,4.225,638,2.843,639,2.062,985,3.579,987,3.831,1040,4.645,1064,5.833,1077,3.414,1092,5.534,1397,3.189,1398,2.652,2033,4.147,2039,2.062,2201,2.459,2235,2.626,2237,3.396,2239,4.556,2368,4.569,2389,2.232,2400,4.569,2466,4.569,2569,6.957,2570,7.934,2571,2.804,2572,5.211,2573,5.475,2574,4.291,2575,4.291,2576,5.211,2577,5.837,2578,5.837,2579,5.211,2580,6.29,2581,6.903,2582,5.211,2583,5.211,2584,4.291,2585,4.291,2586,4.291,2587,2.804,2588,5.837,2589,2.804,2590,2.804,2591,6.634,2592,2.804,2593,2.804,2594,2.804,2595,2.804,2596,2.804,2597,4.291,2598,4.291,2599,2.804,2600,2.804,2601,4.291,2602,4.291,2603,4.291,2604,4.291,2605,6.634,2606,6.903,2607,7.12,2608,2.804,2609,2.459,2610,2.804,2611,2.804,2612,6.634,2613,6.29,2614,6.634,2615,2.804,2616,2.804,2617,2.804,2618,2.804,2619,2.804,2620,2.804,2621,2.804,2622,2.804,2623,2.804,2624,2.804,2625,2.804,2626,2.804,2627,5.211,2628,5.837,2629,5.837]],["title/components/StorageSettingsComponent.html",[84,0.966,383,1.7]],["body/components/StorageSettingsComponent.html",[3,0.217,4,0.217,5,0.211,7,0.231,12,0.011,13,0.231,75,0.008,76,0.008,80,1.584,83,0.69,84,1.558,86,0.968,89,0.652,105,2.134,113,1.517,128,2.372,129,2.297,133,0.631,134,1.798,136,0.94,137,0.94,222,1.367,313,1.858,314,2.03,315,1.921,316,1.921,317,1.921,321,3.328,322,3.357,324,1.858,327,0.94,352,1.921,353,2.534,354,2.157,355,1.687,356,3.015,357,1.921,358,1.921,359,1.858,360,1.687,361,1.921,362,1.858,363,1.858,364,1.798,365,1.921,366,1.635,367,1.858,368,2.835,369,1.858,370,1.858,371,1.741,372,1.921,373,1.858,374,1.921,375,1.741,376,1.858,377,1.921,378,1.858,379,1.921,380,1.858,381,1.798,382,1.921,383,2.916,384,3.282,385,1.858,386,1.741,387,1.858,388,1.921,389,1.858,390,1.798,391,1.858,392,1.921,407,1.353,425,0.996,491,2.614,492,2.215,493,2.501,499,2.614,556,4.831,557,3.748,989,4.944,1289,4.568,1398,3.539,1827,4.944,1936,3.748,1937,5.533,1939,4.568,1960,3.748,2502,5.448,2630,6.214,2631,7.393,2632,4.13,2633,4.71]],["title/interfaces/TagsWorkerRequest.html",[0,0.159,850,2.638]],["body/interfaces/TagsWorkerRequest.html",[0,0.302,2,1.25,3,0.264,4,0.264,5,0.289,7,0.282,8,0.711,11,0.581,12,0.011,13,0.401,19,1.185,75,0.009,76,0.009,82,2.191,83,0.536,570,2.056,706,2.422,707,2.921,832,3.186,836,5.442,837,2.341,838,3.942,839,3.711,840,3.08,841,2.7,842,3.34,843,3.711,844,3.711,845,3.711,846,3.711,847,3.711,848,2.806,849,2.806,850,4.313,851,4.334,852,3.513,853,2.921]],["title/interfaces/TagsWorkerResponse.html",[0,0.159,852,2.638]],["body/interfaces/TagsWorkerResponse.html",[0,0.3,2,1.223,3,0.258,4,0.258,5,0.257,7,0.276,8,0.702,11,0.622,12,0.011,13,0.398,19,1.195,75,0.009,76,0.009,82,2.144,83,0.524,430,1.622,570,2.827,706,2.37,707,2.858,832,3.117,836,5.417,837,2.29,838,3.857,839,3.631,840,3.45,841,2.641,842,3.268,843,3.631,844,3.631,845,3.631,846,3.631,847,3.631,848,2.746,849,2.746,850,3.437,851,4.307,852,4.256,853,4.017]],["title/interfaces/ThemeColor.html",[0,0.159,731,3.169]],["body/interfaces/ThemeColor.html",[0,0.233,2,1.371,3,0.289,4,0.289,5,0.214,7,0.309,8,0.752,11,0.654,12,0.011,13,0.309,19,1.175,22,2.934,75,0.009,76,0.009,80,1.591,731,5.478,832,4.554,834,6.528,2634,6.295]],["title/injectables/ThemeService.html",[334,2.508,393,0.765]],["body/injectables/ThemeService.html",[0,0.112,3,0.139,4,0.139,5,0.103,7,0.148,8,0.458,10,0.934,11,0.5,12,0.011,13,0.148,19,1.051,21,1.575,22,2.017,39,0.852,59,1.678,75,0.006,76,0.006,80,1.374,83,0.661,85,3.309,86,0.621,88,1.233,89,0.419,133,0.405,136,1.414,137,1.638,143,1.457,147,1.223,222,1.887,323,0.904,326,2.384,327,1.54,332,1.759,333,1.478,334,2.643,386,2.017,393,0.806,395,1.154,407,0.989,425,1.375,429,1.867,430,1.247,444,1.681,491,2.521,492,1.422,493,1.605,498,0.931,499,1.678,605,2.077,702,3.22,723,3.615,724,2.651,725,6.537,726,6.39,727,7.153,728,3.783,729,3.615,730,4.827,731,4.011,732,2.651,733,4.78,734,4.78,735,3.12,736,2.651,737,2.651,738,2.651,739,2.651,740,2.651,741,2.077,742,2.651,743,2.651,744,3.983,745,2.651,746,2.406,747,2.651,748,2.223,749,2.651,750,3.983,751,2.406,752,2.406,753,2.651,754,2.651,755,2.651,756,2.651,757,2.651,758,2.651,759,2.651,760,2.651,761,2.651,762,2.651,763,2.651,764,2.651,765,2.406,766,5.319,767,3.983,768,3.983,769,5.296,770,4.784,771,3.983,772,4.784,773,3.983,774,4.784,775,3.983,776,4.784,777,3.983,778,4.784,779,3.983,780,2.651,781,2.651,782,2.651,783,2.651,784,3.983,785,3.983,786,2.651,787,4.784,788,2.651,789,3.983,790,2.651,791,2.651,792,5.319,793,3.983,794,2.651,795,3.983,796,2.651,797,2.651,798,3.983,799,2.651,800,3.983,801,2.651,802,2.651,803,2.223,804,2.406,805,2.651,806,2.651,807,3.983,808,2.651,809,3.983,810,3.983,811,2.651,812,2.406,813,2.651,814,2.651,815,2.651,816,2.651,817,2.223,818,2.651,819,3.983,820,2.651,821,2.651,822,2.651,823,2.651,824,2.651,825,2.651,826,2.651,827,2.651,828,2.651,829,3.983,830,2.651,831,2.651,832,1.678,833,2.651,834,2.406,835,2.651,2635,4.542,2636,4.542,2637,4.542,2638,4.542,2639,4.542,2640,3.024,2641,3.024,2642,3.024,2643,3.024,2644,3.024,2645,3.024,2646,3.024,2647,3.024,2648,3.024]],["title/components/ThemeSettingsComponent.html",[84,0.966,385,1.7]],["body/components/ThemeSettingsComponent.html",[3,0.209,4,0.209,5,0.207,7,0.223,8,0.613,11,0.375,12,0.011,13,0.223,18,2.564,21,1.05,75,0.008,76,0.008,80,1.592,83,0.681,84,1.532,86,0.936,89,0.63,113,1.483,128,2.319,129,2.246,133,0.61,134,1.738,137,1.365,139,3.48,222,1.321,313,1.796,314,1.985,315,1.857,316,1.857,317,1.857,321,3.317,322,3.341,324,1.796,327,1.213,334,4.244,335,3.127,344,4.172,352,1.857,353,2.477,354,2.109,355,1.631,356,2.975,357,1.857,358,1.857,359,1.796,360,1.631,361,1.857,362,1.796,363,1.796,364,1.738,365,1.857,366,1.581,367,1.796,368,2.788,369,1.796,370,1.796,371,1.683,372,1.857,373,1.796,374,1.857,375,1.683,376,1.796,377,1.857,378,1.796,379,1.857,380,1.796,381,1.738,382,1.857,383,1.796,384,1.857,385,2.877,386,2.95,387,1.796,388,1.857,389,1.796,390,1.738,391,1.796,392,1.857,407,1.323,425,0.963,429,1.401,430,0.936,444,1.177,556,3.718,578,2.226,735,4.172,804,4.834,1936,3.623,1937,5.441,1939,4.466,1960,3.623,2504,5.995,2632,3.992,2649,6.837,2650,6.837,2651,6.075,2652,6.075,2653,7.295,2654,4.553,2655,4.553,2656,4.553]],["title/pipes/TimePipe.html",[112,2.194,857,3.169]],["body/pipes/TimePipe.html",[3,0.272,4,0.272,5,0.201,10,1.589,11,0.487,12,0.011,13,0.29,16,2.497,19,0.994,75,0.009,76,0.009,80,1.499,83,0.67,89,0.819,112,3.654,113,1.445,133,0.793,135,2.334,147,1.326,205,3.152,327,1.181,407,1.288,425,1.252,429,1.821,430,1.216,444,1.53,635,4.35,637,5.713,638,2.741,639,4.35,640,5.713,642,5.713,857,5.278,882,4.931,1980,4.709,2297,4.709,2657,5.918,2658,7.729,2659,5.918,2660,5.189]],["title/injectables/TitleService.html",[393,0.765,2037,3.169]],["body/injectables/TitleService.html",[3,0.27,4,0.27,5,0.2,7,0.288,8,0.721,11,0.483,12,0.011,13,0.288,19,1.066,21,1.353,75,0.009,76,0.009,80,1.138,83,0.667,86,1.206,88,3.141,89,0.812,133,0.786,136,1.172,137,1.6,191,3.35,222,1.703,323,1.754,327,1.426,332,3.415,333,2.869,393,1.268,395,2.24,407,1.555,425,1.242,429,1.806,430,1.206,444,1.518,498,1.806,2037,5.252,2661,5.869,2662,7.144,2663,7.144,2664,5.869,2665,5.869,2666,5.869,2667,5.869,2668,5.869,2669,5.869]],["title/interfaces/Track.html",[0,0.159,91,1.884]],["body/interfaces/Track.html",[0,0.282,2,1.119,3,0.236,4,0.236,5,0.283,7,0.252,8,0.664,11,0.666,12,0.011,13,0.403,19,1.163,25,2.17,75,0.008,76,0.008,77,1.901,79,2.992,81,2.73,82,2.511,83,0.677,90,2.854,91,3.17,113,2.006,114,3.324,143,1.474,163,2.097,191,2.097,258,3.863,292,2.247,293,2.247,430,1.352,433,4.026,466,3.324,467,3.324,468,3.324,469,3.324,470,3.324,471,2.854,472,3.324,473,3.324,474,3.324,475,3.324,494,3.147,555,3.531,702,2.73,703,3.324,704,4.026,705,3.147,706,2.17,707,3.348,708,4.253,709,2.854,710,4.679,711,5.109,712,3.147,713,3.531,714,2.418,715,3.531,716,3.324,717,3.78,718,3.531,719,3.78,720,3.78,721,3.324,722,2.992]],["title/interfaces/TrackMetadata.html",[0,0.159,711,2.787]],["body/interfaces/TrackMetadata.html",[0,0.271,2,1.001,3,0.211,4,0.211,5,0.234,7,0.226,8,0.617,11,0.702,12,0.011,13,0.393,19,1.211,25,1.94,75,0.008,76,0.008,77,2.707,79,4.261,81,3.888,82,2.795,83,0.641,90,2.551,91,3.332,113,1.788,114,2.972,143,1.37,163,2.986,191,2.986,258,2.989,292,2.009,293,2.009,430,1.733,433,3.742,466,2.972,467,2.972,468,2.972,469,2.972,470,2.972,471,2.551,472,2.972,473,2.972,474,2.972,475,2.972,494,2.813,555,3.157,702,2.441,703,2.972,704,4.482,705,2.813,706,1.94,707,3.727,708,4.734,709,2.551,710,3.742,711,4.734,712,4.482,713,5.029,714,3.444,715,5.029,716,4.734,717,3.379,718,3.157,719,3.379,720,3.379,721,2.972,722,2.675]],["title/injectables/UpdateService.html",[336,3.43,393,0.765]],["body/injectables/UpdateService.html",[3,0.205,4,0.205,5,0.151,7,0.218,12,0.011,13,0.218,75,0.008,76,0.008,83,0.725,86,0.914,89,0.615,133,0.596,136,1.55,137,1.349,143,1.514,147,1.514,164,1.754,191,1.813,202,2.722,222,1.736,232,2.842,234,2.283,323,1.329,327,1.194,336,4.759,375,1.644,393,1.061,395,1.697,407,1.302,425,1.265,446,3.75,496,1.754,498,1.369,570,2.142,580,4.962,605,4.962,638,2.283,902,2.263,920,2.974,921,2.015,925,2.015,1239,3.899,1318,3.269,1320,2.587,1331,2.875,1332,3.269,1386,2.579,1445,3.269,1508,2.468,1655,3.269,1808,3.899,2113,4.759,2118,3.539,2119,3.269,2120,3.269,2125,3.539,2235,2.722,2237,3.931,2239,4.64,2494,4.396,2495,3.539,2543,3.539,2670,4.447,2671,7.226,2672,7.226,2673,4.447,2674,4.447,2675,5.98,2676,5.98,2677,3.899,2678,4.447,2679,4.447,2680,4.447,2681,4.447,2682,5.98,2683,4.447,2684,4.447,2685,4.447,2686,4.447,2687,4.447,2688,4.447,2689,4.447,2690,5.312,2691,5.98,2692,4.447,2693,4.447,2694,4.447,2695,4.447,2696,4.447,2697,4.447,2698,4.447,2699,4.447,2700,4.447,2701,4.447,2702,5.98,2703,4.447,2704,4.447,2705,4.447,2706,4.447,2707,3.899,2708,4.447,2709,4.447,2710,4.447,2711,4.447,2712,4.447,2713,4.447,2714,4.447,2715,4.447,2716,4.447,2717,4.447]],["title/components/VisualizerComponent.html",[84,0.966,387,1.7]],["body/components/VisualizerComponent.html",[3,0.082,4,0.082,5,0.102,7,0.088,8,0.302,10,1.602,11,0.56,12,0.011,13,0.088,21,1.695,37,1.04,43,1.461,47,1.933,55,1.829,75,0.004,76,0.004,80,1.425,83,0.678,84,0.863,85,3.19,86,0.367,87,2.491,88,0.729,89,0.247,91,1.306,100,1.659,101,1.156,103,0.91,105,0.81,113,0.73,128,1.141,129,1.105,131,1.354,133,0.239,134,0.682,135,1.179,136,0.769,137,1.693,138,1.094,139,4.203,147,1.351,221,1.156,222,1.929,269,3.064,273,1.587,274,1.521,275,1.587,276,1.587,277,1.587,278,1.521,279,2.391,280,1.587,281,1.587,282,1.659,283,1.659,284,0.91,285,2.66,286,2.551,287,2.928,288,2.551,289,0.91,290,2.292,294,2.551,305,3.319,308,3.163,309,2.948,312,2.948,313,0.705,314,0.976,315,0.729,316,0.729,317,0.729,319,1.829,320,1.829,321,2.89,322,2.735,324,0.705,326,1.684,327,1.581,329,1.094,352,0.729,353,1.219,354,1.038,355,0.64,356,1.836,357,0.729,358,0.729,359,0.705,360,0.64,361,0.729,362,0.705,363,0.705,364,0.682,365,0.729,366,0.621,367,0.705,368,1.571,369,0.705,370,0.705,371,0.661,372,0.729,373,0.705,374,0.729,375,0.661,376,0.705,377,0.729,378,0.705,379,0.729,380,1.776,381,0.682,382,0.729,383,0.705,384,0.729,385,0.705,386,0.661,387,1.776,388,2.043,389,0.705,390,1.719,391,0.705,392,0.729,394,2.5,407,0.651,425,1.326,427,2.379,429,1.929,430,1.33,431,3.066,444,2.166,487,2.379,491,1.659,492,0.841,493,0.949,499,0.992,638,0.682,651,4.95,702,2.046,901,1.659,954,3.066,964,1.829,968,1.156,969,1.314,987,2.198,1014,2.379,1070,2.491,1118,1.156,1187,1.739,1196,1.933,1397,2.358,1398,1.961,1895,2.621,2033,3.066,2039,1.314,2235,1.829,2237,3.765,2247,2.379,2298,1.567,2299,1.567,2301,1.567,2359,2.621,2543,1.422,2569,1.567,2573,1.314,2718,1.787,2719,3.853,2720,3.853,2721,2.989,2722,2.989,2723,3.378,2724,5.011,2725,3.853,2726,3.853,2727,3.378,2728,5.011,2729,5.011,2730,3.584,2731,2.989,2732,2.989,2733,2.989,2734,2.989,2735,2.989,2736,2.989,2737,2.989,2738,2.989,2739,2.989,2740,2.989,2741,2.989,2742,1.787,2743,2.989,2744,1.787,2745,2.989,2746,1.787,2747,2.989,2748,1.787,2749,2.989,2750,1.787,2751,2.989,2752,1.787,2753,2.989,2754,1.787,2755,2.989,2756,1.787,2757,2.989,2758,1.787,2759,2.989,2760,1.787,2761,2.621,2762,1.787,2763,2.989,2764,1.787,2765,2.989,2766,2.989,2767,2.989,2768,2.989,2769,1.787,2770,2.989,2771,1.787,2772,2.989,2773,1.787,2774,2.989,2775,2.989,2776,1.787,2777,1.787,2778,2.989,2779,1.787,2780,2.989,2781,1.787,2782,2.989,2783,1.787,2784,2.989,2785,2.989,2786,1.787,2787,2.989,2788,1.787,2789,2.989,2790,1.787,2791,2.989,2792,2.989,2793,1.787,2794,2.989,2795,1.787,2796,1.787,2797,1.787,2798,1.787,2799,1.787,2800,1.787,2801,2.989,2802,1.787,2803,2.989,2804,1.787,2805,2.989,2806,1.787,2807,1.787,2808,1.787,2809,1.787,2810,1.787,2811,1.787,2812,1.787,2813,1.787,2814,1.787,2815,1.787,2816,1.787,2817,1.787,2818,1.787,2819,1.787,2820,1.787,2821,1.787,2822,1.787,2823,1.787,2824,1.787,2825,1.787,2826,1.787,2827,1.787,2828,1.787,2829,1.787,2830,1.787,2831,2.989,2832,2.989,2833,5.418,2834,2.989,2835,4.503,2836,2.989]],["title/interfaces/VisualsColorConfig.html",[0,0.159,291,2.288]],["body/interfaces/VisualsColorConfig.html",[0,0.302,2,1.026,3,0.217,4,0.217,5,0.16,7,0.231,8,0.627,10,1.792,11,0.65,12,0.011,13,0.413,18,2.934,19,1.131,22,1.741,25,2.622,75,0.008,76,0.008,267,2.614,268,2.614,269,3.615,270,2.741,271,2.741,272,2.741,273,2.501,274,2.397,275,2.501,276,2.501,277,2.501,278,2.397,279,2.501,280,2.501,281,2.501,282,2.614,283,2.614,284,2.397,285,3.299,286,3.163,287,3.163,288,3.163,289,2.397,290,3.163,291,3.299,292,3.359,293,3.359,294,3.912,295,2.501,296,2.397,297,2.501,298,2.614,299,2.741,300,2.397,301,3.539,302,2.501,303,2.303,304,3.859,305,2.923,306,2.501,307,3.163,308,3.615,309,3.615,310,2.397,311,3.163,312,3.615,430,1.622]],["title/directives/VisualsDirective.html",[355,1.544,390,1.645]],["body/directives/VisualsDirective.html",[3,0.124,4,0.124,5,0.092,7,0.133,10,0.556,11,0.595,12,0.011,13,0.133,18,2.611,21,1.32,22,2.417,39,1.744,41,2.335,43,2.04,75,0.005,76,0.005,80,0.809,83,0.475,86,0.556,89,0.374,113,0.66,133,0.362,135,1.645,136,1.405,137,1.235,143,1.846,147,1.141,164,1.645,190,3.293,205,1.701,217,1.857,222,1.478,269,1.322,284,2.123,285,2.704,286,2.593,287,2.593,288,2.593,289,2.123,290,2.593,291,2.215,292,1.823,293,1.823,294,2.123,295,3.618,296,2.593,297,3.04,298,2.316,300,1.376,301,2.123,302,1.436,303,1.322,305,1.962,306,2.215,308,3.025,309,3.44,310,1.376,312,2.799,321,1.592,326,2.226,327,1.472,355,1.494,389,1.066,390,1.592,391,1.645,394,2.316,407,0.908,421,3.32,425,1.078,427,5.203,429,1.284,430,0.857,431,4.053,444,1.481,471,1.501,487,3.32,517,2.371,520,1.857,577,1.988,578,1.322,638,1.032,669,2.371,702,3.285,728,2.427,733,3.745,734,3.745,752,2.152,882,1.857,897,1.748,964,1.655,966,2.152,968,1.748,991,3.658,1014,3.32,1070,3.293,1077,3.32,1092,4.249,1118,1.748,1155,2.371,1187,1.573,1294,2.371,1386,1.944,1445,4.21,1450,2.371,1452,2.371,1453,2.152,1511,1.748,1773,2.371,2235,1.655,2237,3.332,2239,3.933,2707,2.371,2723,4.466,2727,4.466,2761,2.371,2837,2.371,2838,5.726,2839,4.172,2840,4.172,2841,2.704,2842,2.704,2843,2.704,2844,2.704,2845,2.704,2846,2.704,2847,2.704,2848,4.172,2849,2.704,2850,4.172,2851,2.704,2852,2.704,2853,2.704,2854,2.371,2855,2.371,2856,2.371,2857,2.704,2858,2.704,2859,2.704,2860,2.704,2861,2.704,2862,4.172,2863,2.704,2864,2.704,2865,2.704,2866,2.704,2867,2.704,2868,2.704,2869,2.704,2870,2.704,2871,2.704,2872,6.814,2873,2.704,2874,2.704,2875,2.704,2876,1.988,2877,4.172,2878,2.704,2879,2.704,2880,2.704,2881,2.704,2882,2.704,2883,2.704,2884,5.093,2885,2.704,2886,4.172,2887,4.172,2888,2.704,2889,2.704,2890,2.704,2891,5.726,2892,2.704,2893,2.704,2894,2.704,2895,2.704,2896,2.704,2897,2.704,2898,4.172,2899,2.704,2900,2.704,2901,2.704,2902,5.093,2903,5.726,2904,2.704,2905,2.704,2906,2.704,2907,2.704,2908,4.172,2909,4.172,2910,4.172,2911,5.093,2912,2.704,2913,2.704,2914,2.704,2915,2.704,2916,2.704,2917,2.704,2918,2.704,2919,2.704,2920,2.704,2921,6.814,2922,4.172,2923,4.172,2924,2.704,2925,2.371,2926,4.172,2927,5.093,2928,4.172,2929,2.704,2930,2.704,2931,2.704,2932,2.704,2933,2.704,2934,2.704,2935,2.704,2936,4.466,2937,4.172,2938,2.704,2939,2.704,2940,2.704,2941,2.704,2942,2.704,2943,2.704,2944,2.704,2945,2.704,2946,2.704,2947,2.704,2948,4.172,2949,2.704,2950,2.704,2951,2.704,2952,2.704,2953,2.704,2954,2.704,2955,2.704,2956,2.704,2957,2.704]],["title/injectables/VisualsService.html",[393,0.765,2730,3.43]],["body/injectables/VisualsService.html",[3,0.246,4,0.246,5,0.182,7,0.262,8,0.68,11,0.44,12,0.011,13,0.262,21,1.232,75,0.009,76,0.009,83,0.689,86,1.098,88,2.179,89,0.74,133,0.716,136,1.067,137,1.548,222,1.551,305,3.17,308,3.791,309,3.791,312,3.791,323,1.597,327,1.346,393,1.196,395,2.04,407,1.468,425,1.13,444,1.382,491,3.741,492,2.513,493,2.837,498,1.644,499,2.966,2235,3.27,2237,4.652,2239,5.491,2730,5.364,2854,4.685,2958,5.343,2959,7.384,2960,7.754,2961,5.343,2962,6.74,2963,5.343,2964,8.288,2965,5.343,2966,5.343,2967,5.343]],["title/interfaces/VisualsWorkerMessage.html",[0,0.159,295,2.288]],["body/interfaces/VisualsWorkerMessage.html",[0,0.3,2,0.999,3,0.211,4,0.211,5,0.156,7,0.225,8,0.616,10,1.778,11,0.669,12,0.011,13,0.411,18,2.897,19,1.013,22,2.537,25,2.577,75,0.008,76,0.008,267,2.547,268,2.547,269,3.578,270,2.67,271,2.67,272,2.67,273,2.437,274,2.336,275,2.437,276,2.437,277,2.437,278,2.336,279,2.437,280,2.437,281,2.437,282,2.547,283,2.547,284,2.336,285,3.243,286,3.109,287,3.109,288,3.109,289,2.336,290,3.109,291,2.437,292,2.669,293,2.669,294,3.109,295,3.243,296,3.725,297,3.645,298,4.062,299,3.994,300,3.725,301,4.134,302,3.885,303,3.356,304,3.81,305,2.873,306,2.437,307,3.109,308,3.578,309,3.578,310,2.336,311,3.109,312,3.578,430,1.669]],["title/injectables/WakelockService.html",[393,0.765,2114,2.96]],["body/injectables/WakelockService.html",[3,0.264,4,0.264,5,0.195,7,0.282,12,0.011,13,0.282,16,2.974,75,0.009,76,0.009,83,0.536,89,0.794,133,0.769,136,1.407,147,1.579,232,3.015,234,2.191,323,1.715,327,1.407,393,1.251,395,2.191,407,1.534,425,1.491,498,1.766,2114,4.84,2155,5.033,2968,5.74,2969,7.953,2970,7.953,2971,5.74,2972,5.74,2973,5.033,2974,5.74,2975,7.626,2976,5.74,2977,5.74,2978,5.74,2979,5.74,2980,7.047,2981,5.74,2982,5.74,2983,5.74]],["title/dependencies.html",[2876,3.806,2984,3.168]],["body/dependencies.html",[12,0.011,75,0.009,76,0.009,89,0.809,111,4.297,112,2.975,113,1.427,116,4.297,332,3.401,333,2.858,492,3.616,493,3.103,496,2.305,709,3.244,730,4.651,842,3.401,900,3.779,901,3.244,942,4.014,1445,4.297,1786,4.651,1972,4.297,2389,4.651,2539,5.125,2677,5.125,2876,4.297,2985,5.845,2986,7.126,2987,8.449,2988,5.845,2989,5.845,2990,5.845,2991,5.845,2992,5.845,2993,6.249,2994,7.126,2995,5.845,2996,5.845,2997,5.845,2998,5.845,2999,5.845,3000,5.845,3001,5.845,3002,5.845,3003,5.845,3004,5.845,3005,5.845]],["title/miscellaneous/enumerations.html",[3006,2.102,3007,4.539]],["body/miscellaneous/enumerations.html",[6,3.718,7,0.282,12,0.011,37,4.106,38,3.95,40,3.95,41,2.877,42,3.95,43,3.45,44,3.95,45,3.916,46,3.95,47,3.718,48,3.95,49,3.718,50,3.95,51,3.95,52,3.95,53,3.95,54,3.95,55,3.52,56,3.95,57,3.95,58,3.95,59,3.192,60,3.95,61,3.718,62,3.95,63,3.718,64,3.95,65,3.95,66,3.95,67,3.95,68,3.95,69,3.95,70,4.318,71,3.95,72,3.95,73,3.95,74,3.95,75,0.009,76,0.009,444,2.285,3006,3.346,3007,5.043,3008,6.187]],["title/miscellaneous/functions.html",[3006,2.102,3009,4.539]],["body/miscellaneous/functions.html",[5,0.269,7,0.189,10,1.526,11,0.675,12,0.011,19,1.111,21,0.886,22,2.745,75,0.007,76,0.007,80,1.6,301,3.78,307,1.956,311,1.956,333,3.06,425,1.8,429,2.54,430,1.696,444,1.618,638,1.467,651,4.157,696,4.047,701,3.002,837,2.552,893,3.311,894,2.753,895,3.059,896,4.602,897,2.485,898,5.405,920,2.679,931,3.059,947,3.059,1043,2.237,1196,2.485,1328,2.353,1438,4.743,1440,3.37,1506,3.311,1693,2.64,1694,3.37,1695,3.059,1740,3.37,1871,3.37,1919,3.37,1979,4.743,2045,3.37,2114,2.64,2245,3.37,2246,4.743,2247,3.059,2297,4.304,2660,3.37,3006,2.237,3009,3.37,3010,6.259,3011,6.943,3012,6.259,3013,6.259,3014,6.259,3015,6.259,3016,3.844,3017,3.844,3018,5.409,3019,5.409,3020,5.409,3021,3.844,3022,5.488,3023,3.37,3024,5.409,3025,5.409,3026,5.409,3027,5.488,3028,5.409,3029,5.409,3030,5.409,3031,5.409,3032,5.409,3033,3.844,3034,5.488,3035,5.409,3036,6.259,3037,5.409,3038,6.259,3039,6.259,3040,6.259,3041,5.409,3042,6.259,3043,5.409,3044,6.259,3045,5.409,3046,5.488,3047,5.409,3048,5.409,3049,5.488,3050,3.37,3051,3.37,3052,3.844,3053,3.844,3054,3.844,3055,3.844,3056,3.844,3057,3.844,3058,3.844,3059,3.844,3060,3.844,3061,3.844,3062,5.409,3063,3.844,3064,5.409,3065,3.844,3066,3.844,3067,3.844,3068,3.844]],["title/index.html",[7,0.212,3069,4.31]],["body/index.html",[5,0.233,12,0.011,59,3.034,75,0.009,76,0.009,77,2.02,113,1.909,163,2.229,178,4.018,191,2.229,333,2.672,360,2.449,371,2.02,386,2.02,497,5.026,501,5.026,556,3.345,557,4.349,605,3.754,709,3.034,735,4.696,769,3.754,842,3.18,853,2.782,974,4.349,1092,4.696,1237,4.793,1289,4.018,1434,4.349,1468,4.349,1727,4.793,1782,4.793,1786,4.349,1827,4.349,1835,5.995,1841,4.793,1972,4.018,1982,4.349,2876,4.018,2973,4.793,3070,5.995,3071,4.793,3072,5.466,3073,5.466,3074,5.466,3075,5.466,3076,5.466,3077,5.466,3078,5.466,3079,6.837,3080,6.837,3081,5.466,3082,5.466,3083,5.466,3084,5.466,3085,5.466,3086,5.466,3087,5.466,3088,5.466,3089,5.466,3090,5.466,3091,5.466,3092,5.466,3093,5.466,3094,5.466,3095,5.466,3096,5.466,3097,5.466,3098,5.466,3099,5.466,3100,5.466,3101,5.466,3102,5.466,3103,6.837,3104,3.754,3105,5.466,3106,7.461,3107,5.466,3108,6.837,3109,5.466,3110,5.466,3111,5.466]],["title/license.html",[3112,4.659]],["body/license.html",[10,0.869,12,0.005,16,1.162,29,3.538,61,1.78,75,0.005,76,0.005,139,1.401,166,2.191,190,1.78,191,1.123,202,4.198,215,3.366,327,0.55,355,1.515,399,3.11,495,3.366,520,1.891,544,2.191,661,2.414,668,2.414,728,1.602,856,1.891,882,2.905,940,4.964,951,2.191,1005,2.414,1016,4.25,1020,3.709,1026,2.191,1040,2.191,1152,2.191,1317,4.586,1334,2.024,1386,1.051,1468,2.191,1502,1.685,1692,6.014,2021,2.414,2024,3.709,2237,2.461,2421,3.709,2609,2.414,2690,2.024,2936,2.414,2993,2.414,3112,5.241,3113,6.858,3114,7.078,3115,6.238,3116,6.014,3117,2.414,3118,2.753,3119,2.753,3120,7.078,3121,2.753,3122,2.414,3123,2.753,3124,4.23,3125,2.753,3126,2.753,3127,2.753,3128,2.753,3129,5.152,3130,2.753,3131,5.152,3132,5.152,3133,2.753,3134,5.781,3135,2.753,3136,5.152,3137,2.753,3138,2.753,3139,2.753,3140,2.753,3141,7.078,3142,2.753,3143,2.753,3144,4.23,3145,4.23,3146,2.753,3147,2.753,3148,4.23,3149,7.54,3150,7.54,3151,8.258,3152,4.23,3153,4.23,3154,2.753,3155,2.753,3156,2.753,3157,4.23,3158,8.38,3159,2.753,3160,5.152,3161,4.23,3162,2.753,3163,4.23,3164,2.753,3165,4.23,3166,2.753,3167,5.152,3168,2.753,3169,4.23,3170,4.23,3171,5.781,3172,2.753,3173,2.753,3174,2.753,3175,5.781,3176,4.23,3177,2.753,3178,2.753,3179,2.753,3180,4.23,3181,2.753,3182,2.753,3183,2.753,3184,2.753,3185,5.152,3186,6.238,3187,7.259,3188,6.238,3189,5.152,3190,2.753,3191,2.753,3192,2.753,3193,4.23,3194,2.753,3195,4.23,3196,2.414,3197,2.753,3198,2.753,3199,5.152,3200,2.753,3201,2.753,3202,2.753,3203,2.753,3204,1.891,3205,2.753,3206,2.753,3207,4.23,3208,2.753,3209,7.54,3210,6.238,3211,2.753,3212,2.753,3213,2.753,3214,4.23,3215,6.858,3216,2.753,3217,2.753,3218,2.753,3219,2.753,3220,2.753,3221,2.753,3222,2.753,3223,2.753,3224,2.753,3225,2.753,3226,2.753,3227,2.753,3228,2.753,3229,2.753,3230,5.781,3231,2.753,3232,2.753,3233,2.753,3234,2.753,3235,5.152,3236,2.753,3237,2.753,3238,2.753,3239,4.23,3240,2.753,3241,2.753,3242,5.152,3243,4.23,3244,2.753,3245,2.753,3246,2.753,3247,2.753,3248,4.23,3249,2.753,3250,2.753,3251,2.753,3252,2.753,3253,2.753,3254,6.238,3255,2.753,3256,2.753,3257,2.753,3258,2.753,3259,2.753,3260,2.753,3261,2.753,3262,2.753,3263,2.753,3264,4.23,3265,2.753,3266,5.152,3267,2.753,3268,2.753,3269,2.753,3270,2.753,3271,2.753,3272,2.753,3273,2.753,3274,6.858,3275,5.152,3276,2.753,3277,6.858,3278,4.23,3279,4.23,3280,2.753,3281,5.152,3282,2.753,3283,4.23,3284,2.753,3285,2.753,3286,2.753,3287,2.753,3288,2.753,3289,6.586,3290,4.23,3291,5.152,3292,4.23,3293,2.753,3294,2.753,3295,6.238,3296,4.23,3297,4.23,3298,5.152,3299,4.23,3300,4.23,3301,4.23,3302,4.23,3303,4.23,3304,2.753,3305,2.753,3306,2.753,3307,2.753,3308,2.753,3309,2.753,3310,5.781,3311,2.753,3312,2.753,3313,2.753,3314,2.753,3315,2.753,3316,2.753,3317,2.753,3318,2.753,3319,2.753,3320,5.781,3321,5.152,3322,4.23,3323,5.152,3324,4.23,3325,4.23,3326,4.23,3327,2.753,3328,2.753,3329,2.753,3330,2.753,3331,4.23,3332,2.753,3333,5.781,3334,2.753,3335,2.753,3336,2.753,3337,2.753,3338,4.23,3339,2.753,3340,2.753,3341,2.753,3342,2.753,3343,2.753,3344,2.753,3345,2.753,3346,2.753,3347,2.753,3348,4.23,3349,2.753,3350,2.753,3351,2.753,3352,2.753,3353,2.753,3354,2.753,3355,2.753,3356,2.753,3357,2.753,3358,2.753,3359,2.753,3360,2.753,3361,2.753,3362,2.753,3363,2.753,3364,2.753,3365,2.753,3366,2.753,3367,4.23,3368,2.753,3369,2.753,3370,2.753,3371,2.753,3372,2.753,3373,2.753,3374,2.753,3375,2.753,3376,4.23,3377,2.753,3378,2.753,3379,2.753,3380,2.753,3381,2.753,3382,2.753,3383,2.753,3384,2.753,3385,2.753,3386,2.753,3387,2.753,3388,2.753,3389,2.753]],["title/modules.html",[3390,5.134]],["body/modules.html",[12,0.01,75,0.01,76,0.01,3390,6.052]],["title/overview.html",[3391,5.134]],["body/overview.html",[2,1.457,12,0.01,39,1.887,41,3.149,45,3.715,75,0.01,76,0.01,133,0.896,314,2.186,355,2.397,395,2.554,635,4.92,3391,5.868,3392,6.692,3393,6.692,3394,6.692]],["title/properties.html",[8,0.522,2984,3.168]],["body/properties.html",[8,0.665,12,0.011,75,0.01,76,0.01,371,2.434,501,4.841,1314,4.522,2690,4.841,3070,5.774,3071,5.774,3112,5.24,3116,5.774,3117,5.774,3395,6.584,3396,6.584,3397,6.584,3398,6.584,3399,6.584,3400,6.584]],["title/routes.html",[3401,4.659]],["body/routes.html",[12,0.01,75,0.01,76,0.01,3401,5.492]],["title/todo.html",[533,3.584]],["body/todo.html",[12,0.01,75,0.01,76,0.01]],["title/miscellaneous/typealiases.html",[3006,2.102,3402,5.177]],["body/miscellaneous/typealiases.html",[6,3.667,7,0.278,11,0.467,12,0.011,14,4.523,23,4.523,30,3.895,31,3.667,32,4.523,33,3.667,34,3.471,35,3.471,75,0.009,76,0.009,268,3.148,269,3.42,273,3.011,274,2.887,275,3.011,276,3.011,277,3.011,278,2.887,279,3.011,280,3.011,281,3.011,301,3.561,305,3.29,307,2.887,308,3.42,309,3.42,311,2.887,312,3.42,396,4.973,400,6.134,433,4.282,703,3.667,721,4.523,722,3.3,837,2.313,930,3.471,1500,3.667,1501,4.523,1509,3.471,1510,3.471,1512,4.523,3006,3.3,3008,6.652,3403,5.671,3404,5.671,3405,7.586,3406,6.134,3407,5.671,3408,5.671,3409,5.671]],["title/miscellaneous/variables.html",[803,3.806,3006,2.102]],["body/miscellaneous/variables.html",[7,0.13,10,1.614,11,0.705,12,0.011,18,1.738,19,0.937,21,1.911,39,0.75,45,1.476,75,0.005,76,0.005,77,1.522,80,1.259,143,0.596,163,1.679,174,3.277,175,4.885,191,2.055,269,2.013,286,2.096,287,2.096,288,2.096,290,2.096,292,1.8,293,1.8,294,2.096,296,2.096,297,1.412,302,2.186,303,1.3,305,1.25,306,2.186,310,2.096,360,0.952,371,1.522,444,2.143,445,1.826,446,3.604,466,1.719,467,1.719,468,1.719,469,1.719,470,1.719,471,1.476,472,1.719,473,1.719,474,1.719,475,1.719,494,2.52,538,3.611,556,1.627,638,2.479,651,1.627,658,3.611,659,3.611,696,3.969,703,1.719,712,3.084,733,4.172,734,4.172,803,1.955,851,1.412,856,1.826,893,1.627,894,1.353,897,2.662,899,1.719,901,2.286,903,2.52,906,1.547,1043,1.547,1044,4.419,1045,2.331,1046,2.331,1047,2.331,1048,3.611,1049,2.331,1050,2.331,1051,2.331,1052,2.331,1053,2.331,1054,2.331,1055,2.331,1056,3.611,1057,2.331,1058,2.331,1059,2.331,1060,2.331,1061,2.331,1062,2.331,1135,2.116,1196,1.719,1328,1.627,1453,2.116,1657,1.547,1664,2.116,1693,1.826,1828,3.611,1982,2.116,2023,2.331,2114,1.826,2414,2.331,2457,3.611,2520,2.331,2690,1.955,2837,2.331,2855,3.611,2856,3.611,2925,3.611,3006,1.547,3011,7.293,3022,2.331,3023,3.611,3027,2.331,3034,2.331,3046,2.331,3049,2.331,3050,2.331,3051,4.419,3122,5.939,3196,3.611,3401,3.277,3406,2.331,3410,4.118,3411,2.659,3412,4.118,3413,4.118,3414,4.118,3415,4.118,3416,4.118,3417,4.118,3418,2.659,3419,4.118,3420,5.675,3421,2.659,3422,2.659,3423,4.118,3424,5.04,3425,4.118,3426,4.118,3427,4.118,3428,2.659,3429,4.118,3430,6.494,3431,4.118,3432,4.118,3433,5.04,3434,4.118,3435,4.118,3436,4.118,3437,4.118,3438,4.118,3439,4.118,3440,4.118,3441,2.659,3442,4.118,3443,2.659,3444,2.659,3445,2.659,3446,2.659,3447,2.659,3448,2.659,3449,2.659,3450,2.659,3451,2.659,3452,2.659,3453,2.659,3454,2.659,3455,2.659,3456,2.659,3457,2.659,3458,2.659,3459,2.659,3460,2.659,3461,2.659,3462,2.659,3463,2.659,3464,2.659,3465,2.659,3466,2.659,3467,6.139,3468,2.659,3469,2.659,3470,2.659,3471,2.659,3472,2.659,3473,2.659,3474,2.659,3475,2.659,3476,2.659,3477,2.659,3478,2.659,3479,2.659,3480,2.659,3481,2.659,3482,4.118,3483,6.773,3484,4.118,3485,4.118,3486,2.659,3487,2.659,3488,2.659,3489,2.659,3490,2.659,3491,2.659,3492,2.659,3493,2.659,3494,2.659,3495,2.659,3496,2.659,3497,2.659,3498,2.659,3499,2.659,3500,2.659,3501,2.659,3502,2.659,3503,2.659,3504,2.659,3505,2.659,3506,2.659,3507,2.659,3508,2.659,3509,2.659,3510,2.659,3511,6.494,3512,4.118,3513,2.659,3514,5.675,3515,2.659,3516,2.659,3517,2.659,3518,2.659,3519,2.659,3520,2.659]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.075,314,0.717,364,0.837,1071,1.506,2424,1.342,3204,1.506,3521,1.613]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.26,12,0.01,75,0.01,76,0.01,314,2.496,364,2.916,535,4.512,1071,5.247,1657,3.822,2424,4.676,3104,4.512,3522,5.616,3523,4.83,3524,5.616,3525,5.616,3526,4.83,3527,4.83]],["title/additional-documentation/ui-components-slide-panel.html",[314,0.795,381,0.928,2424,1.489,2573,1.788,3204,1.671,3521,1.788]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.01,75,0.01,76,0.01,314,2.502,381,2.924,535,4.533,1657,3.84,2424,4.688,2573,5.631,3104,4.533,3522,5.631,3523,4.852,3524,5.631,3525,5.631,3526,4.852,3527,4.852]],["title/additional-documentation/ui-components-dialogs.html",[314,0.892,2424,1.671,3204,1.875,3521,2.007,3528,2.394]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,314,2.509,535,4.554,1657,3.858,2424,4.701,3104,4.554,3522,5.647,3523,4.874,3524,5.647,3525,5.647,3526,4.874,3527,4.874,3528,6.735]],["title/additional-documentation/helpers.html",[3204,2.481,3521,2.656,3529,3.168]],["body/additional-documentation/helpers.html",[12,0.01,75,0.01,76,0.01,535,4.471,1582,5.18,1657,3.788,3104,4.471,3522,5.917,3523,5.587,3524,5.587,3525,5.587,3526,5.587,3527,5.587,3529,7.057,3530,7.599,3531,6.51,3532,8.048]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0.05",{"_index":753,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.07",{"_index":1220,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.1",{"_index":755,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.15",{"_index":750,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.18",{"_index":758,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.2",{"_index":748,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/PlayerToolbarComponent.html":{},"injectables/ThemeService.html":{}}}],["0.21",{"_index":760,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.24",{"_index":762,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.25",{"_index":746,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["0.25.1",{"_index":2997,"title":{},"body":{"dependencies.html":{}}}],["0.27",{"_index":764,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.3",{"_index":744,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.35",{"_index":742,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.45",{"_index":740,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.5",{"_index":487,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.55",{"_index":739,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.7",{"_index":2792,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":1895,"title":{},"body":{"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)).then((entry",{"_index":914,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["1)?.['#text",{"_index":1559,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["1.0",{"_index":3117,"title":{},"body":{"license.html":{},"properties.html":{}}}],["1.0.0",{"_index":1984,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["100",{"_index":765,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":471,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["1000}k",{"_index":1031,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["1024",{"_index":278,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"injectables/MetadataService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.9.0",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.1",{"_index":2998,"title":{},"body":{"dependencies.html":{}}}],["125",{"_index":468,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["128",{"_index":275,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["12px",{"_index":1037,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["140",{"_index":2409,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["150",{"_index":830,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["16",{"_index":1250,"title":{},"body":{"injectables/GamepadService.html":{}}}],["16384",{"_index":3408,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["16_000",{"_index":475,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":282,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["17",{"_index":3392,"title":{},"body":{"overview.html":{}}}],["18",{"_index":3393,"title":{},"body":{"overview.html":{}}}],["199",{"_index":1176,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":3261,"title":{},"body":{"license.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.1",{"_index":2991,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":3005,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":741,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{}}}],["20.0.0",{"_index":3000,"title":{},"body":{"dependencies.html":{}}}],["20.2.10",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["20.3.7",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["20.6.1",{"_index":3395,"title":{},"body":{"properties.html":{}}}],["200",{"_index":831,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["2000",{"_index":472,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["2048",{"_index":279,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["20rem",{"_index":2588,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21.0.0",{"_index":2999,"title":{},"body":{"dependencies.html":{}}}],["220",{"_index":2808,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["24",{"_index":1014,"title":{},"body":{"components/EqualizerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["25",{"_index":743,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["250",{"_index":469,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["255",{"_index":1184,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":276,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.4",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":745,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["300",{"_index":1218,"title":{},"body":{"injectables/GamepadService.html":{}}}],["30_000",{"_index":1443,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["31",{"_index":466,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["32",{"_index":273,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["32768",{"_index":3409,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":283,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["35",{"_index":747,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["360px",{"_index":1384,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["37",{"_index":3394,"title":{},"body":{"overview.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1517,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3db",{"_index":998,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":3250,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":3001,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":749,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["4000",{"_index":473,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["4096",{"_index":280,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["424242",{"_index":2855,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["440hz",{"_index":691,"title":{},"body":{"interfaces/Chainable.html":{}}}],["4em",{"_index":1188,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":751,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":470,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["512",{"_index":277,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":2190,"title":{},"body":{"injectables/PlayerService.html":{}}}],["5sec.mp3",{"_index":692,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["60",{"_index":752,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{}}}],["60fps",{"_index":2930,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["63",{"_index":467,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["64",{"_index":274,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["6px",{"_index":1172,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["7.8.2",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":754,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["72",{"_index":2456,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["73",{"_index":2785,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["80",{"_index":756,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["800",{"_index":3472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8000",{"_index":474,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["8192",{"_index":281,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["8mb",{"_index":1886,"title":{},"body":{"injectables/MetadataService.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["90",{"_index":757,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["95",{"_index":759,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["96/9/ec",{"_index":3256,"title":{},"body":{"license.html":{}}}],["98",{"_index":761,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["99",{"_index":763,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["_audiocontext",{"_index":505,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audioelement",{"_index":503,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audiosourcenode",{"_index":507,"title":{},"body":{"injectables/AudioService.html":{}}}],["_connectedanalyzers",{"_index":514,"title":{},"body":{"injectables/AudioService.html":{}}}],["_eqgainnode",{"_index":511,"title":{},"body":{"injectables/AudioService.html":{}}}],["_frequencyfilters",{"_index":512,"title":{},"body":{"injectables/AudioService.html":{}}}],["_gainnode",{"_index":509,"title":{},"body":{"injectables/AudioService.html":{}}}],["_hasended",{"_index":518,"title":{},"body":{"injectables/AudioService.html":{}}}],["_internalanalyzer",{"_index":2858,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":1338,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a.album",{"_index":200,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.artist",{"_index":197,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.localecompare(b",{"_index":167,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":186,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.title",{"_index":219,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.track",{"_index":204,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["abandoned",{"_index":3355,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":3287,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2500,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["above",{"_index":3473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":3367,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2477,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["abstract",{"_index":1191,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":1292,"title":{},"body":{"injectables/GamepadService.html":{}}}],["accent",{"_index":812,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":774,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":778,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["accepts",{"_index":939,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":1155,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["accessors",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":3329,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":3370,"title":{},"body":{"license.html":{}}}],["achse",{"_index":1257,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":3386,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["action(details",{"_index":1731,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["activatewakelock",{"_index":2969,"title":{},"body":{"injectables/WakelockService.html":{}}}],["active",{"_index":2155,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["activeaxescaches",{"_index":1223,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["adapt",{"_index":3226,"title":{},"body":{"license.html":{}}}],["add",{"_index":577,"title":{},"body":{"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{}}}],["addalbumtoplaylist",{"_index":1595,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addalbumtoplaylist(album",{"_index":243,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addartisttoplaylist",{"_index":1596,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addartisttoplaylist(artist",{"_index":238,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addeventlistener('gamepadconnected",{"_index":1229,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":1232,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestolibrary",{"_index":1749,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(...filedatas",{"_index":1798,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(filedatas",{"_index":1753,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestoplaylist",{"_index":2051,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...filedatas",{"_index":2211,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(filedatas",{"_index":2066,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":3330,"title":{},"body":{"license.html":{}}}],["additional",{"_index":3204,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["addtrackstoplaylist",{"_index":1597,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addtrackstoplaylist(...dbtracks",{"_index":254,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addtracktoplaylist",{"_index":1598,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["addtracktoplaylist(song",{"_index":2068,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addtracktoplaylist(track",{"_index":252,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["adjust",{"_index":3082,"title":{},"body":{"index.html":{}}}],["advertising",{"_index":3302,"title":{},"body":{"license.html":{}}}],["affected",{"_index":3331,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":3209,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":3289,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3345,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":2176,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":2174,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":1069,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["against",{"_index":3244,"title":{},"body":{"license.html":{}}}],["aiff",{"_index":1048,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":77,"title":{"interfaces/Album.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["album.coverurl",{"_index":1627,"title":{},"body":{"components/LibraryComponent.html":{}}}],["album.name",{"_index":245,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["album.year",{"_index":1628,"title":{},"body":{"components/LibraryComponent.html":{}}}],["albumcompare",{"_index":199,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap",{"_index":177,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.has(albumname",{"_index":181,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.set(albumname",{"_index":182,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.values()].tosorted((a",{"_index":185,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumname",{"_index":179,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albums",{"_index":176,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumtracks",{"_index":249,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["aliases",{"_index":3403,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1177,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allowed_extensions",{"_index":1056,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":903,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":935,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1579,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":2512,"title":{},"body":{"components/ShellComponent.html":{}}}],["allowedtypes",{"_index":1078,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":294,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["amended",{"_index":3267,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analyserconfig",{"_index":267,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":302,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analyservalue",{"_index":2902,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyzer",{"_index":2954,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["and/or",{"_index":3160,"title":{},"body":{"license.html":{}}}],["angular/cdk",{"_index":2985,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2535,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":109,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":2389,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1505,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{}}}],["angular/compiler",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":89,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":2119,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":116,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":105,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1960,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2655,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2798,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":1320,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":2390,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":103,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":122,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["angular/material/list",{"_index":94,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":99,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/material/progress",{"_index":124,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2799,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2537,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1957,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":969,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":2040,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":2039,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":2539,"title":{},"body":{"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2677,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angulartitleservice",{"_index":2666,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2860,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["any).getasfilesystemhandle().then((handle",{"_index":1137,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["api",{"_index":942,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["api_key",{"_index":1539,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":1518,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["apis",{"_index":3074,"title":{},"body":{"index.html":{}}}],["app",{"_index":605,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"index.html":{}}}],["app.component.html",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":313,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":3410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontactinfo",{"_index":1985,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["applicable",{"_index":3274,"title":{},"body":{"license.html":{}}}],["application",{"_index":2608,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["applicationconfig",{"_index":3447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":1005,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["apply",{"_index":1020,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["appname",{"_index":1981,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["apps",{"_index":3083,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":3411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":3433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":3441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":3404,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../default",{"_index":3423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":3421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":3422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":3023,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":3028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":3008,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":3035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../idexed",{"_index":3418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../lastfm",{"_index":3407,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":3041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":3016,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":3020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":3021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":3031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":3430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":3033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":3406,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../settings.po.ts",{"_index":3428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":3425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":3405,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":3011,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":3045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":3502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":654,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":656,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":3494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":3490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:18",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":3446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":3510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/idexed",{"_index":3478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":396,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:135",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:142",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:150",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:157",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:163",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:171",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:177",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:185",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:190",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:198",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:202",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:212",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:216",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:224",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:24",{"_index":478,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:25",{"_index":482,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":481,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":483,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":479,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":464,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":488,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":485,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":476,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:42",{"_index":490,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:44",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":648,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":636,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:9",{"_index":641,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":953,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14",{"_index":965,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18",{"_index":960,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:29",{"_index":962,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:34",{"_index":963,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":893,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":78,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:100",{"_index":1620,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:143",{"_index":1612,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:149",{"_index":1611,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:154",{"_index":1613,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:160",{"_index":1610,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:168",{"_index":1607,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:177",{"_index":1606,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:194",{"_index":1609,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:203",{"_index":1608,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:220",{"_index":1615,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:224",{"_index":1614,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:228",{"_index":1616,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:48",{"_index":1617,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:50",{"_index":1618,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:66",{"_index":1619,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:69",{"_index":1622,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:77",{"_index":1621,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts",{"_index":1635,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:14",{"_index":1640,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:15",{"_index":1639,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:17",{"_index":1638,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":837,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player",{"_index":2253,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":2031,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":2045,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:136",{"_index":2071,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:141",{"_index":2069,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:147",{"_index":2080,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:162",{"_index":2067,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:168",{"_index":2091,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:174",{"_index":2089,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:178",{"_index":2075,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:190",{"_index":2073,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:206",{"_index":2092,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:215",{"_index":2072,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:236",{"_index":2078,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:24",{"_index":2100,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:254",{"_index":2077,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:26",{"_index":2110,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:263",{"_index":2086,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:28",{"_index":2099,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:281",{"_index":2087,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:298",{"_index":2082,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:30",{"_index":2109,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:302",{"_index":2085,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":2112,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:316",{"_index":2093,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:33",{"_index":2098,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:335",{"_index":2094,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:40",{"_index":2107,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:44",{"_index":2105,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:50",{"_index":2065,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":703,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":2367,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:142",{"_index":2378,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:150",{"_index":2380,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:156",{"_index":2385,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:161",{"_index":2386,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:165",{"_index":2383,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:42",{"_index":2387,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:48",{"_index":2376,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2657,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:9",{"_index":2659,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2718,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2750,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2744,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2748,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2746,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2754,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2752,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2795,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2762,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2777,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2793,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2786,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2760,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2764,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2779,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2773,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2781,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2771,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2783,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2740,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2790,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2776,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2769,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2788,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2758,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2756,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2742,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2837,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:103",{"_index":2849,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:124",{"_index":2851,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:13",{"_index":2845,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2843,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2846,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:186",{"_index":2847,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2844,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2842,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:31",{"_index":2841,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:91",{"_index":2853,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2958,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2963,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2961,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":268,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":3050,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":3065,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":1197,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":1215,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":1208,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":1212,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":1205,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":1203,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1392,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":3067,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":1312,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:102",{"_index":1430,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:106",{"_index":1431,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:37",{"_index":1427,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:47",{"_index":1429,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:87",{"_index":1432,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:98",{"_index":1428,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1666,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1671,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1682,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1686,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1685,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1687,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1694,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2661,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2665,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2664,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":3068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2968,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:25",{"_index":2972,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:9",{"_index":2971,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1934,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2501,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2630,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2649,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2505,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:42",{"_index":2532,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:43",{"_index":2529,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:44",{"_index":2531,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:45",{"_index":2530,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:47",{"_index":2525,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:56",{"_index":2528,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:60",{"_index":2519,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:65",{"_index":2524,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:69",{"_index":2522,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":3489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":724,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:41",{"_index":2646,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:43",{"_index":2647,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:45",{"_index":2645,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:47",{"_index":2648,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:48",{"_index":2639,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:70",{"_index":2640,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:75",{"_index":2643,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:79",{"_index":2642,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:84",{"_index":2644,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:88",{"_index":2641,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":2634,"title":{},"body":{"interfaces/ThemeColor.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2670,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:17",{"_index":2674,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:63",{"_index":2673,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":3487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":3488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appversion",{"_index":1983,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["arguments_",{"_index":2658,"title":{},"body":{"pipes/TimePipe.html":{}}}],["arial",{"_index":1038,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["arising",{"_index":3255,"title":{},"body":{"license.html":{}}}],["array",{"_index":718,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["array.from(droppedfiles",{"_index":1161,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["array.from(event.datatransfer.items",{"_index":1136,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["art",{"_index":1835,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["artist",{"_index":163,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist:${escapelucenequerystring(artist",{"_index":1992,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["artistcompare",{"_index":196,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artists",{"_index":194,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artwork",{"_index":2185,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2671,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":3347,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1796,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":3290,"title":{},"body":{"license.html":{}}}],["associating",{"_index":3208,"title":{},"body":{"license.html":{}}}],["async",{"_index":232,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["asyncgenerator",{"_index":1756,"title":{},"body":{"injectables/MetadataService.html":{}}}],["atrack",{"_index":203,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["attorney",{"_index":3125,"title":{},"body":{"license.html":{}}}],["audio",{"_index":501,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"index.html":{},"properties.html":{}}}],["audio.service",{"_index":968,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":1052,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":1045,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":1054,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":1046,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":1049,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":1055,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":1051,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":1050,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":1053,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/x",{"_index":1047,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":506,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.creategain",{"_index":545,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":543,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement",{"_index":521,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.autoplay",{"_index":527,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.controls",{"_index":528,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.id",{"_index":523,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.loop",{"_index":522,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.preload",{"_index":531,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.style.display",{"_index":525,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.volume",{"_index":529,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioservice",{"_index":394,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audioservice.isplaying",{"_index":2359,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":542,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiosource.connect(eqgain",{"_index":551,"title":{},"body":{"injectables/AudioService.html":{}}}],["author",{"_index":3399,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":3233,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":3159,"title":{},"body":{"license.html":{}}}],["auto",{"_index":532,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["autoincrement",{"_index":3484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":3146,"title":{},"body":{"license.html":{}}}],["automatische",{"_index":780,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["autoscroll",{"_index":2413,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":190,"title":{},"body":{"interfaces/Album.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2940,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2935,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2941,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avoid",{"_index":1462,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["await",{"_index":234,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":2451,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis.valueof",{"_index":1299,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":1304,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":1303,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":1198,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":1302,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":1305,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":1206,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":166,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["b.track",{"_index":209,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["back",{"_index":217,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{}}}],["background",{"_index":1182,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["backgroundcolor",{"_index":860,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["band",{"_index":497,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"index.html":{}}}],["bandfrequency",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":628,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains[bandfrequency",{"_index":630,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandpipe",{"_index":634,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{}}}],["bands",{"_index":957,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bar",{"_index":2548,"title":{},"body":{"components/ShellComponent.html":{}}}],["barcount",{"_index":285,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["barkscalebandenergy",{"_index":3412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":308,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2723,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":307,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":3413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":690,"title":{},"body":{"interfaces/Chainable.html":{}}}],["basecolor",{"_index":819,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["basecolor.darken(variant.darkenfactor",{"_index":825,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["basecolor.lighten(variant.lightenfactor",{"_index":823,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["based",{"_index":3273,"title":{},"body":{"license.html":{}}}],["basegain",{"_index":397,"title":{},"body":{"injectables/AudioService.html":{}}}],["basevisualizeroptions",{"_index":304,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":3130,"title":{},"body":{"license.html":{}}}],["bcbcbc",{"_index":2856,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["behavior",{"_index":2443,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["bei",{"_index":782,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["below",{"_index":3152,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":3304,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":2142,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":1274,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["bessere",{"_index":1649,"title":{},"body":{"injectables/LibraryService.html":{}}}],["better",{"_index":2924,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["biquadfilternode",{"_index":513,"title":{},"body":{"injectables/AudioService.html":{}}}],["bitrate",{"_index":650,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["bitrate.pipe",{"_index":870,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":647,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1869,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1831,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1848,"title":{},"body":{"injectables/MetadataService.html":{}}}],["bold",{"_index":1036,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2604,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["border",{"_index":1171,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["both",{"_index":211,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["bottom",{"_index":2400,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":1169,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["break",{"_index":2239,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2533,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2534,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2555,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2554,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2553,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2556,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["btrack",{"_index":208,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["buffer",{"_index":2921,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffer.buffer",{"_index":2947,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":306,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2926,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2923,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2920,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["build",{"_index":3177,"title":{},"body":{"license.html":{}}}],["buildapiurl(method",{"_index":1533,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["button",{"_index":1272,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.pressed",{"_index":1285,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":1287,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":1224,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":1290,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":1295,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":1209,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2495,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2583,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["bytestohex",{"_index":1790,"title":{},"body":{"injectables/MetadataService.html":{}}}],["bytestohex(md5(combined",{"_index":1918,"title":{},"body":{"injectables/MetadataService.html":{}}}],["c",{"_index":3375,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1289,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":1297,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":1291,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":1296,"title":{},"body":{"injectables/GamepadService.html":{}}}],["calculate",{"_index":2440,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["call",{"_index":601,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":1313,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["called",{"_index":1691,"title":{},"body":{"injectables/LoaderService.html":{}}}],["caller",{"_index":1661,"title":{},"body":{"injectables/LibraryService.html":{}}}],["cancel",{"_index":2490,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2950,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":3313,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":296,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["canvas.getcontext('2d",{"_index":984,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.height",{"_index":988,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.width",{"_index":986,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvasgradient",{"_index":3444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":3414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasref",{"_index":970,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvasref.nativeelement",{"_index":982,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvaswidth",{"_index":3415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2835,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":288,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":286,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":3416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":3492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2237,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":3459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1489,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":925,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{}}}],["causes",{"_index":3291,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":3116,"title":{},"body":{"license.html":{},"properties.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":106,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":107,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":108,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["center",{"_index":1179,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":3162,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2014,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["chainable",{"_index":653,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2417,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["changedarkmode",{"_index":2651,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2652,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changes",{"_index":973,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{}}}],["check",{"_index":938,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":1282,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":1221,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":693,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlaylistComponent.html":{}}}],["child(${link",{"_index":3505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chrome",{"_index":3078,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":1900,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunk.length",{"_index":1913,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks",{"_index":1909,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks.push(new",{"_index":1883,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks.reduce((sum",{"_index":1911,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize",{"_index":1905,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize).arraybuffer",{"_index":1882,"title":{},"body":{"injectables/MetadataService.html":{}}}],["circular",{"_index":309,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":3175,"title":{},"body":{"license.html":{}}}],["class",{"_index":133,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["class.closed",{"_index":2585,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2586,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":1189,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":603,"title":{},"body":{"injectables/AudioService.html":{}}}],["clear",{"_index":989,"title":{},"body":{"components/EqualizerComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":3377,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":1310,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":1262,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearmetadatacache",{"_index":1941,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2631,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1473,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":3126,"title":{},"body":{"license.html":{}}}],["close",{"_index":1405,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2576,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2715,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2577,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["code",{"_index":2609,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":769,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["color.brightness",{"_index":835,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.hex",{"_index":810,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.name",{"_index":809,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.tohex",{"_index":833,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color_variants",{"_index":738,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":702,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2910,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2908,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2909,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colord",{"_index":730,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["colord(hex",{"_index":820,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["colorful",{"_index":3396,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":735,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"index.html":{}}}],["colors.ts",{"_index":3424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorvariant",{"_index":723,"title":{"interfaces/ColorVariant.html":{}},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["combination",{"_index":2613,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["combine",{"_index":1908,"title":{},"body":{"injectables/MetadataService.html":{}}}],["combined",{"_index":1914,"title":{},"body":{"injectables/MetadataService.html":{}}}],["combined.set(chunk",{"_index":1917,"title":{},"body":{"injectables/MetadataService.html":{}}}],["command",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":666,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":662,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":3189,"title":{},"body":{"license.html":{}}}],["commons",{"_index":3114,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":3228,"title":{},"body":{"license.html":{}}}],["compare",{"_index":193,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["comparison",{"_index":218,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["compensation",{"_index":3206,"title":{},"body":{"license.html":{}}}],["competition",{"_index":3246,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2419,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["component",{"_index":84,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["component_template",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":314,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2678,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2488,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":1065,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/ShellComponent.html":{}}}],["components/slide",{"_index":2569,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":670,"title":{},"body":{"interfaces/Chainable.html":{}}}],["computecolors(hex",{"_index":818,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["computed",{"_index":85,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":3361,"title":{},"body":{"license.html":{}}}],["confer",{"_index":3147,"title":{},"body":{"license.html":{}}}],["config",{"_index":2713,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config).afterclosed",{"_index":2717,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config.ts",{"_index":3419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":550,"title":{},"body":{"injectables/AudioService.html":{}}}],["connected",{"_index":1241,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":1234,"title":{},"body":{"injectables/GamepadService.html":{}}}],["consents",{"_index":3381,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":3205,"title":{},"body":{"license.html":{}}}],["console.error('error",{"_index":1655,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{}}}],["console.error('file",{"_index":261,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('worker",{"_index":1486,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":571,"title":{},"body":{"injectables/AudioService.html":{}}}],["console.log('button",{"_index":1252,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":2150,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":1258,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":926,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":1256,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('wakelock",{"_index":2980,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.log(`axis",{"_index":1268,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":1264,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2693,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2689,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2698,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":1260,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":1239,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2870,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":1242,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1811,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1813,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":1271,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":1279,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":1525,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('file",{"_index":1153,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["console.warn('loaderservice",{"_index":1690,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('no",{"_index":2027,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["console.warn(`hotkey",{"_index":1348,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1726,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":143,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["contains",{"_index":1901,"title":{},"body":{"injectables/MetadataService.html":{}}}],["contemplated",{"_index":3319,"title":{},"body":{"license.html":{}}}],["content",{"_index":817,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["context",{"_index":538,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/variables.html":{}}}],["contrary",{"_index":3349,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":3280,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":3190,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":3168,"title":{},"body":{"license.html":{}}}],["control",{"_index":2620,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["controls",{"_index":3086,"title":{},"body":{"index.html":{}}}],["converttobarkscale",{"_index":3010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":3301,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1123,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":3149,"title":{},"body":{"license.html":{}}}],["core",{"_index":500,"title":{},"body":{"injectables/AudioService.html":{}}}],["corporation",{"_index":3119,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2889,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["corresponding",{"_index":3272,"title":{},"body":{"license.html":{}}}],["council",{"_index":3259,"title":{},"body":{"license.html":{}}}],["cover",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["coverart",{"_index":1973,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["coverartarchiveapi",{"_index":1977,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":861,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":836,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":707,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":716,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":2096,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":2097,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":2005,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":2010,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images.length",{"_index":2012,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images?.length",{"_index":2007,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images[0",{"_index":2013,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdisplaycomponent",{"_index":359,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":2009,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.image",{"_index":2020,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.large",{"_index":2018,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":2019,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails['500",{"_index":2017,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverurl",{"_index":79,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1839,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.originalurl",{"_index":1845,"title":{},"body":{"injectables/MetadataService.html":{}}}],["create",{"_index":520,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":1255,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":1251,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture",{"_index":1750,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1757,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile",{"_index":1751,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(filedata",{"_index":1759,"title":{},"body":{"injectables/MetadataService.html":{}}}],["creative",{"_index":3113,"title":{},"body":{"license.html":{}}}],["creator",{"_index":3154,"title":{},"body":{"license.html":{}}}],["ctx",{"_index":983,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.beginpath",{"_index":1027,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.clearrect(0",{"_index":990,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.fillstyle",{"_index":1033,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(`gain",{"_index":1041,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(label",{"_index":1032,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.font",{"_index":1035,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.linewidth",{"_index":996,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.moveto(freqpoints[0].x",{"_index":1028,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.strokestyle",{"_index":994,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.textalign",{"_index":1039,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["cultural",{"_index":3169,"title":{},"body":{"license.html":{}}}],["culture",{"_index":3194,"title":{},"body":{"license.html":{}}}],["current",{"_index":2421,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["currentalbum",{"_index":248,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentalbum.name",{"_index":250,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentanalyser",{"_index":2885,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2879,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2883,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":911,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":2444,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":2201,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":2046,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2877,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2881,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":2047,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentposition",{"_index":2221,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":398,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":873,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack.metadata?.hash",{"_index":2434,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":876,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":878,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":877,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.covercolors",{"_index":889,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":885,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":884,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":883,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":881,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":886,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":875,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":879,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["curve",{"_index":1004,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["custom",{"_index":665,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":686,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":3496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#load_files_menu",{"_index":3497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":3508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":3500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":3501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":3498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":3509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":3491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":3495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":3504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.wait(300",{"_index":684,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":534,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":698,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":694,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":699,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":3384,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3138,"title":{},"body":{"license.html":{}}}],["dark",{"_index":804,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["dark)').matches",{"_index":771,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":834,"title":{},"body":{"interfaces/ColorVariant.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["darkenfactor",{"_index":725,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":766,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":845,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":844,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2710,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":1173,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":1386,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["data.album.image",{"_index":1545,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2499,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2498,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":1996,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["database",{"_index":3161,"title":{},"body":{"license.html":{}}}],["databaseconfig",{"_index":3417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":3263,"title":{},"body":{"license.html":{}}}],["date",{"_index":2993,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["db",{"_index":901,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dbconfig",{"_index":3479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbtrack",{"_index":255,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle",{"_index":259,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle?.getfile",{"_index":257,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtracks",{"_index":256,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dddddd",{"_index":995,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["declare",{"_index":676,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorators",{"_index":2601,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":2264,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["decreasevolume(value",{"_index":2272,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["deemed",{"_index":3339,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":1219,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":1217,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":1333,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["defects",{"_index":3369,"title":{},"body":{"license.html":{}}}],["defined",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1424,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":2423,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dependencies",{"_index":2876,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"dependencies.html":{},"index.html":{}}}],["depicted",{"_index":3241,"title":{},"body":{"license.html":{}}}],["deps",{"_index":3468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":1199,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":1204,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":1200,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":1207,"title":{},"body":{"injectables/GamepadService.html":{}}}],["derive",{"_index":717,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["description",{"_index":1314,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"properties.html":{}}}],["deselect",{"_index":2204,"title":{},"body":{"injectables/PlayerService.html":{}}}],["desktop",{"_index":3096,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":2124,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["destroyed",{"_index":1497,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":2113,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["details",{"_index":1704,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":2233,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":2232,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":2418,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["determine",{"_index":2442,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":3306,"title":{},"body":{"license.html":{}}}],["dialog",{"_index":1331,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":1326,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1399,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1400,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1393,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2493,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1409,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1408,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":2492,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1411,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2491,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1407,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2489,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":1337,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1382,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1389,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":3528,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["diesen",{"_index":1342,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["directive",{"_index":355,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":941,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":2363,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["directoryhandles",{"_index":3486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirhandle",{"_index":3066,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirhandle.values",{"_index":932,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry",{"_index":892,"title":{"interfaces/DirHandleEntry.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":1583,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["disableclose",{"_index":2714,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabletooltipinteractivity",{"_index":3474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":3350,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":3136,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2952,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["disconnectallanalyzers",{"_index":408,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode",{"_index":409,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnected",{"_index":1261,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":1259,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":3373,"title":{},"body":{"license.html":{}}}],["display",{"_index":856,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":2041,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":858,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":859,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":855,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":869,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":868,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":866,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":649,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:8",{"_index":652,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":854,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayfunction",{"_index":958,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":961,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":1364,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":3316,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":3252,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2441,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":3214,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3124,"title":{},"body":{"license.html":{}}}],["document",{"_index":1317,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":536,"title":{},"body":{"injectables/AudioService.html":{}}}],["document.body.append(this.fileinput",{"_index":1581,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1573,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style.csstext",{"_index":813,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2705,"title":{},"body":{"injectables/UpdateService.html":{}}}],["document.queryselector('.cdk",{"_index":2474,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dom",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":299,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["double",{"_index":937,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["download",{"_index":1971,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2890,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["dragend",{"_index":1115,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":1102,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":1107,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":1099,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":1086,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":1112,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":1101,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":1110,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":1100,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":991,"title":{},"body":{"components/EqualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":3012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":3013,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":3014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawequalizerresponse",{"_index":959,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["drawosc",{"_index":3015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":364,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":1085,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":1103,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dual",{"_index":697,"title":{},"body":{"interfaces/Chainable.html":{}}}],["duration",{"_index":399,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":2048,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2711,"title":{},"body":{"injectables/UpdateService.html":{}}}],["during",{"_index":2706,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":3388,"title":{},"body":{"license.html":{}}}],["e",{"_index":1357,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2623,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":1359,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":1360,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["each",{"_index":1016,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{},"license.html":{}}}],["early",{"_index":1149,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["effect",{"_index":728,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":3340,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":3200,"title":{},"body":{"license.html":{}}}],["eine",{"_index":1275,"title":{},"body":{"injectables/GamepadService.html":{}}}],["elects",{"_index":3212,"title":{},"body":{"license.html":{}}}],["element",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":966,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":502,"title":{},"body":{"injectables/AudioService.html":{}}}],["elementscrolled",{"_index":2403,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2863,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2866,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embeddedpicture",{"_index":715,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["emit",{"_index":1142,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["empty",{"_index":1420,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":2397,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":2414,"title":{},"body":{"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1531,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1530,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":689,"title":{},"body":{"interfaces/Chainable.html":{}}}],["end",{"_index":1023,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["endchunk",{"_index":1903,"title":{},"body":{"injectables/MetadataService.html":{}}}],["enjoyment",{"_index":3318,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2938,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":2154,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":1506,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(largeimage",{"_index":1561,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(original",{"_index":2026,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ensurehttps(smallimage",{"_index":1560,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(thumb",{"_index":2025,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ensurehttps(url",{"_index":3056,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entire",{"_index":1876,"title":{},"body":{"injectables/MetadataService.html":{}}}],["entries",{"_index":1634,"title":{},"body":{"components/LibraryComponent.html":{}}}],["entries[0].contentrect",{"_index":2900,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":915,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.getfile",{"_index":934,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":933,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":3007,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":3420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":3454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":555,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["eqgain",{"_index":546,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.connect(eqinput",{"_index":552,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.gain.value",{"_index":561,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqinput",{"_index":547,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput",{"_index":548,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput.connect(gain",{"_index":553,"title":{},"body":{"injectables/AudioService.html":{}}}],["equalizer",{"_index":974,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"index.html":{}}}],["equalizer.component.html",{"_index":955,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":956,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":362,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":400,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["equitable",{"_index":3315,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":3271,"title":{},"body":{"license.html":{}}}],["eqvalues[freq",{"_index":1022,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands.at",{"_index":1025,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands[0",{"_index":1013,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["error",{"_index":570,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/UpdateService.html":{}}}],["error('metadata",{"_index":1459,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1496,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1482,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1491,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errorevent",{"_index":1485,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":3372,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1865,"title":{},"body":{"injectables/MetadataService.html":{}}}],["es",{"_index":1421,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["escape.helper.ts",{"_index":3018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escapelucenequerystring",{"_index":1979,"title":{},"body":{"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["escapelucenequerystring(querystring",{"_index":3058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslint",{"_index":1582,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/PlayerService.html":{},"additional-documentation/helpers.html":{}}}],["eslint/require",{"_index":1587,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["establish",{"_index":2875,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["european",{"_index":3257,"title":{},"body":{"license.html":{}}}],["event",{"_index":578,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{},"directives/VisualsDirective.html":{}}}],["event.checked",{"_index":1963,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["event.clientx}px",{"_index":2479,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.clienty}px",{"_index":2481,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.currentversion.hash",{"_index":2694,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1479,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2933,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2934,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":1122,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer.items[0",{"_index":1132,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":1121,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.items",{"_index":1130,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2700,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":1240,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2695,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":1119,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.stoppropagation",{"_index":1120,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2687,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2691,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventmanager",{"_index":1321,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":604,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":661,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":671,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusive",{"_index":3148,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3527,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["exercise",{"_index":3338,"title":{},"body":{"license.html":{}}}],["existing",{"_index":668,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["exists",{"_index":2955,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["exit",{"_index":606,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["expect",{"_index":2146,"title":{},"body":{"injectables/PlayerService.html":{}}}],["expectation",{"_index":3203,"title":{},"body":{"license.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":3320,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2622,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":3299,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3210,"title":{},"body":{"license.html":{}}}],["extractcolorswithnodevibrant",{"_index":3019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurls.originalurl",{"_index":1846,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(objecturl",{"_index":1850,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1919,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1543,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extracting",{"_index":1933,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extraction",{"_index":1468,"title":{},"body":{"injectables/Id3TagsService.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":3081,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1438,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1440,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extralarge')?.['#text",{"_index":1556,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["failed",{"_index":1156,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fall",{"_index":216,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{}}}],["fallback",{"_index":1152,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["fallback_accent_color",{"_index":733,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":734,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2836,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["false",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2450,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["fear",{"_index":3173,"title":{},"body":{"license.html":{}}}],["features",{"_index":3075,"title":{},"body":{"index.html":{}}}],["fetchalbuminfo(artist",{"_index":1528,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":2002,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ffnet",{"_index":1341,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2832,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2724,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":269,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2391,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.size",{"_index":1873,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(math.max(0",{"_index":1904,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(middlepos",{"_index":1881,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(quarterpos",{"_index":1892,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(threequarterpos",{"_index":1897,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata",{"_index":904,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filedata.file",{"_index":1814,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.file.name",{"_index":1852,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.filehandle",{"_index":1815,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.push",{"_index":943,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["filedata.push(...subfiles",{"_index":946,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedatas",{"_index":1755,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["filedatas.values",{"_index":1802,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedatas?.length",{"_index":1799,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":363,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":258,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filehandle.getfile",{"_index":2162,"title":{},"body":{"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filehandles",{"_index":1133,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.length",{"_index":1144,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.push(handle",{"_index":1139,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandlesdropped",{"_index":1080,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileinput",{"_index":1570,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":1160,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":906,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice.currentfolderhandle",{"_index":2362,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["fileloaderservicefactory",{"_index":3022,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":713,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filepath",{"_index":687,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":682,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["files.push(file",{"_index":1163,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesdroped",{"_index":1081,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesize",{"_index":1872,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesize).arraybuffer",{"_index":1906,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filestoprocess",{"_index":1797,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesystemdirectoryhandle",{"_index":898,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filesystemfilehandle",{"_index":710,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["fill",{"_index":2942,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":246,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/LibraryComponent.html":{}}}],["filter((artist",{"_index":162,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filter.gain.value",{"_index":559,"title":{},"body":{"injectables/AudioService.html":{}}}],["filtered",{"_index":158,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.filter((item",{"_index":170,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.tosorted((a",{"_index":192,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filteredbyserchterm",{"_index":142,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtering",{"_index":2206,"title":{},"body":{"injectables/PlayerService.html":{}}}],["finalize",{"_index":1674,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["finally",{"_index":1662,"title":{},"body":{"injectables/LibraryService.html":{}}}],["find",{"_index":1547,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["findreleasegroupid(artist",{"_index":1990,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":1773,"title":{},"body":{"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":1267,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebuttonaction(index",{"_index":1263,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":3121,"title":{},"body":{"license.html":{}}}],["first",{"_index":195,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{}}}],["firstvaluefrom",{"_index":902,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2716,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":1532,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.add('library",{"_index":1857,"title":{},"body":{"injectables/MetadataService.html":{}}}],["firstvaluefrom(this.indexeddbservice.clear('library",{"_index":1970,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["firstvaluefrom(this.indexeddbservice.getall('library",{"_index":1645,"title":{},"body":{"injectables/LibraryService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('directoryhandles",{"_index":913,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('library",{"_index":1820,"title":{},"body":{"injectables/MetadataService.html":{}}}],["firstvaluefrom(this.indexeddbservice.update('directoryhandles",{"_index":924,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["fitness",{"_index":3365,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1168,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["flac",{"_index":1058,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":1167,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["float32array",{"_index":3051,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2621,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["fns",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["focus",{"_index":2152,"title":{},"body":{"injectables/PlayerService.html":{}}}],["folder/files",{"_index":2361,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["following",{"_index":3224,"title":{},"body":{"license.html":{}}}],["font",{"_index":1186,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["forcefully",{"_index":2469,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["form",{"_index":3184,"title":{},"body":{"license.html":{}}}],["format",{"_index":714,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formatlabel",{"_index":2265,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formatlabel(value",{"_index":2274,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formats",{"_index":3077,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":2297,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":2660,"title":{},"body":{"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatwithleadingzero",{"_index":3026,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatwithleadingzero(value",{"_index":3063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":115,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["found",{"_index":262,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":3193,"title":{},"body":{"license.html":{}}}],["freely",{"_index":3182,"title":{},"body":{"license.html":{}}}],["freq",{"_index":1017,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints",{"_index":1007,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints.push",{"_index":1012,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints[0].y",{"_index":1029,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency",{"_index":1002,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency_bands",{"_index":494,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["frequency_bands)[number",{"_index":720,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["frequencyband",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["frequencybarsconfig",{"_index":284,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":3426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":2008,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["full",{"_index":2023,"title":{},"body":{"injectables/MusicbrainzService.html":{},"miscellaneous/variables.html":{}}}],["fully",{"_index":3283,"title":{},"body":{"license.html":{}}}],["function",{"_index":930,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":3009,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":3195,"title":{},"body":{"license.html":{}}}],["future",{"_index":3295,"title":{},"body":{"license.html":{}}}],["für",{"_index":1648,"title":{},"body":{"injectables/LibraryService.html":{}}}],["gain",{"_index":544,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":554,"title":{},"body":{"injectables/AudioService.html":{}}}],["gain.gain.value",{"_index":563,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainnode",{"_index":510,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainvalue",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{}}}],["gainvalue.tofixed(1)}x",{"_index":1042,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["gamepad",{"_index":1237,"title":{},"body":{"injectables/GamepadService.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":1283,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":1216,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":2322,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":2332,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":2323,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":1230,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":1235,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":1238,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":1196,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":3027,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":287,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gblaster",{"_index":1982,"title":{},"body":{"injectables/MusicbrainzService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gblasterdb",{"_index":3480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1868,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":3104,"title":{},"body":{"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":3029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1871,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehash(filedata.file",{"_index":1817,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generating",{"_index":1816,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator.bitdroid.de/#section",{"_index":3107,"title":{},"body":{"index.html":{}}}],["getanalysernode",{"_index":2852,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getasfilesystemhandle",{"_index":1131,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["getaudiofilesfromdirhandle",{"_index":3030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":931,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":945,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(handle",{"_index":929,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2918,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2919,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":3427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverdisplay",{"_index":3429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1562,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":1520,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1589,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":410,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethasended",{"_index":489,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1410,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":658,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":683,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getloadfilesmenuentry",{"_index":659,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesmenuentry().click",{"_index":685,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1752,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(filedata",{"_index":1761,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":3431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":3032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":2218,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":2245,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":3432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":3434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getthemecolor(color",{"_index":828,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["getting",{"_index":1841,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["gettoolbartitle",{"_index":3435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":3436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":2356,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["getvolumeslider",{"_index":3437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getxpos(freq",{"_index":1019,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["give",{"_index":2888,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":2144,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":2148,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":768,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":1244,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gp",{"_index":1246,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":1245,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":1247,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":3438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":917,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":951,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":3102,"title":{},"body":{"index.html":{}}}],["greater",{"_index":3198,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3278,"title":{},"body":{"license.html":{}}}],["grid",{"_index":992,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["group",{"_index":1995,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["group/${releasegroupid",{"_index":2004,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":2001,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":1997,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":1998,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["h2",{"_index":1185,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handle",{"_index":897,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.kind",{"_index":1138,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handle.requestpermission",{"_index":952,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":1159,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1484,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlefilefallback(event",{"_index":1157,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handlemessage",{"_index":1477,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":1356,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{}}}],["handles",{"_index":1129,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleversionready",{"_index":2701,"title":{},"body":{"injectables/UpdateService.html":{}}}],["handling",{"_index":1151,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hanging",{"_index":1463,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1385,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{}}}],["hash",{"_index":712,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":987,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":3307,"title":{},"body":{"license.html":{}}}],["held",{"_index":3353,"title":{},"body":{"license.html":{}}}],["help",{"_index":1325,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["helpers",{"_index":3529,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":1336,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":674,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":3281,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":3135,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":3140,"title":{},"body":{"license.html":{}}}],["hex",{"_index":832,"title":{},"body":{"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":1127,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1576,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1683,"title":{},"body":{"injectables/LoaderService.html":{}}}],["highest",{"_index":1024,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["hilfe",{"_index":1343,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk",{"_index":1375,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":1377,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["horizontal",{"_index":997,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["host",{"_index":1165,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2605,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2619,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2602,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2603,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2615,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2618,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2616,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2617,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2584,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":1095,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hotkey",{"_index":1311,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1413,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1416,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1419,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":1327,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1403,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":1324,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeys.service",{"_index":1396,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1391,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":366,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":1328,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":3034,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["htmlaudioelement",{"_index":504,"title":{},"body":{"injectables/AudioService.html":{}}}],["htmlcanvaselement",{"_index":2859,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlelement",{"_index":1316,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlaylistComponent.html":{}}}],["htmlinputelement",{"_index":1571,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":1514,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["http_interceptors",{"_index":3475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1504,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["httpevent",{"_index":1672,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1670,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1673,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1669,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":3105,"title":{},"body":{"index.html":{}}}],["https://github.com/motabass/gblaster",{"_index":3398,"title":{},"body":{"properties.html":{}}}],["https://on.cypress.io/custom",{"_index":675,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":3109,"title":{},"body":{"index.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1519,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["icon",{"_index":3103,"title":{},"body":{"index.html":{}}}],["iconregistry",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":3108,"title":{},"body":{"index.html":{}}}],["id",{"_index":851,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":841,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["id3coverpicture",{"_index":704,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":840,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["id3tagsservice",{"_index":1436,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":3192,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":708,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ii",{"_index":3230,"title":{},"body":{"license.html":{}}}],["iii",{"_index":3235,"title":{},"body":{"license.html":{}}}],["image",{"_index":1502,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["image.front",{"_index":2011,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["images",{"_index":1544,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.at",{"_index":1558,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.find((img",{"_index":1549,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.length",{"_index":1546,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images[0]?.['#text",{"_index":1553,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["img.size",{"_index":1550,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["immediately",{"_index":2167,"title":{},"body":{"injectables/PlayerService.html":{}}}],["implementation",{"_index":3265,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":3276,"title":{},"body":{"license.html":{}}}],["implements",{"_index":135,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":3362,"title":{},"body":{"license.html":{}}}],["import",{"_index":83,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":3517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":3519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":3515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":3520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1452,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["important",{"_index":1902,"title":{},"body":{"injectables/MetadataService.html":{}}}],["imports",{"_index":128,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["include",{"_index":3222,"title":{},"body":{"license.html":{}}}],["including",{"_index":3187,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":3179,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":2266,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["increasevolume(value",{"_index":2276,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":900,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":3092,"title":{},"body":{"index.html":{}}}],["indexeddbservice",{"_index":909,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["indexeddbtrackmetadata",{"_index":90,"title":{"interfaces/IndexedDbTrackMetadata.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["indexeddbtracks",{"_index":1636,"title":{},"body":{"injectables/LibraryService.html":{}}}],["ineffective",{"_index":3326,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":3342,"title":{},"body":{"license.html":{}}}],["influence",{"_index":1021,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":3129,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3176,"title":{},"body":{"license.html":{}}}],["init",{"_index":2672,"title":{},"body":{"injectables/UpdateService.html":{}}}],["initbarkscale",{"_index":3036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":537,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["initializetheme",{"_index":792,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2527,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":86,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["inject(audioservice",{"_index":964,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2549,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":2125,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":1330,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":1096,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":1329,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":2121,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["inject(gamepadservice",{"_index":2301,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":2302,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["inject(httpclient",{"_index":1515,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["inject(id3tagsservice",{"_index":1792,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1793,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(libraryservice",{"_index":140,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["inject(loaderservice",{"_index":1678,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":499,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1402,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":1332,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":2123,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":737,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":1643,"title":{},"body":{"injectables/LibraryService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["inject(musicbrainzservice",{"_index":1794,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":910,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(playerservice",{"_index":138,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":1098,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":2550,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2679,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2667,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":2043,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":2794,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":2122,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2864,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1401,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":393,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":395,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":1092,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"index.html":{}}}],["input('bars",{"_index":2857,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":1077,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{}}}],["inset",{"_index":1174,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2699,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":3100,"title":{},"body":{"index.html":{}}}],["instant",{"_index":2449,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["intended",{"_index":3219,"title":{},"body":{"license.html":{}}}],["intending",{"_index":3309,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1667,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1668,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1663,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1665,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["internal",{"_index":2953,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":2120,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":1308,"title":{},"body":{"injectables/GamepadService.html":{}}}],["invalid",{"_index":3325,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":3343,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":3341,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":3336,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":3284,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":2373,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":2377,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":2396,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":1298,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":3037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":3052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":3038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2513,"title":{},"body":{"components/ShellComponent.html":{}}}],["isinitialized",{"_index":2680,"title":{},"body":{"injectables/UpdateService.html":{}}}],["iskeyboardsupported",{"_index":3039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":401,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":402,"title":{},"body":{"injectables/AudioService.html":{}}}],["ismediasessionsupported",{"_index":3040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions",{"_index":3043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":3053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":403,"title":{},"body":{"injectables/AudioService.html":{}}}],["isplaying",{"_index":404,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":2379,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isstopped",{"_index":405,"title":{},"body":{"injectables/AudioService.html":{}}}],["ist",{"_index":1349,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":3044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":1807,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["item",{"_index":1135,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["item.album",{"_index":172,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item.artist",{"_index":171,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item__content",{"_index":3507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1178,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["itemsize",{"_index":2455,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":3242,"title":{},"body":{"license.html":{}}}],["jest",{"_index":3531,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["json",{"_index":1541,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["judged",{"_index":3323,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":3143,"title":{},"body":{"license.html":{}}}],["justify",{"_index":1180,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["keine",{"_index":1423,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":3084,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1358,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":1354,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":3483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":1315,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["keys.replaceall",{"_index":1374,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":3360,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3217,"title":{},"body":{"license.html":{}}}],["known",{"_index":3293,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1866,"title":{},"body":{"injectables/MetadataService.html":{}}}],["kvalue",{"_index":643,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kvalue.tofixed(1)}k",{"_index":645,"title":{},"body":{"pipes/BandPipe.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["large",{"_index":2021,"title":{},"body":{"injectables/MusicbrainzService.html":{},"license.html":{}}}],["large')?.['#text",{"_index":1557,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["largeimage",{"_index":1554,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["larger",{"_index":1885,"title":{},"body":{"injectables/MetadataService.html":{}}}],["last",{"_index":1899,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlayerToolbarComponent.html":{}}}],["last.fm",{"_index":1527,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1782,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1516,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1499,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1510,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1503,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1513,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1512,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1509,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2927,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["latencyhint",{"_index":539,"title":{},"body":{"injectables/AudioService.html":{}}}],["latent",{"_index":3368,"title":{},"body":{"license.html":{}}}],["later",{"_index":3174,"title":{},"body":{"license.html":{}}}],["latest",{"_index":3073,"title":{},"body":{"index.html":{}}}],["launch",{"_index":2151,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters",{"_index":2149,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":2161,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":2159,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":2143,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":3120,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3142,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3095,"title":{},"body":{"index.html":{}}}],["leadingminutezero",{"_index":3062,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":1075,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":1088,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2591,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1564,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":3115,"title":{},"body":{"license.html":{}}}],["legally",{"_index":3324,"title":{},"body":{"license.html":{}}}],["legend",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":3137,"title":{},"body":{"license.html":{}}}],["library",{"_index":1657,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":130,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":132,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.service",{"_index":127,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":134,"title":{"components/LibraryComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libraryservice",{"_index":126,"title":{"injectables/LibraryService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{}}}],["libraryservice.isloading",{"_index":1623,"title":{},"body":{"components/LibraryComponent.html":{}}}],["libs/.../lucene",{"_index":3017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../time.helper.ts",{"_index":3025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/lucene",{"_index":3057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/time.helper.ts",{"_index":3061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":1064,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":3112,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":3357,"title":{},"body":{"license.html":{}}}],["light",{"_index":805,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightenfactor",{"_index":726,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":847,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":829,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":846,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":3240,"title":{},"body":{"license.html":{}}}],["limit",{"_index":2929,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["limitation",{"_index":3188,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":3248,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3223,"title":{},"body":{"license.html":{}}}],["line",{"_index":1585,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["lines",{"_index":993,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["linethickness",{"_index":2725,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":3503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3532,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["list",{"_index":2457,"title":{},"body":{"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":579,"title":{},"body":{"injectables/AudioService.html":{}}}],["literal",{"_index":1435,"title":{},"body":{"interfaces/Id3Tags.html":{}}}],["load",{"_index":2360,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["loadcomponent",{"_index":3514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":2202,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loadedtrack",{"_index":2213,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":894,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":905,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["loader.helpers.ts",{"_index":1044,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1677,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":907,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["loader.service.abstract.ts",{"_index":1190,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":1193,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:6",{"_index":1194,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:7",{"_index":1195,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":3024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":896,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:11",{"_index":1566,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:18",{"_index":2028,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:24",{"_index":1569,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:27",{"_index":1567,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:33",{"_index":2030,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:43",{"_index":2029,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:44",{"_index":1568,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1664,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1676,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2566,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":655,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":1656,"title":{},"body":{"injectables/LibraryService.html":{}}}],["loadingcounter",{"_index":1688,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadlastdirectory",{"_index":2267,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["loadlibraryfromdb",{"_index":1637,"title":{},"body":{"injectables/LibraryService.html":{}}}],["local",{"_index":1827,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localecompare(b.album",{"_index":201,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.artist",{"_index":198,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.title",{"_index":220,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localstorage",{"_index":557,"title":{},"body":{"injectables/AudioService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":491,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["locking",{"_index":3088,"title":{},"body":{"index.html":{}}}],["loop",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{}}}],["lowersearchterm",{"_index":145,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["lowest",{"_index":1011,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["made",{"_index":3220,"title":{},"body":{"license.html":{}}}],["main_audio",{"_index":524,"title":{},"body":{"injectables/AudioService.html":{}}}],["maincolor",{"_index":292,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":602,"title":{},"body":{"injectables/AudioService.html":{}}}],["makes",{"_index":3131,"title":{},"body":{"license.html":{}}}],["map",{"_index":173,"title":{},"body":{"interfaces/Album.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2557,"title":{},"body":{"components/ShellComponent.html":{}}}],["map((tag",{"_index":160,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["march",{"_index":3260,"title":{},"body":{"license.html":{}}}],["markus.mohoritsch@gmx.at",{"_index":1986,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["mat",{"_index":3499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1394,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":3469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1398,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1937,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2653,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2650,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":1318,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2675,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1395,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":1319,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":3106,"title":{},"body":{"index.html":{}}}],["matformfield",{"_index":117,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matformfieldmodule",{"_index":2370,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":2446,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":2248,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":2445,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(chunksize",{"_index":1879,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(filesize",{"_index":1878,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(kvalue)}k",{"_index":644,"title":{},"body":{"pipes/BandPipe.html":{}}}],["math.floor(math.random",{"_index":2252,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":2249,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":2104,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.log10(freq",{"_index":999,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(maxfreq",{"_index":1001,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(minfreq",{"_index":1000,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.max(0",{"_index":2458,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":2106,"title":{},"body":{"injectables/PlayerService.html":{}}}],["mathint",{"_index":118,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticon",{"_index":102,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonbutton",{"_index":104,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonmodule",{"_index":1397,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":119,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matlistmodule",{"_index":93,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenu",{"_index":95,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["matmenucontent",{"_index":96,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenuitem",{"_index":97,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenumodule",{"_index":2034,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matmenutrigger",{"_index":98,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matoptionmodule",{"_index":2720,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprefix",{"_index":120,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressbar",{"_index":2509,"title":{},"body":{"components/ShellComponent.html":{}}}],["matprogressspinner",{"_index":123,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressspinnermodule",{"_index":2369,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2719,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2536,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2507,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslider",{"_index":2257,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidermodule",{"_index":954,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matsliderthumb",{"_index":2258,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidetogglechange",{"_index":1948,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1938,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matsuffix",{"_index":121,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mattoolbar",{"_index":2259,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattoolbarmodule",{"_index":2032,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltip",{"_index":2260,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattooltipmodule",{"_index":2033,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":2246,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":270,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":3298,"title":{},"body":{"license.html":{}}}],["md5",{"_index":1788,"title":{},"body":{"injectables/MetadataService.html":{}}}],["mdc",{"_index":3506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaning",{"_index":3218,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":2408,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["media",{"_index":1727,"title":{},"body":{"injectables/MediaSessionService.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":508,"title":{},"body":{"injectables/AudioService.html":{}}}],["mediametadata(metadata",{"_index":1736,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1708,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionaction",{"_index":1703,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1705,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1738,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1693,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":3046,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":3300,"title":{},"body":{"license.html":{}}}],["medium')?.['#text",{"_index":1552,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["mega')?.['#text",{"_index":1555,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["member",{"_index":3305,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2471,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["menutrigger",{"_index":2392,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["merchantability",{"_index":3364,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1351,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.description",{"_index":1370,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.element",{"_index":1363,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":1371,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1511,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1478,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["messages",{"_index":2931,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["meta",{"_index":729,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["meta.coverurl.originalurl",{"_index":1860,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl?.originalurl?.startswith('blob",{"_index":1861,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl?.thumburl?.startswith('blob",{"_index":1863,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1859,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1870,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":113,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"dependencies.html":{},"index.html":{}}}],["metadata.helper",{"_index":1507,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1783,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1501,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:37",{"_index":1563,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":1444,"title":{},"body":{"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1819,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.coverurl.thumburl",{"_index":1823,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1821,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1832,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":1641,"title":{"injectables/MetadataService.html":{}},"body":{"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["metadataservice.processing",{"_index":2567,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadataservice.statustext",{"_index":2568,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadatasettingscomponent",{"_index":367,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["meter",{"_index":3089,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":3439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1538,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["methods",{"_index":407,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["middlechunk",{"_index":1880,"title":{},"body":{"injectables/MetadataService.html":{}}}],["middlepos",{"_index":1877,"title":{},"body":{"injectables/MetadataService.html":{}}}],["migrating",{"_index":2614,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2607,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["min",{"_index":2247,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2726,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["mindecibels",{"_index":271,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["minfreq",{"_index":1030,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["miscellaneous",{"_index":3006,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":3097,"title":{},"body":{"index.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":3178,"title":{},"body":{"license.html":{}}}],["module",{"_index":1453,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":3390,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monochrome.svg",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["moral",{"_index":3231,"title":{},"body":{"license.html":{}}}],["more",{"_index":669,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{}}}],["motabass",{"_index":3400,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":1980,"title":{},"body":{"injectables/MusicbrainzService.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":2543,"title":{},"body":{"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":3202,"title":{},"body":{"license.html":{}}}],["mouseevent",{"_index":2382,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["mp3",{"_index":1057,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":1062,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mtb",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":3477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":709,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":1972,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1785,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzapi",{"_index":1978,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":1784,"title":{"injectables/MusicbrainzService.html":{}},"body":{"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":843,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{}}}],["narrowing",{"_index":2625,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":3264,"title":{},"body":{"license.html":{}}}],["nativebrowserfileloaderservice",{"_index":908,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigateto",{"_index":2514,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2517,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigator.getgamepads",{"_index":1236,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1735,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1739,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1730,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1725,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1734,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1733,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2978,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2979,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":880,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nderungen",{"_index":783,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["nearby",{"_index":2448,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["necessary",{"_index":3380,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":3221,"title":{},"body":{"license.html":{}}}],["new",{"_index":164,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["newsize",{"_index":298,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["newtrack",{"_index":2169,"title":{},"body":{"injectables/PlayerService.html":{}}}],["next",{"_index":1584,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1680,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1446,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2964,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ngafterviewinit",{"_index":1104,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngclass",{"_index":2368,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2624,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2626,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":1118,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":221,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngx",{"_index":492,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":899,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1253,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["noble/hashes",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["noble/hashes/legacy.js",{"_index":1789,"title":{},"body":{"injectables/MetadataService.html":{}}}],["noble/hashes/utils.js",{"_index":1791,"title":{},"body":{"injectables/MetadataService.html":{}}}],["node",{"_index":1786,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{},"index.html":{}}}],["nodes",{"_index":541,"title":{},"body":{"injectables/AudioService.html":{}}}],["non",{"_index":3333,"title":{},"body":{"license.html":{}}}],["none",{"_index":526,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["nothing",{"_index":2157,"title":{},"body":{"injectables/PlayerService.html":{}}}],["now",{"_index":2936,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["null",{"_index":651,"title":{},"body":{"pipes/BitratePipe.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(a.track",{"_index":207,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(axisindex",{"_index":1227,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(b.track",{"_index":210,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(buttonindex",{"_index":1225,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(atrack",{"_index":213,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(btrack",{"_index":214,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(duration",{"_index":1722,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number.nan",{"_index":206,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbers",{"_index":212,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbervalue",{"_index":979,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["nx",{"_index":3522,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["object",{"_index":1828,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":3481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1834,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":3389,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1322,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":1355,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":1368,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2552,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2898,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":1362,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2901,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtained",{"_index":1147,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["obtaining",{"_index":3379,"title":{},"body":{"license.html":{}}}],["offers",{"_index":3358,"title":{},"body":{"license.html":{}}}],["offline",{"_index":3099,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":297,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":3443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":1916,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["ogg",{"_index":1059,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["oldsource",{"_index":609,"title":{},"body":{"injectables/AudioService.html":{}}}],["onchanges",{"_index":2572,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["oncontextmenu",{"_index":2374,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["oncontextmenu(event",{"_index":2381,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ondestroy",{"_index":1070,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":722,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["onfilehandlesdropped",{"_index":2515,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilehandlesdropped(files",{"_index":2521,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped",{"_index":2516,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped(files",{"_index":2523,"title":{},"body":{"components/ShellComponent.html":{}}}],["oninit",{"_index":87,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1942,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1947,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onsliderpositionchanged",{"_index":2268,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":2279,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1943,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1950,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1944,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1952,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1945,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1954,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":2269,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onvolumechange(value",{"_index":2281,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["open",{"_index":2466,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["opened",{"_index":2472,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["openedstate",{"_index":2579,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":927,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2578,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["option",{"_index":2833,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["optional",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":696,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":1346,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":1353,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":1061,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":2024,"title":{},"body":{"injectables/MusicbrainzService.html":{},"license.html":{}}}],["originalfn",{"_index":700,"title":{},"body":{"interfaces/Chainable.html":{}}}],["originalurl",{"_index":849,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["os",{"_index":3085,"title":{},"body":{"index.html":{}}}],["osc",{"_index":312,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2727,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":3090,"title":{},"body":{"index.html":{}}}],["oscilloscopepath",{"_index":3440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":289,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":311,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":3101,"title":{},"body":{"index.html":{}}}],["others",{"_index":3201,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":215,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["out",{"_index":1470,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{}}}],["output",{"_index":1093,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outputs",{"_index":1079,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":2438,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":1076,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":1090,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":1071,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":1074,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":1073,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":1068,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":1082,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":1084,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:15",{"_index":1083,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:39",{"_index":1091,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:49",{"_index":1089,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:55",{"_index":1087,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":1067,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":1066,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlayref",{"_index":2473,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.left",{"_index":2478,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.position",{"_index":2476,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.top",{"_index":2480,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overtly",{"_index":3282,"title":{},"body":{"license.html":{}}}],["overview",{"_index":3391,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":667,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["owner",{"_index":3157,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":3156,"title":{},"body":{"license.html":{}}}],["owners",{"_index":3163,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2946,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":2984,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":3521,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{}}],["palette",{"_index":890,"title":{},"body":{"components/CoverDisplayComponent.html":{},"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1929,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1930,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1923,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1924,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1931,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1932,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1925,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1926,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1927,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1928,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1921,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1922,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pane:last",{"_index":2475,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["panel",{"_index":2573,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2574,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2575,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2571,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2590,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2587,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2594,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2595,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2589,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2592,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2593,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2596,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2597,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2598,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2600,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2599,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2570,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":3249,"title":{},"body":{"license.html":{}}}],["parallele",{"_index":1646,"title":{},"body":{"injectables/LibraryService.html":{}}}],["parameters",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1534,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":678,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":3258,"title":{},"body":{"license.html":{}}}],["part",{"_index":3199,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1334,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":3366,"title":{},"body":{"license.html":{}}}],["party",{"_index":3387,"title":{},"body":{"license.html":{}}}],["passed",{"_index":2939,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":3352,"title":{},"body":{"license.html":{}}}],["path",{"_index":3511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":3445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":3513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":411,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":293,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1487,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1447,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["perform",{"_index":3227,"title":{},"body":{"license.html":{}}}],["performance",{"_index":1650,"title":{},"body":{"injectables/LibraryService.html":{}}}],["performance.now",{"_index":1294,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":3234,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3165,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":3374,"title":{},"body":{"license.html":{}}}],["permission",{"_index":949,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":3382,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3279,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":3093,"title":{},"body":{"index.html":{}}}],["person",{"_index":3207,"title":{},"body":{"license.html":{}}}],["person's",{"_index":3239,"title":{},"body":{"license.html":{}}}],["persons",{"_index":3378,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":3238,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1434,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pictures",{"_index":1842,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pipe",{"_index":112,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":2404,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":635,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":642,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1795,"title":{},"body":{"injectables/MetadataService.html":{}}}],["play",{"_index":412,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["play/pause",{"_index":2307,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playback",{"_index":540,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["player",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player.component.html",{"_index":2035,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":2036,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":660,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":101,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":92,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1714,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":3516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/file",{"_index":2545,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/library",{"_index":3518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1959,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/ShellComponent.html":{}}}],["player/player",{"_index":2546,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.service",{"_index":2544,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.types",{"_index":736,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":369,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":100,"title":{"injectables/PlayerService.html":{}},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":874,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["playerservice.currentlyloadedtrack();@let",{"_index":891,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["playerservice.currenttime",{"_index":2364,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playerservice.repeat",{"_index":2366,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playertoolbarcomponent",{"_index":370,"title":{"components/PlayerToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playing",{"_index":1715,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["playlist",{"_index":1625,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist'},{'name",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":2371,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":2372,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.filter((t",{"_index":2208,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.find((playlisttrack",{"_index":2224,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.findindex((track",{"_index":2432,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":2222,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":2219,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":2042,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":373,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.hash",{"_index":2197,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlisttrack.metadata?.hash",{"_index":2225,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":2052,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":2375,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":2384,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":2053,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":2074,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":3076,"title":{},"body":{"index.html":{}}}],["playtrack",{"_index":1599,"title":{},"body":{"components/LibraryComponent.html":{}}}],["playtrack(track",{"_index":233,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["playtrackbyhash",{"_index":2054,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playtrackbyhash(hash",{"_index":2076,"title":{},"body":{"injectables/PlayerService.html":{}}}],["please",{"_index":672,"title":{},"body":{"interfaces/Chainable.html":{}}}],["pluginnewanalysernode",{"_index":413,"title":{},"body":{"injectables/AudioService.html":{}}}],["pointer",{"_index":1166,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["points",{"_index":1015,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["pool",{"_index":2922,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":2103,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":3183,"title":{},"body":{"license.html":{}}}],["prefertagembeddedpicture",{"_index":1741,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefix",{"_index":3460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["present",{"_index":3371,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":3327,"title":{},"body":{"license.html":{}}}],["pressedbuttonscaches",{"_index":1222,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prevents",{"_index":2611,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":2055,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":695,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":808,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":772,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":776,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":1993,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1974,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":3237,"title":{},"body":{"license.html":{}}}],["private",{"_index":136,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["process",{"_index":2707,"title":{},"body":{"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["processing",{"_index":1742,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["processingfile",{"_index":1743,"title":{},"body":{"injectables/MetadataService.html":{}}}],["processionpercent",{"_index":1744,"title":{},"body":{"injectables/MetadataService.html":{}}}],["production",{"_index":3196,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":920,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1461,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promise.all(promises",{"_index":1143,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promise.reject(new",{"_index":1458,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1134,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{}}}],["promises.push(promise",{"_index":1140,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promote",{"_index":3191,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":3303,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":375,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2494,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"properties.html":{}}}],["protected",{"_index":139,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"license.html":{}}}],["protecting",{"_index":3243,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3262,"title":{},"body":{"license.html":{}}}],["provide",{"_index":3122,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":3450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":3134,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":498,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":3462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":3451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":3457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":3128,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":3452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonelesschangedetection",{"_index":3449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":3171,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":3236,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3213,"title":{},"body":{"license.html":{}}}],["pure",{"_index":637,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":3141,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3186,"title":{},"body":{"license.html":{}}}],["pwa",{"_index":3071,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quarter",{"_index":1887,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterchunk",{"_index":1891,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterpos",{"_index":1890,"title":{},"body":{"injectables/MetadataService.html":{}}}],["query",{"_index":1526,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["queryparams",{"_index":1536,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["querystring",{"_index":3059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["queue",{"_index":2158,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":3317,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["random",{"_index":2251,"title":{},"body":{"injectables/PlayerService.html":{}}}],["randomposition",{"_index":2217,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":2435,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["rate",{"_index":888,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["re",{"_index":1660,"title":{},"body":{"injectables/LibraryService.html":{}}}],["react",{"_index":972,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["read",{"_index":673,"title":{},"body":{"interfaces/Chainable.html":{}}}],["reader",{"_index":3111,"title":{},"body":{"index.html":{}}}],["reading",{"_index":1837,"title":{},"body":{"injectables/MetadataService.html":{}}}],["readme",{"_index":3069,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":137,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":1808,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/UpdateService.html":{}}}],["realkeys",{"_index":1373,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":3322,"title":{},"body":{"license.html":{}}}],["record",{"_index":1535,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2891,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["redirectto",{"_index":3512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":3181,"title":{},"body":{"license.html":{}}}],["refactor",{"_index":912,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["regarding",{"_index":3133,"title":{},"body":{"license.html":{}}}],["regards",{"_index":3247,"title":{},"body":{"license.html":{}}}],["register",{"_index":1425,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":1345,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":1201,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":1210,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":1202,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":1214,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1387,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":3456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":3455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":1350,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["regular",{"_index":1146,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["reject",{"_index":1448,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1475,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1467,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":3150,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":3127,"title":{},"body":{"license.html":{}}}],["release",{"_index":2000,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["release:${escapelucenequerystring(album",{"_index":1991,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["released",{"_index":2982,"title":{},"body":{"injectables/WakelockService.html":{}}}],["releasegroupid",{"_index":1987,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2970,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":3172,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":3166,"title":{},"body":{"license.html":{}}}],["remainder",{"_index":3344,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":3346,"title":{},"body":{"license.html":{}}}],["remote",{"_index":1833,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverarturls",{"_index":82,"title":{"interfaces/RemoteCoverArtUrls.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":936,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["removed",{"_index":2200,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist",{"_index":2056,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist(track",{"_index":2079,"title":{},"body":{"injectables/PlayerService.html":{}}}],["renderer",{"_index":1097,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":1094,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renew",{"_index":1826,"title":{},"body":{"injectables/MetadataService.html":{}}}],["repeat",{"_index":2049,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":721,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["replace",{"_index":2210,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repository",{"_index":3397,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":3359,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":3225,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":3197,"title":{},"body":{"license.html":{}}}],["request",{"_index":948,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["request.reject(new",{"_index":1481,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1483,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe(draw",{"_index":2949,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1488,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestwakelock",{"_index":2977,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":3383,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":3312,"title":{},"body":{"license.html":{}}}],["reset",{"_index":2470,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["resetfrequencybandgain",{"_index":414,"title":{},"body":{"injectables/AudioService.html":{}}}],["resetfrequencybandgain(bandfrequency",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{}}}],["resizeobserver",{"_index":2862,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2899,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1472,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(tags",{"_index":1474,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1593,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["resolved",{"_index":1141,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["respect",{"_index":3348,"title":{},"body":{"license.html":{}}}],["response",{"_index":1003,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["responsibility",{"_index":3376,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":3094,"title":{},"body":{"index.html":{}}}],["result",{"_index":1644,"title":{},"body":{"injectables/LibraryService.html":{}}}],["result.map((track",{"_index":1652,"title":{},"body":{"injectables/LibraryService.html":{}}}],["result.matches",{"_index":2558,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":3139,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":1378,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["retained",{"_index":3232,"title":{},"body":{"license.html":{}}}],["return",{"_index":147,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":3180,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":3311,"title":{},"body":{"license.html":{}}}],["rgb(255",{"_index":1183,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0,0",{"_index":865,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["right",{"_index":1040,"title":{},"body":{"components/EqualizerComponent.html":{},"components/SlidePanelComponent.html":{},"license.html":{}}}],["rights",{"_index":3151,"title":{},"body":{"license.html":{}}}],["root",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["root'},{'name",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotation",{"_index":2925,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":2520,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":2538,"title":{},"body":{"components/ShellComponent.html":{}}}],["routeroutlet",{"_index":2508,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":3401,"title":{"routes.html":{}},"body":{"routes.html":{},"miscellaneous/variables.html":{}}}],["royalty",{"_index":3332,"title":{},"body":{"license.html":{}}}],["run",{"_index":3526,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":3523,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":496,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1675,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":111,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":110,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["sample",{"_index":887,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":310,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["samples",{"_index":1889,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sandbox",{"_index":3110,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["scheme",{"_index":770,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["scientific",{"_index":3170,"title":{},"body":{"license.html":{}}}],["screen",{"_index":3087,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":2398,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollbehavior",{"_index":2452,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":2410,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":2447,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollposition",{"_index":2406,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":2399,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":2427,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":2430,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":2394,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["search",{"_index":1999,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["searchterm",{"_index":141,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["searchterm.tolowercase",{"_index":146,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["seconds",{"_index":2083,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft",{"_index":2057,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekleft(seconds",{"_index":2081,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":2283,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekright",{"_index":2058,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekright(seconds",{"_index":2084,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":2285,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekto",{"_index":1732,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["seektohandler(details",{"_index":2231,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":415,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1600,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":228,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1601,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":224,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selected",{"_index":2203,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectedalbum",{"_index":155,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":153,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":156,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selectnext",{"_index":2059,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":2060,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":2061,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":2088,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1602,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":230,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["send",{"_index":2944,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":1265,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separator",{"_index":3458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service/file",{"_index":1043,"title":{},"body":{"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":705,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1500,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1565,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":3055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":1642,"title":{},"body":{"injectables/LibraryService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["service/metadata.service.ts",{"_index":1740,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:152",{"_index":1758,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:25",{"_index":1780,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1778,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1776,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:28",{"_index":1764,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:32",{"_index":1769,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:36",{"_index":1766,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:40",{"_index":1767,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:42",{"_index":1774,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:49",{"_index":1754,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:65",{"_index":1760,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:80",{"_index":1762,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":114,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":838,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":3060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":1975,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:18",{"_index":1976,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":895,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":3123,"title":{},"body":{"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":2299,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":2298,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":2300,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["services/loader/loader.service",{"_index":2541,"title":{},"body":{"components/ShellComponent.html":{}}}],["services/media",{"_index":2116,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":2038,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":2115,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1728,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service",{"_index":2117,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":3042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1696,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1706,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1711,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1713,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1709,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1701,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1695,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":515,"title":{},"body":{"injectables/AudioService.html":{},"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["set(filtered.tosorted((a",{"_index":165,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["set.svg",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor",{"_index":2635,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setaccentcolor(color",{"_index":800,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1697,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1702,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2731,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2741,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2732,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2743,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":416,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1698,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1707,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2733,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2745,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2734,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2747,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2636,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":795,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2637,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":793,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2735,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2749,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":417,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain",{"_index":418,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{}}}],["setgap",{"_index":2736,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2751,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2737,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2753,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":419,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{}}}],["setmindb",{"_index":2738,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2755,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setplaybackstate(state",{"_index":1737,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor",{"_index":2638,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setprimarycolor(color",{"_index":798,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":2062,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":2090,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1699,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1710,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2739,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2757,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1465,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["settings",{"_index":556,"title":{},"body":{"injectables/AudioService.html":{},"components/MetadataSettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2503,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1939,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":1940,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1936,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2654,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":2632,"title":{},"body":{"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:17",{"_index":1956,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:21",{"_index":1955,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:26",{"_index":1953,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:31",{"_index":1951,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:36",{"_index":1949,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:41",{"_index":1946,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1935,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2502,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2504,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":378,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2662,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2663,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2897,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupupdatelistener",{"_index":2685,"title":{},"body":{"injectables/UpdateService.html":{}}}],["setupvisualsworkerwithoptions",{"_index":3047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":3054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{}}}],["shall",{"_index":3310,"title":{},"body":{"license.html":{}}}],["sharereplay",{"_index":2540,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell",{"_index":2506,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell'},{'name",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2510,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2511,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":324,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":1340,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":2306,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["shouldupdate",{"_index":2702,"title":{},"body":{"injectables/UpdateService.html":{}}}],["show",{"_index":1684,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showdelay",{"_index":3471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":922,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["showfilepickerandloadfiles",{"_index":2270,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["showpicker",{"_index":919,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["shows",{"_index":663,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2728,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":2050,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2580,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["sidenav",{"_index":2559,"title":{},"body":{"components/ShellComponent.html":{}}}],["signal",{"_index":88,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["signal(0",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{}}}],["signal(44_100",{"_index":484,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(false",{"_index":477,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('accentcolor",{"_index":775,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2759,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2763,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('basegain",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2770,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2772,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":767,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2778,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2780,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2782,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2784,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1763,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('primarycolor",{"_index":773,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":2108,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":2111,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2791,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1775,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1777,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1779,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2962,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.localstorageservice.retrieve('volume",{"_index":486,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(true",{"_index":480,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(undefined",{"_index":154,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["signals",{"_index":517,"title":{},"body":{"injectables/AudioService.html":{},"directives/VisualsDirective.html":{}}}],["similar",{"_index":3270,"title":{},"body":{"license.html":{}}}],["sind",{"_index":1422,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1187,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["sizes",{"_index":2189,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":1170,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2518,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2606,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":3442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":381,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":380,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["small",{"_index":1875,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["small')?.['#text",{"_index":1551,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smallimage",{"_index":1548,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smooth",{"_index":2429,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2729,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":272,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["soll",{"_index":2709,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs/pseudo",{"_index":2250,"title":{},"body":{"injectables/PlayerService.html":{}}}],["song",{"_index":2070,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song.file.name",{"_index":2486,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":2482,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":2483,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.hash",{"_index":2462,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.hash",{"_index":2198,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":2487,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":2485,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":2484,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["soon",{"_index":1806,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sort",{"_index":189,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["specified",{"_index":2207,"title":{},"body":{"injectables/PlayerService.html":{}}}],["spinner",{"_index":125,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["src",{"_index":2187,"title":{},"body":{"injectables/PlayerService.html":{}}}],["start",{"_index":1010,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["startvisualization(getdatamethod",{"_index":2917,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":516,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":3321,"title":{},"body":{"license.html":{}}}],["statustext",{"_index":1745,"title":{},"body":{"injectables/MetadataService.html":{}}}],["statutory",{"_index":3363,"title":{},"body":{"license.html":{}}}],["stop",{"_index":300,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2838,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storagesettingscomponent",{"_index":383,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":174,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":3482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":3485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(this.equalizergainvalues",{"_index":629,"title":{},"body":{"injectables/AudioService.html":{}}}],["styles",{"_index":1063,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":131,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["styleurls",{"_index":1072,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["sub",{"_index":1367,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":944,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":495,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"license.html":{}}}],["sublicensable",{"_index":3335,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2405,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":1323,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":3155,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1415,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1418,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":3268,"title":{},"body":{"license.html":{}}}],["successors",{"_index":3308,"title":{},"body":{"license.html":{}}}],["such",{"_index":3254,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":727,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["sum",{"_index":1912,"title":{},"body":{"injectables/MetadataService.html":{}}}],["supported",{"_index":1729,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":3079,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":3356,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":3288,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":614,"title":{},"body":{"injectables/AudioService.html":{}}}],["switch",{"_index":2235,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["swupdate",{"_index":2676,"title":{},"body":{"injectables/UpdateService.html":{}}}],["system",{"_index":1154,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["t",{"_index":2209,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tag",{"_index":178,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"index.html":{}}}],["tag.album",{"_index":180,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.album?.tolowercase().includes(lowersearchterm",{"_index":152,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist",{"_index":161,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist?.tolowercase().includes(lowersearchterm",{"_index":150,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.coverurl",{"_index":184,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.filename?.tolowercase().includes(lowersearchterm",{"_index":151,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.title?.tolowercase().includes(lowersearchterm",{"_index":149,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.year",{"_index":183,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tags",{"_index":853,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"index.html":{}}}],["tags.album",{"_index":1522,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":1521,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1856,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1847,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1849,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1781,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1437,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1442,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1439,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1853,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1854,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":706,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1433,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1855,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagsworkerrequest",{"_index":850,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":852,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":2118,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":3328,"title":{},"body":{"license.html":{}}}],["targetindex",{"_index":2431,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1412,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":688,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templateurl",{"_index":129,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["termination",{"_index":3314,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3216,"title":{},"body":{"license.html":{}}}],["territories",{"_index":3296,"title":{},"body":{"license.html":{}}}],["test",{"_index":535,"title":{},"body":{"injectables/AudioService.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":3525,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1508,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":839,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["theme",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["theme.types",{"_index":732,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themecolor",{"_index":731,"title":{"interfaces/ThemeColor.html":{}},"body":{"interfaces/ColorVariant.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["themeservice",{"_index":334,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themesettingscomponent",{"_index":385,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":3266,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":290,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["this._audiocontext",{"_index":566,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.createanalyser",{"_index":595,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.resume",{"_index":615,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.state",{"_index":613,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement",{"_index":564,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":576,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":583,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":593,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":569,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":573,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":574,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":590,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":585,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":581,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.currenttime",{"_index":625,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.fastseek(position",{"_index":624,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.loop",{"_index":622,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.pause",{"_index":618,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.play",{"_index":616,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.src",{"_index":610,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiosourcenode",{"_index":565,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers",{"_index":607,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":597,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.clear",{"_index":608,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":600,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":598,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode",{"_index":567,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.connect(analyser",{"_index":596,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.disconnect(analyser",{"_index":599,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[band",{"_index":558,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":627,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._gainnode",{"_index":568,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.asobservable",{"_index":519,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.next(true",{"_index":594,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._internalanalyzer",{"_index":2903,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":1361,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":791,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolor.set(color",{"_index":801,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolor.set(colors.peakcolor",{"_index":797,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolorpalette",{"_index":811,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":1307,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...filedatas",{"_index":2195,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(...validfiles",{"_index":2165,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addtrackstoplaylist(...this.filteredbyserchterm",{"_index":242,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(...tracks",{"_index":241,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(track",{"_index":253,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtracktoplaylist(track",{"_index":235,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":2193,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.allowedtypes().includes(file.type",{"_index":1162,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.alpha",{"_index":2775,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2817,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2886,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2801,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2807,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2805,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2803,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2912,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2911,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2943,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2668,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2948,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1542,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.askuserforupdate",{"_index":2703,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.basegain",{"_index":977,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.currenttime",{"_index":1723,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2956,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2812,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1721,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.equalizergainvalues",{"_index":976,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":2172,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":2214,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1718,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1716,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":2102,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":2191,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2761,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2913,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":2179,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":2242,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":2240,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(value",{"_index":2355,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":1228,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":1280,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":1278,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":1269,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.bands",{"_index":1018,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.barcount",{"_index":2765,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2821,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2880,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2904,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2907,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2906,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2905,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":562,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.breakpointobserver",{"_index":2551,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1529,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":1226,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":1276,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":1270,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":1284,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":1293,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":1266,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.canvas",{"_index":2865,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2892,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2871,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvasref",{"_index":981,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.capfalldown",{"_index":2768,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2825,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2766,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2823,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":1249,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":1248,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":1309,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":1243,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2629,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.color_variants.map((variant",{"_index":821,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.colorconfig",{"_index":2884,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":779,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":777,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":1231,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":2003,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.coverartarchiveapi.getreleasegroupcovers(releasegroupid",{"_index":2006,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":1281,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":1277,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":549,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1858,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1836,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(filedata",{"_index":1804,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.currentfolderhandle",{"_index":928,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(entry.handle",{"_index":918,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(handle",{"_index":923,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":2101,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":2095,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":2192,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":2215,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":2228,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().length",{"_index":2168,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":2196,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist()[this.currentplaylist().length",{"_index":2170,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":2199,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":582,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.darkmode",{"_index":787,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":794,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1404,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":2324,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.default_deadspace",{"_index":1300,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":1213,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":1352,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1383,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1390,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1406,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2497,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2496,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1381,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":1233,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document.documentelement",{"_index":1335,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":1114,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":1105,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":1111,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":1109,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drawequalizerresponse",{"_index":978,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.drop.bind(this",{"_index":1117,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":1116,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":584,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[band",{"_index":560,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":626,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":632,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":1365,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1524,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1523,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":1989,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2802,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2819,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.filehandlesdropped.emit(filehandles",{"_index":1145,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.fileinput",{"_index":1572,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1578,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1592,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1591,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1590,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1575,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1580,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1577,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1574,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.openfiles",{"_index":2194,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.files",{"_index":1594,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.files.map((file",{"_index":1588,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filesdroped.emit(files",{"_index":1164,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.filestoprocess",{"_index":1765,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.set(filedatas.length",{"_index":1801,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.update((files",{"_index":1809,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filteredbyserchterm",{"_index":159,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.filteredbyserchterm().filter((track",{"_index":239,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":1988,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":1306,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":1286,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":2309,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":2351,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":2353,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":2352,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":2339,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":2340,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":2347,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":2346,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":2349,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":2343,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":2348,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":2344,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":2345,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":2350,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":2341,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":2342,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":2321,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":2310,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":2311,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":2330,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":2328,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":2335,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":2317,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":2333,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":2319,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":2326,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":2337,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":2313,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":2315,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2811,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2809,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2767,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2829,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getmetadata(filedata",{"_index":1812,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.getthemecolor(color",{"_index":826,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":2295,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer.files",{"_index":1158,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1457,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlefilefallback(event",{"_index":1148,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handlemessage",{"_index":1455,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handleversionready",{"_index":2696,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.helpopen",{"_index":1380,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1388,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":1366,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":1347,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":1376,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":1369,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":2303,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":2304,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.register",{"_index":2305,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.iconregistry.addsvgicon('logo",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["this.iconregistry.addsvgiconset(this.sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["this.id3tagsservice.extracttags(filedata.file",{"_index":1838,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":2325,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.indexeddbtracks.set",{"_index":1658,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.indexeddbtracks.set(trackswithbloburls",{"_index":1654,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.isautoscrollenabled",{"_index":2411,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":2412,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":1301,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isinitialized",{"_index":2682,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.isloading.set(false",{"_index":572,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":575,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":623,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(false",{"_index":589,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(true",{"_index":592,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying",{"_index":617,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(false",{"_index":591,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(true",{"_index":588,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(false",{"_index":587,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(true",{"_index":621,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.lastfm_api_key",{"_index":1540,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1843,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":1128,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":1113,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.libraryservice.indexeddbtracks().filter((tag",{"_index":148,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.libraryservice.loadlibraryfromdb",{"_index":223,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.linethickness",{"_index":2787,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2827,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1681,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loaderservice.show",{"_index":1679,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loadingcounter",{"_index":1689,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2633,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.retrieve('equalizergainvalues",{"_index":465,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('accentcolor",{"_index":790,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2818,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2822,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2826,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2824,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":786,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('equalizergainvalues",{"_index":631,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2820,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2830,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2828,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2816,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('prefertagembeddedpicture",{"_index":1969,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('primarycolor",{"_index":788,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2814,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('usetagembeddedpicture",{"_index":1967,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usetagscache",{"_index":1965,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usewebmetainfos",{"_index":1962,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2967,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mediasessionservice",{"_index":2126,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":2132,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":2129,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":2127,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":2134,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":2136,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":2138,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":2130,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":2181,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":2140,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.menutrigger",{"_index":2464,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.meta.updatetag",{"_index":816,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.metadataservice.addfilestolibrary(...filedatas",{"_index":2212,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.createobjecturlforembeddedpicture(track",{"_index":1653,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1968,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1966,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1964,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1961,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2806,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2815,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2878,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzapi.search('release",{"_index":1994,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1844,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":2133,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1460,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2628,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2627,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2882,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2915,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":1108,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":619,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.pendingrequests.clear",{"_index":1498,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1466,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1490,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1480,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1471,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1495,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1824,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice.addfilestoplaylist(...filedata",{"_index":2564,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addfilestoplaylist(...files.map((file",{"_index":2563,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addtracktoplaylist(track",{"_index":260,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2774,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":2422,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.darkmuted?.hex",{"_index":863,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.lightmuted?.hex",{"_index":864,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.coverurl?.originalurl",{"_index":867,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.hash",{"_index":2460,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":2415,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":2365,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.next",{"_index":2334,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpause",{"_index":2308,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":2461,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.playtrackbyhash(track.hash",{"_index":236,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.previous",{"_index":2336,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectnext",{"_index":2331,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":2329,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":2354,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.stop",{"_index":2312,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playpause",{"_index":2128,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(newtrack",{"_index":2171,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":2220,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":2227,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":2223,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":2226,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1825,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":1288,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":2135,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":789,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolor.set(color",{"_index":799,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolor.set(colors.maincolor",{"_index":796,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolorpalette",{"_index":806,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.processing",{"_index":1771,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile",{"_index":1772,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile.set(filedata.file.name",{"_index":1803,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.register",{"_index":1339,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":1106,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":1124,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":2236,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":2238,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":2243,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":2241,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2976,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2873,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2951,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate(['/player",{"_index":237,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.router.navigate([route",{"_index":2562,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":586,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["this.scrolltobottom",{"_index":2420,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":2426,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":2402,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":144,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.seekleft(10",{"_index":2137,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":2318,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seekright(10",{"_index":2139,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":2320,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seektohandler(details",{"_index":2141,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":620,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.selectedalbum",{"_index":188,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(album",{"_index":229,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(undefined",{"_index":226,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":169,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist.set(artist",{"_index":225,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":2205,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":2229,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(track",{"_index":231,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack.set(undefined",{"_index":227,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.selectsong(track",{"_index":2178,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setfrequencybandgain(bandfrequency",{"_index":633,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.setplaybackstate('none",{"_index":1720,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1719,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1717,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setseekposition(details.seektime",{"_index":2234,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":2230,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2874,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.setupupdatelistener",{"_index":2683,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.showfilepickerandloadfiles",{"_index":2338,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.shuffle",{"_index":2216,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":2244,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav().close",{"_index":2561,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2804,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2813,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2914,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2916,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":2131,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2887,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.swupdate.activateupdate",{"_index":2704,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2684,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2681,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.versionupdates.pipe(takeuntildestroyed(this.destroyref)).subscribe((event",{"_index":2686,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.accentcolor",{"_index":1034,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.darkmode",{"_index":862,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.initializetheme",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["this.themeservice.primarycolor",{"_index":1006,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":2173,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2656,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2669,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":2044,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":1344,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":2327,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.togglerepeat",{"_index":2316,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.toggleshuffle",{"_index":2314,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.totalfilestoprocess",{"_index":1768,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(0",{"_index":1810,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(filedatas.length",{"_index":1800,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.uniquealbums",{"_index":247,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.updatecssproperties",{"_index":784,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1724,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.updatemetathemecolor",{"_index":785,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.updateservice.init",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usetagembeddedpicture",{"_index":1822,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1818,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1840,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2893,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2896,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2894,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2895,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2867,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.addeventlistener('message",{"_index":2932,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2872,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2957,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2965,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2966,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2810,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2789,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":530,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.wakelock",{"_index":2975,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2981,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":2983,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":2175,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":2177,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1449,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1456,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1454,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2869,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1476,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1493,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1492,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1494,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":3167,"title":{},"body":{"license.html":{}}}],["three",{"_index":1888,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterchunk",{"_index":1896,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterpos",{"_index":1894,"title":{},"body":{"injectables/MetadataService.html":{}}}],["through",{"_index":1026,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{}}}],["throughout",{"_index":3144,"title":{},"body":{"license.html":{}}}],["throw",{"_index":1659,"title":{},"body":{"injectables/LibraryService.html":{}}}],["thumb",{"_index":2016,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumbnail",{"_index":2022,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumbnails",{"_index":2015,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumburl",{"_index":848,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["time",{"_index":882,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["time.pipe",{"_index":872,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["timed",{"_index":1469,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1464,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1441,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":857,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2937,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["title",{"_index":191,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":3493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":2037,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2565,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":533,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["toggle",{"_index":1958,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["togglehelpdialog",{"_index":1379,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2581,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":2271,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["togglerepeat",{"_index":2063,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["toggleshuffle",{"_index":2064,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["togglevisualmode",{"_index":2960,"title":{},"body":{"injectables/VisualsService.html":{}}}],["toolbar",{"_index":2256,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["toolbar.component",{"_index":2547,"title":{},"body":{"components/ShellComponent.html":{}}}],["toolbar.component.html",{"_index":2261,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2262,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":2255,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:106",{"_index":2280,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:110",{"_index":2282,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:121",{"_index":2275,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:125",{"_index":2289,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:129",{"_index":2290,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:133",{"_index":2287,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:138",{"_index":2278,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:142",{"_index":2284,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:146",{"_index":2286,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:150",{"_index":2277,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:154",{"_index":2273,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:158",{"_index":2288,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:29",{"_index":2292,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:30",{"_index":2294,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":2291,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:32",{"_index":2293,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:34",{"_index":2296,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar/player",{"_index":2254,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["top",{"_index":2582,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["tosignal",{"_index":2542,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2526,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1414,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["totalfilestoprocess",{"_index":1770,"title":{},"body":{"injectables/MetadataService.html":{}}}],["totallength",{"_index":1910,"title":{},"body":{"injectables/MetadataService.html":{}}}],["touppercase",{"_index":1417,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":91,"title":{"interfaces/Track.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{}}}],["track.album",{"_index":244,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.artist",{"_index":240,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.coverurl",{"_index":1630,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.filename",{"_index":1633,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.hash",{"_index":266,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.metadata",{"_index":2180,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":2184,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":2183,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.originalurl",{"_index":2188,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.originalurl",{"_index":2186,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":2182,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.hash",{"_index":2433,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["track.title",{"_index":1632,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.track",{"_index":1631,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum",{"_index":1603,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum(index",{"_index":264,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyartist",{"_index":1604,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyartist(index",{"_index":263,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyhash",{"_index":1605,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackbyhash(index",{"_index":265,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackmetadata",{"_index":711,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":187,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tracks().length",{"_index":1629,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tracks.push(...albumtracks",{"_index":251,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackswithbloburls",{"_index":1651,"title":{},"body":{"injectables/LibraryService.html":{}}}],["trademark",{"_index":3351,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":3334,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2945,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":639,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":640,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["translate",{"_index":3229,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2834,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["treaty",{"_index":3275,"title":{},"body":{"license.html":{}}}],["tree",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trigger",{"_index":2463,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menu",{"_index":2468,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menudata",{"_index":2465,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.openmenu",{"_index":2467,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["true",{"_index":638,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":921,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/UpdateService.html":{}}}],["ts",{"_index":2145,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tslib",{"_index":3004,"title":{},"body":{"dependencies.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":1211,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3402,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":719,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["types",{"_index":2147,"title":{},"body":{"injectables/PlayerService.html":{}}}],["typescript",{"_index":1586,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["ui",{"_index":2424,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":303,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["uint8array(endchunk",{"_index":1907,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(middlechunk",{"_index":1884,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(quarterchunk",{"_index":1893,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(threequarterchunk",{"_index":1898,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(totallength",{"_index":1915,"title":{},"body":{"injectables/MetadataService.html":{}}}],["unconditional",{"_index":3337,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":3285,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":205,"title":{},"body":{"interfaces/Album.html":{},"pipes/BitratePipe.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":3215,"title":{},"body":{"license.html":{}}}],["understands",{"_index":3385,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":3245,"title":{},"body":{"license.html":{}}}],["unique",{"_index":175,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["uniquealbums",{"_index":168,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniquealbums().length",{"_index":1626,"title":{},"body":{"components/LibraryComponent.html":{}}}],["uniqueartists",{"_index":157,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniqueartists().length",{"_index":1624,"title":{},"body":{"components/LibraryComponent.html":{}}}],["unit",{"_index":3524,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":3118,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1426,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":1372,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["update",{"_index":580,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["update.service",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["updatecssproperties",{"_index":802,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updated",{"_index":2425,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["updateinterval",{"_index":2928,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1700,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1712,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemetathemecolor",{"_index":815,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updates",{"_index":781,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updateservice",{"_index":336,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["upload",{"_index":657,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":3153,"title":{},"body":{"license.html":{}}}],["url",{"_index":701,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1451,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2868,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":611,"title":{},"body":{"injectables/AudioService.html":{}}}],["url.createobjecturl(new",{"_index":1830,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.originalurl",{"_index":1862,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.thumburl",{"_index":1864,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1851,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":612,"title":{},"body":{"injectables/AudioService.html":{}}}],["urls",{"_index":1829,"title":{},"body":{"injectables/MetadataService.html":{}}}],["urlsearchparams",{"_index":1537,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["use",{"_index":202,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"license.html":{}}}],["useclass",{"_index":3476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2612,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":3467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useleadingzero",{"_index":3064,"title":{},"body":{"miscellaneous/functions.html":{}}}],["user",{"_index":950,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["uses",{"_index":3080,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1746,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1747,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":3470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1748,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":3072,"title":{},"body":{"index.html":{}}}],["v",{"_index":3251,"title":{},"body":{"license.html":{}}}],["validfiles",{"_index":2160,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.length",{"_index":2164,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.push",{"_index":2163,"title":{},"body":{"injectables/PlayerService.html":{}}}],["value",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":980,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":646,"title":{},"body":{"pipes/BandPipe.html":{}}}],["values",{"_index":975,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["var",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":803,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["variables.join",{"_index":814,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variables.push",{"_index":807,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variant",{"_index":2358,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["variant.darkenfactor",{"_index":824,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variant.lightenfactor",{"_index":822,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variant.suffix",{"_index":827,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["various",{"_index":664,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verarbeitung",{"_index":1647,"title":{},"body":{"injectables/LibraryService.html":{}}}],["verfügbar",{"_index":2708,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":3048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle).then((granted",{"_index":916,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":947,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2690,"title":{},"body":{"injectables/UpdateService.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2688,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2697,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2692,"title":{},"body":{"injectables/UpdateService.html":{}}}],["very",{"_index":1874,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["vi",{"_index":3253,"title":{},"body":{"license.html":{}}}],["via",{"_index":3530,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":842,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"dependencies.html":{},"index.html":{}}}],["vibrant.from(url).getpalette",{"_index":1920,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1787,"title":{},"body":{"injectables/MetadataService.html":{}}}],["viewchild",{"_index":967,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('menutrigger",{"_index":2393,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild('scrollviewport",{"_index":2395,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild.required('drawer",{"_index":2560,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild>('eqcanvas",{"_index":971,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["viewport",{"_index":2401,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":2437,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":2454,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":2407,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":2428,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":2459,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":2453,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":3269,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":1125,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visible",{"_index":1126,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":2436,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":2439,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":3091,"title":{},"body":{"index.html":{}}}],["visualizefrequencybars",{"_index":2839,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2848,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2840,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2850,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizer.component.html",{"_index":2721,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2722,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":871,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":2388,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":387,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":305,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":301,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizerworker",{"_index":2861,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2959,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals.types",{"_index":2854,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2800,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2797,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2796,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":291,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":390,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":2730,"title":{"injectables/VisualsService.html":{}},"body":{"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":2831,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":295,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["void",{"_index":222,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":2357,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["volume",{"_index":406,"title":{},"body":{"injectables/AudioService.html":{},"components/PlayerToolbarComponent.html":{}}}],["volumeicon",{"_index":2263,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["voluntarily",{"_index":3211,"title":{},"body":{"license.html":{}}}],["wait",{"_index":2416,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":3354,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3277,"title":{},"body":{"license.html":{}}}],["waives",{"_index":3286,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2973,"title":{},"body":{"injectables/WakelockService.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2974,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":2114,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":3049,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2166,"title":{},"body":{"injectables/PlayerService.html":{}}}],["warranties",{"_index":3132,"title":{},"body":{"license.html":{}}}],["wav",{"_index":1060,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["we're",{"_index":1150,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/PlayerService.html":{}}}],["web",{"_index":3070,"title":{},"body":{"index.html":{},"properties.html":{}}}],["webstorage",{"_index":493,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["well",{"_index":3294,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1867,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2712,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":3185,"title":{},"body":{"license.html":{}}}],["whether",{"_index":3292,"title":{},"body":{"license.html":{}}}],["white",{"_index":1181,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["width",{"_index":985,"title":{},"body":{"components/EqualizerComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window",{"_index":2153,"title":{},"body":{"injectables/PlayerService.html":{}}}],["window.focus",{"_index":2156,"title":{},"body":{"injectables/PlayerService.html":{}}}],["wish",{"_index":3164,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":3465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":3463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":3461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1692,"title":{},"body":{"injectables/LoaderService.html":{},"license.html":{}}}],["withviewtransitions",{"_index":3466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":3158,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1445,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1450,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":3453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":3098,"title":{},"body":{"index.html":{}}}],["works",{"_index":940,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":3145,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":3297,"title":{},"body":{"license.html":{}}}],["writablesignal",{"_index":1192,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["writes",{"_index":2610,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["wurde",{"_index":1273,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x",{"_index":1008,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y",{"_index":1009,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":81,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["yield",{"_index":1805,"title":{},"body":{"injectables/MetadataService.html":{}}}],["z",{"_index":1175,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zugewiesen",{"_index":1254,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => unknown;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Album.html":{"url":"interfaces/Album.html","title":"interface - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverArtUrls\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverArtUrls\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverArtUrls } from '../metadata-service/metadata.types';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { LibraryService } from './library.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverArtUrls;\n}\n\n@Component({\n  imports: [\n    MatListModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix,\n    MatProgressSpinner\n  ],\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss'\n})\nexport default class LibraryComponent implements OnInit {\n  private readonly playerService = inject(PlayerService);\n  protected readonly libraryService = inject(LibraryService);\n\n  protected readonly searchTerm = signal('');\n\n  private readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  private readonly selectedArtist = signal(undefined);\n  protected readonly selectedAlbum = signal(undefined);\n  private readonly selectedTrack = signal(undefined);\n\n  protected readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  protected readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].toSorted((a, b) => a.name.localeCompare(b.name));\n  });\n\n  protected readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.toSorted((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  ngOnInit() {\n    void this.libraryService.loadLibraryFromDb();\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:18\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  imports: [ShellComponent],\n  templateUrl: './app.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit {\n  private readonly updateService = inject(UpdateService);\n  private readonly iconRegistry = inject(MatIconRegistry);\n  private readonly sanitizer = inject(DomSanitizer);\n  private readonly themeService = inject(ThemeService);\n\n  constructor() {\n    this.themeService.initializeTheme();\n\n    this.iconRegistry.addSvgIconSet(this.sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    this.iconRegistry.addSvgIcon('logo', this.sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n\n  ngOnInit(): void {\n    void this.updateService.init();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                resetFrequencyBandGain\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nresetFrequencyBandGain(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FREQUENCY_BANDS, FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport type EqualizerGainValues = {\n  [Band in FrequencyBand]: number;\n};\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private readonly localStorageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.localStorageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.localStorageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._eqGainNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      this._eqGainNode.disconnect(analyser);\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    for (const analyser of this._connectedAnalyzers) {\n      this._eqGainNode.disconnect(analyser);\n    }\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = structuredClone(this.equalizerGainValues());\n    bandGains[bandFrequency] = gainValue;\n\n    this.localStorageService.store('equalizerGainValues', bandGains);\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  resetFrequencyBandGain(bandFrequency: FrequencyBand) {\n    this.setFrequencyBandGain(bandFrequency, 0);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => unknown;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand): string {\n    if (!value || value = 1000) {\n      const kValue = value / 1000;\n      return kValue % 1 === 0 ? `${Math.floor(kValue)}K` : `${kValue.toFixed(1)}K`;\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate',\n  pure: true\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | null | undefined): string {\n    if (value == null || value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => unknown;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton, getLoadFilesMenuEntry } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.wait(300);\n  getLoadFilesMenuEntry().click();\n\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorVariant.html":{"url":"interfaces/ColorVariant.html","title":"interface - ColorVariant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorVariant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkenFactor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightenFactor\n                                        \n                                \n                                \n                                        \n                                            suffix\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkenFactor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkenFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightenFactor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightenFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suffix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { computed, effect, inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { Colord, colord } from 'colord';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { ThemeColor } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\ninterface ColorVariant {\n  suffix: string;\n  lightenFactor?: number;\n  darkenFactor?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private readonly meta = inject(Meta);\n  private readonly localStorageService = inject(LocalStorageService);\n\n  private readonly COLOR_VARIANTS: ColorVariant[] = [\n    { suffix: '0', lightenFactor: 0.55 },\n    { suffix: '10', lightenFactor: 0.45 },\n    { suffix: '20', lightenFactor: 0.35 },\n    { suffix: '25', lightenFactor: 0.3 },\n    { suffix: '30', lightenFactor: 0.25 },\n    { suffix: '35', lightenFactor: 0.2 },\n    { suffix: '40', lightenFactor: 0.15 },\n    { suffix: '50' },\n    { suffix: '60', darkenFactor: 0.05 },\n    { suffix: '70', darkenFactor: 0.1 },\n    { suffix: '80', darkenFactor: 0.15 },\n    { suffix: '90', darkenFactor: 0.18 },\n    { suffix: '95', darkenFactor: 0.21 },\n    { suffix: '98', darkenFactor: 0.24 },\n    { suffix: '99', darkenFactor: 0.27 },\n    { suffix: '100', darkenFactor: 0.3 }\n  ];\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  readonly primaryColor = signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR);\n\n  readonly accentColor = signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR);\n\n  readonly primaryColorPalette = computed(() => this.computeColors(this.primaryColor()));\n  readonly accentColorPalette = computed(() => this.computeColors(this.accentColor()));\n\n  constructor() {\n    // Automatische Updates bei Änderungen\n    effect(() => {\n      this.updateCSSProperties();\n      this.updateMetaThemeColor();\n    });\n\n    effect(() => {\n      this.localStorageService.store('darkMode', this.darkMode());\n    });\n\n    effect(() => {\n      this.localStorageService.store('primaryColor', this.primaryColor());\n    });\n\n    effect(() => {\n      this.localStorageService.store('accentColor', this.accentColor());\n    });\n  }\n\n  initializeTheme() {\n    this.updateCSSProperties();\n    this.updateMetaThemeColor();\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n  }\n\n  setColors(colors: ColorConfig) {\n    this.primaryColor.set(colors.mainColor || FALLBACK_PRIMARY_COLOR);\n    this.accentColor.set(colors.peakColor || FALLBACK_ACCENT_COLOR);\n  }\n\n  setPrimaryColor(color: string) {\n    this.primaryColor.set(color || FALLBACK_PRIMARY_COLOR);\n  }\n\n  setAccentColor(color: string) {\n    this.accentColor.set(color || FALLBACK_ACCENT_COLOR);\n  }\n\n  private updateCSSProperties() {\n    const variables: string[] = [`--app-color-scheme: ${this.darkMode() ? 'dark' : 'light'}`];\n\n    for (const color of this.primaryColorPalette()) {\n      variables.push(`--theme-primary-${color.name}: ${color.hex}`);\n    }\n\n    for (const color of this.accentColorPalette()) {\n      variables.push(`--theme-accent-${color.name}: ${color.hex}`);\n    }\n\n    document.documentElement.style.cssText += variables.join(';');\n  }\n\n  private updateMetaThemeColor() {\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor() });\n  }\n\n  private computeColors(hex: string): ThemeColor[] {\n    const baseColor = colord(hex);\n\n    return this.COLOR_VARIANTS.map((variant) => {\n      let color = baseColor;\n\n      if (variant.lightenFactor) {\n        color = baseColor.lighten(variant.lightenFactor);\n      } else if (variant.darkenFactor) {\n        color = baseColor.darken(variant.darkenFactor);\n      }\n\n      return this.getThemeColor(color, variant.suffix);\n    });\n  }\n\n  private getThemeColor(color: Colord, name: string): ThemeColor {\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name,\n      hex: color.toHex(),\n      darkContrast: color.brightness() > lightnessLimit\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            TimePipe\n                            BitratePipe\n                                VisualizerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Protected\n                                    Readonly\n                                coverUrl\n                            \n                            \n                                    Protected\n                                    Readonly\n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.originalUrl)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BitratePipe } from './bitrate.pipe';\nimport { VisualizerComponent } from '../visualizer/visualizer.component';\nimport { PlayerService } from '../player.service';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  imports: [TimePipe, BitratePipe, VisualizerComponent],\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CoverDisplayComponent {\n  private readonly themeService = inject(ThemeService);\n  protected readonly playerService = inject(PlayerService);\n\n  protected readonly coverUrl = computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.originalUrl);\n\n  protected readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = playerService.currentlyLoadedTrack();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n\n    @if (currentTrack?.metadata?.coverColors) {\n      &nbsp;\n      Color Palette:\n      \n        \n        \n        \n        \n        \n        \n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = playerService.currentlyLoadedTrack();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }    @if (currentTrack?.metadata?.coverColors) {             Color Palette:                                                                }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirHandleEntry.html":{"url":"interfaces/DirHandleEntry.html","title":"interface - DirHandleEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirHandleEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:     FileSystemDirectoryHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemDirectoryHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private readonly indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    //  TODO: refactor\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await firstValueFrom(this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry));\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  return (await handle.requestPermission()) === 'granted';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatSliderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                audioService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                BANDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                            \n                                drawEqualizerResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawEqualizerResponse\n                        \n                    \n                \n            \n            \n                \ndrawEqualizerResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, effect, ElementRef, inject, viewChild } from '@angular/core';\nimport { AudioService } from '../audio.service';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FREQUENCY_BANDS } from '../player.types';\nimport { ThemeService } from '../../theme/theme.service';\n\n@Component({\n  imports: [MatSliderModule],\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  protected readonly audioService = inject(AudioService);\n  private readonly themeService = inject(ThemeService);\n  private readonly canvasRef = viewChild>('eqCanvas');\n\n  protected readonly BANDS = FREQUENCY_BANDS;\n\n  constructor() {\n    // React to changes in equalizer values\n    effect(() => {\n      this.audioService.equalizerGainValues(); // Track the signal\n      this.audioService.baseGain(); // Track gain changes\n      this.drawEqualizerResponse();\n    });\n  }\n\n  displayFunction(value: number): string {\n    const numberValue = value.toFixed(1);\n    return numberValue + ' dB';\n  }\n\n  drawEqualizerResponse(): void {\n    const canvasRef = this.canvasRef();\n    if (!canvasRef) return;\n\n    const canvas = canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw grid lines\n    ctx.strokeStyle = '#dddddd';\n    ctx.lineWidth = 0.2;\n\n    // Horizontal grid lines (every 3dB)\n    for (let db = -12; db  {\n      return ((Math.log10(freq) - Math.log10(minFreq)) / (Math.log10(maxFreq) - Math.log10(minFreq))) * width;\n    };\n\n    // Draw frequency response curve with gain applied\n    ctx.strokeStyle = this.themeService.primaryColor();\n    ctx.lineWidth = 3;\n\n    const freqPoints: { x: number; y: number }[] = [];\n\n    // Start with the lowest frequency\n    freqPoints.push({\n      x: 0,\n      y: height / 2 - ((eqValues[this.BANDS[0]] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw points for each frequency band with gain applied\n    for (const freq of this.BANDS) {\n      const x = getXPos(freq);\n      // Apply gain influence to the curve\n      const y = height / 2 - ((eqValues[freq] + (gainValue - 1) * 12) * height) / 24;\n      freqPoints.push({ x, y });\n    }\n\n    // End with the highest frequency\n    freqPoints.push({\n      x: width,\n      y: height / 2 - ((eqValues[this.BANDS.at(-1)!] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw curve through points\n    ctx.beginPath();\n    ctx.moveTo(freqPoints[0].x, freqPoints[0].y);\n\n    for (let i = 0; i  freq >= minFreq && freq = 1000 ? `${freq / 1000}k` : `${freq}`;\n      ctx.fillText(label, x, height - 5);\n    }\n\n    // Display gain value\n    ctx.fillStyle = this.themeService.accentColor();\n    ctx.font = 'bold 12px Arial';\n    ctx.textAlign = 'right';\n    ctx.fillText(`Gain: ${gainValue.toFixed(1)}x`, width - 10, 20);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  @for (band of BANDS; track band) {\n    \n      \n        {{ band | band }}-->\n        \n      \n    \n  }\n\n  \n    \n      GAIN-->\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          @for (band of BANDS; track band) {                  {{ band | band }}-->                    }            GAIN-->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ALLOWED_MIMETYPES = [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n];\n\nexport const ALLOWED_EXTENSIONS = ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4'];\n\nexport interface FileData {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowedTypes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fileHandlesDropped\n                            \n                            \n                                filesDroped\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowedTypes\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['*/*']\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        fileHandlesDropped\n                    \n                \n                \n                    \n                        Type :     FileSystemFileHandle[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filesDroped\n                    \n                \n                \n                    \n                        Type :     File[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n  readonly fileHandlesDropped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n\n    // Try to get file handles first\n    if (event.dataTransfer?.items && 'getAsFileSystemHandle' in event.dataTransfer.items[0]) {\n      try {\n        const fileHandles: FileSystemFileHandle[] = [];\n        const promises: Promise[] = [];\n\n        for (const item of Array.from(event.dataTransfer.items)) {\n          const promise = (item as any).getAsFileSystemHandle().then((handle: any) => {\n            if (handle && handle.kind === 'file') {\n              fileHandles.push(handle);\n            }\n          });\n          promises.push(promise);\n        }\n\n        // When all promises are resolved, emit the file handles\n        Promise.all(promises)\n          .then(() => {\n            if (fileHandles.length > 0) {\n              this.fileHandlesDropped.emit(fileHandles);\n            } else {\n              // Fall back to regular files if no file handles were obtained\n              this.handleFileFallback(event);\n            }\n          })\n          .catch(() => {\n            // Fall back to regular files on error\n            this.handleFileFallback(event);\n          });\n\n        return; // Exit early - we're handling with file handles\n      } catch (error) {\n        // Fall through to file fallback\n        console.warn('File System Access API failed:', error);\n      }\n    }\n\n    // Fallback to regular files\n    this.handleFileFallback(event);\n  }\n\n  private handleFileFallback(event: DragEvent) {\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (const file of Array.from(droppedFiles)) {\n      if (file && this.allowedTypes().includes(file.type)) {\n        files.push(file);\n      }\n    }\n    this.filesDroped.emit(files);\n  }\n}\n\n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\nh2 {\n  font-size: 4em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileData } from './file-loader.helpers';\nimport { WritableSignal } from '@angular/core';\n\nexport abstract class FileLoaderService {\n  abstract currentFolderHandle: WritableSignal;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => unknown;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private readonly checkIntervals: number[] = [];\n  private readonly pressedButtonsCaches: ActionCache[][] = [];\n  private readonly activeAxesCaches: ActionCache[][] = [];\n\n  private readonly buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: HTMLElement;\n  keys: string;\n  description: string;\n  callback: () => unknown;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private readonly eventManager = inject(EventManager);\n  private readonly document = inject(DOCUMENT);\n  private readonly dialog = inject(MatDialog);\n\n  private readonly defaults: Partial = {\n    element: this.document.documentElement\n  };\n\n  private readonly hotkeys: Map = new Map();\n\n  private helpOpen = false;\n\n  private dialogRef?: MatDialogRef;\n\n  private _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      if (merged.element) {\n        const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n        return () => {\n          dispose();\n          this.hotkeys.delete(merged.keys);\n        };\n      } else {\n        return () => {};\n      }\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: HTMLElement;\n  keys: string;\n  description: string;\n  callback: () => unknown;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private readonly eventManager = inject(EventManager);\n  private readonly document = inject(DOCUMENT);\n  private readonly dialog = inject(MatDialog);\n\n  private readonly defaults: Partial = {\n    element: this.document.documentElement\n  };\n\n  private readonly hotkeys: Map = new Map();\n\n  private helpOpen = false;\n\n  private dialogRef?: MatDialogRef;\n\n  private _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      if (merged.element) {\n        const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n        return () => {\n          dispose();\n          this.hotkeys.delete(merged.keys);\n        };\n      } else {\n        return () => {};\n      }\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule],\n  templateUrl: './hotkeys-help-dialog.component.html',\n  styleUrl: './hotkeys-help-dialog.component.scss'\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:21\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule],\n  templateUrl: './hotkeys-help-dialog.component.html',\n  styleUrl: './hotkeys-help-dialog.component.scss'\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: HTMLElement;\n  keys: string;\n  description: string;\n  callback: () => unknown;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private readonly eventManager = inject(EventManager);\n  private readonly document = inject(DOCUMENT);\n  private readonly dialog = inject(MatDialog);\n\n  private readonly defaults: Partial = {\n    element: this.document.documentElement\n  };\n\n  private readonly hotkeys: Map = new Map();\n\n  private helpOpen = false;\n\n  private dialogRef?: MatDialogRef;\n\n  private _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      if (merged.element) {\n        const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n        return () => {\n          dispose();\n          this.hotkeys.delete(merged.keys);\n        };\n      } else {\n        return () => {};\n      }\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private readonly worker: Worker;\n  private nextId = 0;\n  private readonly pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexedDbTrackMetadata.html":{"url":"interfaces/IndexedDbTrackMetadata.html","title":"interface - IndexedDbTrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IndexedDbTrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TrackMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private readonly http = inject(HttpClient);\n\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private readonly http = inject(HttpClient);\n\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private readonly http = inject(HttpClient);\n\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private readonly http = inject(HttpClient);\n\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private readonly http = inject(HttpClient);\n\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService implements FileLoaderService {\n  private readonly fileInput!: HTMLInputElement;\n\n  private files: File[] = [];\n\n  constructor() {\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  readonly currentFolderHandle = signal(undefined);\n\n  // eslint-disable-next-line @typescript-eslint/require-await\n  async openFiles(): Promise {\n    return this.files.map((file) => ({ file }));\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            MatMenu\n                            MatMenuContent\n                            MatMenuItem\n                            MatMenuTrigger\n                            MatIcon\n                            MatIconButton\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            SafePipe\n                            MatHint\n                            FormsModule\n                            MatFormField\n                            MatInput\n                            MatPrefix\n                            MatSuffix\n                            MatProgressSpinner\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                libraryService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                searchTerm\n                            \n                            \n                                    Protected\n                                    Readonly\n                                selectedAlbum\n                            \n                            \n                                    Protected\n                                    Readonly\n                                tracks\n                            \n                            \n                                    Protected\n                                    Readonly\n                                uniqueAlbums\n                            \n                            \n                                    Protected\n                                    Readonly\n                                uniqueArtists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAlbumToPlaylist\n                            \n                            \n                                    Async\n                                addArtistToPlaylist\n                            \n                            \n                                    Async\n                                addTracksToPlaylist\n                            \n                            \n                                    Async\n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                playTrack\n                            \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                trackByAlbum\n                            \n                            \n                                trackByArtist\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAlbumToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAlbumToPlaylist(album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addArtistToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addArtistToPlaylist(artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTracksToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbTracks\n                                            \n                                                        IndexedDbTrackMetadata[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTrackToPlaylist(track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAlbum\n                        \n                    \n                \n            \n            \n                \ntrackByAlbum(index: number, album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByArtist\n                        \n                    \n                \n            \n            \n                \ntrackByArtist(index: number, artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:220\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:228\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        libraryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LibraryService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        selectedAlbum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.toSorted((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        uniqueAlbums\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].toSorted((a, b) => a.name.localeCompare(b.name));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        uniqueArtists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverArtUrls } from '../metadata-service/metadata.types';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { LibraryService } from './library.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverArtUrls;\n}\n\n@Component({\n  imports: [\n    MatListModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix,\n    MatProgressSpinner\n  ],\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss'\n})\nexport default class LibraryComponent implements OnInit {\n  private readonly playerService = inject(PlayerService);\n  protected readonly libraryService = inject(LibraryService);\n\n  protected readonly searchTerm = signal('');\n\n  private readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  private readonly selectedArtist = signal(undefined);\n  protected readonly selectedAlbum = signal(undefined);\n  private readonly selectedTrack = signal(undefined);\n\n  protected readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  protected readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].toSorted((a, b) => a.name.localeCompare(b.name));\n  });\n\n  protected readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.toSorted((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  ngOnInit() {\n    void this.libraryService.loadLibraryFromDb();\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ uniqueArtists().length }}) \n        \n          \n            \n           \n      \n        {{ artist }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ uniqueAlbums().length }})\n        \n          \n            \n           \n      \n        \n          @if (album && album.coverUrl) {\n            \n          }\n        \n        {{ album.name }}{{ album.year ? ` | ${album.year}` : '' }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ tracks().length }})\n        \n          \n            \n          \n        \n      \n      \n        \n          @if (track && track.coverUrl) {\n            \n          }\n        \n        @if (selectedAlbum()) {\n          {{ track.track ? `${track.track}. ` : '' }}{{ track.title || track.fileName }}\n        } @else {\n          {{ track.title || track.fileName }}\n        }\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ tracks().length }} entries\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (libraryService.isLoading()) {                                        }        ALL ({{ uniqueArtists().length }})                                                        {{ artist }}                                                                          Add to Playlist                          @if (libraryService.isLoading()) {                                        }        ALL ({{ uniqueAlbums().length }})                                                                 @if (album && album.coverUrl) {                      }                {{ album.name }}{{ album.year ? ` | ${album.year}` : \\'\\' }}                                                                          Add to Playlist                          @if (libraryService.isLoading()) {                                        }        ALL ({{ tracks().length }})                                                                              @if (track && track.coverUrl) {                      }                @if (selectedAlbum()) {          {{ track.track ? `${track.track}. ` : \\'\\' }}{{ track.title || track.fileName }}        } @else {          {{ track.title || track.fileName }}        }                                                                          Add to Playlist            @if (searchTerm()) {                }  {{ tracks().length }} entries'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LibraryService.html":{"url":"injectables/LibraryService.html","title":"injectable - LibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                indexedDbTracks\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadLibraryFromDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLibraryFromDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLibraryFromDb()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        indexedDbTracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata } from '../player.types';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibraryService {\n  private readonly indexedDbService = inject(NgxIndexedDBService);\n  private readonly metadataService = inject(MetadataService);\n\n  readonly isLoading = signal(false);\n  readonly indexedDbTracks = signal([]);\n\n  async loadLibraryFromDb(): Promise {\n    try {\n      this.isLoading.set(true);\n\n      const result = await firstValueFrom(this.indexedDbService.getAll('library'));\n\n      // Parallele Verarbeitung für bessere Performance\n      const tracksWithBlobUrls = result.map((track) => this.metadataService.createObjectUrlForEmbeddedPicture(track));\n\n      this.indexedDbTracks.set(tracksWithBlobUrls);\n      return tracksWithBlobUrls;\n    } catch (error) {\n      console.error('Error loading library data:', error);\n      this.indexedDbTracks.set([]);\n      throw error; // Re-throw für Caller\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private readonly loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => unknown) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => void) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                processing\n                            \n                            \n                                    Readonly\n                                processingFile\n                            \n                            \n                                    Readonly\n                                processionPercent\n                            \n                            \n                                    Readonly\n                                statusText\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToLibrary\n                            \n                            \n                                createObjectUrlForEmbeddedPicture\n                            \n                            \n                                    Async\n                                createTrackFromFile\n                            \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToLibrary\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToLibrary(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AsyncGenerator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createObjectUrlForEmbeddedPicture\n                        \n                    \n                \n            \n            \n                \ncreateObjectUrlForEmbeddedPicture(meta: TrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meta\n                                            \n                                                            TrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TrackMetadata\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTrackFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTrackFromFile(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.filesToProcess() > 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processingFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processionPercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        statusText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata, type Track, TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\nimport { FileData } from '../file-loader-service/file-loader.helpers';\nimport { md5 } from '@noble/hashes/legacy.js';\nimport { bytesToHex } from '@noble/hashes/utils.js';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private readonly id3TagsService = inject(Id3TagsService);\n  private readonly lastfmMetadataService = inject(LastfmMetadataService);\n  private readonly musicbrainzService = inject(MusicbrainzService);\n  private readonly indexedDBService = inject(NgxIndexedDBService);\n  private readonly localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  private readonly totalFilesToProcess = signal(0);\n  private readonly filesToProcess = signal(0);\n  readonly processionPercent = computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  });\n\n  readonly processing = computed(() => {\n    return this.filesToProcess() > 0;\n  });\n\n  readonly processingFile = signal('');\n\n  readonly statusText = computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  });\n\n  async *addFilesToLibrary(...fileDatas: FileData[]): AsyncGenerator {\n    if (fileDatas?.length) {\n      this.totalFilesToProcess.set(fileDatas.length);\n      this.filesToProcess.set(fileDatas.length);\n      for (const fileData of fileDatas.values()) {\n        this.processingFile.set(fileData.file.name);\n        const track = await this.createTrackFromFile(fileData);\n        if (track) {\n          yield track; // Yield each track as soon as it's ready\n        }\n        this.filesToProcess.update((files) => files - 1);\n      }\n      this.totalFilesToProcess.set(0);\n    }\n  }\n\n  async createTrackFromFile(fileData: FileData): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.getMetadata(fileData);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: fileData.file,\n      fileHandle: fileData.fileHandle,\n      metadata: metadata\n    };\n  }\n\n  async getMetadata(fileData: FileData): Promise {\n    this.processingFile.set(fileData.file.name + ' - Generating hash...');\n    const hash = await generateFileHash(fileData.file);\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('library', hash));\n\n      if (metadataCache) {\n        if (\n          metadataCache.embeddedPicture &&\n          this.useTagEmbeddedPicture() &&\n          (metadataCache.coverUrl.thumbUrl === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())\n        ) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumbUrl: url, originalUrl: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    this.processingFile.set(fileData.file.name + ' - Reading tags...');\n    const tags = await this.id3TagsService.extractTags(fileData.file);\n\n    if (!tags) {\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverArtUrls | undefined;\n\n    if (this.useWebMetainfos() && tags.artist && tags.album) {\n      this.processingFile.set(fileData.file.name + ' - Getting cover pictures...');\n      coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n      if (!coverUrls) {\n        coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n    this.processingFile.set(fileData.file.name + ' - Reading colors...');\n    if (coverUrls?.originalUrl) {\n      palette = await extractColorsWithNodeVibrant(coverUrls.originalUrl);\n    } else if (tags.picture) {\n      const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n      palette = await extractColorsWithNodeVibrant(objectUrl);\n      URL.revokeObjectURL(objectUrl);\n    }\n\n    const metadata: IndexedDbTrackMetadata = {\n      hash: hash,\n      fileName: fileData.file.name,\n      fileHandle: fileData.fileHandle,\n      coverUrl: coverUrls ?? { thumbUrl: this.PLACEHOLDER_URL, originalUrl: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await firstValueFrom(this.indexedDBService.add('library', metadata));\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (meta.coverUrl.originalUrl === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      if (meta.coverUrl?.originalUrl?.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.originalUrl);\n      }\n      if (meta.coverUrl?.thumbUrl?.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.thumbUrl);\n      }\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumbUrl: url, originalUrl: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nasync function generateFileHash(file: File): Promise {\n  const fileSize = file.size;\n\n  // For very small files, hash the entire content\n  if (fileSize  1024 * 1024) {\n    const middlePos = Math.floor(fileSize / 2) - Math.floor(chunkSize / 2);\n    const middleChunk = await file.slice(middlePos, middlePos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(middleChunk));\n  }\n\n  // For files larger than 8MB, add quarter and three-quarter samples\n  if (fileSize > 8 * 1024 * 1024) {\n    const quarterPos = Math.floor(fileSize * 0.25);\n    const quarterChunk = await file.slice(quarterPos, quarterPos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(quarterChunk));\n\n    const threeQuarterPos = Math.floor(fileSize * 0.75);\n    const threeQuarterChunk = await file.slice(threeQuarterPos, threeQuarterPos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(threeQuarterChunk));\n  }\n\n  // Last chunk - often contains important metadata in audio files\n  const endChunk = await file.slice(Math.max(0, fileSize - chunkSize), fileSize).arrayBuffer();\n  chunks.push(new Uint8Array(endChunk));\n\n  // Combine all chunks into one array\n  const totalLength = chunks.reduce((sum, chunk) => sum + chunk.length, 0);\n  const combined = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const chunk of chunks) {\n    combined.set(chunk, offset);\n    offset += chunk.length;\n  }\n\n  return bytesToHex(md5(combined));\n}\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  try {\n    const palette = await Vibrant.from(url).getPalette();\n    return {\n      vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n      darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n      lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n      muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n      darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n      lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n    };\n  } catch (error) {\n    console.error('Error extracting colors with Vibrant:', error);\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./metadata-settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule],\n  templateUrl: './metadata-settings.component.html',\n  styleUrl: './metadata-settings.component.scss'\n})\nexport class MetadataSettingsComponent {\n  protected readonly metadataService = inject(MetadataService);\n  private readonly indexedDBService = inject(NgxIndexedDBService);\n  private readonly localStorageService = inject(LocalStorageService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n    this.localStorageService.store('useWebMetainfos', event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n    this.localStorageService.store('useTagsCache', event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('useTagEmbeddedPicture', event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('preferTagEmbeddedPicture', event.checked);\n  }\n\n  async clearMetadataCache() {\n    await firstValueFrom(this.indexedDBService.clear('library'));\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { CoverArtArchiveApi, MusicBrainzApi } from 'musicbrainz-api';\nimport { ensureHttps } from './metadata.helper';\nimport { escapeLuceneQueryString } from '@motabass/helpers';\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private readonly musicBrainzApi = new MusicBrainzApi({\n    appName: 'gblaster',\n    appVersion: '1.0.0',\n    appContactInfo: 'markus.mohoritsch@gmx.at'\n  });\n\n  private readonly coverArtArchiveApi = new CoverArtArchiveApi();\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${escapeLuceneQueryString(album)} AND artist:${escapeLuceneQueryString(artist)} AND primarytype:Album`;\n\n    try {\n      const data = await this.musicBrainzApi.search('release-group', { query });\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      // const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      // const coverData = await firstValueFrom(this.http.get(url));\n      const coverData = await this.coverArtArchiveApi.getReleaseGroupCovers(releaseGroupId);\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image;\n\n      // Use large thumbnail or fall back to the full image\n      const original = coverImage.thumbnails.large || coverImage.image;\n\n      return { thumbUrl: ensureHttps(thumb), originalUrl: ensureHttps(original) };\n    } catch {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private readonly indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    //  TODO: refactor\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await firstValueFrom(this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry));\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  return (await handle.requestPermission()) === 'granted';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { TitleService } from '../services/title.service';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  imports: [PlaylistComponent, MatButtonModule, MatIconModule, CoverDisplayComponent, MatToolbarModule, MatTooltipModule, MatSliderModule, MatMenuModule],\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class PlayerComponent implements OnInit {\n  private readonly titleService = inject(TitleService);\n\n  ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                playTrackByHash\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                removeTrackFromPlaylist\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \naddTrackToPlaylist(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:215\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrackByHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrackByHash(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:254\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:236\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTrackFromPlaylist\n                        \n                    \n                \n            \n            \n                \nremoveTrackFromPlaylist(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:298\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:302\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:281\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:316\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:335\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n  private readonly audioService = inject(AudioService);\n  private readonly localStorageService = inject(LocalStorageService);\n  private readonly fileLoaderService = inject(FileLoaderService);\n  private readonly metadataService = inject(MetadataService);\n  private readonly themeService = inject(ThemeService);\n  private readonly wakelockService = inject(WakelockService, { optional: true });\n  private readonly mediaSessionService = inject(MediaSessionService, { optional: true });\n  private readonly destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  readonly durationSeconds = computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Focus the window first to ensure we're the active window\n        window.focus();\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n\n        const validFiles: FileData[] = [];\n\n        for (const fileHandle of launchParameters.files) {\n          try {\n            const file = await fileHandle.getFile();\n            if (ALLOWED_MIMETYPES.includes(file.type)) {\n              validFiles.push({ file, fileHandle });\n            }\n          } catch (error) {\n            console.error('Error processing file:', error);\n          }\n        }\n\n        if (validFiles.length > 0) {\n          await this.addFilesToPlaylist(...validFiles);\n          // If you want to play the first file immediately\n          // if (validFiles.length && this.currentPlaylist().length) {\n          //   const newTrack = this.currentPlaylist()[this.currentPlaylist().length - validFiles.length];\n          //   await this.playTrack(newTrack);\n          // }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.originalUrl ? [{ src: track.metadata.coverUrl.originalUrl, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const fileDatas: FileData[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...fileDatas);\n  }\n\n  addTrackToPlaylist(song: Track) {\n    if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.hash === song.metadata?.hash)) {\n      this.currentPlaylist.update((playlist) => [...playlist, song]);\n    }\n  }\n\n  removeTrackFromPlaylist(track: Track) {\n    // If the removed track is currently loaded, stop playback\n    if (this.currentlyLoadedTrack() === track) {\n      void this.stop();\n    }\n\n    // If the removed track is currently selected, deselect it\n    if (this.selectedTrack() === track) {\n      this.selectedTrack.set(undefined);\n    }\n    // Update the playlist by filtering out the specified track\n    this.currentPlaylist.update((playlist) => playlist.filter((t) => t !== track));\n  }\n\n  //  TODO: replace this with library\n  async addFilesToPlaylist(...fileDatas: FileData[]) {\n    for await (const track of this.metadataService.addFilesToLibrary(...fileDatas)) {\n      this.addTrackToPlaylist(track);\n    }\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async playTrackByHash(hash: string) {\n    const playlist = this.currentPlaylist();\n\n    const track = playlist.find((playlistTrack) => playlistTrack.metadata?.hash === hash);\n    if (track) {\n      await this.playTrack(track);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // eslint-disable-next-line sonarjs/pseudo-random\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerToolbarComponent.html":{"url":"components/PlayerToolbarComponent.html","title":"component - PlayerToolbarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PlayerToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-toolbar\n            \n\n\n            \n                imports\n                \n                            MatIcon\n                            MatIconButton\n                            MatMenu\n                            MatSlider\n                            MatSliderThumb\n                            MatToolbar\n                            MatTooltip\n                            TimePipe\n                            MatMenuTrigger\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-toolbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player-toolbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                audioService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                fileLoaderService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                metadataService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                playerService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadLastDirectory\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showFilePickerAndLoadFiles\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLastDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLastDirectory()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showFilePickerAndLoadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    showFilePickerAndLoadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        fileLoaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FileLoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\n\nimport { MatMenu, MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { TimePipe } from '../time.pipe';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { PlayerService } from '../player.service';\nimport { AudioService } from '../audio.service';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { GamepadAxes, GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { HotkeysService } from '../../services/hotkeys/hotkeys.service';\nimport { FileLoaderService } from '../file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Component({\n  selector: 'player-toolbar',\n  imports: [MatIcon, MatIconButton, MatMenu, MatSlider, MatSliderThumb, MatToolbar, MatTooltip, TimePipe, MatMenuTrigger, MatMenuModule],\n  templateUrl: './player-toolbar.component.html',\n  styleUrl: './player-toolbar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayerToolbarComponent implements OnInit, OnDestroy {\n  private readonly gamepadService = inject(GamepadService, { optional: true });\n  private readonly hotkeysService = inject(HotkeysService, { optional: true });\n  protected readonly fileLoaderService = inject(FileLoaderService);\n  protected readonly playerService = inject(PlayerService);\n  protected readonly audioService = inject(AudioService);\n  protected readonly metadataService = inject(MetadataService);\n\n  protected readonly volumeIcon = computed(() => this.getVolumeIconForLevel(this.audioService.volume()));\n\n  ngOnInit() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showFilePickerAndLoadFiles());\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n\n  onSliderPositionChanged(value: number) {\n    this.playerService.setSeekPosition(value);\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol \n    \n\n    \n        \n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n    \n      \n      Load folder/files...\n    \n    @if (fileLoaderService.currentFolderHandle()) {\n      \n        \n        Load last directory\n      \n    }\n  \n\n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (audioService.isPlaying()) {          } @else {          }                                                    Load folder/files...        @if (fileLoaderService.currentFolderHandle()) {                      Load last directory          }      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            FormsModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                playerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                onContextMenu\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContextMenu\n                        \n                    \n                \n            \n            \n                \nonContextMenu(event: MouseEvent, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'mtb-playlist',\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    FormsModule,\n    MatMenuModule\n  ],\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaylistComponent {\n  private readonly audioService = inject(AudioService);\n  private readonly destroRef = inject(DestroyRef);\n  protected readonly playerService = inject(PlayerService);\n\n  private readonly menuTrigger = viewChild('menuTrigger');\n\n  private readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 140;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled()) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.playerService.currentPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.playerService.currentPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.playerService.currentPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.hash === currentTrack.metadata?.hash);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (\n        (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash\n      );\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByHash(index: number, song: Track): string {\n    return song.metadata.hash;\n  }\n\n  onContextMenu(event: MouseEvent, song: Track): void {\n    event.preventDefault();\n    const trigger = this.menuTrigger();\n    if (!trigger) return;\n    trigger.menuData = { song: song };\n\n    // Open with position\n    trigger.openMenu();\n\n    // set position\n    if (trigger.menu) {\n      // Forcefully reset the menu position after it's opened\n      setTimeout(() => {\n        const overlayRef = document.querySelector('.cdk-overlay-pane:last-child') as HTMLElement;\n        if (overlayRef) {\n          overlayRef.style.position = 'absolute';\n          overlayRef.style.left = `${event.clientX}px`;\n          overlayRef.style.top = `${event.clientY}px`;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying) {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n\n\n\n  \n\n\n\n\n  \n    \n      \n      Remove from playlist\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (song && song.metadata && song.metadata.coverUrl) {                  }        @let songPlaying = isPlaying(song)();        @if (songPlaying) {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }                          Remove from playlist      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverArtUrls.html":{"url":"interfaces/RemoteCoverArtUrls.html","title":"interface - RemoteCoverArtUrls","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverArtUrls\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            originalUrl\n                                        \n                                \n                                \n                                        \n                                            thumbUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent],\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss'\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                                FileDropOverlayComponent\n                                PlayerToolbarComponent\n                            MatProgressBar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                    Protected\n                                    Readonly\n                                isHandset\n                            \n                            \n                                    Protected\n                                    Readonly\n                                loaderService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                metadataService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                playerService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                    Async\n                                onFileHandlesDropped\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFileHandlesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFileHandlesDropped(files: FileSystemFileHandle[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        FileSystemFileHandle[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { PlayerService } from '../player/player.service';\nimport { ALLOWED_MIMETYPES, FileData } from '../player/file-loader-service/file-loader.helpers';\nimport { PlayerToolbarComponent } from '../player/player-toolbar/player-toolbar.component';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../player/metadata-service/metadata.service';\n\n@Component({\n  selector: 'mtb-shell',\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    RouterOutlet,\n    FileDropOverlayComponent,\n    PlayerToolbarComponent,\n    MatProgressBar\n  ],\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss'\n})\nexport class ShellComponent {\n  private readonly breakpointObserver = inject(BreakpointObserver);\n  private readonly router = inject(Router);\n  protected readonly titleService = inject(TitleService);\n  protected readonly loaderService = inject(LoaderService);\n  protected readonly playerService = inject(PlayerService);\n  protected readonly metadataService = inject(MetadataService);\n\n  protected readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  private readonly isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  protected readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  private readonly sidenav = viewChild.required('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    void this.sidenav().close();\n    void this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files.map((file) => ({ file })));\n  }\n\n  async onFileHandlesDropped(files: FileSystemFileHandle[]) {\n    const fileData: FileData[] = [];\n    for (const fileHandle of files) {\n      const file = await fileHandle.getFile();\n      fileData.push({ file, fileHandle });\n    }\n\n    return this.playerService.addFilesToPlaylist(...fileData);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n\n      @if (loaderService.isLoading()) {\n        \n      }\n\n      \n\n      @let currentTrack = playerService.currentlyLoadedTrack();\n      {{ currentTrack?.metadata?.artist ? `${currentTrack?.metadata?.artist} - ` : '' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n    \n\n    @if (metadataService.processing()) {\n      \n      {{ metadataService.statusText() }}\n    }\n    \n\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }            @let currentTrack = playerService.currentlyLoadedTrack();      {{ currentTrack?.metadata?.artist ? `${currentTrack?.metadata?.artist} - ` : \\'\\' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}        @if (metadataService.processing()) {            {{ metadataService.statusText() }}    }              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                            \n                                buttonTooltip\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonTooltip\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  imports: [MatCardModule, MatButtonModule],\n  templateUrl: './storage-settings.component.html'\n})\nexport class StorageSettingsComponent {\n  private readonly localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThemeColor.html":{"url":"interfaces/ThemeColor.html","title":"interface - ThemeColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ThemeColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ThemeColor {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                accentColor\n                            \n                            \n                                    Readonly\n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                    Readonly\n                                primaryColor\n                            \n                            \n                                    Readonly\n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setAccentColor\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                            \n                                setPrimaryColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:48\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccentColor\n                        \n                    \n                \n            \n            \n                \nsetAccentColor(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPrimaryColor\n                        \n                    \n                \n            \n            \n                \nsetPrimaryColor(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        accentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.computeColors(this.accentColor()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.computeColors(this.primaryColor()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:47\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, effect, inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { Colord, colord } from 'colord';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { ThemeColor } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\ninterface ColorVariant {\n  suffix: string;\n  lightenFactor?: number;\n  darkenFactor?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private readonly meta = inject(Meta);\n  private readonly localStorageService = inject(LocalStorageService);\n\n  private readonly COLOR_VARIANTS: ColorVariant[] = [\n    { suffix: '0', lightenFactor: 0.55 },\n    { suffix: '10', lightenFactor: 0.45 },\n    { suffix: '20', lightenFactor: 0.35 },\n    { suffix: '25', lightenFactor: 0.3 },\n    { suffix: '30', lightenFactor: 0.25 },\n    { suffix: '35', lightenFactor: 0.2 },\n    { suffix: '40', lightenFactor: 0.15 },\n    { suffix: '50' },\n    { suffix: '60', darkenFactor: 0.05 },\n    { suffix: '70', darkenFactor: 0.1 },\n    { suffix: '80', darkenFactor: 0.15 },\n    { suffix: '90', darkenFactor: 0.18 },\n    { suffix: '95', darkenFactor: 0.21 },\n    { suffix: '98', darkenFactor: 0.24 },\n    { suffix: '99', darkenFactor: 0.27 },\n    { suffix: '100', darkenFactor: 0.3 }\n  ];\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  readonly primaryColor = signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR);\n\n  readonly accentColor = signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR);\n\n  readonly primaryColorPalette = computed(() => this.computeColors(this.primaryColor()));\n  readonly accentColorPalette = computed(() => this.computeColors(this.accentColor()));\n\n  constructor() {\n    // Automatische Updates bei Änderungen\n    effect(() => {\n      this.updateCSSProperties();\n      this.updateMetaThemeColor();\n    });\n\n    effect(() => {\n      this.localStorageService.store('darkMode', this.darkMode());\n    });\n\n    effect(() => {\n      this.localStorageService.store('primaryColor', this.primaryColor());\n    });\n\n    effect(() => {\n      this.localStorageService.store('accentColor', this.accentColor());\n    });\n  }\n\n  initializeTheme() {\n    this.updateCSSProperties();\n    this.updateMetaThemeColor();\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n  }\n\n  setColors(colors: ColorConfig) {\n    this.primaryColor.set(colors.mainColor || FALLBACK_PRIMARY_COLOR);\n    this.accentColor.set(colors.peakColor || FALLBACK_ACCENT_COLOR);\n  }\n\n  setPrimaryColor(color: string) {\n    this.primaryColor.set(color || FALLBACK_PRIMARY_COLOR);\n  }\n\n  setAccentColor(color: string) {\n    this.accentColor.set(color || FALLBACK_ACCENT_COLOR);\n  }\n\n  private updateCSSProperties() {\n    const variables: string[] = [`--app-color-scheme: ${this.darkMode() ? 'dark' : 'light'}`];\n\n    for (const color of this.primaryColorPalette()) {\n      variables.push(`--theme-primary-${color.name}: ${color.hex}`);\n    }\n\n    for (const color of this.accentColorPalette()) {\n      variables.push(`--theme-accent-${color.name}: ${color.hex}`);\n    }\n\n    document.documentElement.style.cssText += variables.join(';');\n  }\n\n  private updateMetaThemeColor() {\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor() });\n  }\n\n  private computeColors(hex: string): ThemeColor[] {\n    const baseColor = colord(hex);\n\n    return this.COLOR_VARIANTS.map((variant) => {\n      let color = baseColor;\n\n      if (variant.lightenFactor) {\n        color = baseColor.lighten(variant.lightenFactor);\n      } else if (variant.darkenFactor) {\n        color = baseColor.darken(variant.darkenFactor);\n      }\n\n      return this.getThemeColor(color, variant.suffix);\n    });\n  }\n\n  private getThemeColor(color: Colord, name: string): ThemeColor {\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name,\n      hex: color.toHex(),\n      darkContrast: color.brightness() > lightnessLimit\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  imports: [MatCardModule, MatCheckboxModule],\n  templateUrl: './theme-settings.component.html'\n})\nexport class ThemeSettingsComponent {\n  protected readonly themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private readonly angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverArtUrls\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverArtUrls\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private readonly swUpdate = inject(SwUpdate);\n  private readonly dialog = inject(MatDialog);\n  private readonly destroyRef = inject(DestroyRef);\n  private isInitialized = false;\n\n  async init(): Promise {\n    if (!this.swUpdate.isEnabled) {\n      return false;\n    }\n\n    if (!this.isInitialized) {\n      this.setupUpdateListener();\n      this.isInitialized = true;\n    }\n\n    return this.swUpdate.checkForUpdate();\n  }\n\n  private setupUpdateListener(): void {\n    this.swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroyRef)).subscribe((event) => {\n      switch (event.type) {\n        case 'VERSION_DETECTED': {\n          console.log(`Downloading new app version: ${event.version.hash}`);\n          break;\n        }\n        case 'VERSION_READY': {\n          console.log(`Current app version: ${event.currentVersion.hash}`);\n          console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n          void this.handleVersionReady();\n          break;\n        }\n        case 'VERSION_INSTALLATION_FAILED': {\n          console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n          break;\n        }\n      }\n    });\n  }\n\n  private async handleVersionReady(): Promise {\n    try {\n      const shouldUpdate = await this.askUserForUpdate();\n      if (shouldUpdate) {\n        await this.swUpdate.activateUpdate();\n        document.location.reload();\n      }\n    } catch (error) {\n      console.error('Error during update process:', error);\n    }\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                alpha\n                            \n                            \n                                    Protected\n                                    Readonly\n                                analyser\n                            \n                            \n                                    Protected\n                                    Readonly\n                                audioService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Protected\n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Protected\n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Protected\n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Protected\n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Protected\n                                    Readonly\n                                gap\n                            \n                            \n                                    Protected\n                                    Readonly\n                                lineThickness\n                            \n                            \n                                    Protected\n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Protected\n                                    Readonly\n                                smoothing\n                            \n                            \n                                    Protected\n                                    Readonly\n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule],\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  private readonly gamepadService = inject(GamepadService, { optional: true });\n  private readonly playerService = inject(PlayerService);\n  private readonly localStorageService = inject(LocalStorageService);\n  protected readonly visualsService = inject(VisualsService);\n  protected readonly audioService = inject(AudioService);\n\n  protected readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  protected readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  protected readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  protected readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  protected readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  protected readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  protected readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  protected readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  protected readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  protected readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  protected readonly analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                            \n                                barsConfig\n                            \n                            \n                                colorConfig\n                            \n                            \n                                mode\n                            \n                            \n                                oscConfig\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        barsConfig\n                    \n                \n                \n                    \n                        Type :         FrequencyBarsConfig\n\n                    \n                \n                \n                    \n                        Default value : { gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 }\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        colorConfig\n                    \n                \n                \n                    \n                        Type :         VisualsColorConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'bars'\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        oscConfig\n                    \n                \n                \n                    \n                        Type :         OsciloscopeConfig\n\n                    \n                \n                \n                    \n                        Default value : { thickness: 2 }\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:91\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]'\n})\nexport class VisualsDirective implements OnDestroy {\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i [] = [...bufferPool];\n    let lastUpdateTime = 0;\n    const updateInterval = 1000 / 60; // Limit to 60fps\n\n    // Handle worker messages\n    this.visualizerWorker.addEventListener('message', (event) => {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private readonly localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  private wakelock?: WakeLockSentinel;\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      this.wakelock = await navigator.wakeLock.request('screen');\n      console.log('Wakelock is active');\n      this.wakelock.addEventListener('release', () => {\n        console.log('Wakelock was released');\n      });\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : 20.2.10\n        \n            @angular/common : 20.3.7\n        \n            @angular/compiler : 20.3.7\n        \n            @angular/core : 20.3.7\n        \n            @angular/forms : 20.3.7\n        \n            @angular/material : 20.2.10\n        \n            @angular/platform-browser : 20.3.7\n        \n            @angular/router : 20.3.7\n        \n            @angular/service-worker : 20.3.7\n        \n            @noble/hashes : 2.0.1\n        \n            colord : ^2.9.3\n        \n            date-fns : 4.1.0\n        \n            music-metadata : 11.9.0\n        \n            musicbrainz-api : 0.25.1\n        \n            ngx-date-fns : 12.0.1\n        \n            ngx-indexed-db : 21.0.0\n        \n            ngx-webstorage : 20.0.0\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            escapeLuceneQueryString   (libs/.../lucene-escape.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../time.helper.ts)\n                        \n                        \n                            formatWithLeadingZero   (libs/.../time.helper.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/helpers/src/lib/lucene-escape.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        escapeLuceneQueryString\n                        \n                    \n                \n            \n            \n                \nescapeLuceneQueryString(queryString: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/time.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatWithLeadingZero\n                        \n                    \n                \n            \n            \n                \nformatWithLeadingZero(value: number, useLeadingZero: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                useLeadingZero\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nGraph\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"license - license","body":"\n                   \n\n\n\n\n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    37 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.6.1\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : CC0-1.0\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"todo - todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            EqualizerGainValues   (apps/.../audio.service.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/audio.service.ts\n    \n    \n        \n            \n                \n                    \n                    EqualizerGainValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../idexed-db-config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../player.types.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesMenuEntry   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZonelessChangeDetection(),\n    provideBrowserGlobalErrorListeners(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately', type: 'module' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/idexed-db-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'gblasterDB',\n  version: 3,\n  objectStoresMeta: [\n    {\n      store: 'library',\n      storeConfig: { keyPath: 'hash', autoIncrement: false },\n      storeSchema: [\n        { name: 'hash', keypath: 'hash', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'directoryHandles',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/player.types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesMenuEntry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files_menu')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
