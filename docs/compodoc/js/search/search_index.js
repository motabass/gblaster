var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.177,1,2.782]],["body/interfaces/ActionCache.html",[0,0.309,1,4.133,2,1.09,3,0.219,4,0.219,5,0.144,6,3.194,7,0.352,8,0.521,9,5.149,10,1.776,11,0.604,12,0.012,13,0.393,14,4.845,15,3.636,16,1.262,17,4.87,18,2.005,19,0.709,20,3.194,21,1.123,22,1.875,23,4.582,24,3.194,25,2.686,26,3.395,27,3.395,28,3.194,29,3.022,30,3.395,31,3.194,32,3.194,33,3.194,34,3.022,35,3.022,36,4.704,37,2.872,38,3.395,39,1.893,40,3.395,41,2.686,42,3.395,43,2.998,44,3.395,45,3.544,46,3.395,47,3.194,48,3.395,49,3.194,50,3.395,51,3.395,52,3.395,53,3.395,54,3.395,55,3.022,56,3.395,57,3.395,58,3.395,59,2.872,60,3.395,61,3.194,62,3.395,63,3.194,64,3.395,65,3.395,66,3.395,67,3.395,68,3.395,69,3.395,70,3.022,71,3.395,72,3.395,73,3.395,74,3.395,75,0.008,76,0.008]],["title/interfaces/Album.html",[0,0.177,77,1.581]],["body/interfaces/Album.html",[0,0.108,2,0.581,3,0.117,4,0.117,5,0.177,7,0.117,8,0.332,10,1.304,11,0.389,12,0.012,13,0.194,16,0.672,19,1.107,21,0.598,39,1.207,75,0.005,76,0.005,77,2.674,78,2.313,79,3.537,80,1.262,81,3.225,82,2.135,83,0.728,84,0.9,85,3.373,86,0.548,87,2.802,88,1.714,89,0.366,90,3.722,91,3.226,92,1.459,93,3.584,94,1.188,95,1.61,96,2.637,97,1.702,98,3.25,99,3.584,100,3.584,101,3.001,102,1.808,103,2.161,104,1.61,105,3.25,106,1.337,107,3.25,108,1.188,109,3.25,110,3.25,111,3.25,112,2.097,113,3.25,114,1.937,115,1.337,116,1.203,117,1.702,118,2.261,119,1.61,120,3.25,121,1.937,122,3.584,123,3.584,124,3.584,125,3.584,126,3.584,127,2.313,128,3.584,129,1.937,130,1.937,131,3.001,132,2.313,133,0.999,134,0.967,135,2.313,136,1.234,137,2.313,138,0.354,139,0.999,140,1.068,141,1.61,142,1.53,143,2.313,144,1.936,145,3.584,146,2.313,147,1.807,148,3.584,149,2.313,150,2.313,151,1.66,152,2.313,153,2.313,154,2.313,155,2.313,156,2.313,157,2.313,158,3.228,159,2.313,160,2.097,161,2.313,162,5.899,163,4.941,164,2.313,165,2.313,166,2.313,167,3.094,168,1.548,169,2.313,170,3.979,171,2.313,172,2.313,173,3.584,174,4.941,175,3.584,176,4.387,177,2.261,178,2.097,179,3.25,180,5.347,181,2.313,182,1.937,183,3.584,184,2.313,185,2.313,186,2.313,187,2.313,188,2.313,189,2.313,190,2.313,191,5.899,192,2.313,193,2.313,194,2.637,195,1.655,196,2.313,197,4.387,198,2.313,199,1.808,200,4.387,201,2.313,202,2.313,203,4.387,204,2.313,205,2.313,206,1.53,207,3.584,208,2.313,209,2.704,210,3.584,211,2.313,212,3.584,213,2.313,214,2.313,215,2.313,216,2.313,217,2.313,218,2.313,219,2.097,220,1.937,221,1.808,222,2.313,223,2.313,224,2.313,225,1.808,226,2.313,227,2.313,228,2.313,229,2.313,230,3.25,231,2.313,232,2.313,233,2.313,234,2.313,235,2.165,236,2.097,237,2.795,238,2.097,239,2.313,240,2.313,241,2.313,242,4.387,243,2.313,244,4.941,245,2.313,246,2.313,247,3.584,248,3.584,249,2.097,250,2.313,251,2.313,252,2.313,253,2.313,254,2.313,255,2.313,256,2.313,257,2.313,258,3.584,259,3.584,260,2.313,261,1.283,262,2.313,263,2.313,264,2.313,265,2.097,266,2.313,267,2.313,268,2.097,269,2.313]],["title/interfaces/AnalyserConfig.html",[0,0.177,270,2.386]],["body/interfaces/AnalyserConfig.html",[0,0.334,2,1.029,3,0.207,4,0.207,5,0.136,7,0.207,8,0.502,10,1.867,11,0.621,12,0.012,13,0.396,18,2.797,19,1.053,22,1.771,25,2.587,75,0.008,76,0.008,270,3.413,271,2.586,272,3.997,273,4.261,274,4.261,275,4.261,276,2.472,277,2.369,278,2.472,279,2.472,280,2.472,281,2.369,282,2.472,283,2.472,284,2.472,285,2.586,286,2.586,287,2.369,288,3.263,289,3.127,290,3.127,291,3.127,292,2.369,293,3.127,294,2.472,295,2.681,296,2.681,297,3.127,298,2.472,299,2.369,300,2.472,301,2.586,302,2.712,303,2.369,304,3.5,305,2.472,306,2.275,307,3.82,308,2.887,309,2.472,310,3.127,311,3.574,312,3.574,313,2.369,314,3.127,315,3.574]],["title/components/AppComponent.html",[84,0.95,316,1.689]],["body/components/AppComponent.html",[3,0.204,4,0.204,5,0.178,12,0.011,13,0.218,16,1.176,75,0.008,76,0.008,80,1.43,83,0.723,84,1.511,86,0.958,89,0.64,106,2.338,116,1.471,133,2.317,134,2.243,138,0.619,139,1.748,147,1.609,316,2.861,317,1.978,318,1.869,319,1.869,320,1.869,321,4.617,322,3.734,323,3.734,324,3.173,325,3.252,326,1.862,327,2.861,328,6.121,329,2.877,330,0.876,331,4.617,332,2.816,333,4.617,334,4.617,335,2.816,336,2.338,337,3.734,338,3.163,339,4.865,340,4.617,341,4.617,342,4.617,343,4.617,344,4.617,345,4.617,346,4.617,347,3.163,348,4.617,349,4.617,350,4.617,351,4.617,352,4.617,353,4.617,354,4.617,355,1.869,356,2.477,357,2.105,358,1.638,359,2.96,360,1.869,361,1.869,362,1.806,363,1.638,364,1.869,365,1.806,366,1.869,367,1.806,368,1.748,369,1.869,370,1.587,371,1.638,372,1.638,373,2.477,374,1.806,375,2.96,376,1.806,377,1.869,378,1.806,379,1.692,380,1.869,381,1.806,382,1.869,383,1.692,384,1.806,385,1.806,386,1.869,387,1.806,388,1.748,389,1.869,390,1.806,391,1.869,392,1.806,393,1.748,394,1.806,395,1.869,396,1.806,397,1.748,398,1.806,399,1.869]],["title/injectables/AudioService.html",[400,0.771,401,2.281]],["body/injectables/AudioService.html",[3,0.099,4,0.099,5,0.164,7,0.099,8,0.292,10,1.571,11,0.54,12,0.012,13,0.17,16,1.873,21,1.64,22,1.703,39,2.354,41,1.505,75,0.005,76,0.005,80,1.325,83,0.476,85,1.985,86,0.464,88,1.885,89,0.31,92,1.237,94,1.008,138,0.3,144,2.318,147,1.593,151,1.133,168,1.948,235,1.596,237,0.876,249,1.779,303,2.607,313,2.278,326,0.681,329,1.885,330,1.548,357,0.77,400,0.641,401,1.898,402,0.847,403,1.962,404,4.498,405,3.575,406,3.301,407,5.271,408,3.575,409,4.498,410,4.498,411,3.941,412,4.498,413,4.51,414,0.768,415,5.147,416,3.592,417,3.592,418,3.777,419,4.51,420,5.147,421,3.592,422,3.592,423,3.592,424,3.592,425,3.592,426,3.592,427,3.592,428,2.854,429,4.498,430,2.239,431,2.239,432,1.546,433,3.592,434,4.479,435,2.239,436,2.062,437,1.365,438,4.091,439,3.592,440,4.335,441,2.239,442,4.498,443,2.239,444,2.239,445,1.237,446,2.239,447,3.592,448,2.239,449,3.592,450,4.938,451,2.239,452,1.812,453,2.461,454,2.854,455,2.239,456,2.239,457,3.592,458,2.239,459,3.592,460,4.938,461,2.239,462,3.592,463,2.239,464,3.592,465,3.592,466,2.239,467,2.239,468,3.592,469,2.239,470,4.51,471,2.239,472,2.239,473,3.592,474,2.316,475,2.316,476,2.316,477,2.316,478,2.316,479,1.985,480,2.316,481,2.316,482,2.316,483,2.316,484,2.239,485,4.414,486,2.239,487,2.239,488,5.147,489,2.239,490,2.239,491,2.239,492,3.592,493,2.239,494,3.592,495,2.854,496,2.239,497,2.239,498,2.239,499,2.082,500,1.237,501,2.191,502,2.854,503,0.906,504,3.301,505,0.702,506,1.536,507,1.298,508,2.239,509,4.122,510,2.239,511,2.239,512,2.239,513,2.239,514,5.147,515,2.239,516,2.239,517,2.239,518,3.592,519,2.239,520,2.239,521,2.239,522,2.239,523,2.854,524,1.962,525,3.147,526,2.239,527,2.239,528,2.461,529,3.592,530,2.239,531,2.239,532,2.239,533,2.239,534,1.779,535,2.239,536,2.239,537,2.239,538,3.592,539,2.239,540,1.962,541,1.366,542,1.962,543,1.534,544,2.239,545,1.643,546,1.962,547,2.239,548,1.962,549,3.592,550,3.592,551,2.239,552,2.854,553,3.592,554,3.592,555,2.239,556,2.239,557,2.239,558,2.239,559,2.239,560,2.239,561,2.239,562,2.239,563,1.534,564,1.298,565,1.779,566,2.239,567,2.239,568,2.239,569,2.239,570,2.239,571,2.239,572,3.592,573,2.239,574,2.239,575,2.239,576,2.239,577,2.239,578,1.275,579,2.239,580,2.854,581,2.239,582,2.239,583,1.779,584,2.239,585,1.643,586,1.134,587,2.239,588,1.534,589,2.239,590,2.239,591,2.239,592,2.239,593,2.239,594,2.239,595,2.239,596,2.239,597,2.239,598,2.239,599,2.239,600,2.239,601,2.239,602,2.239,603,2.239,604,2.239,605,2.239,606,2.239,607,3.592,608,2.239,609,1.962,610,2.239,611,2.239,612,1.962,613,1.643,614,1.962,615,2.239,616,2.239,617,2.239,618,3.592,619,2.239,620,2.239,621,2.239,622,2.239,623,2.239,624,2.239,625,3.592,626,2.239,627,2.239,628,2.239,629,2.239,630,2.239,631,2.239,632,2.239,633,2.239,634,2.239,635,2.239,636,3.592,637,2.239,638,2.239,639,2.239,640,2.239,641,2.239]],["title/interfaces/AxisGamepadAction.html",[0,0.177,24,2.782]],["body/interfaces/AxisGamepadAction.html",[0,0.308,1,3.183,2,1.087,3,0.218,4,0.218,5,0.143,6,3.183,7,0.313,8,0.52,9,3.383,10,1.661,11,0.604,12,0.012,13,0.393,14,5.298,15,3.623,16,1.258,17,5.143,18,1.998,19,0.707,20,3.183,21,1.119,22,1.869,23,4.574,24,4.124,25,2.973,26,5.143,27,5.143,28,3.183,29,3.012,30,3.383,31,3.183,32,3.183,33,3.183,34,3.012,35,3.012,36,4.694,37,2.862,38,3.383,39,1.888,40,3.383,41,2.68,42,3.383,43,2.991,44,3.383,45,3.536,46,3.383,47,3.183,48,3.383,49,3.183,50,3.383,51,3.383,52,3.383,53,3.383,54,3.383,55,3.012,56,3.383,57,3.383,58,3.383,59,2.862,60,3.383,61,3.183,62,3.383,63,3.183,64,3.383,65,3.383,66,3.383,67,3.383,68,3.383,69,3.383,70,3.012,71,3.383,72,3.383,73,3.383,74,3.383,75,0.008,76,0.008]],["title/pipes/BandPipe.html",[115,2.186,642,3.782]],["body/pipes/BandPipe.html",[3,0.253,4,0.253,5,0.166,11,0.445,12,0.012,13,0.271,19,1.006,43,2.681,75,0.009,76,0.009,80,1.486,83,0.65,89,0.794,92,3.169,95,3.497,115,3.559,116,1.377,138,0.768,140,2.32,151,1.673,330,1.088,414,1.225,432,1.189,436,1.744,437,1.155,440,4.833,445,3.169,452,1.904,479,3.169,504,5.157,642,6.158,643,5.733,644,6.158,645,2.66,646,4.207,647,5.585,648,6.66,649,5.733,650,5.585,651,5.733,652,5.733,653,5.733,654,5.733]],["title/interfaces/BarsVisualizerOptions.html",[0,0.177,310,2.186]],["body/interfaces/BarsVisualizerOptions.html",[0,0.33,2,0.983,3,0.197,4,0.197,5,0.13,7,0.197,8,0.486,10,1.876,11,0.639,12,0.012,13,0.393,18,3.135,19,1.033,22,1.69,25,2.829,75,0.008,76,0.008,270,2.468,271,2.468,272,3.847,273,2.588,274,2.588,275,2.588,276,2.36,277,2.261,278,2.36,279,2.36,280,2.36,281,2.261,282,2.36,283,2.36,284,2.36,285,2.468,286,2.468,287,2.261,288,3.977,289,3.811,290,3.811,291,3.811,292,2.261,293,3.032,294,2.36,295,2.599,296,2.599,297,3.032,298,2.36,299,2.261,300,2.36,301,2.468,302,2.588,303,2.261,304,3.42,305,2.36,306,2.171,307,3.988,308,2.799,309,2.36,310,3.42,311,3.91,312,3.766,313,3.654,314,3.032,315,3.509]],["title/interfaces/BaseVisualizerOptions.html",[0,0.177,307,2.386]],["body/interfaces/BaseVisualizerOptions.html",[0,0.333,2,1.018,3,0.204,4,0.204,5,0.134,7,0.204,8,0.498,10,1.859,11,0.629,12,0.012,13,0.395,18,3.166,19,1.16,22,1.75,25,2.568,75,0.008,76,0.008,270,2.556,271,2.556,272,3.558,273,2.681,274,2.681,275,2.681,276,2.444,277,2.342,278,2.444,279,2.444,280,2.444,281,2.342,282,2.444,283,2.444,284,2.444,285,2.556,286,2.556,287,2.342,288,3.239,289,3.104,290,3.104,291,3.104,292,2.342,293,3.104,294,2.444,295,3.305,296,3.305,297,3.856,298,2.444,299,2.342,300,2.444,301,2.556,302,2.681,303,2.342,304,3.481,305,2.444,306,2.249,307,4.045,308,3.422,309,3.867,310,3.104,311,3.558,312,3.558,313,2.342,314,3.104,315,3.558]],["title/pipes/BitratePipe.html",[115,2.186,655,3.43]],["body/pipes/BitratePipe.html",[3,0.261,4,0.261,5,0.171,10,1.645,11,0.458,12,0.012,13,0.279,19,1.024,39,1.741,75,0.009,76,0.009,80,1.505,83,0.545,89,0.817,95,3.599,115,3.622,116,1.417,138,0.79,140,2.387,147,1.298,151,1.574,209,3.225,330,1.119,414,1.261,432,1.224,436,1.794,437,1.188,452,1.718,479,3.261,646,4.329,647,5.683,650,5.683,655,5.683,656,6.266,657,5.899,658,7.011,659,5.899,660,5.899,661,5.899]],["title/interfaces/ButtonGamepadAction.html",[0,0.177,28,2.782]],["body/interfaces/ButtonGamepadAction.html",[0,0.31,1,3.222,2,1.1,3,0.221,4,0.221,5,0.145,6,3.222,7,0.315,8,0.524,9,3.424,10,1.668,11,0.585,12,0.012,13,0.394,14,5.152,15,3.667,16,1.273,17,5.166,18,2.023,19,0.716,20,3.222,21,1.133,22,1.892,23,4.601,24,3.222,25,2.99,26,3.424,27,3.424,28,4.156,29,4.6,30,3.424,31,3.222,32,3.222,33,3.222,34,3.049,35,3.049,36,4.731,37,2.897,38,3.424,39,1.903,40,3.424,41,2.701,42,3.424,43,3.015,44,3.424,45,3.564,46,3.424,47,3.222,48,3.424,49,3.222,50,3.424,51,3.424,52,3.424,53,3.424,54,3.424,55,3.049,56,3.424,57,3.424,58,3.424,59,2.897,60,3.424,61,3.222,62,3.424,63,3.222,64,3.424,65,3.424,66,3.424,67,3.424,68,3.424,69,3.424,70,3.049,71,3.424,72,3.424,73,3.424,74,3.424,75,0.008,76,0.008]],["title/interfaces/Chainable.html",[0,0.177,662,3.782]],["body/interfaces/Chainable.html",[0,0.209,2,1.118,3,0.224,4,0.224,5,0.189,7,0.224,12,0.012,16,1.659,75,0.009,76,0.009,83,0.602,330,0.964,357,1.746,414,1.392,432,1.054,437,1.023,502,5.176,528,3.479,542,5.707,662,5.707,663,5.078,664,6.646,665,5.078,666,5.078,667,4.45,668,4.45,669,5.078,670,4.45,671,5.078,672,5.078,673,5.078,674,6.513,675,7.585,676,5.707,677,5.707,678,5.707,679,5.078,680,5.078,681,5.078,682,5.078,683,4.45,684,5.078,685,5.078,686,5.078,687,5.078,688,7.585,689,5.078,690,5.078,691,3.098,692,5.078,693,5.078,694,5.078,695,5.078,696,6.513,697,5.078,698,6.513,699,6.513,700,5.078,701,5.078,702,4.45,703,5.078,704,6.513,705,4.636,706,5.078,707,5.078,708,5.078,709,5.078,710,2.807]],["title/interfaces/Color.html",[0,0.177,711,2.957]],["body/interfaces/Color.html",[0,0.257,2,1.378,3,0.277,4,0.277,5,0.182,7,0.277,8,0.602,11,0.613,12,0.011,13,0.296,19,1.21,22,2.989,75,0.01,76,0.01,80,1.596,711,5.079,712,6.262,713,7.151,714,4.731]],["title/interfaces/ColorConfig.html",[0,0.177,715,2.386]],["body/interfaces/ColorConfig.html",[0,0.313,2,1.136,3,0.228,4,0.228,5,0.21,7,0.228,8,0.535,11,0.612,12,0.012,13,0.388,19,1.228,25,2.162,75,0.009,76,0.009,77,1.891,79,2.992,81,2.728,82,2.491,83,0.67,90,2.853,91,2.857,116,1.834,117,3.327,147,1.448,167,2.089,195,2.089,261,3.2,295,3.313,296,3.313,437,1.537,440,4.015,474,3.327,475,3.327,476,3.327,477,3.327,478,3.327,479,2.853,480,3.327,481,3.327,482,3.327,483,3.327,501,3.148,563,3.536,715,3.638,716,3.327,717,4.015,718,3.148,719,2.162,720,3.333,721,4.243,722,2.853,723,4.015,724,4.671,725,3.148,726,3.536,727,2.413,728,3.536,729,3.327,730,3.787,731,3.787,732,3.787,733,3.787,734,3.327,735,3.148]],["title/interfaces/CoverColor.html",[0,0.177,736,2.782]],["body/interfaces/CoverColor.html",[0,0.333,2,1.247,3,0.25,4,0.25,5,0.219,7,0.25,8,0.567,11,0.542,12,0.011,13,0.383,19,1.233,75,0.009,76,0.009,82,2.144,83,0.524,437,1.589,578,2.01,714,4.574,719,2.373,720,2.869,736,5.443,737,2.292,738,3.881,739,5.087,740,3.029,741,2.649,742,3.131,743,3.652,744,3.652,745,3.652,746,3.652,747,3.652,748,2.754,749,2.754,750,3.455,751,3.687,752,3.455,753,2.754]],["title/interfaces/CoverColorPalette.html",[0,0.177,720,2.186]],["body/interfaces/CoverColorPalette.html",[0,0.326,2,1.163,3,0.233,4,0.233,5,0.213,7,0.233,8,0.543,11,0.63,12,0.011,13,0.376,19,1.179,75,0.009,76,0.009,82,2.001,83,0.489,437,1.726,578,1.876,714,3.064,719,2.215,720,3.384,736,5.641,737,2.139,738,3.622,739,3.408,740,2.901,741,2.472,742,4.255,743,4.963,744,4.963,745,4.963,746,4.963,747,4.963,748,2.57,749,2.57,750,3.224,751,3.531,752,3.224,753,2.57]],["title/components/CoverDisplayComponent.html",[84,0.95,362,1.689]],["body/components/CoverDisplayComponent.html",[3,0.152,4,0.152,5,0.145,7,0.152,8,0.405,12,0.012,13,0.162,21,1.329,75,0.007,76,0.007,77,1.825,79,3.96,80,1.258,81,2.632,83,0.659,84,1.29,85,3.776,86,0.712,89,0.475,103,3.4,104,2.093,116,1.197,133,1.885,134,1.825,136,2.329,138,0.46,139,1.299,142,2.887,144,1.982,147,1.096,151,1.096,316,1.343,317,1.61,318,1.389,319,1.389,320,1.389,322,3.038,323,3.038,324,3.074,325,3.133,327,1.343,330,1.112,332,2.093,337,3.038,338,2.351,347,2.351,355,1.389,356,2.016,357,1.713,358,1.218,359,2.604,360,1.389,361,1.389,362,2.517,363,2.803,364,1.389,365,1.343,366,1.389,367,1.343,368,1.299,369,1.389,370,1.18,371,1.218,372,1.218,373,2.016,374,1.343,375,2.604,376,1.343,377,1.389,378,1.343,379,1.257,380,1.389,381,1.343,382,1.389,383,1.257,384,1.343,385,1.343,386,1.389,387,1.343,388,1.299,389,1.389,390,1.343,391,1.389,392,1.343,393,1.299,394,2.517,395,1.389,396,1.343,397,1.299,398,1.343,399,1.389,406,3.655,452,1.409,506,0.778,655,4.659,656,5.636,658,5.636,727,2.329,754,5.636,755,3.431,756,3.413,757,4.302,758,4.981,759,4.981,760,5.863,761,6.433,762,4.981,763,4.981,764,4.981,765,4.981,766,3.431,767,4.981,768,3.431,769,3.431,770,3.431,771,3.431,772,3.007,773,5.112,774,2.727,775,4.364,776,4.364,777,4.364,778,6.433,779,6.433,780,3.431,781,6.433,782,3.413,783,6.433,784,6.433,785,6.433,786,6.433,787,4.981,788,4.981,789,3.431]],["title/interfaces/DirHandleEntry.html",[0,0.177,790,3.43]],["body/interfaces/DirHandleEntry.html",[0,0.179,2,0.961,3,0.193,4,0.193,5,0.228,7,0.193,8,0.479,10,1.427,11,0.458,12,0.012,13,0.207,41,1.831,75,0.008,76,0.008,83,0.691,86,0.906,88,1.831,89,0.605,94,1.967,138,0.585,140,1.768,144,1.215,147,1.694,151,1.731,158,2.817,235,2.538,237,3.011,261,2.124,326,1.329,329,1.831,336,2.213,400,1.054,454,2.988,503,1.768,505,1.37,506,0.99,541,2.665,578,2.093,645,2.233,691,2.665,751,3.947,790,4.688,791,2.665,792,2.124,793,3.472,794,3.206,795,5.556,796,5.936,797,2.817,798,2.817,799,2.415,800,2.309,801,2.665,802,3.953,803,2.665,804,3.261,805,2.817,806,3.472,807,2.993,808,2.993,809,3.206,810,3.828,811,3.828,812,5.852,813,3.828,814,5.169,815,3.828,816,3.206,817,2.703,818,1.967,819,3.828,820,3.828,821,3.828,822,3.828,823,1.967,824,3.828,825,3.206,826,3.828,827,3.828,828,3.599,829,3.472,830,3.828,831,3.828,832,3.828,833,3.472,834,3.472,835,3.828,836,3.828,837,3.828,838,3.472,839,3.828,840,2.993,841,3.472,842,3.828,843,3.828,844,3.828,845,3.472,846,3.206,847,5.852,848,4.688,849,3.472,850,3.828,851,3.828,852,3.828]],["title/components/EqualizerComponent.html",[84,0.95,365,1.689]],["body/components/EqualizerComponent.html",[3,0.132,4,0.132,5,0.131,7,0.132,8,0.366,10,1.38,11,0.233,12,0.012,13,0.142,16,1.147,19,0.645,21,1.463,39,1.598,41,2.523,43,2.531,45,1.655,49,1.931,59,1.736,63,3.882,75,0.006,76,0.006,80,1.262,83,0.597,84,1.191,86,0.621,88,1.255,89,0.415,91,2.614,92,1.655,116,1.082,133,1.705,134,1.65,136,2.106,138,0.401,139,1.134,144,1.506,147,1.63,151,1.325,299,2.281,316,1.172,317,1.456,318,1.212,319,1.212,320,1.212,322,2.748,323,2.748,324,3.02,325,3.07,327,1.172,329,2.268,330,1.335,332,1.827,337,3.673,338,2.052,347,3.086,355,1.212,356,1.823,357,1.549,358,1.063,359,2.437,360,1.212,361,1.212,362,1.172,363,1.063,364,1.212,365,2.356,366,1.212,367,1.172,368,1.134,369,1.212,370,1.03,371,1.063,372,1.063,373,1.823,374,1.172,375,2.437,376,1.172,377,1.212,378,1.172,379,1.097,380,1.212,381,1.172,382,1.212,383,1.097,384,1.172,385,1.172,386,1.212,387,1.172,388,1.134,389,1.212,390,1.172,391,1.212,392,1.172,393,1.134,394,1.172,395,1.212,396,1.172,397,1.134,398,1.172,399,1.212,401,3.182,414,0.962,432,0.934,436,0.911,437,0.603,452,1.63,460,4.743,479,1.655,501,3.302,504,5.436,552,5.592,756,2.052,799,2.992,853,2.995,854,4.302,855,4.302,856,4.504,857,4.504,858,6.456,859,5.413,860,4.504,861,6.021,862,4.504,863,4.504,864,2.995,865,2.995,866,2.611,867,2.995,868,4.504,869,2.995,870,2.995,871,2.904,872,2.38,873,2.38,874,1.827,875,2.197,876,2.995,877,3.946,878,2.995,879,2.995,880,2.995,881,2.995,882,4.504,883,2.995,884,2.995,885,2.995,886,4.504,887,2.995,888,4.424,889,2.995,890,5.436,891,2.995,892,2.38,893,2.995,894,5.276,895,4.504,896,4.504,897,4.504,898,2.995,899,4.504,900,2.624,901,2.995,902,2.995,903,2.995,904,4.504,905,2.995,906,6.021,907,2.995,908,5.413,909,3.946,910,2.995,911,2.995,912,6.783,913,6.456,914,2.995,915,2.995,916,5.413,917,2.995,918,4.302,919,4.504,920,2.197,921,6.456,922,2.995,923,2.995,924,2.624,925,2.995,926,2.995,927,2.995,928,2.995,929,2.995,930,2.38,931,2.995,932,2.995,933,2.995,934,2.995,935,2.995,936,2.995,937,2.995,938,2.995,939,2.995,940,2.995,941,2.995,942,2.995,943,2.995,944,2.38,945,2.995,946,2.995,947,2.197]],["title/interfaces/FileData.html",[0,0.177,802,2.386]],["body/interfaces/FileData.html",[0,0.244,2,1.309,3,0.263,4,0.263,5,0.247,7,0.263,8,0.584,11,0.558,12,0.011,13,0.366,75,0.009,76,0.009,147,1.582,261,3.902,437,1.448,723,4.712,791,3.629,792,2.892,801,3.629,802,3.973,948,3.288,949,5.212,950,5.212,951,5.212,952,5.212,953,6.298,954,5.212,955,5.212,956,5.212,957,5.212,958,5.212,959,5.212,960,5.212,961,5.212,962,5.212,963,5.212,964,5.212,965,5.212,966,5.212,967,5.212]],["title/components/FileDropOverlayComponent.html",[84,0.95,367,1.689]],["body/components/FileDropOverlayComponent.html",[3,0.125,4,0.125,5,0.235,7,0.191,8,0.351,11,0.406,12,0.012,13,0.134,16,1.333,21,1.186,39,1.275,75,0.006,76,0.006,80,1.35,83,0.262,84,1.152,86,0.588,89,0.393,116,1.038,134,1.583,138,0.38,139,1.073,140,1.748,144,2.029,147,1.461,151,0.624,199,1.942,220,3.841,221,2.96,316,1.109,317,1.396,318,1.147,319,1.147,320,1.147,324,2.997,325,3.042,327,1.109,330,1.26,355,1.147,356,1.748,357,1.485,358,1.006,359,2.551,360,1.147,361,1.147,362,1.109,363,1.006,364,1.147,365,1.109,366,1.147,367,2.29,368,3.228,369,1.147,370,0.974,371,1.006,372,1.006,373,1.748,374,1.109,375,2.369,376,1.109,377,1.147,378,1.109,379,1.038,380,1.147,381,1.109,382,1.147,383,1.038,384,1.109,385,1.109,386,1.147,387,1.109,388,1.073,389,1.147,390,1.109,391,1.147,392,1.109,393,1.635,394,1.109,395,1.147,396,1.109,397,1.073,398,1.109,399,1.147,414,0.923,432,1.086,436,1.592,437,1.054,452,1.258,453,1.942,506,1.653,534,2.252,578,1.857,586,2.651,612,2.483,614,2.483,683,3.785,691,4.051,711,2.96,722,2.388,723,1.729,756,1.942,795,1.942,817,1.748,818,1.945,823,1.945,840,1.942,872,2.252,930,2.252,947,2.079,968,2.834,969,5.067,970,6.051,971,6.905,972,6.905,973,2.834,974,5.234,975,3.374,976,2.96,977,4.319,978,5.234,979,4.319,980,5.234,981,5.234,982,5.234,983,4.319,984,4.319,985,4.319,986,7.44,987,2.834,988,4.319,989,2.834,990,4.319,991,2.834,992,3.586,993,2.834,994,6.302,995,2.834,996,2.834,997,2.834,998,2.834,999,2.834,1000,2.834,1001,2.834,1002,2.834,1003,2.834,1004,2.834,1005,2.834,1006,2.834,1007,2.834,1008,4.319,1009,6.302,1010,2.834,1011,4.319,1012,4.319,1013,2.834,1014,4.319,1015,2.834,1016,4.319,1017,4.319,1018,2.834,1019,4.319,1020,2.834,1021,1.827,1022,4.586,1023,4.586,1024,4.319,1025,2.834,1026,2.834,1027,4.319,1028,5.234,1029,2.483,1030,4.319,1031,2.834,1032,5.854,1033,2.834,1034,2.834,1035,2.834,1036,2.834,1037,3.785,1038,3.433,1039,2.834,1040,2.834,1041,2.834,1042,2.834,1043,2.834,1044,2.834,1045,2.834,1046,2.834,1047,2.834,1048,2.834,1049,5.234,1050,2.834,1051,5.234,1052,2.834,1053,2.483,1054,2.834,1055,3.433,1056,2.834,1057,2.483,1058,2.483,1059,2.834,1060,2.834,1061,2.834,1062,2.834,1063,2.834,1064,2.834,1065,2.834,1066,2.834,1067,2.834,1068,2.834,1069,2.834,1070,2.834,1071,2.834,1072,4.319,1073,2.834,1074,4.319,1075,2.834,1076,2.834,1077,2.483,1078,2.483,1079,2.834,1080,2.834,1081,2.834,1082,2.834,1083,2.483,1084,3.785,1085,2.834,1086,2.252,1087,2.834,1088,2.834,1089,2.834,1090,4.319]],["title/classes/FileLoaderService.html",[138,0.578,804,2.386]],["body/classes/FileLoaderService.html",[3,0.256,4,0.256,5,0.205,7,0.256,8,0.575,11,0.45,12,0.011,13,0.274,75,0.009,76,0.009,83,0.654,89,0.802,138,0.776,330,1.449,414,1.511,432,1.467,791,4.85,792,3.866,802,3.201,803,3.533,804,3.909,809,5.602,816,5.834,817,3.218,825,5.834,948,4.395,1091,5.791,1092,5.791,1093,8.592,1094,7.634,1095,5.791,1096,5.791,1097,5.791]],["title/interfaces/FrequencyBarsConfig.html",[0,0.177,287,2.186]],["body/interfaces/FrequencyBarsConfig.html",[0,0.334,2,1.029,3,0.207,4,0.207,5,0.136,7,0.207,8,0.502,10,1.872,11,0.621,12,0.012,13,0.396,18,2.797,19,1.053,22,1.771,25,2.587,75,0.008,76,0.008,270,2.586,271,2.586,272,3.574,273,2.712,274,2.712,275,2.712,276,2.472,277,2.369,278,2.472,279,2.472,280,2.472,281,2.369,282,2.472,283,2.472,284,2.472,285,2.586,286,2.586,287,3.127,288,4.039,289,3.87,290,3.87,291,3.87,292,2.369,293,3.127,294,2.472,295,2.681,296,2.681,297,3.127,298,2.472,299,2.369,300,2.472,301,2.586,302,2.712,303,2.369,304,3.5,305,2.472,306,2.275,307,3.82,308,2.887,309,2.472,310,3.127,311,3.574,312,3.574,313,2.369,314,3.127,315,3.574]],["title/interfaces/GamepadAction.html",[0,0.177,17,2.957]],["body/interfaces/GamepadAction.html",[0,0.304,1,3.061,2,1.045,3,0.21,4,0.21,5,0.138,6,3.061,7,0.348,8,0.507,9,3.253,10,1.762,11,0.633,12,0.012,13,0.39,14,4.767,15,3.484,16,1.209,17,5.066,18,2.992,19,0.997,20,4.767,21,1.675,22,2.635,23,5.254,24,3.061,25,2.612,26,3.253,27,3.253,28,3.061,29,2.896,30,3.253,31,3.061,32,3.061,33,3.061,34,2.896,35,2.896,36,4.575,37,2.752,38,3.253,39,1.841,40,3.253,41,2.612,42,3.253,43,2.916,44,3.253,45,3.447,46,3.253,47,3.061,48,3.253,49,3.061,50,3.253,51,3.253,52,3.253,53,3.253,54,3.253,55,2.896,56,3.253,57,3.253,58,3.253,59,2.752,60,3.253,61,3.061,62,3.253,63,3.061,64,3.253,65,3.253,66,3.253,67,3.253,68,3.253,69,3.253,70,2.896,71,3.253,72,3.253,73,3.253,74,3.253,75,0.008,76,0.008,437,1.489]],["title/injectables/GamepadService.html",[400,0.771,1098,2.782]],["body/injectables/GamepadService.html",[1,3.23,3,0.117,4,0.117,5,0.077,7,0.316,8,0.333,9,2.804,10,1.747,11,0.501,12,0.012,13,0.125,14,4.986,16,1.555,18,3.055,20,4.866,21,1.463,22,1,23,1.703,24,3.638,26,4.424,27,4.424,28,3.638,29,3.442,31,1.703,32,4.342,33,3.638,34,3.056,35,2.497,37,2.904,39,1.802,70,3.056,75,0.005,76,0.005,80,1.103,83,0.378,89,0.366,138,0.354,140,1.069,144,1.139,147,1.719,151,1.421,326,0.804,329,2.099,330,1.278,400,0.731,402,1,414,0.875,432,1.171,436,1.716,437,1.136,452,1.786,505,0.828,506,1.733,586,2.073,645,1.549,975,2.639,1021,1.703,1098,2.639,1099,2.642,1100,5.01,1101,5.01,1102,4.093,1103,4.093,1104,5.01,1105,4.093,1106,4.093,1107,4.093,1108,2.642,1109,7.301,1110,4.093,1111,2.642,1112,7.301,1113,2.642,1114,5.642,1115,2.642,1116,6.96,1117,4.093,1118,2.642,1119,2.642,1120,2.642,1121,2.642,1122,2.642,1123,2.642,1124,2.642,1125,2.642,1126,2.642,1127,2.642,1128,5.01,1129,2.642,1130,5.01,1131,2.642,1132,2.642,1133,5.642,1134,2.642,1135,2.642,1136,2.642,1137,2.642,1138,4.093,1139,5.01,1140,5.349,1141,4.093,1142,2.315,1143,4.093,1144,2.642,1145,2.642,1146,2.642,1147,2.642,1148,2.642,1149,4.093,1150,2.642,1151,2.642,1152,2.642,1153,2.642,1154,2.642,1155,2.642,1156,3.676,1157,6.104,1158,2.642,1159,2.642,1160,5.01,1161,2.642,1162,2.642,1163,2.642,1164,2.642,1165,1.612,1166,2.642,1167,2.642,1168,2.642,1169,4.093,1170,2.642,1171,2.642,1172,2.642,1173,2.642,1174,2.642,1175,2.642,1176,5.01,1177,4.093,1178,3.003,1179,4.093,1180,4.093,1181,2.642,1182,2.642,1183,2.642,1184,4.093,1185,2.642,1186,2.642,1187,2.642,1188,4.093,1189,4.093,1190,5.01,1191,5.01,1192,5.642,1193,4.479,1194,5.01,1195,2.642,1196,5.642,1197,2.642,1198,5.658,1199,4.093,1200,4.093,1201,4.093,1202,2.642,1203,5.642,1204,2.642,1205,2.642,1206,4.093,1207,2.642,1208,2.642,1209,4.093,1210,4.093,1211,2.642,1212,2.642,1213,2.642,1214,2.642]],["title/interfaces/Hotkey.html",[0,0.177,1215,2.957]],["body/interfaces/Hotkey.html",[0,0.225,2,0.866,3,0.174,4,0.174,5,0.114,7,0.174,8,0.446,11,0.531,12,0.012,13,0.299,19,1.135,75,0.007,76,0.007,83,0.665,86,0.816,89,0.545,138,0.527,147,1.745,151,1.584,168,2.078,177,3.034,209,1.648,326,1.197,335,2.4,336,1.993,357,2.475,370,1.353,371,1.948,372,1.396,400,0.98,418,2.887,454,3.875,503,1.592,505,1.233,506,1.433,545,2.887,586,2.78,645,2.078,705,2.536,828,3.349,888,2.696,1156,2.887,1178,2.887,1215,3.761,1216,3.126,1217,5.281,1218,5.242,1219,5.614,1220,4.028,1221,2.887,1222,3.349,1223,2.281,1224,4.363,1225,3.761,1226,5.438,1227,3.126,1228,2.536,1229,2.4,1230,3.126,1231,3.126,1232,3.182,1233,2.887,1234,3.126,1235,4.028,1236,3.126,1237,3.126,1238,2.4,1239,3.126,1240,3.126,1241,3.126,1242,3.126,1243,3.126,1244,3.126,1245,3.126,1246,3.126,1247,4.363,1248,3.126,1249,4.363,1250,4.363,1251,4.363,1252,3.126,1253,3.126,1254,3.126,1255,3.126,1256,3.126,1257,4.028,1258,3.126,1259,3.126,1260,3.126,1261,3.126,1262,5.025,1263,3.126,1264,4.363,1265,3.126,1266,3.126,1267,4.363,1268,3.126,1269,3.126,1270,3.126,1271,3.126,1272,3.126,1273,3.126,1274,3.126,1275,4.363,1276,3.126,1277,3.126,1278,3.126,1279,3.126,1280,5.438,1281,3.126,1282,4.363,1283,3.126,1284,3.126,1285,3.126,1286,1.489,1287,2.696,1288,3.126,1289,3.126,1290,3.126]],["title/interfaces/HotkeyInfo.html",[0,0.177,1228,2.782]],["body/interfaces/HotkeyInfo.html",[0,0.228,2,0.88,3,0.177,4,0.177,5,0.116,7,0.177,8,0.451,11,0.431,12,0.012,13,0.302,19,1.101,75,0.007,76,0.007,83,0.669,86,0.83,89,0.554,138,0.536,147,1.751,151,1.594,168,2.102,177,3.07,209,1.676,326,1.217,335,2.44,336,2.026,357,1.91,370,1.376,371,1.971,372,1.42,400,0.992,418,2.936,454,3.893,503,1.619,505,1.254,506,1.446,545,2.936,586,2.813,645,2.102,705,2.579,888,2.741,1156,2.936,1178,2.936,1215,2.741,1216,3.179,1217,4.076,1218,5.266,1219,5.057,1220,4.076,1221,2.936,1222,3.388,1223,2.319,1224,4.414,1225,3.805,1226,6.324,1227,3.179,1228,3.581,1229,2.44,1230,3.179,1231,3.179,1232,3.22,1233,2.936,1234,3.179,1235,4.076,1236,3.179,1237,3.179,1238,2.44,1239,3.179,1240,3.179,1241,3.179,1242,3.179,1243,3.179,1244,3.179,1245,3.179,1246,3.179,1247,4.414,1248,3.179,1249,4.414,1250,4.414,1251,4.414,1252,3.179,1253,3.179,1254,3.179,1255,3.179,1256,3.179,1257,4.076,1258,3.179,1259,3.179,1260,3.179,1261,3.179,1262,5.07,1263,3.179,1264,4.414,1265,3.179,1266,3.179,1267,4.414,1268,3.179,1269,3.179,1270,3.179,1271,3.179,1272,3.179,1273,3.179,1274,3.179,1275,4.414,1276,3.179,1277,3.179,1278,3.179,1279,3.179,1280,5.477,1281,3.179,1282,4.414,1283,3.179,1284,3.179,1285,3.179,1286,1.514,1287,2.741,1288,3.179,1289,3.179,1290,3.179]],["title/interfaces/HotkeysData.html",[0,0.177,1291,3.43]],["body/interfaces/HotkeysData.html",[0,0.229,2,1.225,3,0.246,4,0.246,5,0.162,7,0.246,8,0.561,11,0.432,12,0.012,13,0.327,75,0.009,76,0.009,83,0.759,84,1.519,86,1.155,89,0.771,96,4.449,97,3.587,106,2.818,108,2.506,133,2.106,134,2.039,136,2.602,138,0.745,151,1.225,177,4.146,324,2.039,325,2.106,370,1.913,371,2.662,372,2.783,1222,3.395,1223,3.226,1228,3.587,1232,3.226,1238,3.395,1286,2.106,1287,5.373,1291,5.484,1292,4.876,1293,4.083,1294,4.083,1295,5.063,1296,4.876,1297,4.209,1298,3.495,1299,4.083,1300,4.876,1301,4.083,1302,4.083,1303,4.876,1304,4.876,1305,4.422,1306,4.876]],["title/components/HotkeysHelpDialogComponent.html",[84,0.95,370,1.484]],["body/components/HotkeysHelpDialogComponent.html",[0,0.158,3,0.17,4,0.17,5,0.157,7,0.17,8,0.439,12,0.012,13,0.255,16,0.978,21,1.223,41,2.836,43,2.523,75,0.007,76,0.007,80,1.323,83,0.684,84,1.373,86,0.796,89,0.532,91,2.343,96,4.023,97,2.475,106,1.944,108,1.729,116,1.297,133,2.042,134,1.977,136,2.523,138,0.514,139,1.453,151,0.845,177,2.122,316,1.502,317,1.744,318,1.554,319,1.554,320,1.554,324,3.114,325,3.181,327,1.502,330,1.284,355,1.554,356,2.184,357,1.855,358,1.362,359,2.74,360,1.554,361,1.554,362,1.502,363,1.362,364,1.554,365,1.502,366,1.554,367,1.502,368,1.453,369,1.554,370,2.328,371,2.696,372,2.893,373,2.184,374,1.502,375,2.74,376,1.502,377,1.554,378,1.502,379,1.406,380,1.554,381,1.502,382,1.554,383,1.406,384,1.502,385,1.502,386,1.554,387,1.502,388,1.453,389,1.554,390,1.502,391,1.554,392,1.502,393,1.453,394,1.502,395,1.554,396,1.502,397,1.453,398,1.502,399,1.554,414,1.153,428,4.288,432,0.796,452,1.297,1215,3.697,1222,2.342,1223,2.225,1228,2.475,1232,3.128,1238,3.807,1286,2.362,1287,2.63,1291,3.051,1292,6.249,1293,2.817,1294,2.817,1295,4.579,1296,3.364,1297,3.807,1298,3.16,1299,3.96,1300,4.728,1301,3.96,1302,3.96,1303,6.249,1304,3.364,1305,5.379,1306,3.364,1307,3.839,1308,3.364,1309,3.839,1310,3.839,1311,3.839,1312,6.769,1313,7.397,1314,6.769,1315,5.396,1316,5.396,1317,6.769,1318,5.396,1319,5.396,1320,4.728,1321,5.396,1322,5.396,1323,5.396,1324,5.396]],["title/injectables/HotkeysService.html",[400,0.771,1229,2.633]],["body/injectables/HotkeysService.html",[0,0.207,3,0.154,4,0.154,5,0.101,7,0.154,8,0.409,11,0.534,12,0.012,13,0.28,16,1.751,19,1.083,21,1.469,75,0.007,76,0.007,80,0.985,83,0.635,86,0.723,89,0.483,138,0.467,147,1.696,151,1.513,168,2.239,177,3.582,209,2.111,326,1.06,330,1.503,335,2.127,336,1.766,357,2.034,370,1.199,371,2.3,372,1.237,400,0.9,402,1.32,414,1.077,418,4.755,432,1.486,436,1.533,437,1.305,452,1.557,454,3.903,503,1.411,505,1.093,506,1.341,545,4.755,586,2.552,645,1.907,705,3.248,888,2.389,1156,2.558,1178,2.558,1215,2.389,1216,2.77,1217,3.697,1218,4.44,1219,5.044,1220,3.697,1221,2.558,1222,3.609,1223,2.021,1224,4.004,1225,3.452,1226,5.15,1227,2.77,1228,2.247,1229,3.073,1230,2.77,1231,2.77,1232,2.921,1233,2.558,1234,4.701,1235,5.044,1236,4.004,1237,4.701,1238,3.609,1239,4.701,1240,2.77,1241,2.77,1242,2.77,1243,2.77,1244,2.77,1245,2.77,1246,4.004,1247,4.004,1248,2.77,1249,4.004,1250,4.004,1251,4.004,1252,2.77,1253,2.77,1254,2.77,1255,2.77,1256,2.77,1257,3.697,1258,2.77,1259,2.77,1260,2.77,1261,2.77,1262,4.701,1263,2.77,1264,4.004,1265,2.77,1266,2.77,1267,4.004,1268,2.77,1269,2.77,1270,2.77,1271,2.77,1272,4.004,1273,2.77,1274,2.77,1275,4.004,1276,2.77,1277,2.77,1278,5.15,1279,5.15,1280,5.15,1281,2.77,1282,4.004,1283,2.77,1284,2.77,1285,2.77,1286,1.32,1287,2.389,1288,2.77,1289,2.77,1290,2.77,1325,5.038,1326,5.038,1327,3.486,1328,3.486,1329,3.486,1330,3.486,1331,3.486,1332,3.486,1333,3.486,1334,3.486,1335,3.486,1336,3.486,1337,3.486]],["title/interfaces/Id3CoverPicture.html",[0,0.177,717,2.633]],["body/interfaces/Id3CoverPicture.html",[0,0.295,2,1.306,3,0.262,4,0.262,5,0.172,7,0.262,8,0.583,10,1.534,11,0.557,12,0.011,13,0.34,19,1.209,75,0.009,76,0.009,77,2.175,81,3.137,83,0.549,91,2.577,116,1.426,167,2.402,195,2.402,306,3.753,717,4.708,718,3.621,721,4.628,722,3.281,727,3.839,737,2.402,740,2.577,1165,4.379,1286,3.035,1338,5.201,1339,4.717]],["title/interfaces/Id3Tags.html",[0,0.177,740,1.874]],["body/interfaces/Id3Tags.html",[0,0.278,2,1.185,3,0.238,4,0.238,5,0.156,7,0.238,8,0.549,10,1.445,11,0.655,12,0.011,13,0.32,19,1.235,75,0.009,76,0.009,77,2.84,81,4.096,83,0.498,91,3.365,116,1.294,167,3.137,195,3.137,306,2.619,437,1.73,717,4.728,718,3.285,721,4.997,722,2.977,727,3.734,737,2.18,740,2.935,1165,4.124,1286,2.039,1338,4.719,1339,6.159,1340,6.761]],["title/injectables/Id3TagsService.html",[400,0.771,1341,3.43]],["body/injectables/Id3TagsService.html",[3,0.185,4,0.185,5,0.221,7,0.185,10,1.224,11,0.445,12,0.012,13,0.198,16,1.874,20,2.697,21,0.948,39,1.235,75,0.007,76,0.007,80,0.818,83,0.604,89,0.579,138,0.56,140,1.693,147,1.672,151,1.26,168,2.472,177,2.312,194,2.697,326,1.272,329,2.736,330,1.087,400,1.023,402,1.583,414,1.224,432,0.868,436,1.272,437,0.842,445,2.312,452,1.005,505,1.311,506,1.667,523,3.324,578,2.811,586,3.308,718,3.984,719,1.753,737,2.643,740,1.816,741,1.956,750,3.494,751,3.888,752,2.552,753,2.785,817,2.318,846,5.154,975,3.692,1021,2.697,1037,3.665,1341,4.551,1342,4.183,1343,5.018,1344,4.183,1345,5.018,1346,7.024,1347,4.183,1348,5.727,1349,2.425,1350,5.399,1351,4.183,1352,4.183,1353,7.357,1354,6.531,1355,3.665,1356,4.183,1357,3.665,1358,3.665,1359,4.183,1360,5.727,1361,4.183,1362,5.727,1363,4.183,1364,5.727,1365,4.183,1366,3.665,1367,4.183,1368,4.183,1369,4.183,1370,3.665,1371,6.531,1372,4.183,1373,3.324,1374,4.183,1375,3.665,1376,4.183,1377,3.665,1378,5.727,1379,4.183,1380,4.183,1381,4.183,1382,4.183,1383,4.183,1384,4.183,1385,4.183,1386,6.531,1387,4.183,1388,4.183,1389,4.183,1390,4.183,1391,4.183,1392,5.727,1393,5.727,1394,4.183,1395,4.183,1396,4.183,1397,4.183,1398,4.183,1399,4.183,1400,4.183,1401,4.183,1402,4.183,1403,4.183]],["title/interfaces/IndexedDbTrackMetadata.html",[0,0.177,90,2.386]],["body/interfaces/IndexedDbTrackMetadata.html",[0,0.315,2,1.15,3,0.231,4,0.231,5,0.212,7,0.231,8,0.539,11,0.595,12,0.012,13,0.389,19,1.202,25,2.78,75,0.009,76,0.009,77,1.915,79,3.03,81,2.763,82,2.511,83,0.674,90,3.667,91,2.88,116,1.842,117,3.37,147,1.46,167,2.116,195,2.116,261,3.848,295,2.269,296,2.269,437,1.336,440,4.047,474,3.37,475,3.37,476,3.37,477,3.37,478,3.37,479,2.889,480,3.37,481,3.37,482,3.37,483,3.37,501,3.189,563,3.582,715,2.889,716,3.37,717,4.047,718,3.189,719,2.19,720,3.36,721,4.278,722,2.889,723,4.677,724,4.943,725,3.189,726,3.582,727,2.444,728,3.582,729,3.37,730,3.836,731,3.836,732,3.836,733,3.836,734,3.37,735,3.189]],["title/interfaces/LastfmAlbum.html",[0,0.177,1404,2.782]],["body/interfaces/LastfmAlbum.html",[0,0.284,2,0.889,3,0.178,4,0.178,5,0.117,7,0.178,8,0.454,10,0.863,11,0.537,12,0.012,13,0.191,19,1.186,39,1.193,75,0.007,76,0.007,77,2.536,80,1.353,82,2.117,83,0.695,86,0.838,89,0.56,138,0.541,144,1.556,147,1.654,151,1.755,167,2.941,168,1.529,209,3.15,235,1.984,237,1.581,326,1.229,400,0.999,503,1.635,505,1.267,506,1.703,578,2.276,710,2.233,719,1.693,727,1.889,737,1.635,740,2.428,741,1.889,748,1.965,749,1.965,800,2.135,817,2.263,818,1.819,823,1.819,1286,2.428,1349,2.342,1404,4.135,1405,2.605,1406,2.605,1407,4.222,1408,4.462,1409,2.768,1410,2.605,1411,2.605,1412,2.768,1413,2.233,1414,3.411,1415,3.411,1416,3.411,1417,2.605,1418,3.605,1419,2.465,1420,2.768,1421,2.768,1422,2.768,1423,2.768,1424,2.768,1425,2.768,1426,2.605,1427,2.465,1428,3.411,1429,2.768,1430,2.768,1431,2.605,1432,2.465,1433,2.605,1434,2.768,1435,2.768,1436,2.768,1437,2.768,1438,2.605,1439,2.768,1440,3.605,1441,2.768,1442,2.768,1443,2.768,1444,2.768,1445,2.768,1446,2.768,1447,2.768,1448,2.768,1449,2.768,1450,4.394,1451,2.768,1452,2.768,1453,2.605,1454,4.394,1455,4.979,1456,4.979,1457,2.768,1458,2.768,1459,2.768,1460,3.832,1461,2.768,1462,2.768,1463,2.768,1464,2.768,1465,2.768,1466,2.768,1467,2.768]],["title/interfaces/LastfmErrorResponse.html",[0,0.177,1416,2.633]],["body/interfaces/LastfmErrorResponse.html",[0,0.285,2,0.898,3,0.18,4,0.18,5,0.118,7,0.18,8,0.458,10,1.378,11,0.501,12,0.012,13,0.193,19,1.17,39,1.205,75,0.007,76,0.007,77,2.547,80,0.798,82,2.131,83,0.697,86,0.847,89,0.565,138,0.547,144,1.567,147,1.659,151,1.759,167,2.279,168,1.545,209,3.159,235,1.998,237,1.597,326,1.241,400,1.006,503,1.652,505,1.279,506,1.709,578,2.676,710,2.256,719,1.71,727,1.908,737,1.652,740,2.445,741,1.908,748,1.984,749,1.984,800,2.157,817,2.279,818,1.838,823,1.838,1286,2.44,1349,2.366,1404,3.63,1405,2.631,1406,2.631,1407,2.489,1408,3.63,1409,2.796,1410,2.631,1411,2.631,1412,2.796,1413,2.256,1414,3.435,1415,3.435,1416,3.933,1417,4.481,1418,3.63,1419,2.489,1420,2.796,1421,2.796,1422,2.796,1423,2.796,1424,2.796,1425,2.796,1426,2.631,1427,2.489,1428,3.435,1429,2.796,1430,2.796,1431,2.631,1432,2.489,1433,2.631,1434,2.796,1435,2.796,1436,2.796,1437,2.796,1438,2.631,1439,2.796,1440,3.63,1441,2.796,1442,2.796,1443,2.796,1444,2.796,1445,2.796,1446,2.796,1447,2.796,1448,2.796,1449,2.796,1450,4.417,1451,2.796,1452,2.796,1453,2.631,1454,4.417,1455,4.997,1456,4.997,1457,2.796,1458,2.796,1459,2.796,1460,3.858,1461,2.796,1462,2.796,1463,2.796,1464,2.796,1465,2.796,1466,2.796,1467,2.796]],["title/interfaces/LastfmImage.html",[0,0.177,1408,2.782]],["body/interfaces/LastfmImage.html",[0,0.285,2,0.898,3,0.18,4,0.18,5,0.118,7,0.18,8,0.458,10,0.872,11,0.501,12,0.012,13,0.193,19,1.188,39,1.205,75,0.007,76,0.007,77,2.547,80,0.798,82,2.131,83,0.697,86,0.847,89,0.565,138,0.547,144,1.567,147,1.659,151,1.759,167,2.279,168,1.545,209,3.159,235,1.998,237,1.597,326,1.241,400,1.006,503,1.652,505,1.279,506,1.709,578,2.288,710,2.256,719,1.71,727,1.908,737,1.652,740,2.445,741,1.908,748,1.984,749,1.984,800,2.157,817,2.279,818,1.838,823,1.838,1286,2.44,1349,2.366,1404,3.63,1405,2.631,1406,2.631,1407,2.489,1408,4.157,1409,2.796,1410,2.631,1411,2.631,1412,2.796,1413,3.842,1414,4.449,1415,3.435,1416,3.435,1417,2.631,1418,3.63,1419,2.489,1420,2.796,1421,2.796,1422,2.796,1423,2.796,1424,2.796,1425,2.796,1426,2.631,1427,2.489,1428,3.435,1429,2.796,1430,2.796,1431,2.631,1432,2.489,1433,2.631,1434,2.796,1435,2.796,1436,2.796,1437,2.796,1438,2.631,1439,2.796,1440,3.63,1441,2.796,1442,2.796,1443,2.796,1444,2.796,1445,2.796,1446,2.796,1447,2.796,1448,2.796,1449,2.796,1450,4.417,1451,2.796,1452,2.796,1453,2.631,1454,4.417,1455,4.997,1456,4.997,1457,2.796,1458,2.796,1459,2.796,1460,3.858,1461,2.796,1462,2.796,1463,2.796,1464,2.796,1465,2.796,1466,2.796,1467,2.796]],["title/injectables/LastfmMetadataService.html",[400,0.771,1419,2.633]],["body/injectables/LastfmMetadataService.html",[0,0.284,3,0.179,4,0.179,5,0.117,7,0.179,10,0.865,11,0.435,12,0.012,13,0.191,19,1.142,39,1.194,75,0.007,76,0.007,77,2.538,80,1.094,82,2.119,83,0.695,86,0.839,89,0.561,138,0.542,144,1.557,147,1.655,151,1.755,167,2.266,168,1.531,209,3.151,235,2.458,237,1.583,326,1.231,330,0.768,400,1,402,1.531,414,1.196,432,0.839,436,1.231,437,0.815,503,1.638,505,1.268,506,1.704,578,2.277,710,2.236,719,1.695,727,1.892,737,2.266,740,3.007,741,1.892,748,1.967,749,1.967,753,1.967,800,2.138,817,2.598,818,1.822,823,1.822,1286,2.429,1349,2.345,1404,3.609,1405,3.609,1406,2.608,1407,2.468,1408,3.609,1409,2.772,1410,2.608,1411,2.608,1412,2.772,1413,2.236,1414,3.415,1415,3.415,1416,3.415,1417,2.608,1418,3.609,1419,3.415,1420,2.772,1421,2.772,1422,2.772,1423,2.772,1424,2.772,1425,2.772,1426,3.609,1427,2.468,1428,3.415,1429,2.772,1430,2.772,1431,2.608,1432,2.468,1433,2.608,1434,2.772,1435,2.772,1436,2.772,1437,2.772,1438,2.608,1439,2.772,1440,3.609,1441,2.772,1442,2.772,1443,2.772,1444,2.772,1445,2.772,1446,2.772,1447,2.772,1448,2.772,1449,2.772,1450,4.398,1451,2.772,1452,2.772,1453,2.608,1454,4.398,1455,4.982,1456,4.982,1457,2.772,1458,2.772,1459,2.772,1460,3.835,1461,2.772,1462,2.772,1463,2.772,1464,2.772,1465,2.772,1466,2.772,1467,2.772,1468,4.905,1469,4.046]],["title/interfaces/LastfmSuccessResponse.html",[0,0.177,1415,2.633]],["body/interfaces/LastfmSuccessResponse.html",[0,0.287,2,0.907,3,0.182,4,0.182,5,0.12,7,0.182,8,0.461,10,0.881,11,0.44,12,0.012,13,0.195,19,1.147,39,1.217,75,0.007,76,0.007,77,2.839,80,0.806,82,2.146,83,0.699,86,0.855,89,0.571,138,0.552,144,1.577,147,1.665,151,1.763,167,2.295,168,1.56,209,3.169,235,2.012,237,1.613,326,1.254,400,1.013,503,1.668,505,1.292,506,1.714,578,2.3,710,2.279,719,1.727,727,1.928,737,1.668,740,2.462,741,1.928,748,2.004,749,2.004,800,2.179,817,2.295,818,1.856,823,1.856,1286,2.453,1349,2.39,1404,4.501,1405,2.658,1406,2.658,1407,2.515,1408,3.656,1409,2.824,1410,2.658,1411,2.658,1412,2.824,1413,2.279,1414,3.459,1415,3.954,1416,3.459,1417,2.658,1418,3.656,1419,2.515,1420,2.824,1421,2.824,1422,2.824,1423,2.824,1424,2.824,1425,2.824,1426,2.658,1427,2.515,1428,3.459,1429,2.824,1430,2.824,1431,2.658,1432,2.515,1433,2.658,1434,2.824,1435,2.824,1436,2.824,1437,2.824,1438,2.658,1439,2.824,1440,3.656,1441,2.824,1442,2.824,1443,2.824,1444,2.824,1445,2.824,1446,2.824,1447,2.824,1448,2.824,1449,2.824,1450,4.441,1451,2.824,1452,2.824,1453,2.658,1454,4.441,1455,5.015,1456,5.015,1457,2.824,1458,2.824,1459,2.824,1460,3.885,1461,2.824,1462,2.824,1463,2.824,1464,2.824,1465,2.824,1466,2.824,1467,2.824]],["title/injectables/LegacyFileLoaderService.html",[400,0.771,1470,3.782]],["body/injectables/LegacyFileLoaderService.html",[3,0.212,4,0.212,5,0.248,7,0.309,8,0.511,12,0.012,13,0.227,21,1.089,39,1.418,75,0.008,76,0.008,83,0.647,88,2.013,89,0.666,138,0.644,140,1.944,144,1.948,147,1.383,151,1.057,158,4.051,168,1.818,235,2.735,237,1.88,326,1.461,329,2.934,330,1.409,400,1.122,402,1.818,414,1.343,432,1.304,452,1.154,505,1.506,506,1.587,534,3.818,586,2.433,645,1.818,691,4.531,791,4.702,792,3.748,794,3.525,801,2.931,802,2.655,803,2.931,804,3.473,805,3.097,809,5.138,816,5.138,817,2.834,825,5.45,992,3.292,1366,4.209,1377,4.209,1470,5.506,1471,7.708,1472,4.804,1473,4.804,1474,4.804,1475,4.804,1476,4.804,1477,4.804,1478,4.804,1479,4.804,1480,4.804,1481,4.804,1482,4.804,1483,4.804,1484,4.804,1485,4.804,1486,4.804,1487,4.804,1488,4.804,1489,4.804,1490,4.804,1491,4.804,1492,4.804,1493,4.804,1494,4.804]],["title/components/LibraryComponent.html",[84,0.95,139,1.634]],["body/components/LibraryComponent.html",[0,0.061,3,0.066,4,0.066,5,0.142,7,0.176,8,0.207,10,1.392,11,0.481,12,0.012,13,0.121,16,1.015,19,1.055,21,1.443,39,1.176,75,0.003,76,0.003,77,2.721,78,1.301,79,1.946,80,1.414,81,1.774,82,0.966,83,0.636,84,0.739,85,3.2,86,0.308,87,2.3,88,1.406,89,0.206,90,3.858,91,3.17,92,0.821,93,2.941,94,0.668,95,0.906,96,2.164,97,0.957,98,2.667,99,2.941,100,2.941,101,2.463,102,1.017,103,2.106,104,0.906,105,2.667,106,0.752,107,2.667,108,0.668,109,2.667,110,2.667,111,2.667,112,1.18,113,2.667,114,1.089,115,0.752,116,1.078,117,0.957,118,2.202,119,0.906,120,2.667,121,1.089,122,2.941,123,2.941,124,2.941,125,2.941,126,2.941,127,1.301,128,2.941,129,1.089,130,1.089,131,2.923,132,1.301,133,0.966,134,0.935,135,2.236,136,1.193,137,2.236,138,0.199,139,1.508,140,1.033,141,1.557,142,1.479,143,2.236,144,2.082,145,4.596,146,2.941,147,1.75,148,3.491,149,2.236,150,2.236,151,1.607,152,2.236,153,2.236,154,2.236,155,2.236,156,2.236,157,2.941,158,3.16,159,3.932,160,2.667,161,2.941,162,5.827,163,4.596,164,2.236,165,2.236,166,2.236,167,3.107,168,1.508,169,2.236,170,3.895,171,2.236,172,2.941,173,3.491,174,4.852,175,3.491,176,4.294,177,2.202,178,2.028,179,2.667,180,4.596,181,2.236,182,1.873,183,3.491,184,2.236,185,2.236,186,2.236,187,2.236,188,2.236,189,2.236,190,2.236,191,5.43,192,2.236,193,2.236,194,2.568,195,1.612,196,2.236,197,4.294,198,2.236,199,1.748,200,4.294,201,2.236,202,2.236,203,4.294,204,2.236,205,2.236,206,1.479,207,3.491,208,2.236,209,2.883,210,3.491,211,2.236,212,3.491,213,2.236,214,2.236,215,2.236,216,2.236,217,2.236,218,2.236,219,2.028,220,1.873,221,1.748,222,2.236,223,2.236,224,2.236,225,1.017,226,1.301,227,2.236,228,1.301,229,1.301,230,2.028,231,2.236,232,1.301,233,2.236,234,1.301,235,2.403,236,2.028,237,2.265,238,1.18,239,1.301,240,1.301,241,2.236,242,2.941,243,1.301,244,3.491,245,1.301,246,2.236,247,2.236,248,3.491,249,1.18,250,1.301,251,1.301,252,1.301,253,1.301,254,1.301,255,2.236,256,1.301,257,2.236,258,2.236,259,2.941,260,1.301,261,0.722,262,1.301,263,1.301,264,1.301,265,1.18,266,2.236,267,2.236,268,2.028,269,1.301,316,0.581,317,0.825,318,0.601,319,0.601,320,0.601,324,2.59,325,2.563,327,0.581,330,1.398,355,0.601,356,1.033,357,0.877,358,0.527,359,1.612,360,0.601,361,0.601,362,0.581,363,0.527,364,0.601,365,0.581,366,0.601,367,0.581,368,0.562,369,0.601,370,0.51,371,0.527,372,0.527,373,1.033,374,0.581,375,1.612,376,0.581,377,0.601,378,0.581,379,0.544,380,0.601,381,0.581,382,0.601,383,0.544,384,0.581,385,0.581,386,0.601,387,0.581,388,0.562,389,0.601,390,0.581,391,0.601,392,0.581,393,0.562,394,0.581,395,0.601,396,0.581,397,0.562,398,0.581,399,0.601,414,0.545,432,1.286,436,1.885,437,1.248,452,1.489,585,3.596,1495,2.552,1496,2.552,1497,2.552,1498,2.236,1499,2.552,1500,2.552,1501,2.552,1502,2.552,1503,2.552,1504,2.552,1505,2.236,1506,1.484,1507,1.484,1508,1.484,1509,1.484,1510,1.484,1511,1.484,1512,1.484,1513,1.484,1514,1.484,1515,1.484,1516,1.484,1517,1.484,1518,1.484,1519,1.484,1520,1.484,1521,1.484,1522,1.484,1523,1.484,1524,1.484,1525,1.484,1526,1.484,1527,1.484,1528,2.552,1529,2.552,1530,4.901,1531,2.552,1532,3.596,1533,2.552,1534,2.552,1535,3.984,1536,3.984,1537,2.552,1538,3.984,1539,3.984,1540,3.984,1541,2.552]],["title/injectables/LibraryService.html",[131,3.167,400,0.771]],["body/injectables/LibraryService.html",[3,0.226,4,0.226,5,0.148,7,0.226,8,0.532,12,0.012,13,0.242,16,1.667,21,1.483,75,0.009,76,0.009,83,0.727,86,1.061,88,3.023,89,0.709,90,2.827,92,2.827,94,2.303,116,1.229,118,3.617,119,3.12,131,4.802,138,0.685,141,3.12,144,2.237,147,1.44,151,1.126,235,1.815,237,2.001,326,1.556,329,3.023,330,1.443,400,1.169,402,1.936,408,5.734,414,1.398,432,1.061,452,1.572,485,4.802,503,2.07,505,1.604,506,1.635,578,2.322,580,4.065,583,4.065,797,3.297,798,3.297,799,2.827,800,2.703,807,3.504,808,3.504,818,2.303,823,2.303,1286,1.936,1542,5.115,1543,7.215,1544,7.606,1545,6.543,1546,5.115,1547,5.115,1548,6.543,1549,5.115,1550,5.115,1551,5.115,1552,5.115,1553,5.115,1554,5.115,1555,5.115,1556,4.065,1557,5.115,1558,3.12]],["title/interceptors/LoaderInterceptor.html",[1559,4.316,1560,3.43]],["body/interceptors/LoaderInterceptor.html",[3,0.254,4,0.254,5,0.167,7,0.254,11,0.446,12,0.012,13,0.272,75,0.009,76,0.009,80,1.123,83,0.752,86,1.192,89,0.796,138,0.77,140,2.325,151,1.264,330,1.09,400,1.257,414,1.504,432,1.192,436,1.747,437,1.157,503,2.325,506,1.302,846,4.215,1225,5.212,1410,3.703,1560,5.592,1561,5.744,1562,5.744,1563,7.037,1564,7.037,1565,7.929,1566,6.666,1567,7.929,1568,5.744,1569,5.744,1570,7.037,1571,5.744,1572,5.033,1573,5.164,1574,5.744,1575,5.033,1576,5.744,1577,5.744,1578,5.744]],["title/injectables/LoaderService.html",[400,0.771,1573,3.167]],["body/injectables/LoaderService.html",[3,0.246,4,0.246,5,0.162,7,0.246,8,0.561,12,0.012,13,0.263,16,1.758,21,1.261,39,2.315,41,2.891,75,0.009,76,0.01,83,0.514,88,2.331,89,0.771,138,0.745,144,2.087,326,1.693,330,1.423,400,1.232,402,2.106,408,5.961,414,1.475,432,1.432,452,1.337,485,5.063,505,1.745,506,1.261,580,4.422,583,4.422,609,4.876,1573,5.063,1579,5.564,1580,8.061,1581,8.061,1582,5.564,1583,5.564,1584,5.564,1585,5.564,1586,8.061,1587,5.564,1588,5.564,1589,4.876]],["title/injectables/MediaSessionService.html",[400,0.771,1590,2.957]],["body/injectables/MediaSessionService.html",[3,0.19,4,0.19,5,0.125,7,0.19,10,1.637,11,0.552,12,0.012,13,0.203,16,1.996,29,4.53,75,0.008,76,0.008,80,1.389,83,0.539,86,0.891,89,0.595,116,1.032,138,0.576,147,1.457,168,1.626,326,1.307,329,2.775,330,1.409,400,1.042,401,3.083,402,1.626,405,6.086,406,5.212,414,1.246,432,1.474,436,2.161,437,1.431,453,2.944,505,1.347,506,1.322,524,3.765,578,2.07,818,2.626,823,2.626,828,3.558,866,2.491,871,4.269,1257,5.212,1590,3.997,1591,6.711,1592,6.086,1593,4.296,1594,5.833,1595,5.833,1596,5.833,1597,5.833,1598,4.296,1599,5.833,1600,6.622,1601,7.426,1602,6.224,1603,4.296,1604,5.833,1605,6.622,1606,4.296,1607,5.833,1608,4.296,1609,5.833,1610,4.296,1611,4.296,1612,5.111,1613,5.111,1614,4.296,1615,3.765,1616,4.296,1617,4.296,1618,4.296,1619,4.296,1620,3.765,1621,4.296,1622,4.296,1623,5.833,1624,5.111,1625,5.833,1626,5.833,1627,4.296,1628,4.296,1629,4.296,1630,4.296,1631,4.296,1632,4.296,1633,4.296,1634,4.296,1635,4.296,1636,4.296]],["title/injectables/MetadataService.html",[118,2.386,400,0.771]],["body/injectables/MetadataService.html",[3,0.092,4,0.092,5,0.144,7,0.092,8,0.276,11,0.497,12,0.012,13,0.099,19,0.299,21,1.451,39,1.003,41,0.875,43,1.588,55,1.274,75,0.004,76,0.004,77,0.765,79,2.488,80,0.967,81,1.104,82,1.286,83,0.656,85,3.396,86,0.433,88,1.798,89,0.289,90,1.878,91,2.531,92,1.155,94,1.53,116,1.538,118,1.878,138,0.28,144,2.248,147,1.734,151,1.67,167,0.846,168,0.791,182,2.493,195,0.846,209,2.279,235,2.47,237,2.905,261,1.652,281,2.504,326,0.636,330,1.347,363,1.523,400,0.607,402,0.791,414,0.726,432,1.026,436,1.504,437,0.996,452,1.538,470,2.976,499,1.969,500,1.155,503,0.846,505,0.655,506,1.451,507,1.211,509,1.431,541,1.274,578,1.205,585,1.533,645,2.423,676,2.976,691,3.016,710,3.539,714,3.379,720,1.72,724,3.961,725,3.556,726,1.431,727,0.977,728,1.431,729,1.347,737,2.923,739,3.758,741,0.977,742,2.373,743,1.347,744,1.347,745,1.347,746,1.347,747,1.347,748,2.087,749,2.087,753,2.404,792,1.016,797,1.347,798,1.347,799,1.155,800,1.104,802,3.991,803,1.274,807,1.431,808,1.431,817,2.359,818,0.941,823,0.941,828,2.072,920,1.533,948,1.155,1086,1.66,1341,2.699,1349,1.211,1413,3.222,1419,2.072,1427,2.072,1428,2.072,1556,1.66,1637,1.831,1638,4.292,1639,4.766,1640,4.292,1641,4.292,1642,4.292,1643,4.292,1644,4.292,1645,4.292,1646,3.397,1647,3.397,1648,3.397,1649,3.397,1650,2.089,1651,2.089,1652,1.831,1653,3.397,1654,3.397,1655,2.089,1656,3.411,1657,3.397,1658,2.089,1659,3.397,1660,2.089,1661,3.397,1662,2.089,1663,5.829,1664,2.089,1665,2.089,1666,4.332,1667,4.944,1668,2.089,1669,6.143,1670,3.397,1671,3.397,1672,2.976,1673,2.089,1674,3.397,1675,2.089,1676,3.397,1677,2.089,1678,3.397,1679,2.089,1680,2.089,1681,1.831,1682,2.089,1683,2.699,1684,2.089,1685,1.533,1686,2.089,1687,2.089,1688,2.976,1689,1.831,1690,2.089,1691,2.089,1692,2.089,1693,2.089,1694,2.089,1695,2.089,1696,2.089,1697,2.089,1698,2.089,1699,2.089,1700,2.089,1701,5.439,1702,2.089,1703,3.397,1704,2.089,1705,1.831,1706,1.831,1707,2.089,1708,2.089,1709,2.089,1710,2.089,1711,2.089,1712,2.089,1713,3.397,1714,2.089,1715,2.089,1716,3.397,1717,4.292,1718,2.089,1719,2.089,1720,3.397,1721,2.089,1722,4.944,1723,3.397,1724,3.397,1725,2.699,1726,2.976,1727,3.397,1728,4.292,1729,2.089,1730,2.089,1731,3.397,1732,4.292,1733,2.976,1734,2.089,1735,3.397,1736,2.089,1737,5.439,1738,2.089,1739,1.431,1740,2.089,1741,2.089,1742,2.089,1743,5.439,1744,2.493,1745,2.089,1746,2.089,1747,3.397,1748,2.089,1749,2.089,1750,2.089,1751,2.089,1752,2.089,1753,2.089,1754,2.089,1755,2.089,1756,2.089,1757,2.089,1758,2.089,1759,2.089,1760,2.089,1761,2.089,1762,2.089,1763,2.089,1764,2.089,1765,2.089,1766,2.089,1767,2.089,1768,2.089,1769,2.089,1770,2.089,1771,2.089,1772,1.831,1773,2.089,1774,4.944,1775,2.089,1776,1.831,1777,1.831,1778,2.089,1779,3.397,1780,4.292,1781,2.089,1782,2.089,1783,2.089,1784,4.292,1785,2.089,1786,2.089,1787,2.089,1788,3.397,1789,2.089,1790,2.089,1791,3.397,1792,2.089,1793,2.089,1794,2.089,1795,2.089,1796,3.397,1797,1.831,1798,2.089,1799,2.089,1800,2.089,1801,1.831,1802,2.089,1803,2.089,1804,2.089,1805,2.089,1806,2.089,1807,2.089,1808,2.089,1809,2.089,1810,2.089,1811,1.831,1812,2.089,1813,2.089,1814,2.089,1815,2.089,1816,2.089,1817,2.089,1818,2.089,1819,2.089,1820,2.089,1821,2.089,1822,2.089,1823,2.089,1824,2.089,1825,2.089]],["title/components/MetadataSettingsComponent.html",[84,0.95,374,1.689]],["body/components/MetadataSettingsComponent.html",[3,0.16,4,0.16,5,0.211,7,0.16,8,0.421,11,0.512,12,0.011,13,0.171,16,1.679,21,0.82,75,0.007,76,0.007,80,1.494,83,0.691,84,1.329,86,0.751,89,0.501,94,2.33,108,1.63,116,1.896,118,3.644,119,2.208,133,1.959,134,1.896,138,0.485,139,1.37,141,3.157,206,3,235,2.144,237,1.416,316,1.416,317,1.673,318,1.465,319,1.465,320,1.465,324,3.093,325,3.157,327,1.416,330,1.377,355,1.465,356,2.095,357,1.779,358,1.284,359,2.668,360,1.465,361,1.465,362,1.416,363,1.284,364,1.465,365,1.416,366,1.465,367,1.416,368,1.37,369,1.465,370,1.244,371,1.284,372,1.284,373,2.095,374,2.58,375,2.668,376,1.416,377,1.465,378,1.416,379,1.326,380,1.465,381,1.416,382,1.465,383,1.326,384,1.416,385,1.416,386,1.465,387,1.416,388,1.37,389,1.465,390,1.416,391,1.465,392,1.416,393,1.37,394,1.416,395,1.465,396,1.416,397,1.37,398,1.416,399,1.465,414,1.106,432,1.447,436,2.005,437,1.328,452,0.87,499,3,500,2,506,1.173,507,2.098,564,3.822,586,3.339,753,3.715,797,2.333,798,3.895,799,3.855,807,2.48,808,2.48,892,4.113,1193,3.798,1298,3.06,1433,3.337,1826,7.47,1827,6.545,1828,2.876,1829,4.801,1830,6.041,1831,3.798,1832,6.593,1833,5.175,1834,5.175,1835,5.175,1836,5.175,1837,3.619,1838,5.175,1839,8.135,1840,3.619,1841,5.175,1842,3.619,1843,5.175,1844,3.619,1845,5.175,1846,3.619,1847,3.619,1848,3.619,1849,3.619,1850,3.171,1851,2.876,1852,3.619,1853,3.619,1854,6.593,1855,3.619,1856,3.619,1857,3.619,1858,3.619,1859,3.619,1860,3.619,1861,3.619,1862,5.175,1863,3.798,1864,6.593,1865,5.175]],["title/injectables/MusicbrainzService.html",[400,0.771,1683,3.43]],["body/injectables/MusicbrainzService.html",[3,0.181,4,0.181,5,0.119,7,0.181,11,0.317,12,0.012,13,0.193,19,0.924,39,1.206,75,0.007,76,0.007,77,1.497,80,0.799,82,1.547,83,0.675,89,0.566,138,0.547,144,1.568,147,1.733,151,1.798,168,2.133,194,2.635,199,2.8,206,3.267,209,3.3,220,2.999,221,2.8,235,2.589,237,2.855,265,3.248,326,1.243,330,0.775,363,2.29,400,1.007,402,1.547,414,1.204,432,0.848,436,1.243,437,0.823,505,1.281,506,1.576,528,2.8,578,2.29,710,2.259,719,1.712,737,2.281,740,3.02,741,1.911,748,1.987,749,1.987,751,2.16,753,1.987,817,2.815,818,3.132,823,2.905,840,2.8,1055,3.248,1286,1.547,1349,2.369,1407,3.438,1426,3.634,1427,2.493,1428,3.438,1431,3.634,1432,4.243,1438,2.635,1453,2.635,1468,4.939,1683,4.479,1863,4.136,1866,4.087,1867,4.087,1868,4.087,1869,3.581,1870,3.581,1871,5.636,1872,5.636,1873,4.087,1874,4.087,1875,3.248,1876,4.087,1877,4.087,1878,4.087,1879,4.087,1880,4.087,1881,5.636,1882,4.087,1883,4.087,1884,4.087,1885,4.087,1886,4.087,1887,4.087,1888,4.087,1889,4.087,1890,5.636,1891,4.087,1892,4.087,1893,4.087,1894,4.087,1895,4.087,1896,4.087,1897,4.087,1898,4.087,1899,5.636,1900,4.087,1901,4.087,1902,5.636,1903,6.955,1904,4.087,1905,4.087,1906,4.087,1907,4.087,1908,4.087,1909,4.087,1910,5.636,1911,4.087,1912,5.636,1913,4.087,1914,5.636,1915,3.581,1916,4.087,1917,3.581,1918,4.939,1919,4.087]],["title/injectables/NativeBrowserFileLoaderService.html",[400,0.771,806,3.43]],["body/injectables/NativeBrowserFileLoaderService.html",[0,0.169,3,0.181,4,0.181,5,0.237,7,0.181,8,0.459,10,0.877,12,0.012,13,0.194,21,0.93,41,1.72,75,0.007,76,0.007,83,0.676,86,0.852,88,1.72,89,0.569,94,1.848,138,0.55,140,1.661,144,1.799,147,1.662,151,1.703,158,3.645,235,2.798,237,2.955,261,1.996,326,1.249,329,2.709,330,1.322,336,3.701,400,1.01,402,1.554,414,1.208,432,1.173,452,0.986,454,2.863,503,1.661,505,1.287,506,0.93,541,2.504,578,2.006,645,2.14,691,2.504,751,2.988,790,3.262,791,4.458,792,3.554,793,5.808,794,3.012,795,5.176,796,5.139,797,2.646,798,2.646,799,2.269,800,2.169,801,2.504,802,3.852,803,2.504,804,3.125,805,2.646,806,4.493,807,2.812,808,2.812,809,4.745,810,3.596,811,3.596,812,5.666,813,3.596,814,4.953,815,3.596,816,5.113,817,2.958,818,1.848,819,3.596,820,3.596,821,3.596,822,3.596,823,1.848,824,3.596,825,5.113,826,3.596,827,3.596,828,3.449,829,3.262,830,3.596,831,3.596,832,3.596,833,3.262,834,3.262,835,3.596,836,3.596,837,3.596,838,3.262,839,3.596,840,2.812,841,3.262,842,3.596,843,3.596,844,3.596,845,3.262,846,3.012,847,5.666,848,4.493,849,3.262,850,3.596,851,3.596,852,3.596,1920,5.653,1921,4.104,1922,4.104]],["title/interfaces/OscVisualizerOptions.html",[0,0.177,314,2.186]],["body/interfaces/OscVisualizerOptions.html",[0,0.334,2,1.04,3,0.209,4,0.209,5,0.137,7,0.209,8,0.505,10,1.855,11,0.595,12,0.012,13,0.396,18,3.185,19,1.057,22,1.788,25,2.91,75,0.008,76,0.008,270,2.611,271,2.611,272,3.588,273,2.739,274,2.739,275,2.739,276,2.497,277,2.393,278,2.497,279,2.497,280,2.497,281,2.393,282,2.497,283,2.497,284,2.497,285,2.611,286,2.611,287,2.393,288,3.285,289,3.148,290,3.148,291,3.148,292,2.393,293,3.883,294,2.497,295,2.698,296,2.698,297,3.148,298,2.497,299,2.393,300,2.497,301,2.611,302,2.739,303,2.393,304,3.518,305,2.497,306,2.297,307,4.079,308,2.906,309,2.497,310,3.148,311,3.588,312,3.827,313,2.393,314,3.518,315,3.959]],["title/interfaces/OsciloscopeConfig.html",[0,0.177,292,2.186]],["body/interfaces/OsciloscopeConfig.html",[0,0.336,2,1.066,3,0.214,4,0.214,5,0.141,7,0.214,8,0.513,10,1.859,11,0.579,12,0.012,13,0.398,18,2.846,19,1.067,22,1.834,25,2.647,75,0.008,76,0.008,270,2.678,271,2.678,272,3.623,273,2.809,274,2.809,275,2.809,276,2.56,277,2.454,278,2.56,279,2.56,280,2.56,281,2.454,282,2.56,283,2.56,284,2.56,285,2.678,286,2.678,287,2.454,288,3.339,289,3.2,290,3.2,291,3.2,292,3.2,293,3.914,294,2.56,295,2.743,296,2.743,297,3.2,298,2.56,299,2.454,300,2.56,301,2.678,302,2.809,303,2.454,304,3.561,305,2.56,306,2.356,307,3.886,308,2.954,309,2.56,310,3.2,311,3.623,312,3.623,313,2.454,314,3.2,315,3.623]],["title/components/PlayerComponent.html",[84,0.95,376,1.689]],["body/components/PlayerComponent.html",[3,0.183,4,0.183,5,0.189,7,0.183,8,0.463,12,0.012,13,0.196,21,1.474,75,0.007,76,0.007,80,1.369,83,0.769,84,1.432,86,0.861,87,4.458,89,0.575,102,2.845,103,3.701,104,2.533,106,2.103,108,1.87,116,1.369,133,2.157,134,2.088,136,2.665,138,0.556,139,1.572,140,2.306,142,3.303,225,2.845,316,1.625,317,1.842,318,1.681,319,1.681,320,1.681,322,3.476,323,3.476,324,3.14,325,3.213,327,1.625,330,1.081,332,2.533,355,1.681,356,2.306,357,1.959,358,1.473,359,2.834,360,1.681,361,1.681,362,2.74,363,2.022,364,1.681,365,1.625,366,1.681,367,1.625,368,1.572,369,1.681,370,1.428,371,1.473,372,1.473,373,2.306,374,1.625,375,2.834,376,2.74,377,1.681,378,1.625,379,2.384,380,1.681,381,2.74,382,1.681,383,1.521,384,1.625,385,1.625,386,1.681,387,1.625,388,1.572,389,1.681,390,1.625,391,1.681,392,1.625,393,1.572,394,1.625,395,1.681,396,1.625,397,1.572,398,1.625,399,1.681,401,3.701,452,1.369,506,1.291,754,3.638,792,2.019,804,3.15,805,2.677,855,5.17,866,3.303,874,2.533,875,3.047,948,2.295,1297,3.969,1298,3.295,1923,4.152,1924,5.701,1925,5.17,1926,5.17,1927,5.698,1928,5.698,1929,4.152,1930,4.152,1931,4.182,1932,3.638,1933,3.047,1934,3.3,1935,4.152,1936,4.152,1937,3.638,1938,3.3,1939,4.152]],["title/injectables/PlayerService.html",[103,2.281,400,0.771]],["body/injectables/PlayerService.html",[3,0.084,4,0.084,5,0.172,7,0.084,8,0.256,10,1.447,11,0.513,12,0.012,13,0.09,16,1.682,19,0.578,21,1.452,39,1.824,41,1.962,43,0.893,75,0.004,76,0.004,77,0.7,80,1.253,83,0.626,85,3.267,86,0.396,88,1.69,89,0.265,91,3.409,92,1.056,94,0.86,103,1.668,116,0.459,118,1.744,119,1.165,138,0.256,141,1.165,144,2.184,147,1.707,151,1.668,158,3.02,160,4.121,167,0.773,195,0.773,199,2.162,209,2.34,230,1.518,235,2.801,236,1.518,237,2.418,238,1.518,261,1.535,295,2.425,296,2.425,303,2.372,326,0.581,329,1.69,330,1.512,337,1.925,338,1.309,347,1.309,400,0.564,401,1.668,402,0.723,405,3.205,414,0.674,419,1.673,432,1.559,436,1.949,437,1.363,445,2.229,450,3.534,452,1.693,454,2.372,499,1.829,500,1.056,505,0.599,506,1.567,507,1.107,541,1.165,548,1.673,578,1.431,588,1.309,645,1.526,664,4.104,715,2.589,725,1.925,729,2.035,734,1.231,735,1.165,792,1.535,801,1.165,802,3.087,803,1.165,804,1.744,805,1.231,817,1.632,818,0.86,823,0.86,828,1.165,833,1.518,866,1.107,871,2.035,874,1.165,948,1.744,1053,1.673,1320,1.673,1375,1.673,1440,1.231,1498,2.765,1532,3.437,1556,1.518,1566,4.104,1590,2.162,1592,1.518,1602,1.673,1620,2.765,1639,1.673,1652,2.765,1938,1.518,1940,1.673,1941,4.033,1942,4.033,1943,4.033,1944,4.033,1945,4.033,1946,3.156,1947,4.033,1948,3.156,1949,3.156,1950,4.033,1951,3.156,1952,2.765,1953,2.765,1954,4.684,1955,4.033,1956,3.156,1957,3.156,1958,4.104,1959,4.104,1960,1.91,1961,1.91,1962,1.91,1963,3.156,1964,1.91,1965,3.534,1966,1.91,1967,1.91,1968,1.91,1969,1.91,1970,1.91,1971,3.156,1972,1.91,1973,1.91,1974,3.156,1975,1.91,1976,3.156,1977,1.91,1978,4.684,1979,3.156,1980,1.91,1981,1.91,1982,1.91,1983,1.91,1984,1.91,1985,3.156,1986,1.91,1987,1.91,1988,1.91,1989,1.91,1990,3.156,1991,3.156,1992,3.156,1993,1.91,1994,1.91,1995,1.91,1996,5.585,1997,4.684,1998,3.156,1999,3.156,2000,1.91,2001,3.156,2002,1.91,2003,3.156,2004,1.91,2005,1.91,2006,3.156,2007,1.91,2008,1.518,2009,2.162,2010,1.91,2011,1.91,2012,1.91,2013,1.518,2014,1.401,2015,1.401,2016,1.91,2017,1.91,2018,1.518,2019,1.518,2020,3.156,2021,1.91,2022,3.156,2023,1.91,2024,1.91,2025,3.156,2026,1.91,2027,3.156,2028,1.91,2029,1.91,2030,1.91,2031,1.91,2032,1.91,2033,1.91,2034,1.91,2035,1.91,2036,1.91,2037,3.156,2038,1.91,2039,3.156,2040,1.91,2041,1.91,2042,1.91,2043,3.156,2044,1.91,2045,1.91,2046,1.91,2047,3.156,2048,1.673,2049,1.91,2050,1.91,2051,1.91,2052,1.91,2053,1.91,2054,1.91,2055,1.91,2056,1.673,2057,1.91,2058,4.033,2059,1.91,2060,1.91,2061,1.91,2062,1.91,2063,1.91,2064,1.91,2065,1.91,2066,1.91,2067,1.91,2068,1.91,2069,1.91,2070,1.91,2071,1.91,2072,1.91,2073,1.91,2074,1.91,2075,1.91,2076,1.91,2077,1.91,2078,1.91,2079,1.91,2080,1.91,2081,1.91,2082,1.91,2083,1.91,2084,1.91,2085,1.91,2086,1.91,2087,1.91,2088,1.91,2089,1.91,2090,1.91,2091,1.91,2092,1.673,2093,3.156,2094,3.156,2095,2.765,2096,1.91,2097,1.91,2098,1.91,2099,4.033,2100,1.91,2101,1.91,2102,1.91,2103,1.91,2104,1.91,2105,1.91,2106,3.156,2107,1.91,2108,3.156,2109,1.91,2110,1.91,2111,1.91,2112,1.673,2113,1.91,2114,4.684,2115,1.91,2116,1.91,2117,1.91,2118,1.91,2119,1.91,2120,1.91,2121,1.91,2122,1.91,2123,3.156,2124,1.91,2125,1.91,2126,1.91,2127,3.156,2128,1.165,2129,1.91,2130,2.338,2131,1.91,2132,2.763,2133,1.91,2134,1.91,2135,1.91,2136,1.91,2137,1.91,2138,1.673,2139,3.534,2140,3.205,2141,1.91,2142,1.91,2143,1.673,2144,1.91,2145,1.91,2146,1.91,2147,1.91,2148,1.91]],["title/components/PlayerToolbarComponent.html",[84,0.95,378,1.689]],["body/components/PlayerToolbarComponent.html",[3,0.105,4,0.105,5,0.136,7,0.105,8,0.306,10,1.663,11,0.502,12,0.012,13,0.112,16,1.803,19,0.538,21,1.314,34,1.446,35,3.764,37,1.375,39,1.379,70,1.446,75,0.005,76,0.005,80,1.412,83,0.713,84,1.028,85,2.583,86,0.492,87,3.202,89,0.328,98,3.713,101,3.429,102,1.625,103,2.811,104,1.446,105,3.713,106,1.201,107,3.713,108,1.068,116,1.123,118,2.94,119,1.446,133,1.423,134,1.378,136,1.758,138,0.318,139,0.897,140,1.522,141,2.294,142,2.18,144,1.3,151,0.522,225,1.625,235,1.887,277,1.201,316,0.928,317,1.215,318,0.96,319,0.96,320,0.96,322,2.294,323,2.294,324,2.914,325,2.891,327,0.928,330,1.477,332,1.446,355,0.96,356,1.522,357,1.293,358,0.841,359,2.152,360,0.96,361,0.96,362,0.928,363,0.841,364,0.96,365,0.928,366,0.96,367,0.928,368,0.897,369,0.96,370,0.815,371,0.841,372,0.841,373,1.522,374,0.928,375,2.152,376,0.928,377,0.96,378,2.081,379,2.369,380,0.96,381,0.928,382,0.96,383,0.869,384,0.928,385,0.928,386,0.96,387,0.928,388,0.897,389,0.96,390,0.928,391,0.96,392,0.928,393,0.897,394,0.928,395,0.96,396,0.928,397,0.897,398,0.928,399,0.96,401,2.811,413,2.078,414,0.804,432,1.524,436,1.967,437,1.391,445,2.078,452,1.899,506,1.059,645,1.423,735,2.294,757,3.429,772,2.078,774,2.988,782,3.644,792,1.153,804,2.94,805,1.529,866,2.18,874,1.446,875,1.74,900,2.078,948,1.311,975,3.013,1021,1.529,1098,2.424,1165,1.446,1217,1.74,1218,1.625,1219,1.74,1229,2.294,1801,3.295,1926,3.713,1933,1.74,1934,1.884,1938,2.988,1952,3.295,1953,3.295,1958,4.094,1959,4.094,2128,2.294,2130,3.577,2149,7.846,2150,6.875,2151,2.371,2152,3.76,2153,4.673,2154,4.673,2155,4.673,2156,4.673,2157,3.76,2158,3.76,2159,4.673,2160,3.76,2161,3.76,2162,3.76,2163,4.673,2164,3.76,2165,3.76,2166,4.673,2167,4.673,2168,2.371,2169,2.371,2170,2.371,2171,2.371,2172,2.371,2173,2.371,2174,2.371,2175,3.76,2176,2.371,2177,3.76,2178,2.371,2179,2.371,2180,2.371,2181,2.371,2182,2.371,2183,2.371,2184,2.371,2185,2.371,2186,2.371,2187,2.371,2188,2.371,2189,2.371,2190,2.371,2191,3.76,2192,2.371,2193,1.884,2194,2.078,2195,2.078,2196,2.078,2197,2.371,2198,2.078,2199,2.371,2200,2.371,2201,2.371,2202,2.371,2203,2.371,2204,2.371,2205,3.76,2206,3.76,2207,2.371,2208,2.371,2209,2.371,2210,2.371,2211,2.371,2212,2.371,2213,2.371,2214,2.371,2215,3.76,2216,2.371,2217,3.76,2218,4.673,2219,2.371,2220,2.371,2221,2.371,2222,2.371,2223,2.371,2224,2.371,2225,2.371,2226,3.76,2227,2.371,2228,3.76,2229,2.371,2230,2.371,2231,2.371,2232,2.371,2233,2.371,2234,2.371,2235,2.371,2236,2.371,2237,2.371,2238,2.371,2239,2.371,2240,2.371,2241,2.371,2242,2.371,2243,2.371,2244,2.371,2245,2.371,2246,2.371,2247,2.371,2248,2.371,2249,2.371,2250,2.371,2251,2.371,2252,2.371,2253,2.371,2254,5.318,2255,2.371,2256,3.295,2257,5.318,2258,3.76,2259,3.76,2260,3.76,2261,3.76,2262,3.76,2263,3.76]],["title/components/PlaylistComponent.html",[84,0.95,381,1.689]],["body/components/PlaylistComponent.html",[3,0.098,4,0.098,5,0.103,7,0.157,8,0.29,10,0.955,11,0.435,12,0.012,13,0.105,16,1.138,19,0.51,21,1.16,39,1.052,41,1.493,43,2.089,45,1.225,75,0.005,76,0.005,80,1.321,83,0.703,84,0.983,85,2.469,86,0.46,88,2.509,89,0.307,91,3.389,92,1.225,96,2.88,97,1.429,101,1.626,102,1.518,103,2.705,104,1.352,106,1.122,108,0.998,109,3.55,110,3.55,111,3.55,112,1.761,113,3.55,114,1.626,115,1.122,116,0.856,120,3.55,121,1.626,129,1.626,130,1.626,133,1.348,134,1.305,136,1.666,138,0.297,139,0.839,142,2.065,144,1.751,147,1.741,151,1.44,206,1.285,235,1.585,268,2.831,316,0.867,317,1.151,318,0.897,319,0.897,320,0.897,322,2.173,323,2.173,324,2.881,325,2.907,327,0.867,329,1.872,330,1.315,332,1.352,355,0.897,356,1.442,357,1.225,358,0.786,359,2.071,360,0.897,361,0.897,362,0.867,363,0.786,364,0.897,365,0.867,366,0.897,367,0.867,368,0.839,369,0.897,370,0.762,371,0.786,372,0.786,373,1.442,374,0.867,375,2.071,376,0.867,377,0.897,378,0.867,379,0.812,380,0.897,381,2.002,382,0.897,383,0.812,384,0.867,385,0.867,386,0.897,387,0.867,388,0.839,389,0.897,390,0.867,391,0.897,392,0.867,393,0.839,394,0.867,395,0.897,396,0.867,397,1.937,398,0.867,399,0.897,401,2.705,411,4.484,414,0.761,432,1.163,436,1.706,437,1.129,452,1.23,453,3.061,485,1.626,506,1.16,523,1.761,540,1.942,586,2.84,702,1.942,773,4.067,817,1.442,834,2.831,848,2.831,866,2.065,871,3.299,873,1.761,874,1.352,877,3.122,890,1.626,920,1.626,947,1.626,976,1.518,1022,1.942,1023,1.942,1029,3.122,1038,3.55,1083,3.122,1084,3.122,1297,2.725,1298,2.263,1305,1.761,1370,3.914,1505,3.122,1532,5.087,1612,1.942,1613,3.914,1615,1.942,1705,1.942,1776,1.942,1777,1.942,1926,3.55,1965,6.594,2008,1.761,2013,1.761,2014,1.626,2015,1.626,2018,1.761,2019,1.761,2048,1.942,2092,3.122,2112,3.122,2264,2.216,2265,3.914,2266,3.914,2267,4.467,2268,3.563,2269,3.563,2270,4.467,2271,4.467,2272,3.563,2273,3.563,2274,3.563,2275,2.216,2276,5.117,2277,2.216,2278,5.117,2279,2.216,2280,3.563,2281,4.467,2282,2.216,2283,3.563,2284,2.216,2285,2.216,2286,2.216,2287,3.563,2288,2.216,2289,2.216,2290,3.563,2291,2.216,2292,2.216,2293,1.761,2294,2.216,2295,2.216,2296,2.216,2297,2.216,2298,5.988,2299,2.216,2300,3.914,2301,6.755,2302,4.467,2303,2.216,2304,2.216,2305,2.216,2306,3.563,2307,2.216,2308,3.563,2309,2.216,2310,2.216,2311,3.563,2312,2.216,2313,2.216,2314,1.942,2315,4.467,2316,2.216,2317,2.216,2318,2.216,2319,2.216,2320,2.216,2321,1.942,2322,3.563,2323,2.216,2324,1.352,2325,2.216,2326,2.216,2327,2.216,2328,2.216,2329,4.467,2330,2.216,2331,5.117,2332,2.216,2333,2.216,2334,2.216,2335,3.563,2336,2.216,2337,2.216,2338,2.216,2339,3.563,2340,3.563,2341,4.467,2342,2.216,2343,2.216,2344,3.563,2345,2.216,2346,2.216,2347,3.563,2348,2.216,2349,4.467,2350,2.216,2351,2.216,2352,3.563,2353,3.563,2354,2.216,2355,4.467,2356,2.216,2357,1.942,2358,3.563,2359,2.216,2360,2.216,2361,3.563,2362,2.216,2363,2.216,2364,3.563,2365,2.216,2366,2.216,2367,1.942,2368,2.216,2369,2.216,2370,2.216,2371,2.216,2372,2.216,2373,2.216,2374,3.563,2375,2.216,2376,2.216,2377,2.216,2378,2.216,2379,2.216,2380,2.216,2381,2.216,2382,2.216,2383,2.216,2384,3.563,2385,3.563,2386,5.117,2387,3.563,2388,3.563,2389,3.563]],["title/components/PromptDialogComponent.html",[84,0.95,383,1.581]],["body/components/PromptDialogComponent.html",[0,0.176,3,0.189,4,0.189,5,0.169,7,0.189,8,0.473,12,0.011,13,0.275,16,1.483,19,0.947,21,1.319,75,0.008,76,0.008,80,1.387,83,0.611,84,1.455,86,0.889,89,0.593,108,1.929,116,1.399,133,2.203,134,2.133,138,0.574,139,1.621,195,1.734,316,1.676,317,1.881,318,1.734,319,1.734,320,1.734,324,3.15,325,3.224,327,1.676,330,1.346,355,1.734,356,2.356,357,2.001,358,1.52,359,2.871,360,1.734,361,1.734,362,1.676,363,1.52,364,1.734,365,1.676,366,1.734,367,1.676,368,1.621,369,1.734,370,1.473,371,1.52,372,1.52,373,2.356,374,1.676,375,2.871,376,1.676,377,1.734,378,1.676,379,1.569,380,1.734,381,1.676,382,1.734,383,2.599,384,2.903,385,1.676,386,1.734,387,1.676,388,1.621,389,1.734,390,1.676,391,1.734,392,1.676,393,1.621,394,1.676,395,1.734,396,1.676,397,1.621,398,1.676,399,1.734,414,1.244,432,1.208,452,1.399,588,5.243,969,5.444,1222,2.613,1223,2.483,1232,3.374,1238,4.033,1286,2.503,1293,3.143,1294,3.143,1295,4.852,1298,3.349,1299,4.271,1301,4.271,1302,4.271,1308,3.753,1413,2.368,2390,6.5,2391,6.5,2392,6.216,2393,4.283,2394,4.283,2395,4.283,2396,3.143,2397,3.404,2398,3.753,2399,3.753,2400,5.821,2401,5.821,2402,5.821]],["title/interfaces/PromptDialogData.html",[0,0.177,2396,3.167]],["body/interfaces/PromptDialogData.html",[0,0.231,2,1.237,3,0.248,4,0.248,5,0.163,7,0.248,8,0.564,11,0.585,12,0.012,13,0.329,19,1.217,75,0.009,76,0.009,83,0.696,84,1.528,86,1.166,89,0.779,108,2.53,133,2.127,134,2.059,138,0.753,195,3.185,324,2.059,325,2.127,383,2.059,384,2.716,588,3.85,969,4.124,1222,3.428,1223,3.258,1232,3.258,1238,3.428,1286,2.127,1293,4.124,1294,4.124,1295,5.094,1298,3.516,1299,4.124,1301,4.124,1302,4.124,1413,4.349,2390,4.924,2391,4.924,2392,4.924,2396,5.094,2397,6.253,2398,4.924,2399,4.924]],["title/interfaces/RemoteCoverArtUrls.html",[0,0.177,82,1.634]],["body/interfaces/RemoteCoverArtUrls.html",[0,0.334,2,1.257,3,0.252,4,0.252,5,0.22,7,0.252,8,0.57,11,0.544,12,0.011,13,0.384,19,1.234,75,0.009,76,0.009,82,2.654,83,0.528,578,2.026,714,3.31,719,2.392,720,2.892,736,5.399,737,2.311,738,3.912,739,3.681,740,3.044,741,2.67,742,3.156,743,3.681,744,3.681,745,3.681,746,3.681,747,3.681,748,3.847,749,3.847,750,3.483,751,3.705,752,3.483,753,2.776]],["title/components/SettingsComponent.html",[84,0.95,385,1.689]],["body/components/SettingsComponent.html",[3,0.216,4,0.216,5,0.184,12,0.011,13,0.231,21,1.107,75,0.008,76,0.008,80,1.462,83,0.691,84,1.554,89,0.677,116,1.696,133,2.405,134,2.328,136,2.971,138,0.655,139,1.85,316,1.912,317,2.053,318,1.978,319,1.978,320,1.978,324,3.19,325,3.272,327,1.912,355,1.978,356,2.571,357,2.185,358,1.734,359,3.026,360,1.978,361,1.978,362,1.912,363,1.734,364,1.978,365,1.912,366,1.978,367,1.912,368,1.85,369,1.978,370,1.68,371,1.734,372,1.734,373,2.571,374,2.925,375,3.026,376,1.912,377,1.978,378,1.912,379,1.79,380,1.978,381,1.912,382,1.978,383,1.79,384,1.912,385,2.925,386,1.978,387,1.912,388,1.85,389,1.978,390,2.925,391,2.571,392,2.925,393,2.405,394,1.912,395,1.978,396,1.912,397,1.85,398,1.912,399,1.978,564,3.683,1827,4.282,1831,4.662,2403,4.886,2404,6.353,2405,4.282,2406,7.06,2407,4.282]],["title/components/ShellComponent.html",[84,0.95,327,1.689]],["body/components/ShellComponent.html",[3,0.127,4,0.127,5,0.208,7,0.127,8,0.355,11,0.41,12,0.012,13,0.136,16,0.734,19,0.757,21,1.621,75,0.006,76,0.006,80,1.358,83,0.758,84,1.163,86,0.597,89,0.399,96,3.408,97,1.856,103,3.119,106,1.458,108,1.297,115,1.458,116,1.051,118,3.263,119,1.757,129,3.209,130,2.113,133,1.655,134,1.602,136,2.045,138,0.386,139,1.09,141,2.667,142,2.535,144,2.038,147,1.163,151,0.962,177,1.592,235,2.371,237,1.127,261,2.126,316,1.127,317,1.413,318,1.165,319,1.165,320,1.165,324,3.003,325,3.05,327,2.309,330,1.418,355,1.165,356,1.77,357,1.503,358,1.022,359,2.389,360,1.165,361,1.165,362,1.127,363,1.022,364,1.165,365,1.127,366,1.165,367,2.309,368,1.655,369,1.165,370,0.99,371,1.022,372,1.022,373,1.77,374,1.127,375,2.389,376,1.127,377,1.165,378,2.309,379,1.937,380,1.165,381,1.127,382,1.165,383,1.055,384,1.127,385,1.127,386,1.165,387,1.127,388,1.09,389,1.165,390,1.127,391,1.165,392,1.127,393,1.09,394,1.127,395,1.165,396,1.127,397,1.09,398,1.127,399,1.165,414,0.934,432,1.097,436,1.608,437,1.065,445,2.417,452,1.719,454,2.989,503,1.165,506,1.198,564,2.535,691,3.225,723,3.225,773,3.475,774,3.475,775,3.831,776,3.831,777,5.172,792,1.4,801,3.225,802,2.922,803,1.757,841,2.288,854,3.475,873,2.288,948,1.592,970,2.523,976,1.973,1225,2.996,1297,3.225,1298,2.677,1558,2.667,1572,2.523,1573,4.331,1575,3.831,1850,2.523,1924,4.632,1931,4.331,1932,2.523,1934,2.288,1937,3.831,2014,2.113,2015,2.113,2056,2.523,2150,2.523,2266,4.632,2408,2.88,2409,4.372,2410,5.286,2411,5.286,2412,5.286,2413,4.372,2414,4.372,2415,5.286,2416,6.682,2417,5.286,2418,4.372,2419,4.372,2420,4.372,2421,4.372,2422,6.347,2423,2.88,2424,2.523,2425,4.372,2426,2.88,2427,4.372,2428,2.88,2429,2.88,2430,4.372,2431,4.372,2432,2.88,2433,2.88,2434,2.88,2435,2.88,2436,4.372,2437,2.88,2438,2.88,2439,4.372,2440,2.88,2441,2.88,2442,2.88,2443,2.88,2444,4.372,2445,2.523,2446,4.372,2447,2.88,2448,2.88,2449,2.288,2450,2.88,2451,2.88,2452,2.88,2453,2.88,2454,2.88,2455,2.88,2456,2.88,2457,2.88,2458,2.88,2459,2.88,2460,2.88,2461,2.88,2462,2.88,2463,2.88,2464,2.88,2465,2.88,2466,2.88,2467,2.88,2468,2.88,2469,5.902,2470,4.372,2471,4.372]],["title/components/SlidePanelComponent.html",[84,0.95,387,1.689]],["body/components/SlidePanelComponent.html",[3,0.123,4,0.123,5,0.124,7,0.123,8,0.346,11,0.563,12,0.012,13,0.132,16,1.318,19,1.013,21,1.644,22,1.958,75,0.006,76,0.006,80,1.133,83,0.578,84,1.139,89,0.385,106,1.409,108,1.252,116,1.023,133,1.612,134,1.56,136,1.991,138,0.373,139,1.053,140,1.723,144,1.439,316,1.088,317,1.376,318,1.126,319,1.126,320,1.126,324,2.988,325,3.033,327,1.088,330,1.483,355,1.126,356,1.723,357,1.464,358,0.987,359,2.346,360,1.126,361,1.126,362,1.088,363,0.987,364,1.126,365,1.088,366,1.126,367,1.088,368,1.053,369,1.126,370,0.956,371,0.987,372,0.987,373,1.723,374,1.088,375,2.346,376,1.088,377,1.126,378,1.088,379,1.019,380,1.126,381,1.088,382,1.126,383,1.019,384,1.088,385,1.088,386,1.126,387,2.268,388,2.986,389,1.126,390,1.088,391,1.126,392,1.088,393,1.053,394,1.088,395,1.126,396,1.088,397,1.053,398,1.088,399,1.126,414,0.91,432,0.883,452,1.743,454,3.584,541,4.185,645,2.802,646,2.041,888,3.545,890,3.797,944,4.607,969,5.789,992,5.526,1297,3.156,1298,2.62,1925,4.112,1933,2.041,2095,2.437,2128,2.597,2130,3.361,2132,4.516,2265,4.533,2293,2.21,2300,4.533,2367,4.533,2472,6.912,2473,7.889,2474,2.781,2475,5.174,2476,5.432,2477,4.258,2478,4.258,2479,5.174,2480,5.174,2481,5.797,2482,5.797,2483,3.731,2484,5.174,2485,6.249,2486,6.86,2487,5.174,2488,4.258,2489,4.258,2490,4.258,2491,2.781,2492,5.797,2493,2.781,2494,2.781,2495,6.592,2496,2.781,2497,2.781,2498,2.781,2499,2.781,2500,4.258,2501,4.258,2502,2.781,2503,2.781,2504,2.781,2505,4.258,2506,4.258,2507,4.258,2508,4.258,2509,6.592,2510,6.86,2511,7.076,2512,2.781,2513,2.437,2514,2.781,2515,2.781,2516,6.592,2517,6.249,2518,6.592,2519,2.781,2520,2.781,2521,2.781,2522,2.781,2523,2.781,2524,2.781,2525,2.781,2526,2.781,2527,2.781,2528,2.781,2529,2.781,2530,2.781,2531,5.174,2532,5.797,2533,5.797]],["title/components/StorageSettingsComponent.html",[84,0.95,390,1.689]],["body/components/StorageSettingsComponent.html",[3,0.205,4,0.205,5,0.178,7,0.205,12,0.011,13,0.22,16,1.184,75,0.008,76,0.008,80,1.433,83,0.678,84,1.516,86,0.964,89,0.644,94,2.093,108,2.093,116,1.477,133,2.327,134,2.252,138,0.623,139,1.759,316,1.818,317,1.987,318,1.881,319,1.881,320,1.881,324,3.175,325,3.254,327,1.818,330,0.882,355,1.881,356,2.488,357,2.114,358,1.649,359,2.967,360,1.881,361,1.881,362,1.818,363,1.649,364,1.881,365,1.818,366,1.881,367,1.818,368,1.759,369,1.881,370,1.598,371,1.649,372,1.649,373,2.488,374,1.818,375,2.967,376,1.818,377,1.881,378,1.818,379,1.703,380,1.881,381,1.818,382,1.881,383,1.703,384,1.818,385,1.818,386,1.881,387,1.818,388,1.759,389,1.881,390,2.869,391,3.234,392,1.818,393,1.759,394,1.818,395,1.881,396,1.818,397,1.759,398,1.818,399,1.881,414,1.314,432,0.964,499,2.694,500,2.569,506,1.053,507,2.694,564,4.542,565,3.693,892,4.886,1193,4.511,1298,3.489,1725,4.886,1828,3.693,1829,5.475,1831,4.511,1851,3.693,2405,5.387,2534,6.148,2535,7.331,2536,4.072,2537,4.647]],["title/interfaces/TagsWorkerRequest.html",[0,0.177,750,2.633]],["body/interfaces/TagsWorkerRequest.html",[0,0.334,2,1.257,3,0.252,4,0.252,5,0.245,7,0.252,8,0.57,11,0.544,12,0.011,13,0.384,19,1.22,75,0.009,76,0.009,82,2.161,83,0.528,578,2.026,714,3.31,719,2.392,720,2.892,736,5.399,737,2.311,738,3.912,739,3.681,740,3.044,741,2.67,742,3.156,743,3.681,744,3.681,745,3.681,746,3.681,747,3.681,748,2.776,749,2.776,750,4.277,751,4.292,752,3.483,753,2.776]],["title/interfaces/TagsWorkerResponse.html",[0,0.177,752,2.633]],["body/interfaces/TagsWorkerResponse.html",[0,0.331,2,1.229,3,0.247,4,0.247,5,0.218,7,0.247,8,0.562,11,0.583,12,0.011,13,0.382,19,1.23,75,0.009,76,0.009,82,2.115,83,0.516,437,1.582,578,2.786,714,3.238,719,2.341,720,2.829,736,5.374,737,2.261,738,3.828,739,3.602,740,3.409,741,2.612,742,3.088,743,3.602,744,3.602,745,3.602,746,3.602,747,3.602,748,2.716,749,2.716,750,3.408,751,4.265,752,4.22,753,3.818]],["title/injectables/ThemeService.html",[337,2.633,400,0.771]],["body/injectables/ThemeService.html",[3,0.159,4,0.159,5,0.105,7,0.159,8,0.419,11,0.511,12,0.012,13,0.17,16,1.535,19,0.942,21,1.641,22,2.28,39,1.063,59,2.087,75,0.007,76,0.007,80,1.458,83,0.69,86,0.747,88,1.509,89,0.499,94,1.621,138,0.482,144,1.676,147,1.448,151,1.135,168,1.363,326,1.095,330,1.447,335,2.197,336,1.824,337,3.146,393,2.49,400,0.921,402,1.363,414,1.102,432,1.25,436,1.569,437,1.039,452,1.673,499,2.989,500,1.99,505,1.129,506,1.69,507,2.087,613,3.784,645,1.363,711,5.681,713,4.518,714,2.087,715,3.636,947,2.642,1077,3.155,1078,3.155,1086,4.098,1656,4.098,1666,3.155,1744,3.784,2538,3.601,2539,6.024,2540,6.024,2541,6.961,2542,6.024,2543,6.024,2544,6.578,2545,5.157,2546,5.157,2547,3.601,2548,5.157,2549,3.601,2550,5.157,2551,3.601,2552,5.227,2553,3.601,2554,3.601,2555,5.157,2556,5.157,2557,6.578,2558,5.157,2559,3.601,2560,5.227,2561,3.601,2562,3.601,2563,4.518,2564,3.155,2565,3.601,2566,3.601,2567,3.601,2568,5.157,2569,3.601,2570,3.601,2571,3.601,2572,3.601,2573,3.601,2574,3.601,2575,3.601,2576,6.024,2577,5.157,2578,3.601,2579,5.157,2580,6.578,2581,3.601,2582,5.157,2583,5.157,2584,3.601,2585,3.601,2586,3.601,2587,3.601,2588,5.157,2589,3.601,2590,3.601,2591,5.157,2592,3.155,2593,3.601,2594,3.601,2595,8.291,2596,3.601,2597,3.601,2598,3.601,2599,3.601,2600,3.601,2601,3.601,2602,3.601,2603,3.601,2604,3.601,2605,3.601,2606,3.601,2607,3.601,2608,3.601,2609,3.601,2610,3.601,2611,3.601,2612,3.601,2613,3.601,2614,3.601,2615,3.601,2616,3.601,2617,3.601,2618,3.601,2619,3.601,2620,3.601,2621,3.601,2622,3.601,2623,3.601,2624,3.601,2625,5.157,2626,3.601,2627,3.601,2628,3.601,2629,3.601,2630,3.601]],["title/components/ThemeSettingsComponent.html",[84,0.95,392,1.689]],["body/components/ThemeSettingsComponent.html",[3,0.2,4,0.2,5,0.175,7,0.2,8,0.491,11,0.352,12,0.011,13,0.214,16,1.154,18,2.446,21,1.026,75,0.008,76,0.008,80,1.478,83,0.671,84,1.497,86,0.94,89,0.627,116,1.452,133,2.287,134,2.214,138,0.607,139,1.714,316,1.772,317,1.953,318,1.833,319,1.833,320,1.833,324,3.168,325,3.245,327,1.772,330,1.147,337,4.427,338,3.103,347,4.141,355,1.833,356,2.446,357,2.078,358,1.607,359,2.937,360,1.833,361,1.833,362,1.772,363,1.607,364,1.833,365,1.772,366,1.833,367,1.772,368,1.714,369,1.833,370,1.557,371,1.607,372,1.607,373,2.446,374,1.772,375,2.937,376,1.772,377,1.833,378,1.772,379,1.659,380,1.833,381,1.772,382,1.833,383,1.659,384,1.772,385,1.772,386,1.833,387,1.772,388,1.714,389,1.833,390,1.772,391,1.833,392,2.839,393,3.005,394,1.772,395,1.833,396,1.772,397,1.714,398,1.772,399,1.833,414,1.291,432,0.94,436,1.378,437,0.912,452,1.088,564,3.503,586,2.294,1744,4.435,1828,3.599,1829,5.405,1831,4.435,1851,3.599,2407,5.96,2536,3.968,2592,5.295,2631,6.801,2632,6.801,2633,6.043,2634,6.043,2635,7.257,2636,4.529,2637,4.529,2638,4.529]],["title/pipes/TimePipe.html",[115,2.186,757,3.167]],["body/pipes/TimePipe.html",[3,0.26,4,0.26,5,0.171,10,1.643,11,0.457,12,0.012,13,0.279,19,1.023,75,0.009,76,0.009,80,1.503,83,0.66,89,0.816,95,3.591,115,3.617,116,1.414,138,0.789,140,2.383,151,1.295,209,3.222,330,1.117,414,1.258,432,1.221,436,1.791,437,1.186,445,3.254,452,1.414,644,6.259,645,2.704,646,4.32,647,5.676,648,6.738,650,5.676,757,5.241,782,4.894,2193,4.678,2194,5.158,2639,5.887,2640,5.887,2641,5.158]],["title/injectables/TitleService.html",[400,0.771,1931,3.167]],["body/injectables/TitleService.html",[3,0.258,4,0.258,5,0.17,7,0.258,8,0.578,11,0.454,12,0.011,13,0.277,16,1.49,19,1.098,21,1.326,75,0.009,76,0.009,80,1.144,83,0.658,86,1.214,88,3.213,89,0.811,138,0.784,144,2.134,195,3.31,326,1.78,330,1.35,335,3.569,336,2.963,400,1.271,402,2.214,414,1.521,432,1.214,436,1.78,437,1.178,452,1.406,505,1.834,506,1.326,1931,5.222,2642,5.85,2643,7.116,2644,7.116,2645,5.85,2646,5.85,2647,5.85,2648,5.85,2649,5.85,2650,5.85]],["title/interfaces/Track.html",[0,0.177,91,1.874]],["body/interfaces/Track.html",[0,0.312,2,1.126,3,0.226,4,0.226,5,0.24,7,0.226,8,0.532,11,0.624,12,0.012,13,0.387,19,1.197,25,2.143,75,0.009,76,0.009,77,1.874,79,2.965,81,2.703,82,2.477,83,0.667,90,2.827,91,3.132,116,1.964,117,3.297,147,1.44,167,2.07,195,2.07,261,3.822,295,2.22,296,2.22,437,1.318,440,3.992,474,3.297,475,3.297,476,3.297,477,3.297,478,3.297,479,2.827,480,3.297,481,3.297,482,3.297,483,3.297,501,3.12,563,3.504,715,2.827,716,3.297,717,3.992,718,3.12,719,2.143,720,3.314,721,4.219,722,2.827,723,4.64,724,5.068,725,3.12,726,3.504,727,2.392,728,3.504,729,3.297,730,3.753,731,3.753,732,3.753,733,3.753,734,3.297,735,3.12]],["title/interfaces/TrackMetadata.html",[0,0.177,724,2.782]],["body/interfaces/TrackMetadata.html",[0,0.299,2,1.006,3,0.202,4,0.202,5,0.198,7,0.202,8,0.494,11,0.659,12,0.012,13,0.377,19,1.247,25,1.916,75,0.008,76,0.008,77,2.669,79,4.223,81,3.85,82,2.757,83,0.632,90,2.527,91,3.293,116,1.75,117,2.948,147,1.338,167,2.948,195,2.948,261,2.957,295,1.985,296,1.985,437,1.69,440,3.71,474,2.948,475,2.948,476,2.948,477,2.948,478,2.948,479,2.527,480,2.948,481,2.948,482,2.948,483,2.948,501,2.789,563,3.133,715,2.527,716,2.948,717,4.444,718,2.789,719,1.916,720,3.689,721,4.696,722,2.527,723,3.71,724,4.696,725,4.444,726,4.991,727,3.406,728,4.991,729,4.696,730,3.355,731,3.355,732,3.355,733,3.355,734,2.948,735,2.789]],["title/injectables/UpdateService.html",[339,3.43,400,0.771]],["body/injectables/UpdateService.html",[3,0.204,4,0.204,5,0.134,7,0.204,12,0.012,13,0.218,75,0.008,76,0.008,83,0.723,86,0.958,89,0.64,138,0.619,147,1.511,151,1.511,168,1.748,195,1.869,206,2.676,235,2.775,326,1.404,329,2.877,330,1.303,339,4.865,383,1.692,400,1.093,402,1.748,414,1.308,432,1.27,454,2.338,503,1.869,505,1.447,506,1.556,588,5.01,613,5.366,645,1.748,800,2.44,817,2.96,1142,4.045,1221,3.388,1223,2.676,1232,2.676,1233,3.388,1286,2.599,1350,3.388,1413,2.552,1706,4.045,2008,3.669,2013,3.669,2014,3.388,2015,3.388,2018,3.669,2019,3.669,2128,2.816,2130,3.981,2132,4.705,2396,4.492,2397,3.669,2449,3.669,2651,4.617,2652,7.313,2653,7.313,2654,4.617,2655,4.617,2656,4.617,2657,6.121,2658,6.867,2659,4.045,2660,4.617,2661,4.617,2662,4.617,2663,4.617,2664,4.617,2665,4.617,2666,4.617,2667,4.617,2668,5.366,2669,6.121,2670,4.617,2671,4.617,2672,4.617,2673,4.617,2674,4.617,2675,4.617,2676,4.617,2677,4.617,2678,4.617,2679,4.617,2680,4.617,2681,4.617,2682,4.617,2683,4.617,2684,4.617,2685,4.617,2686,4.617,2687,4.617,2688,4.617,2689,4.617,2690,4.617,2691,4.617,2692,4.617]],["title/components/VisualizerComponent.html",[84,0.95,394,1.689]],["body/components/VisualizerComponent.html",[3,0.08,4,0.08,5,0.088,7,0.08,8,0.246,10,1.663,11,0.528,12,0.012,13,0.086,16,1.695,21,1.699,37,1.051,43,1.413,47,1.948,55,1.843,75,0.004,76,0.004,80,1.357,83,0.671,84,0.855,85,3.472,86,0.376,87,2.663,88,0.759,89,0.251,91,1.312,94,0.816,103,2.396,104,1.106,106,0.918,108,0.816,116,0.726,133,1.144,134,1.107,136,1.413,138,0.243,139,0.686,140,1.223,142,1.752,144,2.306,151,1.331,225,1.242,272,3.054,276,1.597,277,1.53,278,1.597,279,1.597,280,1.597,281,1.53,282,2.396,283,1.597,284,1.597,285,1.67,286,1.67,287,0.918,288,2.663,289,2.552,290,2.924,291,2.552,292,0.918,293,2.297,297,2.552,308,3.301,311,3.152,312,2.941,315,2.941,316,0.709,317,0.977,318,0.734,319,0.734,320,0.734,322,1.843,323,1.843,324,2.771,325,2.781,327,0.709,329,1.628,330,1.514,332,1.106,355,0.734,356,1.223,357,1.039,358,0.643,359,1.835,360,0.734,361,0.734,362,0.709,363,0.643,364,0.734,365,0.709,366,0.734,367,0.709,368,0.686,369,0.734,370,0.623,371,0.643,372,0.643,373,1.223,374,0.709,375,1.835,376,0.709,377,0.734,378,0.709,379,0.664,380,0.734,381,0.709,382,0.734,383,0.664,384,0.709,385,0.709,386,0.734,387,1.774,388,0.686,389,0.734,390,0.709,391,0.734,392,0.709,393,0.686,394,1.774,395,2.039,396,0.709,397,1.716,398,0.709,399,0.734,401,2.396,414,0.646,432,1.303,434,2.401,436,1.911,437,1.305,438,3.088,452,2.013,495,2.401,499,2.629,500,1.002,506,0.411,507,1.752,645,0.686,715,2.148,799,1.67,855,3.088,866,1.752,874,1.106,875,1.33,890,2.217,918,2.401,975,2.505,1021,1.169,1098,1.948,1165,4.922,1297,2.371,1298,1.968,1414,1.843,1797,2.648,1925,3.088,1933,1.33,2128,1.843,2130,3.757,2140,2.401,2195,1.588,2196,1.588,2198,1.588,2256,2.648,2449,1.44,2472,1.588,2476,1.33,2693,1.812,2694,3.886,2695,3.886,2696,3.022,2697,3.022,2698,3.405,2699,5.039,2700,3.886,2701,3.886,2702,3.405,2703,5.039,2704,5.039,2705,3.604,2706,3.022,2707,3.022,2708,3.022,2709,3.022,2710,3.022,2711,3.022,2712,3.022,2713,3.022,2714,3.022,2715,3.022,2716,3.022,2717,1.812,2718,3.022,2719,1.812,2720,3.022,2721,1.812,2722,3.022,2723,1.812,2724,3.022,2725,1.812,2726,3.022,2727,1.812,2728,3.022,2729,1.812,2730,3.022,2731,1.812,2732,3.022,2733,1.812,2734,3.022,2735,1.812,2736,2.648,2737,1.812,2738,3.022,2739,1.812,2740,3.022,2741,3.022,2742,3.022,2743,3.022,2744,1.812,2745,3.022,2746,1.812,2747,3.022,2748,1.812,2749,3.022,2750,3.022,2751,1.812,2752,1.812,2753,3.022,2754,1.812,2755,3.022,2756,1.812,2757,3.022,2758,1.812,2759,1.812,2760,3.022,2761,3.022,2762,1.812,2763,3.022,2764,1.812,2765,1.812,2766,3.022,2767,1.812,2768,3.022,2769,3.022,2770,1.812,2771,3.022,2772,1.812,2773,1.812,2774,1.812,2775,1.812,2776,1.812,2777,1.812,2778,3.022,2779,1.812,2780,3.022,2781,1.812,2782,3.022,2783,1.812,2784,1.812,2785,1.812,2786,1.812,2787,1.812,2788,1.812,2789,1.812,2790,1.812,2791,1.812,2792,1.812,2793,1.812,2794,1.812,2795,1.812,2796,1.812,2797,1.812,2798,1.812,2799,1.812,2800,1.812,2801,1.812,2802,1.812,2803,1.812,2804,1.812,2805,1.812,2806,1.812,2807,1.812,2808,3.022,2809,3.022,2810,5.443,2811,3.022,2812,4.534,2813,3.022]],["title/interfaces/VisualsColorConfig.html",[0,0.177,294,2.281]],["body/interfaces/VisualsColorConfig.html",[0,0.334,2,1.031,3,0.207,4,0.207,5,0.136,7,0.207,8,0.502,10,1.853,11,0.61,12,0.012,13,0.396,18,2.8,19,1.164,22,1.773,25,2.59,75,0.008,76,0.008,270,2.59,271,2.59,272,3.576,273,2.716,274,2.716,275,2.716,276,2.476,277,2.373,278,2.476,279,2.476,280,2.476,281,2.373,282,2.476,283,2.476,284,2.476,285,2.59,286,2.59,287,2.373,288,3.267,289,3.13,290,3.13,291,3.13,292,2.373,293,3.13,294,3.267,295,3.319,296,3.319,297,3.872,298,2.476,299,2.373,300,2.476,301,2.59,302,2.716,303,2.373,304,3.503,305,2.476,306,2.278,307,3.823,308,2.89,309,2.476,310,3.13,311,3.576,312,3.576,313,2.373,314,3.13,315,3.576,437,1.582]],["title/directives/VisualsDirective.html",[358,1.531,397,1.634]],["body/directives/VisualsDirective.html",[3,0.121,4,0.121,5,0.08,7,0.121,8,0.342,10,0.586,11,0.447,12,0.012,13,0.13,16,1.307,18,2.514,21,1.304,22,2.482,39,1.699,41,2.412,43,1.97,75,0.006,76,0.006,80,0.824,83,0.474,86,0.569,89,0.38,116,0.659,138,0.368,140,1.705,144,2.189,147,1.8,151,1.129,168,1.595,194,3.308,209,1.766,221,1.88,272,1.334,287,1.39,288,2.711,289,2.598,290,2.598,291,2.598,292,1.39,293,2.598,294,1.45,295,1.829,296,1.829,297,2.134,298,3.608,299,2.598,300,3.042,301,2.329,303,1.39,304,2.134,305,1.45,306,1.334,308,1.283,309,2.227,311,2.799,312,3.426,313,1.39,315,2.799,324,1.544,329,2.15,330,1.424,358,1.495,396,1.073,397,1.595,398,1.649,401,2.227,414,0.9,428,3.349,432,1.064,434,4.936,436,1.282,437,0.849,438,4.936,452,1.383,495,3.349,506,1.597,525,2.404,528,1.88,585,2.013,645,1.038,678,2.404,715,3.433,782,1.88,866,1.59,871,2.717,872,2.18,874,1.674,894,3.692,918,3.349,975,3.308,992,4.828,1021,1.769,1058,2.404,1198,2.404,1286,1.942,1350,3.765,1355,2.404,1357,2.404,1358,2.404,1414,1.674,1417,1.769,1672,2.404,2128,1.674,2130,3.337,2132,3.944,2483,3.692,2552,4.077,2560,4.077,2698,4.495,2702,4.495,2736,2.404,2814,2.404,2815,5.756,2816,4.214,2817,4.214,2818,2.744,2819,4.214,2820,2.744,2821,4.214,2822,2.744,2823,4.214,2824,2.744,2825,2.744,2826,2.744,2827,4.214,2828,2.744,2829,2.744,2830,2.744,2831,2.744,2832,2.404,2833,2.404,2834,2.404,2835,2.744,2836,2.744,2837,2.744,2838,2.744,2839,4.214,2840,2.744,2841,2.744,2842,2.744,2843,2.744,2844,2.744,2845,2.744,2846,2.744,2847,2.744,2848,2.744,2849,6.827,2850,2.744,2851,2.744,2852,2.744,2853,2.013,2854,4.214,2855,2.744,2856,2.744,2857,2.744,2858,2.744,2859,2.744,2860,2.744,2861,5.13,2862,2.744,2863,4.214,2864,4.214,2865,2.744,2866,2.744,2867,2.744,2868,5.756,2869,2.744,2870,2.744,2871,2.744,2872,2.744,2873,2.744,2874,2.744,2875,4.214,2876,2.744,2877,2.744,2878,2.744,2879,5.13,2880,5.756,2881,2.744,2882,2.744,2883,2.744,2884,2.744,2885,4.214,2886,4.214,2887,4.214,2888,5.13,2889,2.744,2890,2.744,2891,2.744,2892,2.744,2893,2.744,2894,2.744,2895,2.744,2896,2.744,2897,2.744,2898,6.827,2899,4.214,2900,4.214,2901,2.744,2902,2.404,2903,2.744,2904,2.744,2905,2.744,2906,2.744,2907,4.495,2908,4.214,2909,4.214,2910,2.744,2911,2.744,2912,2.744,2913,2.744,2914,2.744,2915,2.744,2916,2.744,2917,2.744,2918,2.744,2919,2.744,2920,2.744,2921,2.744,2922,4.214,2923,2.744,2924,2.744,2925,2.744,2926,2.744,2927,2.744,2928,2.744,2929,2.744,2930,2.744,2931,2.744]],["title/injectables/VisualsService.html",[400,0.771,2705,3.43]],["body/injectables/VisualsService.html",[3,0.235,4,0.235,5,0.155,7,0.235,8,0.546,11,0.413,12,0.012,13,0.252,16,1.357,21,1.207,75,0.009,76,0.009,83,0.68,86,1.105,88,2.231,89,0.738,94,2.398,138,0.713,144,2.045,308,3.139,311,3.753,312,3.753,315,3.753,326,1.62,330,1.274,400,1.199,402,2.016,414,1.435,432,1.105,452,1.279,499,3.892,500,2.943,505,1.669,506,1.207,507,3.087,2128,3.248,2130,4.613,2132,5.452,2705,5.335,2832,4.666,2932,5.325,2933,7.352,2934,7.719,2935,5.325,2936,6.713,2937,5.325,2938,8.249,2939,5.325,2940,5.325,2941,5.325]],["title/interfaces/VisualsWorkerMessage.html",[0,0.177,298,2.281]],["body/interfaces/VisualsWorkerMessage.html",[0,0.332,2,1.005,3,0.202,4,0.202,5,0.133,7,0.202,8,0.494,10,1.839,11,0.627,12,0.012,13,0.394,18,2.764,19,1.042,22,2.585,25,2.546,75,0.008,76,0.008,270,2.523,271,2.523,272,3.54,273,2.646,274,2.646,275,2.646,276,2.413,277,2.312,278,2.413,279,2.413,280,2.413,281,2.312,282,2.413,283,2.413,284,2.413,285,2.523,286,2.523,287,2.312,288,3.211,289,3.077,290,3.077,291,3.077,292,2.312,293,3.077,294,2.413,295,2.638,296,2.638,297,3.077,298,3.211,299,3.687,300,3.609,301,4.024,302,3.959,303,3.687,304,4.093,305,3.847,306,3.32,307,3.775,308,2.841,309,2.413,310,3.077,311,3.54,312,3.54,313,2.312,314,3.077,315,3.54,437,1.628]],["title/injectables/WakelockService.html",[400,0.771,2009,2.957]],["body/injectables/WakelockService.html",[3,0.243,4,0.243,5,0.159,7,0.243,8,0.556,11,0.426,12,0.012,13,0.26,75,0.009,76,0.009,83,0.508,89,0.761,138,0.735,151,1.506,235,2.947,237,2.148,326,1.67,329,3.123,330,1.481,400,1.222,402,2.078,414,1.462,432,1.42,437,1.378,445,3.782,505,1.721,506,1.244,578,1.948,818,2.472,823,2.472,2009,4.688,2942,5.489,2943,6.532,2944,7.804,2945,7.804,2946,6.842,2947,5.489,2948,5.489,2949,6.842,2950,7.454,2951,5.489,2952,5.489,2953,5.489,2954,5.489,2955,5.489,2956,5.489,2957,5.489,2958,5.489]],["title/dependencies.html",[2853,3.801,2959,3.175]],["body/dependencies.html",[12,0.012,75,0.009,76,0.009,89,0.788,94,3.558,95,3.469,114,4.173,115,2.88,116,1.366,121,4.173,335,3.469,336,2.88,500,3.143,503,2.302,722,3.143,742,3.143,798,3.666,799,3.143,840,3.896,1350,4.173,1432,3.469,1685,4.173,1688,4.983,1689,4.983,1863,4.173,1869,4.983,1870,4.983,2293,4.519,2445,4.983,2563,4.983,2564,4.983,2659,4.983,2853,4.173,2960,5.687,2961,8.515,2962,5.687,2963,5.687,2964,5.687,2965,6.128,2966,6.993,2967,5.687,2968,5.687,2969,5.687,2970,5.687,2971,5.687,2972,5.687,2973,5.687,2974,5.687,2975,5.687,2976,5.687,2977,5.687,2978,5.687,2979,5.687,2980,5.687]],["title/miscellaneous/enumerations.html",[2981,2.101,2982,4.539]],["body/miscellaneous/enumerations.html",[6,3.688,7,0.253,12,0.012,37,4.069,38,3.92,40,3.92,41,2.941,42,3.92,43,3.282,44,3.92,45,3.88,46,3.92,47,3.688,48,3.92,49,3.688,50,3.92,51,3.92,52,3.92,53,3.92,54,3.92,55,3.49,56,3.92,57,3.92,58,3.92,59,3.317,60,3.92,61,3.688,62,3.92,63,3.688,64,3.92,65,3.92,66,3.92,67,3.92,68,3.92,69,3.92,70,4.282,71,3.92,72,3.92,73,3.92,74,3.92,75,0.009,76,0.009,452,2.113,2981,3.317,2982,5.013,2983,6.15]],["title/miscellaneous/functions.html",[2981,2.101,2984,4.539]],["body/miscellaneous/functions.html",[5,0.231,7,0.177,10,1.475,11,0.626,12,0.011,19,1.074,21,0.909,22,2.612,75,0.007,76,0.007,80,1.592,304,3.799,310,2.032,314,2.032,336,3.236,432,1.754,436,2.477,437,1.64,452,1.337,645,1.519,705,4.119,710,3.076,737,2.586,791,3.395,792,2.706,793,3.188,794,4.688,795,2.749,796,5.484,817,2.793,829,3.188,845,3.188,948,2.218,1098,2.586,1165,4.209,1229,2.447,1343,4.876,1345,3.515,1411,3.588,1590,2.749,1591,3.515,1592,3.188,1637,3.515,1772,3.515,1811,3.515,1940,3.515,2009,2.749,2138,3.515,2139,4.876,2140,3.188,2193,4.422,2641,3.515,2981,2.326,2984,3.515,2985,6.389,2986,6.977,2987,6.389,2988,6.389,2989,6.389,2990,6.389,2991,4.012,2992,5.565,2993,5.565,2994,4.012,2995,5.598,2996,3.515,2997,5.565,2998,4.012,2999,5.565,3000,5.598,3001,5.565,3002,5.565,3003,5.565,3004,5.565,3005,5.565,3006,4.012,3007,5.598,3008,5.565,3009,6.389,3010,5.565,3011,6.389,3012,6.389,3013,6.389,3014,5.565,3015,6.389,3016,5.565,3017,6.389,3018,5.565,3019,5.598,3020,5.565,3021,5.565,3022,5.598,3023,3.515,3024,3.515,3025,4.012,3026,4.012,3027,4.012,3028,4.012,3029,4.012,3030,4.012,3031,4.012,3032,5.565,3033,4.012,3034,4.012,3035,4.012,3036,4.012]],["title/index.html",[7,0.16,1739,2.483,3037,2.88]],["body/index.html",[5,0.198,12,0.011,59,3.158,75,0.009,76,0.009,77,1.996,116,1.87,167,2.205,182,3.997,195,2.205,336,2.759,363,2.416,379,1.996,393,2.062,504,4.997,509,4.666,564,3.158,565,4.329,613,3.997,711,3.732,722,3.011,742,3.011,753,2.649,854,4.329,992,4.666,1140,4.773,1193,3.997,1339,4.329,1373,4.329,1624,4.773,1681,4.773,1685,3.997,1725,4.329,1733,5.967,1739,3.732,1744,4.997,1863,3.997,1875,4.329,2853,3.997,2943,4.773,3038,5.967,3039,4.773,3040,5.447,3041,5.447,3042,5.447,3043,5.447,3044,5.447,3045,5.447,3046,5.447,3047,6.809,3048,6.809,3049,5.447,3050,5.447,3051,5.447,3052,5.447,3053,5.447,3054,5.447,3055,5.447,3056,5.447,3057,5.447,3058,5.447,3059,5.447,3060,5.447,3061,5.447,3062,5.447,3063,5.447,3064,5.447,3065,5.447,3066,5.447,3067,5.447,3068,5.447,3069,5.447,3070,6.809,3071,3.732,3072,5.447,3073,7.429,3074,5.447,3075,6.809,3076,5.447,3077,5.447,3078,5.447]],["title/license.html",[1739,2.483,3037,2.88,3079,2.88]],["body/license.html",[10,0.899,12,0.005,29,3.508,61,1.765,75,0.005,76,0.005,170,2.176,194,1.765,195,1.108,206,3.955,219,3.344,330,0.52,358,1.493,406,3.088,445,1.514,502,3.344,528,1.876,552,2.176,670,2.399,677,2.399,756,1.876,782,2.883,838,4.932,849,2.176,871,1.765,909,2.399,920,4.22,924,3.687,930,2.176,944,2.176,1055,2.176,1220,4.554,1235,2.009,1286,1.036,1373,2.176,1407,1.67,1589,5.978,1915,2.399,1918,3.687,2130,2.439,2321,3.687,2513,2.399,2668,2.009,2907,2.399,2965,2.399,3079,5.206,3080,6.823,3081,7.041,3082,6.205,3083,5.978,3084,2.399,3085,2.738,3086,2.738,3087,7.041,3088,2.738,3089,2.399,3090,2.738,3091,4.208,3092,2.738,3093,2.738,3094,2.738,3095,2.738,3096,5.124,3097,2.738,3098,5.124,3099,5.124,3100,2.738,3101,5.75,3102,2.738,3103,5.124,3104,2.738,3105,2.738,3106,2.738,3107,2.738,3108,7.041,3109,2.738,3110,2.738,3111,4.208,3112,4.208,3113,2.738,3114,2.738,3115,4.208,3116,7.501,3117,7.501,3118,8.215,3119,4.208,3120,4.208,3121,2.738,3122,2.738,3123,2.738,3124,4.208,3125,8.337,3126,2.738,3127,5.124,3128,4.208,3129,2.738,3130,4.208,3131,2.738,3132,4.208,3133,2.738,3134,5.124,3135,2.738,3136,4.208,3137,4.208,3138,5.75,3139,2.738,3140,2.738,3141,2.738,3142,5.75,3143,4.208,3144,2.738,3145,2.738,3146,2.738,3147,4.208,3148,2.738,3149,2.738,3150,2.738,3151,2.738,3152,5.124,3153,6.205,3154,7.221,3155,6.205,3156,5.124,3157,2.738,3158,2.738,3159,2.738,3160,4.208,3161,2.738,3162,4.208,3163,2.399,3164,2.738,3165,2.738,3166,5.124,3167,2.738,3168,2.738,3169,2.738,3170,2.738,3171,1.876,3172,2.738,3173,2.738,3174,4.208,3175,2.738,3176,7.501,3177,6.205,3178,2.738,3179,2.738,3180,2.738,3181,4.208,3182,6.823,3183,2.738,3184,2.738,3185,2.738,3186,2.738,3187,2.738,3188,2.738,3189,2.738,3190,2.738,3191,2.738,3192,2.738,3193,2.738,3194,2.738,3195,2.738,3196,2.738,3197,2.738,3198,5.75,3199,2.738,3200,2.738,3201,2.738,3202,2.738,3203,5.124,3204,2.738,3205,2.738,3206,2.738,3207,4.208,3208,2.738,3209,2.738,3210,5.124,3211,4.208,3212,2.738,3213,2.738,3214,2.738,3215,2.738,3216,4.208,3217,2.738,3218,2.738,3219,2.738,3220,2.738,3221,2.738,3222,6.205,3223,2.738,3224,2.738,3225,2.738,3226,2.738,3227,2.738,3228,2.738,3229,2.738,3230,2.738,3231,2.738,3232,4.208,3233,2.738,3234,5.124,3235,2.738,3236,2.738,3237,2.738,3238,2.738,3239,2.738,3240,2.738,3241,2.738,3242,6.823,3243,5.124,3244,2.738,3245,6.823,3246,4.208,3247,4.208,3248,2.738,3249,5.124,3250,2.738,3251,4.208,3252,2.738,3253,2.738,3254,2.738,3255,2.738,3256,2.738,3257,6.551,3258,4.208,3259,5.124,3260,4.208,3261,2.738,3262,2.738,3263,6.205,3264,4.208,3265,4.208,3266,5.124,3267,4.208,3268,4.208,3269,4.208,3270,4.208,3271,4.208,3272,2.738,3273,2.738,3274,2.738,3275,2.738,3276,2.738,3277,2.738,3278,5.75,3279,2.738,3280,2.738,3281,2.738,3282,2.738,3283,2.738,3284,2.738,3285,2.738,3286,2.738,3287,2.738,3288,5.75,3289,5.124,3290,4.208,3291,5.124,3292,4.208,3293,4.208,3294,4.208,3295,2.738,3296,2.738,3297,2.738,3298,2.738,3299,4.208,3300,2.738,3301,5.75,3302,2.738,3303,2.738,3304,2.738,3305,2.738,3306,4.208,3307,2.738,3308,2.738,3309,2.738,3310,2.738,3311,2.738,3312,2.738,3313,2.738,3314,2.738,3315,2.738,3316,4.208,3317,2.738,3318,2.738,3319,2.738,3320,2.738,3321,2.738,3322,2.738,3323,2.738,3324,2.738,3325,2.738,3326,2.738,3327,2.738,3328,2.738,3329,2.738,3330,2.738,3331,2.738,3332,2.738,3333,2.738,3334,2.738,3335,4.208,3336,2.738,3337,2.738,3338,2.738,3339,2.738,3340,2.738,3341,2.738,3342,2.738,3343,2.738,3344,4.208,3345,2.738,3346,2.738,3347,2.738,3348,2.738,3349,2.738,3350,2.738,3351,2.738,3352,2.738,3353,2.738,3354,2.738,3355,2.738,3356,2.738,3357,2.738]],["title/modules.html",[3358,5.126]],["body/modules.html",[12,0.01,75,0.01,76,0.01,3358,6.017]],["title/overview.html",[3359,5.126]],["body/overview.html",[2,1.469,12,0.01,41,3.223,45,3.689,75,0.01,76,0.01,95,4.071,138,0.894,317,2.157,358,2.368,402,2.526,3359,5.847,3360,6.673,3361,6.673,3362,6.673]],["title/properties.html",[8,0.421,2959,3.175]],["body/properties.html",[8,0.532,12,0.011,75,0.01,76,0.01,379,2.4,509,4.488,1218,4.488,2668,4.807,3038,5.74,3039,5.74,3079,5.206,3083,5.74,3084,5.74,3363,6.55,3364,6.55,3365,6.55,3366,6.55,3367,6.55,3368,6.55]],["title/todo.html",[541,2.21,1739,2.483,3037,2.88]],["body/todo.html",[5,0.188,12,0.01,18,2.615,75,0.01,76,0.01,206,3.746,509,4.427,742,3.571,753,3.142,1057,5.662,1532,4.741,1656,5.135,1685,4.741,3369,6.461,3370,6.461,3371,6.461,3372,6.461,3373,6.461,3374,6.461,3375,6.461,3376,6.461,3377,5.662,3378,6.461,3379,6.461,3380,6.461,3381,6.461,3382,6.461,3383,6.461,3384,6.461]],["title/miscellaneous/typealiases.html",[2981,2.101,3385,5.18]],["body/miscellaneous/typealiases.html",[6,3.637,7,0.249,11,0.438,12,0.012,14,4.487,23,4.487,30,3.866,31,3.637,32,4.487,33,3.637,34,3.442,35,3.442,75,0.009,76,0.009,271,3.118,272,3.384,276,2.982,277,2.857,278,2.982,279,2.982,280,2.982,281,2.857,282,2.982,283,2.982,284,2.982,304,3.525,308,3.254,310,2.857,311,3.384,312,3.384,314,2.857,315,3.384,403,4.943,407,6.098,440,4.245,716,3.637,734,4.487,735,3.442,737,2.283,828,3.442,1405,3.637,1406,4.487,1415,3.442,1416,3.442,1418,4.487,2981,3.271,2983,6.613,3386,5.642,3387,5.642,3388,7.547,3389,6.098,3390,5.642,3391,5.642,3392,5.642]],["title/miscellaneous/variables.html",[2981,2.101,3393,4.539]],["body/miscellaneous/variables.html",[7,0.117,10,1.67,11,0.661,12,0.012,18,1.66,19,0.965,21,1.869,39,0.782,45,1.464,75,0.005,76,0.005,77,1.503,80,1.264,147,0.583,167,1.66,178,3.259,179,4.857,195,2.031,272,1.994,289,2.077,290,2.077,291,2.077,293,2.077,295,1.781,296,1.781,297,2.077,299,2.077,300,1.4,305,2.168,306,1.288,308,1.239,309,2.168,313,2.077,363,0.94,379,1.503,452,1.981,453,1.815,454,3.274,474,1.708,475,1.708,476,1.708,477,1.708,478,1.708,479,1.464,480,1.708,481,1.708,482,1.708,483,1.708,501,2.502,546,3.594,564,1.536,645,2.447,667,3.594,668,3.594,705,3.941,716,1.708,725,3.062,751,1.4,756,1.815,791,1.616,792,1.288,795,2.81,797,1.708,799,2.267,801,2.502,804,1.464,948,1.464,949,4.398,950,2.321,951,2.321,952,2.321,953,3.594,954,2.321,955,2.321,956,2.321,957,2.321,958,2.321,959,2.321,960,2.321,961,3.594,962,2.321,963,2.321,964,2.321,965,2.321,966,2.321,967,2.321,1038,2.105,1098,1.708,1165,1.616,1229,1.616,1558,1.616,1560,2.105,1590,1.815,1726,3.594,1875,2.105,1917,2.321,2009,1.815,2314,2.321,2357,3.594,2424,2.321,2552,4.49,2560,4.49,2668,1.944,2814,2.321,2833,3.594,2834,3.594,2902,3.594,2981,1.536,2986,7.252,2995,2.321,2996,3.594,3000,2.321,3007,2.321,3019,2.321,3022,2.321,3023,2.321,3024,4.398,3089,5.907,3163,3.594,3389,2.321,3393,2.321,3394,4.102,3395,2.649,3396,4.102,3397,4.102,3398,4.102,3399,4.102,3400,4.102,3401,4.102,3402,2.649,3403,4.102,3404,5.651,3405,2.649,3406,2.649,3407,4.102,3408,5.019,3409,4.102,3410,4.102,3411,4.102,3412,2.649,3413,4.102,3414,6.464,3415,4.102,3416,4.102,3417,5.019,3418,4.102,3419,4.102,3420,4.102,3421,4.102,3422,4.102,3423,4.102,3424,4.102,3425,4.102,3426,2.649,3427,4.102,3428,2.649,3429,2.649,3430,2.649,3431,2.649,3432,2.649,3433,2.649,3434,2.649,3435,2.649,3436,2.649,3437,2.649,3438,2.649,3439,2.649,3440,2.649,3441,2.649,3442,2.649,3443,2.649,3444,2.649,3445,2.649,3446,2.649,3447,2.649,3448,2.649,3449,2.649,3450,2.649,3451,2.649,3452,6.112,3453,2.649,3454,2.649,3455,2.649,3456,2.649,3457,2.649,3458,2.649,3459,2.649,3460,2.649,3461,2.649,3462,2.649,3463,2.649,3464,2.649,3465,2.649,3466,2.649,3467,4.102,3468,6.742,3469,4.102,3470,4.102,3471,2.649,3472,2.649,3473,2.649,3474,2.649,3475,2.649,3476,2.649,3477,2.649,3478,2.649,3479,2.649,3480,2.649,3481,2.649,3482,2.649,3483,2.649,3484,2.649,3485,2.649,3486,2.649,3487,2.649,3488,2.649,3489,2.649,3490,2.649,3491,2.649,3492,2.649,3493,2.649,3494,2.649,3495,2.649,3496,6.464,3497,4.102,3498,2.649,3499,5.651,3500,2.649,3501,2.649,3502,2.649,3503,2.649,3504,2.649,3505,2.649]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.064,317,0.713,368,0.835,976,1.512,2324,1.346,3171,1.512,3506,1.62]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.221,12,0.01,75,0.01,76,0.01,317,2.456,368,2.877,543,4.478,976,5.208,1558,3.987,2324,4.636,3071,4.478,3507,5.577,3508,4.796,3509,5.577,3510,5.577,3511,4.796,3512,4.796]],["title/additional-documentation/ui-components-slide-panel.html",[317,0.791,388,0.926,2324,1.492,2476,1.795,3171,1.676,3506,1.795]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.01,75,0.01,76,0.01,317,2.463,388,2.885,543,4.499,1558,4.005,2324,4.649,2476,5.592,3071,4.499,3507,5.592,3508,4.818,3509,5.592,3510,5.592,3511,4.818,3512,4.818]],["title/additional-documentation/ui-components-dialogs.html",[317,0.887,2324,1.674,3171,1.88,3506,2.013,3513,2.404]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,317,2.47,543,4.519,1558,4.024,2324,4.661,3071,4.519,3507,5.607,3508,4.84,3509,5.607,3510,5.607,3511,4.84,3512,4.84,3513,6.695]],["title/additional-documentation/helpers.html",[3171,2.483,3506,2.659,3514,3.175]],["body/additional-documentation/helpers.html",[12,0.01,75,0.01,76,0.01,543,4.437,1558,3.951,2143,5.674,3071,4.437,3377,6.624,3507,5.875,3508,5.548,3509,5.548,3510,5.548,3511,5.548,3512,5.548,3514,7.016,3515,6.476,3516,8.007]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":1124,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.2",{"_index":900,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["0.25",{"_index":1792,"title":{},"body":{"injectables/MetadataService.html":{}}}],["0.25.0",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":495,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.7",{"_index":2769,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":1797,"title":{},"body":{"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)).then((entry",{"_index":811,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["1)?.['#text",{"_index":1465,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["1.0",{"_index":3084,"title":{},"body":{"license.html":{},"properties.html":{}}}],["1.0.0",{"_index":1877,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["1.0.1",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["100",{"_index":1666,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":479,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["1000}k",{"_index":935,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["1024",{"_index":281,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"injectables/MetadataService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["10_000",{"_index":651,"title":{},"body":{"pipes/BandPipe.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.6.0",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.1",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["125",{"_index":476,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["128",{"_index":278,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["12px",{"_index":941,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["140",{"_index":2309,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["150",{"_index":2626,"title":{},"body":{"injectables/ThemeService.html":{}}}],["16",{"_index":1153,"title":{},"body":{"injectables/GamepadService.html":{}}}],["16384",{"_index":3391,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["16_000",{"_index":483,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":285,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["17",{"_index":3360,"title":{},"body":{"overview.html":{}}}],["18",{"_index":3361,"title":{},"body":{"overview.html":{}}}],["19.0.1",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["199",{"_index":1081,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":3229,"title":{},"body":{"license.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/enumerations.html":{}}}],["2.8.1",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":947,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{}}}],["20.1.0",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["20.3.8",{"_index":3363,"title":{},"body":{"properties.html":{}}}],["200",{"_index":2627,"title":{},"body":{"injectables/ThemeService.html":{}}}],["2000",{"_index":480,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["2048",{"_index":282,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["20rem",{"_index":2492,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21.0.0",{"_index":2972,"title":{},"body":{"dependencies.html":{}}}],["220",{"_index":2785,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["24",{"_index":918,"title":{},"body":{"components/EqualizerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["25",{"_index":2600,"title":{},"body":{"injectables/ThemeService.html":{}}}],["250",{"_index":477,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["255",{"_index":1090,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":279,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":2978,"title":{},"body":{"dependencies.html":{}}}],["3.0.4",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":2973,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2602,"title":{},"body":{"injectables/ThemeService.html":{}}}],["300",{"_index":1122,"title":{},"body":{"injectables/GamepadService.html":{}}}],["30_000",{"_index":1348,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["31",{"_index":474,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["32",{"_index":276,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["32768",{"_index":3392,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":286,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["35",{"_index":2604,"title":{},"body":{"injectables/ThemeService.html":{}}}],["36",{"_index":3362,"title":{},"body":{"overview.html":{}}}],["360px",{"_index":1284,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1423,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3db",{"_index":902,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":3218,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2606,"title":{},"body":{"injectables/ThemeService.html":{}}}],["4000",{"_index":481,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["4096",{"_index":283,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["424242",{"_index":2833,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["440hz",{"_index":700,"title":{},"body":{"interfaces/Chainable.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":1078,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":478,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["512",{"_index":280,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":2084,"title":{},"body":{"injectables/PlayerService.html":{}}}],["5sec.mp3",{"_index":701,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["60",{"_index":2609,"title":{},"body":{"injectables/ThemeService.html":{}}}],["63",{"_index":475,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["64",{"_index":277,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["6px",{"_index":1075,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["7.8.2",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2611,"title":{},"body":{"injectables/ThemeService.html":{}}}],["72",{"_index":2356,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["73",{"_index":2761,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["80",{"_index":2613,"title":{},"body":{"injectables/ThemeService.html":{}}}],["800",{"_index":3457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8000",{"_index":482,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["8192",{"_index":284,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["8mb",{"_index":1787,"title":{},"body":{"injectables/MetadataService.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["90",{"_index":2615,"title":{},"body":{"injectables/ThemeService.html":{}}}],["95",{"_index":2617,"title":{},"body":{"injectables/ThemeService.html":{}}}],["96/9/ec",{"_index":3224,"title":{},"body":{"license.html":{}}}],["98",{"_index":2619,"title":{},"body":{"injectables/ThemeService.html":{}}}],["99",{"_index":2621,"title":{},"body":{"injectables/ThemeService.html":{}}}],["_audiocontext",{"_index":513,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audioelement",{"_index":511,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audiosourcenode",{"_index":515,"title":{},"body":{"injectables/AudioService.html":{}}}],["_connectedanalyzers",{"_index":522,"title":{},"body":{"injectables/AudioService.html":{}}}],["_eqgainnode",{"_index":519,"title":{},"body":{"injectables/AudioService.html":{}}}],["_frequencyfilters",{"_index":520,"title":{},"body":{"injectables/AudioService.html":{}}}],["_gainnode",{"_index":517,"title":{},"body":{"injectables/AudioService.html":{}}}],["_hasended",{"_index":526,"title":{},"body":{"injectables/AudioService.html":{}}}],["_internalanalyzer",{"_index":2835,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":1239,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a.album",{"_index":204,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.artist",{"_index":201,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.localecompare(b",{"_index":171,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":190,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.title",{"_index":223,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.track",{"_index":208,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["abandoned",{"_index":3323,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":3255,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2402,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["above",{"_index":3458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":3335,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2379,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["abstract",{"_index":1093,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":1196,"title":{},"body":{"injectables/GamepadService.html":{}}}],["accent",{"_index":1077,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":2539,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":2540,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accepts",{"_index":837,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":1058,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["accessors",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":3297,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":3338,"title":{},"body":{"license.html":{}}}],["achse",{"_index":1160,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":3354,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["action(details",{"_index":1628,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["activatewakelock",{"_index":2944,"title":{},"body":{"injectables/WakelockService.html":{}}}],["active",{"_index":2049,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeaxescaches",{"_index":1127,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["adapt",{"_index":3194,"title":{},"body":{"license.html":{}}}],["add",{"_index":585,"title":{},"body":{"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{}}}],["addalbumtoplaylist",{"_index":1495,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addalbumtoplaylist(album",{"_index":246,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addartisttoplaylist",{"_index":1496,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addartisttoplaylist(artist",{"_index":241,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addeventlistener('gamepadconnected",{"_index":1132,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":1135,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestolibrary",{"_index":1646,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(...filedatas",{"_index":1696,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(filedatas",{"_index":1650,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestoplaylist",{"_index":1946,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...filedatas",{"_index":2104,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(filedatas",{"_index":1961,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":3298,"title":{},"body":{"license.html":{}}}],["additional",{"_index":3171,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["addtrackstoplaylist",{"_index":1497,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addtrackstoplaylist(...dbtracks",{"_index":257,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addtracktoplaylist",{"_index":1498,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["addtracktoplaylist(song",{"_index":1963,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addtracktoplaylist(track",{"_index":255,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["adjust",{"_index":3050,"title":{},"body":{"index.html":{}}}],["advertising",{"_index":3270,"title":{},"body":{"license.html":{}}}],["affected",{"_index":3299,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":3176,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":3257,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3313,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":2070,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":2068,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":974,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["against",{"_index":3212,"title":{},"body":{"license.html":{}}}],["aiff",{"_index":953,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":77,"title":{"interfaces/Album.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["album.coverurl",{"_index":1534,"title":{},"body":{"components/LibraryComponent.html":{}}}],["album.name",{"_index":248,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["album.year",{"_index":1535,"title":{},"body":{"components/LibraryComponent.html":{}}}],["albumcompare",{"_index":203,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap",{"_index":181,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.has(albumname",{"_index":185,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.set(albumname",{"_index":186,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.values()].sort((a",{"_index":189,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumname",{"_index":183,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albums",{"_index":180,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumtracks",{"_index":252,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["aliases",{"_index":3386,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1082,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allowed_extensions",{"_index":961,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":801,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":833,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1485,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":2415,"title":{},"body":{"components/ShellComponent.html":{}}}],["allowedtypes",{"_index":980,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":297,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["amended",{"_index":3235,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analyserconfig",{"_index":270,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":305,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analyservalue",{"_index":2879,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyzer",{"_index":2928,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["and/or",{"_index":3127,"title":{},"body":{"license.html":{}}}],["angular/cdk",{"_index":2960,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2441,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":112,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":2293,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1410,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{}}}],["angular/compiler",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":89,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":2014,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":121,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":108,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1851,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2637,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2775,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":1223,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":2294,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":106,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":127,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["angular/material/list",{"_index":97,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":102,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/material/progress",{"_index":129,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2776,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2443,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1848,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":875,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":1934,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":1933,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":2445,"title":{},"body":{"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2659,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angulartitleservice",{"_index":2647,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2837,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["any).getasfilesystemhandle().then((handle",{"_index":1040,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["api",{"_index":840,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["api_key",{"_index":1445,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":1424,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["apis",{"_index":3042,"title":{},"body":{"index.html":{}}}],["app",{"_index":613,"title":{},"body":{"injectables/AudioService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"index.html":{}}}],["app.component.html",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":316,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":3394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontactinfo",{"_index":1878,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["applicable",{"_index":3242,"title":{},"body":{"license.html":{}}}],["application",{"_index":2512,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["applicationconfig",{"_index":3432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":909,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["apply",{"_index":924,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["appname",{"_index":1874,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["apps",{"_index":3051,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":3395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":3417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":3426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":3387,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../default",{"_index":3407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":3405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":3406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":2996,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":3001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":2983,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":3008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../idexed",{"_index":3402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../lastfm",{"_index":3390,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":3014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":2991,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":2993,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":2994,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":3004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":3414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":3006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":3389,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../settings.po.ts",{"_index":3412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":3409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":3388,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":2986,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":3018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":3487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":663,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":665,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":3479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":3475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:14",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":3431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":3495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/idexed",{"_index":3463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":403,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:135",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:142",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:150",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:157",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:163",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:171",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:177",{"_index":467,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:185",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:190",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:198",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:202",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:212",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:216",{"_index":466,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:224",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:24",{"_index":486,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:25",{"_index":490,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":489,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":491,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":487,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":471,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":472,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":496,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":469,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":493,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":484,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:42",{"_index":498,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:44",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":656,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":643,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:9",{"_index":649,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":853,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:15",{"_index":867,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16",{"_index":870,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:17",{"_index":869,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19",{"_index":862,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:30",{"_index":864,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:35",{"_index":865,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":791,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":78,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:104",{"_index":1525,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:147",{"_index":1512,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:153",{"_index":1511,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:158",{"_index":1513,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:164",{"_index":1510,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:172",{"_index":1507,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:181",{"_index":1506,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:198",{"_index":1509,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:207",{"_index":1508,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:224",{"_index":1515,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:228",{"_index":1514,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:232",{"_index":1516,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:50",{"_index":1519,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:51",{"_index":1520,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:52",{"_index":1518,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:54",{"_index":1521,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:56",{"_index":1517,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:69",{"_index":1523,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:70",{"_index":1522,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:71",{"_index":1524,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:73",{"_index":1527,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:81",{"_index":1526,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts",{"_index":1542,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:14",{"_index":1547,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:16",{"_index":1545,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:21",{"_index":1546,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":737,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player",{"_index":2149,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":1923,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:25",{"_index":1930,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:26",{"_index":1929,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":1940,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:137",{"_index":1966,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:142",{"_index":1964,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:148",{"_index":1975,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:162",{"_index":1962,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:168",{"_index":1986,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:174",{"_index":1984,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:178",{"_index":1970,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:190",{"_index":1968,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:206",{"_index":1987,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:215",{"_index":1967,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:236",{"_index":1973,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:25",{"_index":1995,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:254",{"_index":1972,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:263",{"_index":1981,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:27",{"_index":2005,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:281",{"_index":1982,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:29",{"_index":1994,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:298",{"_index":1977,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:302",{"_index":1980,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":2004,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:316",{"_index":1988,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:32",{"_index":2007,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:335",{"_index":1989,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:34",{"_index":1993,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:41",{"_index":2002,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:45",{"_index":2000,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:51",{"_index":1960,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":716,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":2264,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:142",{"_index":2277,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:150",{"_index":2279,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:156",{"_index":2284,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:161",{"_index":2285,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:165",{"_index":2282,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:40",{"_index":2289,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:41",{"_index":2286,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:44",{"_index":2288,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:46",{"_index":2291,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:48",{"_index":2275,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2639,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:9",{"_index":2640,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2693,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2725,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2719,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2723,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2721,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2729,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2727,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26",{"_index":2752,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2737,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2765,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31",{"_index":2772,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2759,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2770,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2762,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2735,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2739,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2754,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2748,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2756,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2746,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2758,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2715,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2767,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2751,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2744,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2764,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2733,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2731,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2717,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2814,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:103",{"_index":2822,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:124",{"_index":2824,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:13",{"_index":2828,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2825,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2829,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:186",{"_index":2820,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2826,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2819,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:31",{"_index":2818,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:91",{"_index":2831,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2932,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2937,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2935,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":271,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":3023,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":3033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":1099,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":1118,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":1111,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":1115,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":1108,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15",{"_index":1119,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":1106,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1292,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":3035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":1216,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:103",{"_index":1331,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:25",{"_index":1334,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:29",{"_index":1337,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:31",{"_index":1336,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:33",{"_index":1335,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:35",{"_index":1333,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:37",{"_index":1327,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:47",{"_index":1329,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:84",{"_index":1332,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:95",{"_index":1328,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:99",{"_index":1330,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1562,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1568,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1579,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1583,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1582,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1584,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1591,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2642,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2646,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2645,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":3036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2942,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:11",{"_index":2947,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:28",{"_index":2948,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:7",{"_index":2946,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1826,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2403,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2534,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2631,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2408,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:42",{"_index":2438,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:43",{"_index":2433,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:44",{"_index":2435,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:45",{"_index":2434,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:47",{"_index":2429,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:56",{"_index":2432,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:58",{"_index":2437,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:60",{"_index":2423,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:65",{"_index":2428,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:69",{"_index":2426,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":3474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":2538,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:16",{"_index":2561,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:18",{"_index":2553,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:20",{"_index":2559,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:22",{"_index":2562,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:23",{"_index":2554,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:25",{"_index":2547,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:31",{"_index":2551,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:37",{"_index":2549,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":712,"title":{},"body":{"interfaces/Color.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2651,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2654,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:45",{"_index":2656,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:52",{"_index":2655,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":3472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":3473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appversion",{"_index":1876,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["arguments_",{"_index":648,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["arial",{"_index":942,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["arising",{"_index":3223,"title":{},"body":{"license.html":{}}}],["array",{"_index":731,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["array.from(droppedfiles",{"_index":1064,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["array.from(event.datatransfer.items",{"_index":1039,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["art",{"_index":1733,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["artist",{"_index":167,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist:${luceneescapequery.escape(artist",{"_index":1886,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["artistcompare",{"_index":200,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artists",{"_index":198,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artwork",{"_index":2079,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2652,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":3315,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1694,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":3258,"title":{},"body":{"license.html":{}}}],["associating",{"_index":3175,"title":{},"body":{"license.html":{}}}],["async",{"_index":235,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["asyncgenerator",{"_index":1653,"title":{},"body":{"injectables/MetadataService.html":{}}}],["atrack",{"_index":207,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["attorney",{"_index":3092,"title":{},"body":{"license.html":{}}}],["audio",{"_index":509,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["audio.service",{"_index":874,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":957,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":950,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":959,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":951,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":954,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":960,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":956,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":955,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":958,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/x",{"_index":952,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":514,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.creategain",{"_index":553,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":551,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement",{"_index":529,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.autoplay",{"_index":535,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.controls",{"_index":536,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.id",{"_index":531,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.loop",{"_index":530,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.preload",{"_index":539,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.style.display",{"_index":533,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.volume",{"_index":537,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioservice",{"_index":401,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audioservice.isplaying",{"_index":2256,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":550,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiosource.connect(eqgain",{"_index":559,"title":{},"body":{"injectables/AudioService.html":{}}}],["author",{"_index":3367,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":3201,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":3126,"title":{},"body":{"license.html":{}}}],["auto",{"_index":540,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["autoincrement",{"_index":3469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":3113,"title":{},"body":{"license.html":{}}}],["autoscroll",{"_index":2313,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":194,"title":{},"body":{"interfaces/Album.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2914,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2906,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2915,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avoid",{"_index":1367,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["await",{"_index":237,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":2351,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis.valueof",{"_index":1203,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":1208,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":1207,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":1100,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":1206,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":1209,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":1109,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":170,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["b.track",{"_index":213,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["back",{"_index":221,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{}}}],["background",{"_index":1088,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["backgroundcolor",{"_index":760,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["band",{"_index":504,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"index.html":{}}}],["bandfrequency",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":636,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains[bandfrequency",{"_index":638,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandpipe",{"_index":642,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{}}}],["bands",{"_index":858,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bar",{"_index":2454,"title":{},"body":{"components/ShellComponent.html":{}}}],["barcount",{"_index":288,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["barkscalebandenergy",{"_index":3396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":311,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2698,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":310,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":3397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":699,"title":{},"body":{"interfaces/Chainable.html":{}}}],["based",{"_index":3241,"title":{},"body":{"license.html":{}}}],["basegain",{"_index":404,"title":{},"body":{"injectables/AudioService.html":{}}}],["basevisualizeroptions",{"_index":307,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":3097,"title":{},"body":{"license.html":{}}}],["bcbcbc",{"_index":2834,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["behavior",{"_index":2343,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["below",{"_index":3119,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":3272,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":2036,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":1178,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["better",{"_index":2901,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["biquadfilternode",{"_index":521,"title":{},"body":{"injectables/AudioService.html":{}}}],["bitrate",{"_index":658,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["bitrate.pipe",{"_index":770,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":655,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1770,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1729,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1748,"title":{},"body":{"injectables/MetadataService.html":{}}}],["bold",{"_index":940,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2508,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["border",{"_index":1074,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["both",{"_index":215,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["bottom",{"_index":2300,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":1072,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["break",{"_index":2132,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2439,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2440,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2461,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2460,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2459,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2462,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["btrack",{"_index":212,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["buffer",{"_index":2898,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffer.buffer",{"_index":2921,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":309,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2903,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2900,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2897,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["build",{"_index":3144,"title":{},"body":{"license.html":{}}}],["buildapiurl(method",{"_index":1439,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["button",{"_index":1176,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.pressed",{"_index":1189,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":1191,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":1101,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":1194,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":1199,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":1112,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2397,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2479,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":3343,"title":{},"body":{"license.html":{}}}],["c.islight",{"_index":2630,"title":{},"body":{"injectables/ThemeService.html":{}}}],["caapi",{"_index":1880,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["cache",{"_index":1193,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":1201,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":1195,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":1200,"title":{},"body":{"injectables/GamepadService.html":{}}}],["calculate",{"_index":2340,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["call",{"_index":609,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":1217,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["called",{"_index":1588,"title":{},"body":{"injectables/LoaderService.html":{}}}],["cancel",{"_index":2392,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2924,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":3281,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":299,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["canvas.getcontext('2d",{"_index":887,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.height",{"_index":891,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.width",{"_index":889,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvasgradient",{"_index":3429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":3398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasref",{"_index":859,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvaswidth",{"_index":3399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2812,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":291,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":289,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":3400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":3477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2130,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":3444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1394,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":823,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":3259,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":3083,"title":{},"body":{"license.html":{},"properties.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":109,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":110,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":111,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["center",{"_index":1084,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":3129,"title":{},"body":{"license.html":{}}}],["chain",{"_index":1908,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["chainable",{"_index":662,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2317,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["changedarkmode",{"_index":2633,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2634,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changes",{"_index":877,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{}}}],["check",{"_index":836,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":1186,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":1125,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":702,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlaylistComponent.html":{}}}],["child(${link",{"_index":3490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chrome",{"_index":3046,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":1802,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize",{"_index":1807,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize).arraybuffer",{"_index":1784,"title":{},"body":{"injectables/MetadataService.html":{}}}],["circular",{"_index":312,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":3142,"title":{},"body":{"license.html":{}}}],["class",{"_index":138,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["class.closed",{"_index":2489,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2490,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":1091,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":611,"title":{},"body":{"injectables/AudioService.html":{}}}],["clear",{"_index":892,"title":{},"body":{"components/EqualizerComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":3345,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":1214,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":1166,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearmetadatacache",{"_index":1832,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2535,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1378,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":3093,"title":{},"body":{"license.html":{}}}],["close",{"_index":1305,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2480,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2690,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2481,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["clr",{"_index":2579,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.hex",{"_index":2583,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.name",{"_index":2582,"title":{},"body":{"injectables/ThemeService.html":{}}}],["code",{"_index":2513,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":711,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["color.getbrightness",{"_index":2629,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.tohexstring(false",{"_index":2628,"title":{},"body":{"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":715,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2887,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2885,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2886,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorful",{"_index":3364,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":1744,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"index.html":{}}}],["colors.ts",{"_index":3408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":2517,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["command",{"_index":688,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":675,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":671,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":3156,"title":{},"body":{"license.html":{}}}],["commons",{"_index":3081,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":3196,"title":{},"body":{"license.html":{}}}],["compare",{"_index":197,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["comparison",{"_index":222,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["compensation",{"_index":3173,"title":{},"body":{"license.html":{}}}],["competition",{"_index":3214,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2319,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["component",{"_index":84,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["component_template",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":317,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2660,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2390,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":970,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/ShellComponent.html":{}}}],["components/slide",{"_index":2472,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{}}}],["computecolors(hex",{"_index":2594,"title":{},"body":{"injectables/ThemeService.html":{}}}],["computed",{"_index":85,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":3329,"title":{},"body":{"license.html":{}}}],["confer",{"_index":3114,"title":{},"body":{"license.html":{}}}],["config",{"_index":2688,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config).afterclosed",{"_index":2692,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config.ts",{"_index":3403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":558,"title":{},"body":{"injectables/AudioService.html":{}}}],["connected",{"_index":1144,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":1137,"title":{},"body":{"injectables/GamepadService.html":{}}}],["consents",{"_index":3349,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":3172,"title":{},"body":{"license.html":{}}}],["console.error('error",{"_index":1556,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["console.error('file",{"_index":264,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('worker",{"_index":1391,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":579,"title":{},"body":{"injectables/AudioService.html":{}}}],["console.log('button",{"_index":1155,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":2044,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":1161,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":824,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":1159,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":1172,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":1168,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2671,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2667,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2678,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":1163,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":1142,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2847,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":1145,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1709,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1711,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":1175,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":1183,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":1431,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('file",{"_index":1056,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["console.warn('loaderservice",{"_index":1587,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('no",{"_index":1919,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":2956,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":1249,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1623,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":147,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["contains",{"_index":1803,"title":{},"body":{"injectables/MetadataService.html":{}}}],["contemplated",{"_index":3287,"title":{},"body":{"license.html":{}}}],["content",{"_index":1086,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["context",{"_index":546,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/variables.html":{}}}],["contrary",{"_index":3317,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":3248,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":3157,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":3135,"title":{},"body":{"license.html":{}}}],["control",{"_index":2524,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["controls",{"_index":3054,"title":{},"body":{"index.html":{}}}],["converttobarkscale",{"_index":2985,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":3269,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1026,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":3116,"title":{},"body":{"license.html":{}}}],["core",{"_index":508,"title":{},"body":{"injectables/AudioService.html":{}}}],["corporation",{"_index":3086,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2866,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["corresponding",{"_index":3240,"title":{},"body":{"license.html":{}}}],["council",{"_index":3227,"title":{},"body":{"license.html":{}}}],["cover",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["coverart",{"_index":1864,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["coverartarchiveapi",{"_index":1871,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":761,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":736,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":720,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":729,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":1991,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":1992,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":1899,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":1904,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images.length",{"_index":1906,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images?.length",{"_index":1901,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images[0",{"_index":1907,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdisplaycomponent",{"_index":362,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":1903,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.image",{"_index":1914,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.large",{"_index":1912,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":1913,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails['500",{"_index":1911,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverurl",{"_index":79,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1737,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.originalurl",{"_index":1745,"title":{},"body":{"injectables/MetadataService.html":{}}}],["create",{"_index":528,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":1158,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":1154,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture",{"_index":1647,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1654,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile",{"_index":1648,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(filedata",{"_index":1657,"title":{},"body":{"injectables/MetadataService.html":{}}}],["creative",{"_index":3080,"title":{},"body":{"license.html":{}}}],["creator",{"_index":3121,"title":{},"body":{"license.html":{}}}],["ctx",{"_index":886,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.beginpath",{"_index":931,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.clearrect(0",{"_index":893,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.fillstyle",{"_index":937,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(`gain",{"_index":945,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(label",{"_index":936,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.font",{"_index":939,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.linewidth",{"_index":899,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.moveto(freqpoints[0].x",{"_index":932,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.strokestyle",{"_index":897,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.textalign",{"_index":943,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["cultural",{"_index":3136,"title":{},"body":{"license.html":{}}}],["culture",{"_index":3161,"title":{},"body":{"license.html":{}}}],["current",{"_index":2321,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["currentalbum",{"_index":251,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentalbum.name",{"_index":253,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentanalyser",{"_index":2862,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2856,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2860,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":809,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":2344,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":2095,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":1941,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2854,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2858,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":1942,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentposition",{"_index":2114,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":405,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":773,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack.metadata?.hash",{"_index":2334,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":776,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":778,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":777,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":785,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":784,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":783,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":781,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":786,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":775,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":779,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["curve",{"_index":908,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["custom",{"_index":674,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":695,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":3481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#load_files_menu",{"_index":3482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":3493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":3485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":3486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":3483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":3494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":3476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":3480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":3489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":690,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.wait(300",{"_index":693,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":542,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":707,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":703,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":689,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":708,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":3352,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3105,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2592,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["dark)').matches",{"_index":2558,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":713,"title":{},"body":{"interfaces/Color.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":2541,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":745,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":744,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2685,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":1076,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":1286,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["data.album.image",{"_index":1451,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2401,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2400,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":1890,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["database",{"_index":3128,"title":{},"body":{"license.html":{}}}],["databaseconfig",{"_index":3401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":3231,"title":{},"body":{"license.html":{}}}],["date",{"_index":2965,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["db",{"_index":799,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dbconfig",{"_index":3464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbtrack",{"_index":258,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle",{"_index":262,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle?.getfile",{"_index":260,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtracks",{"_index":259,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dddddd",{"_index":898,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["declare",{"_index":685,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorators",{"_index":2505,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":2160,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["decreasevolume(value",{"_index":2168,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["deemed",{"_index":3307,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":1123,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":1121,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":1234,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["defects",{"_index":3337,"title":{},"body":{"license.html":{}}}],["defined",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1324,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":2323,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dependencies",{"_index":2853,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"dependencies.html":{},"index.html":{}}}],["depicted",{"_index":3209,"title":{},"body":{"license.html":{}}}],["deps",{"_index":3453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":1102,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":1107,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":1103,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":1110,"title":{},"body":{"injectables/GamepadService.html":{}}}],["derive",{"_index":730,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["description",{"_index":1218,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"properties.html":{}}}],["deselect",{"_index":2098,"title":{},"body":{"injectables/PlayerService.html":{}}}],["desktop",{"_index":3064,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":2018,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1402,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":2008,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["details",{"_index":1601,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":2126,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":2125,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":2318,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["determine",{"_index":2342,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":3274,"title":{},"body":{"license.html":{}}}],["dialog",{"_index":1232,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":1227,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1299,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1300,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1293,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2394,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":2395,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1309,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1308,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1311,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2393,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1307,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2391,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":1238,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1282,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1289,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":3513,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["didn't",{"_index":851,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["diesen",{"_index":1243,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["directive",{"_index":358,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":839,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":2260,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["directoryhandles",{"_index":3471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirhandle",{"_index":3034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirhandle.values",{"_index":830,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry",{"_index":790,"title":{"interfaces/DirHandleEntry.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry).topromise",{"_index":822,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":2144,"title":{},"body":{"injectables/PlayerService.html":{}}}],["disableclose",{"_index":2689,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabletooltipinteractivity",{"_index":3459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":3318,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":3103,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2926,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["disconnectallanalyzers",{"_index":415,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode",{"_index":416,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnected",{"_index":1164,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":1162,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":3341,"title":{},"body":{"license.html":{}}}],["display",{"_index":756,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":1935,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":758,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":759,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":755,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":769,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":768,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":766,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":657,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:7",{"_index":659,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":754,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayfunction",{"_index":860,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":863,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":1264,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":3284,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":3220,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2341,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":3181,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3091,"title":{},"body":{"license.html":{}}}],["document",{"_index":1220,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":544,"title":{},"body":{"injectables/AudioService.html":{}}}],["document.body.append(this.fileinput",{"_index":1487,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1479,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style.setproperty",{"_index":2580,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2676,"title":{},"body":{"injectables/UpdateService.html":{}}}],["document.queryselector('.cdk",{"_index":2375,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dom",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":302,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["double",{"_index":835,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["download",{"_index":1862,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2867,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["dragend",{"_index":1018,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":1005,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":1010,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":1002,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":986,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":1015,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":1004,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":1013,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":1003,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":894,"title":{},"body":{"components/EqualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":2987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":2988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":2989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawequalizerresponse",{"_index":861,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["drawosc",{"_index":2990,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":368,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":985,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":1006,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dual",{"_index":706,"title":{},"body":{"interfaces/Chainable.html":{}}}],["duration",{"_index":406,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":1943,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2686,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":3356,"title":{},"body":{"license.html":{}}}],["e",{"_index":1258,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2527,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":1260,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":1261,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["each",{"_index":920,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{},"license.html":{}}}],["early",{"_index":1052,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["effect",{"_index":871,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":3308,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":3167,"title":{},"body":{"license.html":{}}}],["eine",{"_index":1179,"title":{},"body":{"injectables/GamepadService.html":{}}}],["elects",{"_index":3179,"title":{},"body":{"license.html":{}}}],["element",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":872,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":510,"title":{},"body":{"injectables/AudioService.html":{}}}],["elementscrolled",{"_index":2303,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2840,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2843,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embeddedpicture",{"_index":728,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["emit",{"_index":1045,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["empty",{"_index":1320,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":2297,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":2314,"title":{},"body":{"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1437,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1436,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":698,"title":{},"body":{"interfaces/Chainable.html":{}}}],["end",{"_index":927,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["endchunk",{"_index":1805,"title":{},"body":{"injectables/MetadataService.html":{}}}],["enjoyment",{"_index":3286,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2911,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":2048,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":1411,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(largeimage",{"_index":1467,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(smallimage",{"_index":1466,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(url",{"_index":3029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entire",{"_index":1778,"title":{},"body":{"injectables/MetadataService.html":{}}}],["entries",{"_index":1541,"title":{},"body":{"components/LibraryComponent.html":{}}}],["entries[0].contentrect",{"_index":2877,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":812,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.getfile",{"_index":832,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":831,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":2982,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":3404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":3439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":563,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["eqgain",{"_index":554,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.connect(eqinput",{"_index":560,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.gain.value",{"_index":569,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqinput",{"_index":555,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput",{"_index":556,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput.connect(gain",{"_index":561,"title":{},"body":{"injectables/AudioService.html":{}}}],["equalizer",{"_index":854,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"index.html":{}}}],["equalizer'},{'name",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizer.component.html",{"_index":856,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":857,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":365,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":407,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["equitable",{"_index":3283,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":3239,"title":{},"body":{"license.html":{}}}],["eqvalues[freq",{"_index":926,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands.at",{"_index":929,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands[0",{"_index":917,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["error",{"_index":578,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/WakelockService.html":{}}}],["error('metadata",{"_index":1364,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1401,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1387,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1396,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error.message",{"_index":2957,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errorevent",{"_index":1390,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":3340,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1766,"title":{},"body":{"injectables/MetadataService.html":{}}}],["es",{"_index":1321,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["escape",{"_index":1870,"title":{},"body":{"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["eslint",{"_index":2143,"title":{},"body":{"injectables/PlayerService.html":{},"additional-documentation/helpers.html":{}}}],["establish",{"_index":2852,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["european",{"_index":3225,"title":{},"body":{"license.html":{}}}],["event",{"_index":586,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["event.checked",{"_index":1854,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["event.clientx}px",{"_index":2381,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.clienty}px",{"_index":2383,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.currentversion.hash",{"_index":2672,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1384,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2904,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2905,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":1025,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer.items[0",{"_index":1035,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":1024,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.items",{"_index":1033,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2680,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":1143,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2673,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":1022,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.stoppropagation",{"_index":1023,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2665,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2669,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventmanager",{"_index":1224,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":612,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":670,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusive",{"_index":3115,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3512,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["exercise",{"_index":3306,"title":{},"body":{"license.html":{}}}],["existing",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["exists",{"_index":2929,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["exit",{"_index":614,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["expect",{"_index":2040,"title":{},"body":{"injectables/PlayerService.html":{}}}],["expectation",{"_index":3170,"title":{},"body":{"license.html":{}}}],["explorer",{"_index":3371,"title":{},"body":{"todo.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":3288,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2526,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":3267,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3177,"title":{},"body":{"license.html":{}}}],["extractcolorswithnodevibrant",{"_index":2992,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurls.originalurl",{"_index":1746,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(objecturl",{"_index":1750,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1811,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1449,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extracting",{"_index":1825,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extraction",{"_index":1373,"title":{},"body":{"injectables/Id3TagsService.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":3049,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1343,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1345,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extralarge')?.['#text",{"_index":1462,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["failed",{"_index":1059,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fall",{"_index":220,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{}}}],["fallback",{"_index":1055,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["fallback_accent_color",{"_index":2552,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":2560,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2813,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["false",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2350,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["fear",{"_index":3140,"title":{},"body":{"license.html":{}}}],["features",{"_index":3043,"title":{},"body":{"index.html":{}}}],["fetchalbuminfo(artist",{"_index":1434,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":1896,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ffnet",{"_index":1242,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2809,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2699,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":272,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2295,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.size",{"_index":1775,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(math.max(0",{"_index":1806,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(middlepos",{"_index":1783,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(quarterpos",{"_index":1794,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(threequarterpos",{"_index":1799,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata",{"_index":802,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filedata.file",{"_index":1712,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.file.name",{"_index":1752,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.filehandle",{"_index":1713,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.push",{"_index":841,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["filedata.push(...subfiles",{"_index":844,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedatas",{"_index":1652,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["filedatas.values",{"_index":1700,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedatas?.length",{"_index":1697,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":367,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":261,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filehandle.getfile",{"_index":2056,"title":{},"body":{"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filehandles",{"_index":1036,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.length",{"_index":1047,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.push(handle",{"_index":1042,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandlesdropped",{"_index":981,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileinput",{"_index":1476,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":1063,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":804,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice.currentfolderhandle",{"_index":2259,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["fileloaderservicefactory",{"_index":2995,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":726,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filepath",{"_index":696,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":691,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["files.push(file",{"_index":1066,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesdroped",{"_index":982,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesize",{"_index":1774,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesize).arraybuffer",{"_index":1808,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filestoprocess",{"_index":1695,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesystemdirectoryhandle",{"_index":796,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filesystemfilehandle",{"_index":723,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["fill",{"_index":2916,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":249,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/LibraryComponent.html":{}}}],["filter((artist",{"_index":166,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filter.gain.value",{"_index":567,"title":{},"body":{"injectables/AudioService.html":{}}}],["filtered",{"_index":162,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.filter((item",{"_index":174,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.sort((a",{"_index":196,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filteredbyserchterm",{"_index":146,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtering",{"_index":2100,"title":{},"body":{"injectables/PlayerService.html":{}}}],["finalize",{"_index":1571,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["find",{"_index":1453,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["findreleasegroupid(artist",{"_index":1884,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":1672,"title":{},"body":{"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":1171,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebuttonaction(index",{"_index":1167,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":3088,"title":{},"body":{"license.html":{}}}],["first",{"_index":199,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{}}}],["firstvaluefrom",{"_index":800,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2691,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":1438,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getall('library",{"_index":1551,"title":{},"body":{"injectables/LibraryService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('directoryhandles",{"_index":810,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('library",{"_index":1718,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":3333,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1071,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["flac",{"_index":963,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":1070,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["float32array",{"_index":3024,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2525,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["fns",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["focus",{"_index":2046,"title":{},"body":{"injectables/PlayerService.html":{}}}],["folder/files",{"_index":2258,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["following",{"_index":3192,"title":{},"body":{"license.html":{}}}],["forcefully",{"_index":2370,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["form",{"_index":3151,"title":{},"body":{"license.html":{}}}],["format",{"_index":727,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formatlabel",{"_index":2161,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formatlabel(value",{"_index":2170,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formats",{"_index":3045,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":2193,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":2641,"title":{},"body":{"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":120,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["found",{"_index":265,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":3160,"title":{},"body":{"license.html":{}}}],["freely",{"_index":3149,"title":{},"body":{"license.html":{}}}],["freq",{"_index":921,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints",{"_index":911,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints.push",{"_index":916,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints[0].y",{"_index":933,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency",{"_index":906,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency_bands",{"_index":501,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["frequency_bands)[number",{"_index":733,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["frequencyband",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["frequencybarsconfig",{"_index":287,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":3410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":1902,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["full",{"_index":1917,"title":{},"body":{"injectables/MusicbrainzService.html":{},"miscellaneous/variables.html":{}}}],["fullscreen/multiwindow",{"_index":3383,"title":{},"body":{"todo.html":{}}}],["fully",{"_index":3251,"title":{},"body":{"license.html":{}}}],["function",{"_index":828,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2984,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":3162,"title":{},"body":{"license.html":{}}}],["future",{"_index":3263,"title":{},"body":{"license.html":{}}}],["gain",{"_index":552,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":562,"title":{},"body":{"injectables/AudioService.html":{}}}],["gain.gain.value",{"_index":571,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainnode",{"_index":518,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainvalue",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{}}}],["gainvalue.tofixed(1)}x",{"_index":946,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["gamepad",{"_index":1140,"title":{},"body":{"injectables/GamepadService.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":1187,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":1120,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":2219,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":2229,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":2220,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":1133,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":1138,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":1141,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":1098,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":3000,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":290,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gblaster",{"_index":1875,"title":{},"body":{"injectables/MusicbrainzService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gblasterdb",{"_index":3465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1769,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":3071,"title":{},"body":{"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":3002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1772,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehash(filedata.file",{"_index":1715,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generating",{"_index":1714,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator.bitdroid.de/#section",{"_index":3074,"title":{},"body":{"index.html":{}}}],["getanalysernode",{"_index":2830,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getasfilesystemhandle",{"_index":1034,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["getaudiofilesfromdirhandle",{"_index":3003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":829,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":843,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(handle",{"_index":827,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2895,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2896,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":3411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcolorobject(value",{"_index":2623,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getcoverdisplay",{"_index":3413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1468,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":1426,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1489,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":417,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethasended",{"_index":497,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1310,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":667,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":692,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getloadfilesmenuentry",{"_index":668,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesmenuentry().click",{"_index":694,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1649,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(filedata",{"_index":1659,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":3415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":3005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":2111,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":2138,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":3416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":3418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1739,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["gettoolbartitle",{"_index":3419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":3420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":2253,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["getvolumeslider",{"_index":3421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getxpos(freq",{"_index":923,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["give",{"_index":2865,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":2038,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":2042,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":2556,"title":{},"body":{"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":1147,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gp",{"_index":1149,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":1148,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":1150,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":3422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":852,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":814,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":849,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["greater",{"_index":3165,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3246,"title":{},"body":{"license.html":{}}}],["grid",{"_index":895,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["group",{"_index":1889,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["group/${releasegroupid",{"_index":1898,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":1895,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":1891,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":1892,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["handle",{"_index":795,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.kind",{"_index":1041,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handle.requestpermission",{"_index":850,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":1062,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1389,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlefilefallback(event",{"_index":1060,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handlemessage",{"_index":1382,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":1257,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{}}}],["handles",{"_index":1032,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handling",{"_index":1054,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hanging",{"_index":1368,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1285,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{}}}],["hash",{"_index":725,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":890,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":3275,"title":{},"body":{"license.html":{}}}],["held",{"_index":3321,"title":{},"body":{"license.html":{}}}],["help",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["helpers",{"_index":3514,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":1237,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":683,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":3249,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":3102,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":3107,"title":{},"body":{"license.html":{}}}],["hex",{"_index":714,"title":{},"body":{"interfaces/Color.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":1030,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1482,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1580,"title":{},"body":{"injectables/LoaderService.html":{}}}],["highest",{"_index":928,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["hilfe",{"_index":1244,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk",{"_index":1275,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":1277,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["horizontal",{"_index":901,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["host",{"_index":1068,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2509,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2523,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2506,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2507,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2519,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2522,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2520,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2521,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2488,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":998,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hotkey",{"_index":1215,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1313,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1316,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1319,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":1228,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1303,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeys.service",{"_index":1296,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1291,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":370,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":1229,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":3007,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["htmlaudioelement",{"_index":512,"title":{},"body":{"injectables/AudioService.html":{}}}],["htmlcanvaselement",{"_index":2836,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlelement",{"_index":2377,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["htmlinputelement",{"_index":1477,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":1420,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["http_interceptors",{"_index":3460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1409,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["httpevent",{"_index":1569,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1567,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1570,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1565,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":3072,"title":{},"body":{"index.html":{}}}],["https://github.com/motabass/gblaster",{"_index":3366,"title":{},"body":{"properties.html":{}}}],["https://on.cypress.io/custom",{"_index":684,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":3076,"title":{},"body":{"index.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1425,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["icon",{"_index":3070,"title":{},"body":{"index.html":{}}}],["iconregistry",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgicon('logo",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgiconset(sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":3075,"title":{},"body":{"index.html":{}}}],["id",{"_index":751,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":741,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["id3coverpicture",{"_index":717,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":740,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["id3tagsservice",{"_index":1341,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":3159,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":721,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ii",{"_index":3198,"title":{},"body":{"license.html":{}}}],["iii",{"_index":3203,"title":{},"body":{"license.html":{}}}],["image",{"_index":1407,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["image.front",{"_index":1905,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["images",{"_index":1450,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.at",{"_index":1464,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.find((img",{"_index":1455,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.length",{"_index":1452,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images[0]?.['#text",{"_index":1459,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["img.size",{"_index":1456,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["immediately",{"_index":2061,"title":{},"body":{"injectables/PlayerService.html":{}}}],["implementation",{"_index":3233,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":3244,"title":{},"body":{"license.html":{}}}],["implements",{"_index":140,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":3330,"title":{},"body":{"license.html":{}}}],["import",{"_index":83,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":3502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":3504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":3500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":3505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1357,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["important",{"_index":1804,"title":{},"body":{"injectables/MetadataService.html":{}}}],["imports",{"_index":133,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["include",{"_index":3190,"title":{},"body":{"license.html":{}}}],["including",{"_index":3154,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":3146,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":2162,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["increasevolume(value",{"_index":2172,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":798,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":3060,"title":{},"body":{"index.html":{}}}],["indexeddbservice",{"_index":807,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["indexeddbtrackmetadata",{"_index":90,"title":{"interfaces/IndexedDbTrackMetadata.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["indexeddbtracks",{"_index":1543,"title":{},"body":{"injectables/LibraryService.html":{}}}],["ineffective",{"_index":3294,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":3310,"title":{},"body":{"license.html":{}}}],["influence",{"_index":925,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":3096,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3143,"title":{},"body":{"license.html":{}}}],["init",{"_index":2653,"title":{},"body":{"injectables/UpdateService.html":{}}}],["initbarkscale",{"_index":3009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":545,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["initializetheme",{"_index":2544,"title":{},"body":{"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2431,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":86,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["inject(audioservice",{"_index":866,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2455,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":2019,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":1231,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":999,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":1230,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":1938,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["inject(gamepadservice",{"_index":2198,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":2199,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["inject(httpclient",{"_index":1421,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["inject(id3tagsservice",{"_index":1690,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1691,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(libraryservice",{"_index":143,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["inject(loaderservice",{"_index":1575,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":507,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1302,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":1233,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":2017,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":2567,"title":{},"body":{"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":141,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["inject(musicbrainzservice",{"_index":1692,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":808,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(playerservice",{"_index":142,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":1001,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":2456,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2661,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2648,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":1937,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":2771,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":2016,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2841,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1301,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":400,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":402,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":992,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"index.html":{}}}],["input('bars",{"_index":2827,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":2483,"title":{},"body":{"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{}}}],["inset",{"_index":1079,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2679,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":3068,"title":{},"body":{"index.html":{}}}],["instant",{"_index":2349,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["intended",{"_index":3186,"title":{},"body":{"license.html":{}}}],["intending",{"_index":3277,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1563,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1564,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1559,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1561,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["internal",{"_index":2927,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":2015,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":1212,"title":{},"body":{"injectables/GamepadService.html":{}}}],["invalid",{"_index":3293,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":3311,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":3309,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":3304,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":3252,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":2272,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":2276,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":2296,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":1202,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":3010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":3025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":3011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2416,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":3012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":408,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":409,"title":{},"body":{"injectables/AudioService.html":{}}}],["ismediasessionsupported",{"_index":3013,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions",{"_index":3016,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":3026,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":410,"title":{},"body":{"injectables/AudioService.html":{}}}],["isplaying",{"_index":411,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":2278,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isstopped",{"_index":412,"title":{},"body":{"injectables/AudioService.html":{}}}],["ist",{"_index":1250,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":3017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":1705,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["item",{"_index":1038,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["item.album",{"_index":176,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item.artist",{"_index":175,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item__content",{"_index":3492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1083,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["itemsize",{"_index":2355,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":3210,"title":{},"body":{"license.html":{}}}],["jest",{"_index":3515,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["json",{"_index":1447,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["judged",{"_index":3291,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":3110,"title":{},"body":{"license.html":{}}}],["justify",{"_index":1085,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["k",{"_index":653,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kb/s",{"_index":661,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["keine",{"_index":1323,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":3052,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1259,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":1255,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":3468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":1219,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["keys.replaceall",{"_index":1274,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":3328,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3184,"title":{},"body":{"license.html":{}}}],["known",{"_index":3261,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1767,"title":{},"body":{"injectables/MetadataService.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["large",{"_index":1915,"title":{},"body":{"injectables/MusicbrainzService.html":{},"license.html":{}}}],["large')?.['#text",{"_index":1463,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["largeimage",{"_index":1460,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["larger",{"_index":1786,"title":{},"body":{"injectables/MetadataService.html":{}}}],["last",{"_index":1801,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlayerToolbarComponent.html":{}}}],["last.fm",{"_index":1433,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1681,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1422,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1404,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1416,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1408,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1419,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1418,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1415,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2909,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["latencyhint",{"_index":547,"title":{},"body":{"injectables/AudioService.html":{}}}],["latent",{"_index":3336,"title":{},"body":{"license.html":{}}}],["later",{"_index":3141,"title":{},"body":{"license.html":{}}}],["latest",{"_index":3041,"title":{},"body":{"index.html":{}}}],["launch",{"_index":2045,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters",{"_index":2043,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":2055,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":2053,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":2037,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":3087,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3109,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3063,"title":{},"body":{"index.html":{}}}],["leadingminutezero",{"_index":3032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":983,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":988,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2495,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1470,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":3082,"title":{},"body":{"license.html":{}}}],["legally",{"_index":3292,"title":{},"body":{"license.html":{}}}],["legend",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":3104,"title":{},"body":{"license.html":{}}}],["library",{"_index":1558,"title":{},"body":{"injectables/LibraryService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":135,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":137,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.service",{"_index":132,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":139,"title":{"components/LibraryComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libraryservice",{"_index":131,"title":{"injectables/LibraryService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{}}}],["libraryservice.isloading",{"_index":1530,"title":{},"body":{"components/LibraryComponent.html":{}}}],["libs/.../helpers",{"_index":2998,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/helpers",{"_index":3031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":969,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":3079,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":3325,"title":{},"body":{"license.html":{}}}],["light",{"_index":2593,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":747,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":2625,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":746,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":3208,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":3155,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":3216,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3191,"title":{},"body":{"license.html":{}}}],["line",{"_index":2145,"title":{},"body":{"injectables/PlayerService.html":{}}}],["lines",{"_index":896,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["linethickness",{"_index":2700,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":3488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3516,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["list",{"_index":2357,"title":{},"body":{"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":587,"title":{},"body":{"injectables/AudioService.html":{}}}],["literal",{"_index":1340,"title":{},"body":{"interfaces/Id3Tags.html":{}}}],["load",{"_index":2257,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["loadcomponent",{"_index":3499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":2096,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loadedtrack",{"_index":2106,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":792,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":803,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["loader.helpers.ts",{"_index":949,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1574,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":805,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["loader.service.abstract.ts",{"_index":1092,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":1095,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:6",{"_index":1096,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:7",{"_index":1097,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":2997,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":794,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:11",{"_index":1472,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:18",{"_index":1920,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:24",{"_index":1475,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:26",{"_index":1473,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:32",{"_index":1922,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:42",{"_index":1921,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:43",{"_index":1474,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1560,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1573,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2470,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":664,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":1557,"title":{},"body":{"injectables/LibraryService.html":{}}}],["loadingcounter",{"_index":1585,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadlastdirectory",{"_index":2163,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["loadlibrary",{"_index":1549,"title":{},"body":{"injectables/LibraryService.html":{}}}],["local",{"_index":1725,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localecompare(b.album",{"_index":205,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.artist",{"_index":202,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.title",{"_index":224,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localization",{"_index":3384,"title":{},"body":{"todo.html":{}}}],["localstorage",{"_index":565,"title":{},"body":{"injectables/AudioService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":499,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["locking",{"_index":3056,"title":{},"body":{"index.html":{}}}],["loop",{"_index":464,"title":{},"body":{"injectables/AudioService.html":{}}}],["lowersearchterm",{"_index":149,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["lowest",{"_index":915,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["lucene",{"_index":1869,"title":{},"body":{"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["luceneescapequery",{"_index":1868,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["made",{"_index":3187,"title":{},"body":{"license.html":{}}}],["main_audio",{"_index":532,"title":{},"body":{"injectables/AudioService.html":{}}}],["maincolor",{"_index":295,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":610,"title":{},"body":{"injectables/AudioService.html":{}}}],["makes",{"_index":3098,"title":{},"body":{"license.html":{}}}],["management",{"_index":3373,"title":{},"body":{"todo.html":{}}}],["map",{"_index":177,"title":{},"body":{"interfaces/Album.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2463,"title":{},"body":{"components/ShellComponent.html":{}}}],["map((tag",{"_index":164,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["march",{"_index":3228,"title":{},"body":{"license.html":{}}}],["markus.mohoritsch@gmx.at",{"_index":1879,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["mat",{"_index":3484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1294,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":3454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1298,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1829,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2635,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2632,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":1221,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2657,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1295,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":1222,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":3073,"title":{},"body":{"index.html":{}}}],["matformfield",{"_index":122,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matformfieldmodule",{"_index":2267,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":2346,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":2141,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":2345,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(chunksize",{"_index":1781,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(filesize",{"_index":1780,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(math.random",{"_index":2148,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":2142,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":1999,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.log10(freq",{"_index":903,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(maxfreq",{"_index":905,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(minfreq",{"_index":904,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.max(0",{"_index":2359,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":2001,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.round(value",{"_index":660,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["mathint",{"_index":123,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticon",{"_index":105,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonbutton",{"_index":107,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonmodule",{"_index":1297,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":124,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matlistmodule",{"_index":96,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenu",{"_index":98,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["matmenucontent",{"_index":99,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenuitem",{"_index":100,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenumodule",{"_index":1926,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matmenutrigger",{"_index":101,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matoptionmodule",{"_index":2695,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprefix",{"_index":125,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressbar",{"_index":2412,"title":{},"body":{"components/ShellComponent.html":{}}}],["matprogressspinner",{"_index":128,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressspinnermodule",{"_index":2266,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2694,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2442,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2410,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslider",{"_index":2153,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidermodule",{"_index":855,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matsliderthumb",{"_index":2154,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidetogglechange",{"_index":1839,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1830,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matsuffix",{"_index":126,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mattoolbar",{"_index":2155,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattoolbarmodule",{"_index":1924,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltip",{"_index":2156,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattooltipmodule",{"_index":1925,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":2139,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":273,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":3266,"title":{},"body":{"license.html":{}}}],["mbapi",{"_index":1873,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["md5",{"_index":1689,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["mdc",{"_index":3491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaning",{"_index":3185,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":2308,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["media",{"_index":1624,"title":{},"body":{"injectables/MediaSessionService.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":516,"title":{},"body":{"injectables/AudioService.html":{}}}],["mediametadata(metadata",{"_index":1633,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1605,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionaction",{"_index":1600,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1602,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1635,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1590,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":3019,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":3268,"title":{},"body":{"license.html":{}}}],["medium')?.['#text",{"_index":1458,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["mega')?.['#text",{"_index":1461,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["member",{"_index":3273,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2372,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["menutrigger",{"_index":2270,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["merchantability",{"_index":3332,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1252,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.description",{"_index":1270,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":1271,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1417,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1383,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["meta",{"_index":1656,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"todo.html":{}}}],["meta.coverurl.originalurl",{"_index":1761,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl?.originalurl?.startswith('blob",{"_index":1762,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl?.thumburl?.startswith('blob",{"_index":1764,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1760,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1771,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":116,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1758,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":1412,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["metadata.service",{"_index":1682,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1406,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:36",{"_index":1469,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":1349,"title":{},"body":{"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1717,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.coverurl.thumburl",{"_index":1721,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1719,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1730,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":118,"title":{"injectables/MetadataService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["metadataservice.processing",{"_index":1528,"title":{},"body":{"components/LibraryComponent.html":{}}}],["metadataservice.processionpercent",{"_index":2471,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadataservice.statustext",{"_index":1529,"title":{},"body":{"components/LibraryComponent.html":{}}}],["metadatasettingscomponent",{"_index":374,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["meter",{"_index":3057,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":3423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1444,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["methods",{"_index":414,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["mic",{"_index":3379,"title":{},"body":{"todo.html":{}}}],["middlechunk",{"_index":1782,"title":{},"body":{"injectables/MetadataService.html":{}}}],["middlepos",{"_index":1779,"title":{},"body":{"injectables/MetadataService.html":{}}}],["migrating",{"_index":2518,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2511,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["min",{"_index":2140,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2701,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["mindecibels",{"_index":274,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["minfreq",{"_index":934,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["miscellaneous",{"_index":2981,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":3065,"title":{},"body":{"index.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":3145,"title":{},"body":{"license.html":{}}}],["module",{"_index":1358,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["modules",{"_index":3358,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monochrome.svg",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["moral",{"_index":3199,"title":{},"body":{"license.html":{}}}],["more",{"_index":678,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{}}}],["motabass",{"_index":3368,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":2194,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":2449,"title":{},"body":{"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":3169,"title":{},"body":{"license.html":{}}}],["mouseevent",{"_index":2281,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["mp3",{"_index":962,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":967,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mtb",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":3462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":722,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":1863,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1684,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzapi",{"_index":1872,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":1683,"title":{"injectables/MusicbrainzService.html":{}},"body":{"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":743,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Color.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":686,"title":{},"body":{"interfaces/Chainable.html":{}}}],["narrowing",{"_index":2529,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":3232,"title":{},"body":{"license.html":{}}}],["nativebrowserfileloaderservice",{"_index":806,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigateto",{"_index":2418,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2421,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigator.getgamepads",{"_index":1139,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1632,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1636,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1627,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1622,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1631,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1630,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2953,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2954,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":780,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nearby",{"_index":2348,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["necessary",{"_index":3348,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":3189,"title":{},"body":{"license.html":{}}}],["new",{"_index":168,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["newsize",{"_index":301,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["newtrack",{"_index":2063,"title":{},"body":{"injectables/PlayerService.html":{}}}],["next",{"_index":1566,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1577,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1351,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2938,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ngafterviewinit",{"_index":1007,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngarraypipesmodule",{"_index":93,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ngclass",{"_index":2265,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2528,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2530,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":1021,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":225,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngx",{"_index":94,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":797,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1156,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":1685,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["nodes",{"_index":549,"title":{},"body":{"injectables/AudioService.html":{}}}],["non",{"_index":3301,"title":{},"body":{"license.html":{}}}],["none",{"_index":534,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["nothing",{"_index":2051,"title":{},"body":{"injectables/PlayerService.html":{}}}],["now",{"_index":2907,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["null",{"_index":1165,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(a.track",{"_index":211,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(axisindex",{"_index":1130,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(b.track",{"_index":214,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(buttonindex",{"_index":1128,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(atrack",{"_index":217,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(btrack",{"_index":218,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(duration",{"_index":1619,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number.nan",{"_index":210,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbers",{"_index":216,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbervalue",{"_index":882,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["nx",{"_index":3507,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["object",{"_index":1726,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":3466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1732,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":3357,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1225,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":1256,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":1268,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2458,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2875,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":1263,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2878,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtained",{"_index":1050,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["obtaining",{"_index":3347,"title":{},"body":{"license.html":{}}}],["offers",{"_index":3326,"title":{},"body":{"license.html":{}}}],["offline",{"_index":3067,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":300,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":3428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":2358,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ogg",{"_index":964,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["oldsource",{"_index":617,"title":{},"body":{"injectables/AudioService.html":{}}}],["onchanges",{"_index":2475,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["oncontextmenu",{"_index":2273,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["oncontextmenu(event",{"_index":2280,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ondestroy",{"_index":975,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":735,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["onfilehandlesdropped",{"_index":2419,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilehandlesdropped(files",{"_index":2425,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped",{"_index":2420,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped(files",{"_index":2427,"title":{},"body":{"components/ShellComponent.html":{}}}],["oninit",{"_index":87,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1833,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1838,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onsliderpositionchanged",{"_index":2164,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":2175,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1834,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1841,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1835,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1843,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1836,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1845,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":2165,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onvolumechange(value",{"_index":2177,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["open",{"_index":2367,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["opened",{"_index":2373,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["openedstate",{"_index":2484,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":825,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2482,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["option",{"_index":2810,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["optional",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":705,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":1247,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":1254,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":966,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":1918,"title":{},"body":{"injectables/MusicbrainzService.html":{},"license.html":{}}}],["originalfn",{"_index":709,"title":{},"body":{"interfaces/Chainable.html":{}}}],["originalurl",{"_index":749,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["os",{"_index":3053,"title":{},"body":{"index.html":{}}}],["osc",{"_index":315,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2702,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":3058,"title":{},"body":{"index.html":{}}}],["oscilloscopepath",{"_index":3424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":292,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":314,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":3069,"title":{},"body":{"index.html":{}}}],["others",{"_index":3168,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":219,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["out",{"_index":1375,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{}}}],["output",{"_index":994,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":2338,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":984,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":990,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":976,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":979,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":978,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":973,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":993,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":996,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:15",{"_index":995,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:39",{"_index":991,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:49",{"_index":989,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:55",{"_index":987,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":972,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":971,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlayref",{"_index":2374,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.left",{"_index":2380,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.position",{"_index":2378,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.top",{"_index":2382,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overtly",{"_index":3250,"title":{},"body":{"license.html":{}}}],["overview",{"_index":3359,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":676,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["owner",{"_index":3124,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":3123,"title":{},"body":{"license.html":{}}}],["owners",{"_index":3130,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2920,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":2959,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":3506,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{}}],["palette",{"_index":1743,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1821,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1822,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1815,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1816,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1823,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1824,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1817,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1818,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1819,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1820,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1813,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1814,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pane:last",{"_index":2376,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["panel",{"_index":2476,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2477,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2478,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2474,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2494,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2491,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2498,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2499,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2493,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2496,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2497,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2504,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2500,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2501,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2503,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2502,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2473,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":3217,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1440,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":687,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":3226,"title":{},"body":{"license.html":{}}}],["part",{"_index":3166,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1235,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":3334,"title":{},"body":{"license.html":{}}}],["party",{"_index":3355,"title":{},"body":{"license.html":{}}}],["passed",{"_index":2912,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":3320,"title":{},"body":{"license.html":{}}}],["path",{"_index":3496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":3430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":3498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":418,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":296,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1392,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1352,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["perform",{"_index":3195,"title":{},"body":{"license.html":{}}}],["performance.now",{"_index":1198,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":3202,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3132,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":3342,"title":{},"body":{"license.html":{}}}],["permission",{"_index":847,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":3350,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3247,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":3061,"title":{},"body":{"index.html":{}}}],["person",{"_index":3174,"title":{},"body":{"license.html":{}}}],["person's",{"_index":3207,"title":{},"body":{"license.html":{}}}],["persons",{"_index":3346,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":3206,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1339,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pictures",{"_index":1740,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pipe",{"_index":115,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":2304,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":95,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{},"overview.html":{}}}],["pipetransform",{"_index":650,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1693,"title":{},"body":{"injectables/MetadataService.html":{}}}],["play",{"_index":419,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["play/pause",{"_index":2204,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playback",{"_index":548,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["player",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player'},{'name",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.component.html",{"_index":1927,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":1928,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":669,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":104,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":92,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1611,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":3501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/file",{"_index":2451,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/library",{"_index":3503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1850,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/ShellComponent.html":{}}}],["player/player",{"_index":2452,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.service",{"_index":2450,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.types",{"_index":2566,"title":{},"body":{"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":376,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":103,"title":{"injectables/PlayerService.html":{}},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":774,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["playerservice.currentlyloadedtrack();@let",{"_index":789,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["playerservice.currenttime",{"_index":2261,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playerservice.repeat",{"_index":2263,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playertoolbarcomponent",{"_index":378,"title":{"components/PlayerToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playing",{"_index":1612,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["playlist",{"_index":1532,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"todo.html":{}}}],["playlist'},{'name",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":2268,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":2269,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.filter((t",{"_index":2102,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.find((playlisttrack",{"_index":2117,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.findindex((track",{"_index":2332,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":2115,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":2112,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":1936,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":381,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.hash",{"_index":2091,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlisttrack.metadata?.hash",{"_index":2118,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":1947,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":2274,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":2283,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":1948,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":1969,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":3044,"title":{},"body":{"index.html":{}}}],["playtrack",{"_index":1499,"title":{},"body":{"components/LibraryComponent.html":{}}}],["playtrack(track",{"_index":236,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["playtrackbyhash",{"_index":1949,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playtrackbyhash(hash",{"_index":1971,"title":{},"body":{"injectables/PlayerService.html":{}}}],["please",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{}}}],["pluginnewanalysernode",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{}}}],["pointer",{"_index":1069,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["points",{"_index":919,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["pool",{"_index":2899,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":1998,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":3150,"title":{},"body":{"license.html":{}}}],["prefertagembeddedpicture",{"_index":1638,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefix",{"_index":3445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["present",{"_index":3339,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":3295,"title":{},"body":{"license.html":{}}}],["pressedbuttonscaches",{"_index":1126,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prevents",{"_index":2515,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":1950,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":704,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":2581,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":2542,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":2543,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":1887,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1865,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":3205,"title":{},"body":{"license.html":{}}}],["private",{"_index":506,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["process",{"_index":2910,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["processing",{"_index":1639,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["processingfile",{"_index":1640,"title":{},"body":{"injectables/MetadataService.html":{}}}],["processionpercent",{"_index":1641,"title":{},"body":{"injectables/MetadataService.html":{}}}],["production",{"_index":3163,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":817,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1366,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promise.all(promises",{"_index":1046,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promise.reject(new",{"_index":1363,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1037,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{}}}],["promises.push(promise",{"_index":1043,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promote",{"_index":3158,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":3271,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":383,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2396,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"properties.html":{}}}],["protected",{"_index":3188,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":3211,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3230,"title":{},"body":{"license.html":{}}}],["provide",{"_index":3089,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":3435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":3101,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":505,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":3447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":3436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":3442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":3095,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":3437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonelesschangedetection",{"_index":3434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":3138,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":3204,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3180,"title":{},"body":{"license.html":{}}}],["pure",{"_index":644,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":3108,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3153,"title":{},"body":{"license.html":{}}}],["pwa",{"_index":3039,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quarter",{"_index":1788,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterchunk",{"_index":1793,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterpos",{"_index":1791,"title":{},"body":{"injectables/MetadataService.html":{}}}],["query",{"_index":1432,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["queryparams",{"_index":1442,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["queue",{"_index":2052,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":3285,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["random",{"_index":2147,"title":{},"body":{"injectables/PlayerService.html":{}}}],["randomposition",{"_index":2110,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":2335,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["rate",{"_index":788,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["react",{"_index":876,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["read",{"_index":682,"title":{},"body":{"interfaces/Chainable.html":{}}}],["reader",{"_index":3078,"title":{},"body":{"index.html":{}}}],["reading",{"_index":1735,"title":{},"body":{"injectables/MetadataService.html":{}}}],["readonly",{"_index":144,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":1706,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/UpdateService.html":{}}}],["realkeys",{"_index":1273,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":3290,"title":{},"body":{"license.html":{}}}],["record",{"_index":1441,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2868,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["redirectto",{"_index":3497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":3148,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":3100,"title":{},"body":{"license.html":{}}}],["regards",{"_index":3215,"title":{},"body":{"license.html":{}}}],["register",{"_index":1325,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":1246,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":1104,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":1113,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":1105,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":1117,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1287,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":3441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":3440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":1251,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["regular",{"_index":1049,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["reject",{"_index":1353,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1380,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1372,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":3117,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":3094,"title":{},"body":{"license.html":{}}}],["release",{"_index":1894,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["release:${luceneescapequery.escape(album",{"_index":1885,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":1881,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2945,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":3139,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":3133,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1544,"title":{},"body":{"injectables/LibraryService.html":{}}}],["remainder",{"_index":3312,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":3314,"title":{},"body":{"license.html":{}}}],["remote",{"_index":1731,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverarturls",{"_index":82,"title":{"interfaces/RemoteCoverArtUrls.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":834,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["removed",{"_index":2094,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist",{"_index":1951,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist(track",{"_index":1974,"title":{},"body":{"injectables/PlayerService.html":{}}}],["renderer",{"_index":1000,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":997,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renew",{"_index":1724,"title":{},"body":{"injectables/MetadataService.html":{}}}],["repeat",{"_index":1944,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":734,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["repository",{"_index":3365,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":3327,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":3193,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":3164,"title":{},"body":{"license.html":{}}}],["request",{"_index":846,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["request.reject(new",{"_index":1386,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1388,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe(draw",{"_index":2923,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1393,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestwakelock",{"_index":2952,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":3351,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":3280,"title":{},"body":{"license.html":{}}}],["reset",{"_index":2371,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["resetfrequencybandgain",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{}}}],["resetfrequencybandgain(bandfrequency",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{}}}],["resizeobserver",{"_index":2839,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2876,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1377,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(tags",{"_index":1379,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1493,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["resolved",{"_index":1044,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["respect",{"_index":3316,"title":{},"body":{"license.html":{}}}],["response",{"_index":907,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["responsibility",{"_index":3344,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":3062,"title":{},"body":{"index.html":{}}}],["result",{"_index":1550,"title":{},"body":{"injectables/LibraryService.html":{}}}],["result.map((tag",{"_index":1553,"title":{},"body":{"injectables/LibraryService.html":{}}}],["result.matches",{"_index":2464,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":3106,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":1278,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["retained",{"_index":3200,"title":{},"body":{"license.html":{}}}],["return",{"_index":151,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":3147,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":3279,"title":{},"body":{"license.html":{}}}],["rgb(255",{"_index":1089,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0,0",{"_index":765,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["right",{"_index":944,"title":{},"body":{"components/EqualizerComponent.html":{},"components/SlidePanelComponent.html":{},"license.html":{}}}],["rights",{"_index":3118,"title":{},"body":{"license.html":{}}}],["root",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["root'},{'name",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotation",{"_index":2902,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":2424,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":2444,"title":{},"body":{"components/ShellComponent.html":{}}}],["routeroutlet",{"_index":2411,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":3425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":3300,"title":{},"body":{"license.html":{}}}],["run",{"_index":3511,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":3508,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":503,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1572,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":114,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":113,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["sample",{"_index":787,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":313,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["samples",{"_index":1790,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sandbox",{"_index":3077,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["saving",{"_index":3375,"title":{},"body":{"todo.html":{}}}],["scheme",{"_index":2557,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scientific",{"_index":3137,"title":{},"body":{"license.html":{}}}],["screen",{"_index":3055,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":2298,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollbehavior",{"_index":2352,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":2310,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":2347,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollposition",{"_index":2306,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":2299,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":2327,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":2330,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":2271,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["search",{"_index":1893,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["searchterm",{"_index":145,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["searchterm.tolowercase",{"_index":150,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["seconds",{"_index":1978,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft",{"_index":1952,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekleft(seconds",{"_index":1976,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":2179,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekright",{"_index":1953,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekright(seconds",{"_index":1979,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":2181,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekto",{"_index":1629,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["seektohandler(details",{"_index":2124,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1500,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":231,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1501,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":227,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selected",{"_index":2097,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectedalbum",{"_index":159,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":157,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":160,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selectnext",{"_index":1954,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":1955,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":1956,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":1983,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1502,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":233,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["send",{"_index":2918,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":1169,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separator",{"_index":3443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service/file",{"_index":948,"title":{},"body":{"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":718,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1405,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1471,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":3028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":119,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["service/metadata.service.ts",{"_index":1637,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:152",{"_index":1655,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:24",{"_index":1679,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:25",{"_index":1677,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1675,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1662,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:31",{"_index":1668,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:35",{"_index":1664,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:39",{"_index":1665,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:41",{"_index":1673,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:48",{"_index":1651,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:64",{"_index":1658,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:79",{"_index":1660,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":117,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":738,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":3030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":1866,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:17",{"_index":1867,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":793,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":3090,"title":{},"body":{"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":2196,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":2195,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":2197,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["services/loader/loader.service",{"_index":2447,"title":{},"body":{"components/ShellComponent.html":{}}}],["services/media",{"_index":2011,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":1932,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":2010,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1625,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service",{"_index":2012,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":3015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1593,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1603,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1608,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1610,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1606,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1598,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1592,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":523,"title":{},"body":{"injectables/AudioService.html":{},"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["set(filtered.tosorted((a",{"_index":169,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["set.svg",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor(color",{"_index":2586,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1594,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1599,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2706,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2716,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2707,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2718,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1595,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1604,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2708,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2720,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2709,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2722,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2545,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":2548,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2546,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":2550,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2710,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2724,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{}}}],["setgap",{"_index":2711,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2726,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2712,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2728,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{}}}],["setmindb",{"_index":2713,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2730,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setoverlayclass",{"_index":2590,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setplaybackstate(state",{"_index":1634,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor(color",{"_index":2575,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":1957,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":1985,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1596,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1607,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2714,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2732,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1370,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["settings",{"_index":564,"title":{},"body":{"injectables/AudioService.html":{},"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2406,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1831,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":2404,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1828,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2636,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":2536,"title":{},"body":{"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":1847,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":1846,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":1844,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1842,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:34",{"_index":1840,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":1837,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1827,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2405,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2407,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":385,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2643,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2644,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2874,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupvisualsworkerwithoptions",{"_index":3020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":3027,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":465,"title":{},"body":{"injectables/AudioService.html":{}}}],["shall",{"_index":3278,"title":{},"body":{"license.html":{}}}],["share",{"_index":3380,"title":{},"body":{"todo.html":{}}}],["sharereplay",{"_index":2446,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell",{"_index":2409,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell'},{'name",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2413,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2414,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":327,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":1241,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":2203,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["show",{"_index":1581,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showdelay",{"_index":3456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":819,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["showfilepickerandloadfiles",{"_index":2166,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["showpicker",{"_index":816,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["shows",{"_index":672,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2703,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":1945,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2485,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["sidenav",{"_index":2417,"title":{},"body":{"components/ShellComponent.html":{}}}],["signal",{"_index":88,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["signal(0",{"_index":470,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{}}}],["signal(44_100",{"_index":492,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(false",{"_index":485,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2734,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2738,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('basegain",{"_index":468,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2745,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2747,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":2555,"title":{},"body":{"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2753,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2755,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2757,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2760,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1661,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":2003,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":2006,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2768,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1674,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1676,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1678,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2936,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.localstorageservice.retrieve('volume",{"_index":494,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(true",{"_index":488,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(undefined",{"_index":158,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["signals",{"_index":525,"title":{},"body":{"injectables/AudioService.html":{},"directives/VisualsDirective.html":{}}}],["similar",{"_index":3238,"title":{},"body":{"license.html":{}}}],["sind",{"_index":1322,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1414,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["sizes",{"_index":2083,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":1073,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2422,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2510,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":3427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":388,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":387,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["small",{"_index":1777,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["small')?.['#text",{"_index":1457,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smallimage",{"_index":1454,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smooth",{"_index":2329,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2704,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":275,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["soll",{"_index":2684,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs/pseudo",{"_index":2146,"title":{},"body":{"injectables/PlayerService.html":{}}}],["song",{"_index":1965,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song.file.name",{"_index":2388,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":2384,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":2385,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.hash",{"_index":2363,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.hash",{"_index":2092,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":2389,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":2387,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":2386,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["soon",{"_index":1704,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sort",{"_index":193,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["sorting",{"_index":3374,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["spark",{"_index":1688,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["spark.append(endchunk",{"_index":1809,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.append(middlechunk",{"_index":1785,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.append(quarterchunk",{"_index":1795,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.append(threequarterchunk",{"_index":1800,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spark.end",{"_index":1810,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sparkmd5",{"_index":1687,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sparkmd5.arraybuffer",{"_index":1773,"title":{},"body":{"injectables/MetadataService.html":{}}}],["specified",{"_index":2101,"title":{},"body":{"injectables/PlayerService.html":{}}}],["spinner",{"_index":130,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["src",{"_index":2081,"title":{},"body":{"injectables/PlayerService.html":{}}}],["start",{"_index":914,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":3037,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["startvisualization(getdatamethod",{"_index":2894,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":524,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":3289,"title":{},"body":{"license.html":{}}}],["statustext",{"_index":1642,"title":{},"body":{"injectables/MetadataService.html":{}}}],["statutory",{"_index":3331,"title":{},"body":{"license.html":{}}}],["stop",{"_index":303,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2815,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storagesettingscomponent",{"_index":390,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":178,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":3467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":3470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(this.equalizergainvalues",{"_index":637,"title":{},"body":{"injectables/AudioService.html":{}}}],["styles",{"_index":968,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":136,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["styleurls",{"_index":977,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["sub",{"_index":1267,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":842,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":502,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"license.html":{}}}],["sublicensable",{"_index":3303,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2305,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":1226,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":3122,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1315,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1318,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":3236,"title":{},"body":{"license.html":{}}}],["successors",{"_index":3276,"title":{},"body":{"license.html":{}}}],["such",{"_index":3222,"title":{},"body":{"license.html":{}}}],["suche",{"_index":3372,"title":{},"body":{"todo.html":{}}}],["supported",{"_index":1626,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":3047,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":3324,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":3256,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":622,"title":{},"body":{"injectables/AudioService.html":{}}}],["switch",{"_index":2128,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["swupdate",{"_index":2658,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.activateupdate().then",{"_index":2675,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2663,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntildestroyed(this.destroref)).subscribe((event",{"_index":2664,"title":{},"body":{"injectables/UpdateService.html":{}}}],["system",{"_index":1057,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"todo.html":{}}}],["t",{"_index":2103,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tag",{"_index":182,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"index.html":{}}}],["tag.album",{"_index":184,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.album?.tolowercase().includes(lowersearchterm",{"_index":156,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist",{"_index":165,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist?.tolowercase().includes(lowersearchterm",{"_index":154,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.coverurl",{"_index":188,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.filename?.tolowercase().includes(lowersearchterm",{"_index":155,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.title?.tolowercase().includes(lowersearchterm",{"_index":153,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.year",{"_index":187,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tags",{"_index":753,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"index.html":{},"todo.html":{}}}],["tags.album",{"_index":1428,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":1427,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1756,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1747,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1749,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1680,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1342,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1347,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1344,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1753,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1754,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":719,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1338,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1755,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagswithoptionalbloburls",{"_index":1552,"title":{},"body":{"injectables/LibraryService.html":{}}}],["tagsworkerrequest",{"_index":750,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":752,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":2013,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":3296,"title":{},"body":{"license.html":{}}}],["target",{"_index":3381,"title":{},"body":{"todo.html":{}}}],["targetindex",{"_index":2331,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1312,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":697,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templateurl",{"_index":134,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["termination",{"_index":3282,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3183,"title":{},"body":{"license.html":{}}}],["territories",{"_index":3264,"title":{},"body":{"license.html":{}}}],["test",{"_index":543,"title":{},"body":{"injectables/AudioService.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":3510,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1413,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":739,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thebespokepixel/es",{"_index":2564,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["theme",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["theme.types",{"_index":2565,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice",{"_index":337,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice.initializetheme",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["themesettingscomponent",{"_index":392,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":3234,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":293,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["this._audiocontext",{"_index":574,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.createanalyser",{"_index":603,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.resume",{"_index":623,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.state",{"_index":621,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement",{"_index":572,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":584,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":591,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":601,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":577,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":581,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":582,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":598,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":593,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":589,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.currenttime",{"_index":633,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.fastseek(position",{"_index":632,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.loop",{"_index":630,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.pause",{"_index":626,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.play",{"_index":624,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.src",{"_index":618,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiosourcenode",{"_index":573,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers",{"_index":615,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":605,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.clear",{"_index":616,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":608,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":606,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode",{"_index":575,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.connect(analyser",{"_index":604,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.disconnect(analyser",{"_index":607,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[band",{"_index":566,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":635,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._gainnode",{"_index":576,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.asobservable",{"_index":527,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.next(true",{"_index":602,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._internalanalyzer",{"_index":2880,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":1262,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":2587,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.accentcolorpalette",{"_index":2588,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":1211,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...filedatas",{"_index":2089,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(...validfiles",{"_index":2059,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addtrackstoplaylist(...this.filteredbyserchterm",{"_index":245,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(...tracks",{"_index":244,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(track",{"_index":256,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtracktoplaylist(track",{"_index":238,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":2087,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.allowedtypes().includes(file.type",{"_index":1065,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.alpha",{"_index":2750,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2794,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2863,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2778,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2784,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2782,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2780,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2889,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2888,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2917,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2649,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2922,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1448,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.askuserforupdate().then((update",{"_index":2674,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.basegain",{"_index":880,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.currenttime",{"_index":1620,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2930,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2789,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1618,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.equalizergainvalues",{"_index":879,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":2066,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":2107,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1615,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1613,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":1997,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":2085,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2736,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2890,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":2073,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":2135,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":2133,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(value",{"_index":2252,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":1131,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":1184,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":1182,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":1173,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.bands",{"_index":922,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.barcount",{"_index":2740,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2798,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2857,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2881,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2884,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2883,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2882,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":570,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.breakpointobserver",{"_index":2457,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1435,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":1129,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":1180,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":1174,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":1188,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":1197,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":1170,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.caapi.getreleasegroupcovers(releasegroupid",{"_index":1900,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.canvas",{"_index":2842,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2869,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2848,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvasref",{"_index":884,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.canvasref()!.nativeelement",{"_index":885,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.capfalldown",{"_index":2743,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2802,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2741,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2800,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":1152,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":1151,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":1213,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":1146,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2533,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.colorconfig",{"_index":2861,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":2589,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":2578,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":1134,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":1897,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":1185,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":1181,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":557,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1759,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1734,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(filedata",{"_index":1702,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.currentfolderhandle",{"_index":826,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(entry.handle",{"_index":815,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(handle",{"_index":820,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":1996,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":1990,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":2086,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":2108,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":2121,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().length",{"_index":2062,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":2090,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist()[this.currentplaylist().length",{"_index":2064,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":2093,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":590,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.darkmode",{"_index":2591,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":2571,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1304,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":2221,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.default_deadspace",{"_index":1204,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":1116,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":1253,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1283,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1290,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1306,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2399,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2398,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1281,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":1136,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":1236,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":1017,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":1008,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":1014,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":1012,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drawequalizerresponse",{"_index":881,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.drop.bind(this",{"_index":1020,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":1019,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":592,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[band",{"_index":568,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":634,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":640,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":1265,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1430,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1429,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":1883,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2779,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2796,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.filehandlesdropped.emit(filehandles",{"_index":1048,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.fileinput",{"_index":1478,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1484,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1492,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1491,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1490,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1481,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1486,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1483,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1480,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.openfiles",{"_index":2088,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.files",{"_index":1494,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.files.map((file",{"_index":1488,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filesdroped.emit(files",{"_index":1067,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.filestoprocess",{"_index":1663,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.set(filedatas.length",{"_index":1699,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.update((files",{"_index":1707,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filteredbyserchterm",{"_index":163,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.filteredbyserchterm().filter((track",{"_index":242,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":1882,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":1210,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":1190,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":2206,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":2248,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":2250,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":2249,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":2236,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":2237,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":2244,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":2243,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":2246,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":2240,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":2245,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":2241,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":2242,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":2247,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":2238,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":2239,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":2218,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":2207,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":2208,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":2227,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":2225,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":2232,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":2214,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":2230,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":2216,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":2223,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":2234,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":2210,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":2212,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2788,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2786,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2742,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2806,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getcolorobject(new",{"_index":2595,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.getmetadata(filedata",{"_index":1710,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":2191,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer.files",{"_index":1061,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1362,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlefilefallback(event",{"_index":1051,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handlemessage",{"_index":1360,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.helpopen",{"_index":1280,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1288,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":1266,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":1248,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":1276,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":1269,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":2200,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":2201,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.register",{"_index":2202,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.id3tagsservice.extracttags(filedata.file",{"_index":1736,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":2222,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.indexeddbservice.add('library",{"_index":1757,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('library').topromise",{"_index":1861,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.update('directoryhandles",{"_index":821,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.indexeddbtracks.set(tagswithoptionalbloburls",{"_index":1555,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.isautoscrollenabled",{"_index":2311,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":2312,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":1205,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":580,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":583,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":631,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(false",{"_index":597,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(true",{"_index":600,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying",{"_index":625,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(false",{"_index":599,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(true",{"_index":596,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(false",{"_index":595,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(true",{"_index":629,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.lastfm_api_key",{"_index":1446,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1741,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":1031,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":1016,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.libraryservice.indexeddbtracks().filter((tag",{"_index":152,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.libraryservice.reload",{"_index":226,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.linethickness",{"_index":2763,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2804,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1578,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loaderservice.show",{"_index":1576,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loadingcounter",{"_index":1586,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loadlibrary",{"_index":1548,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.localstorage.clear",{"_index":2537,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.retrieve('equalizergainvalues",{"_index":473,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2795,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2799,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2803,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2801,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":2572,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('equalizergainvalues",{"_index":639,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2797,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2807,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2805,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2793,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('prefertagembeddedpicture",{"_index":1860,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2791,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('usetagembeddedpicture",{"_index":1858,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usetagscache",{"_index":1856,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usewebmetainfos",{"_index":1853,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2941,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mbapi.search('release",{"_index":1888,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.mediasessionservice",{"_index":2020,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":2026,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":2023,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":2021,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":2028,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":2030,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":2032,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":2024,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":2075,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":2034,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.menutrigger",{"_index":2365,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.meta.addtag",{"_index":2584,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.meta.updatetag",{"_index":2585,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.metadataservice.addfilestolibrary(...filedatas",{"_index":2105,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.createobjecturlforembeddedpicture(tag",{"_index":1554,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1859,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1857,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1855,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1852,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2783,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2792,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2855,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1742,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":2027,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1365,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2532,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2531,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2859,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2892,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":1011,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":627,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.pendingrequests.clear",{"_index":1403,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1371,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1395,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1385,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1376,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1400,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1722,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice.addfilestoplaylist(...filedata",{"_index":2468,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addfilestoplaylist(...files.map((file",{"_index":2467,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addtracktoplaylist(track",{"_index":263,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2749,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":2322,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.darkmuted?.hex",{"_index":763,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.lightmuted?.hex",{"_index":764,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.coverurl?.originalurl",{"_index":767,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.hash",{"_index":2361,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":2315,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":2262,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.next",{"_index":2231,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpause",{"_index":2205,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":2362,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.playtrackbyhash(track.hash",{"_index":239,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.previous",{"_index":2233,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectnext",{"_index":2228,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":2226,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":2251,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.stop",{"_index":2209,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playpause",{"_index":2022,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(newtrack",{"_index":2065,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":2113,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":2120,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":2116,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":2119,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1723,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":1192,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":2029,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":2576,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.primarycolorpalette",{"_index":2577,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.processing",{"_index":1670,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile",{"_index":1671,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile.set(filedata.file.name",{"_index":1701,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.register",{"_index":1240,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":1009,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":1027,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":2129,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":2131,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":2136,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":2134,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2951,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2850,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2925,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate(['/player",{"_index":240,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.router.navigate([route",{"_index":2466,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":594,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.scrolltobottom",{"_index":2320,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":2326,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":2302,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":148,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.seekleft(10",{"_index":2031,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":2215,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seekright(10",{"_index":2033,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":2217,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seektohandler(details",{"_index":2035,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":628,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.selectedalbum",{"_index":192,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(album",{"_index":232,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(undefined",{"_index":229,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":173,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist.set(artist",{"_index":228,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":2099,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":2122,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(track",{"_index":234,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack.set(undefined",{"_index":230,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.selectsong(track",{"_index":2072,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setaccentcolor(colors.peakcolor",{"_index":2574,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setaccentcolor(this.accentcolor",{"_index":2570,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setfrequencybandgain(bandfrequency",{"_index":641,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.setoverlayclass",{"_index":2568,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setplaybackstate('none",{"_index":1617,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1616,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1614,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setprimarycolor(colors.maincolor",{"_index":2573,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setprimarycolor(this.primarycolor",{"_index":2569,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setseekposition(details.seektime",{"_index":2127,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":2123,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2851,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.showfilepickerandloadfiles",{"_index":2235,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.shuffle",{"_index":2109,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":2137,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":2465,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2781,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2790,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2891,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2893,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":2025,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2864,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.swupdate",{"_index":2662,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2682,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2681,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.accentcolor",{"_index":938,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.darkmode",{"_index":762,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.primarycolor",{"_index":910,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":2067,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2638,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2650,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":1939,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":1245,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":2224,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.togglerepeat",{"_index":2213,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.toggleshuffle",{"_index":2211,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.totalfilestoprocess",{"_index":1667,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(0",{"_index":1708,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(filedatas.length",{"_index":1698,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.uniquealbums",{"_index":250,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1621,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.usetagembeddedpicture",{"_index":1720,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1716,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1738,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2870,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2873,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2871,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2872,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2844,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2849,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2931,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2939,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2940,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2787,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2766,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":538,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.wakelock",{"_index":2950,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2955,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":2958,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":2069,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":2071,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1354,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1361,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1359,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2846,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1381,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1398,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1397,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1399,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":3134,"title":{},"body":{"license.html":{}}}],["three",{"_index":1789,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterchunk",{"_index":1798,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterpos",{"_index":1796,"title":{},"body":{"injectables/MetadataService.html":{}}}],["through",{"_index":930,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{}}}],["throughout",{"_index":3111,"title":{},"body":{"license.html":{}}}],["thumb",{"_index":1910,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumbnail",{"_index":1916,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumbnails",{"_index":1909,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumburl",{"_index":748,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["time",{"_index":782,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["time.pipe",{"_index":772,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["time.ts",{"_index":2999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timed",{"_index":1374,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1369,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1346,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":757,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2908,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["tinycolor",{"_index":2563,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["tinycolor(hex",{"_index":2607,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(10",{"_index":2610,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(15",{"_index":2612,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(18",{"_index":2614,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(21",{"_index":2616,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(24",{"_index":2618,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(27",{"_index":2620,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(30",{"_index":2622,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(5",{"_index":2608,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(15",{"_index":2605,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(20",{"_index":2603,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(25",{"_index":2601,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(30",{"_index":2599,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(35",{"_index":2598,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(45",{"_index":2597,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(55",{"_index":2596,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(value",{"_index":2624,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":195,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":3478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":1931,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2469,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":541,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["todos",{"_index":3369,"title":{},"body":{"todo.html":{}}}],["toggle",{"_index":1849,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["togglehelpdialog",{"_index":1279,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2486,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":2167,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["togglerepeat",{"_index":1958,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["toggleshuffle",{"_index":1959,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["togglevisualmode",{"_index":2934,"title":{},"body":{"injectables/VisualsService.html":{}}}],["toolbar",{"_index":2152,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["toolbar.component",{"_index":2453,"title":{},"body":{"components/ShellComponent.html":{}}}],["toolbar.component.html",{"_index":2157,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2158,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":2151,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:106",{"_index":2176,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:112",{"_index":2178,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:123",{"_index":2171,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:127",{"_index":2185,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:131",{"_index":2186,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:135",{"_index":2183,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:140",{"_index":2174,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:144",{"_index":2180,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:148",{"_index":2182,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:152",{"_index":2173,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:156",{"_index":2169,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:160",{"_index":2184,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:29",{"_index":2188,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:30",{"_index":2190,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":2187,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:32",{"_index":2189,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:34",{"_index":2192,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar/player",{"_index":2150,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["top",{"_index":2487,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["tosignal",{"_index":2448,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2430,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1314,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["totalfilestoprocess",{"_index":1669,"title":{},"body":{"injectables/MetadataService.html":{}}}],["touppercase",{"_index":1317,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":91,"title":{"interfaces/Track.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{}}}],["track.album",{"_index":247,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.artist",{"_index":243,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.coverurl",{"_index":1537,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.filename",{"_index":1540,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.hash",{"_index":269,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.metadata",{"_index":2074,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":2078,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":2077,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.originalurl",{"_index":2082,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.originalurl",{"_index":2080,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":2076,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.hash",{"_index":2333,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["track.title",{"_index":1539,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.track",{"_index":1538,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum",{"_index":1503,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum(index",{"_index":267,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyartist",{"_index":1504,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyartist(index",{"_index":266,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyhash",{"_index":1505,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackbyhash(index",{"_index":268,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackmetadata",{"_index":724,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":191,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tracks().length",{"_index":1536,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tracks.push(...albumtracks",{"_index":254,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trademark",{"_index":3319,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":3302,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2919,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":646,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":647,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["translate",{"_index":3197,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2811,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["treaty",{"_index":3243,"title":{},"body":{"license.html":{}}}],["tree",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trigger",{"_index":2364,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menu",{"_index":2369,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menudata",{"_index":2366,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.openmenu",{"_index":2368,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["true",{"_index":645,"title":{},"body":{"pipes/BandPipe.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":818,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["ts",{"_index":2039,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tslib",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":1114,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3385,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":732,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["types",{"_index":2041,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ui",{"_index":2324,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":306,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["unconditional",{"_index":3305,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":3253,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":209,"title":{},"body":{"interfaces/Album.html":{},"pipes/BitratePipe.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":3182,"title":{},"body":{"license.html":{}}}],["understands",{"_index":3353,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":3213,"title":{},"body":{"license.html":{}}}],["unique",{"_index":179,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["uniquealbums",{"_index":172,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniquealbums().length",{"_index":1533,"title":{},"body":{"components/LibraryComponent.html":{}}}],["uniqueartists",{"_index":161,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniqueartists().length",{"_index":1531,"title":{},"body":{"components/LibraryComponent.html":{}}}],["unit",{"_index":3509,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":3085,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1326,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":1272,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["update",{"_index":588,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["update.service",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["updated",{"_index":2325,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["updateinterval",{"_index":2913,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1597,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1609,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updateservice",{"_index":339,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["updateservice.init",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["upload",{"_index":666,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":3120,"title":{},"body":{"license.html":{}}}],["url",{"_index":710,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1356,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2845,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":619,"title":{},"body":{"injectables/AudioService.html":{}}}],["url.createobjecturl(new",{"_index":1728,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.originalurl",{"_index":1763,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.thumburl",{"_index":1765,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1751,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":620,"title":{},"body":{"injectables/AudioService.html":{}}}],["urls",{"_index":1727,"title":{},"body":{"injectables/MetadataService.html":{}}}],["urlsearchparams",{"_index":1443,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["use",{"_index":206,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"license.html":{},"todo.html":{}}}],["useclass",{"_index":3461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2516,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":3452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":848,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["usermediainput",{"_index":3378,"title":{},"body":{"todo.html":{}}}],["uses",{"_index":3048,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1643,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1644,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":3455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1645,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":3040,"title":{},"body":{"index.html":{}}}],["v",{"_index":3219,"title":{},"body":{"license.html":{}}}],["validfiles",{"_index":2054,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.length",{"_index":2058,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.push",{"_index":2057,"title":{},"body":{"injectables/PlayerService.html":{}}}],["value",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":883,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":654,"title":{},"body":{"pipes/BandPipe.html":{}}}],["value.tostring().slice(0",{"_index":652,"title":{},"body":{"pipes/BandPipe.html":{}}}],["values",{"_index":878,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["var",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":3393,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":2255,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["various",{"_index":673,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verfügbar",{"_index":2683,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":3021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle).then((granted",{"_index":813,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":845,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2668,"title":{},"body":{"injectables/UpdateService.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2666,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2677,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2670,"title":{},"body":{"injectables/UpdateService.html":{}}}],["very",{"_index":1776,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["vi",{"_index":3221,"title":{},"body":{"license.html":{}}}],["via",{"_index":3377,"title":{},"body":{"todo.html":{},"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":742,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["vibrant.from(url).getpalette",{"_index":1812,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1686,"title":{},"body":{"injectables/MetadataService.html":{}}}],["viewchild",{"_index":873,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":2436,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('menutrigger",{"_index":2287,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild('scrollviewport",{"_index":2290,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild>('eqcanvas",{"_index":868,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["viewport",{"_index":2301,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":2337,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":2354,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":2307,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":2328,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":2360,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":2353,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":3237,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":1028,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visible",{"_index":1029,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":2336,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":2339,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":3059,"title":{},"body":{"index.html":{}}}],["visualizefrequencybars",{"_index":2816,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2821,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2817,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2823,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizer.component.html",{"_index":2696,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2697,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":771,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":2292,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":394,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":308,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":304,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizerworker",{"_index":2838,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2933,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals",{"_index":3376,"title":{},"body":{"todo.html":{}}}],["visuals.types",{"_index":2832,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2777,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2774,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2773,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":294,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":397,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":2705,"title":{"injectables/VisualsService.html":{}},"body":{"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":2808,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":298,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":2254,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["volume",{"_index":413,"title":{},"body":{"injectables/AudioService.html":{},"components/PlayerToolbarComponent.html":{}}}],["volumeicon",{"_index":2159,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["voluntarily",{"_index":3178,"title":{},"body":{"license.html":{}}}],["wait",{"_index":2316,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":3322,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3245,"title":{},"body":{"license.html":{}}}],["waives",{"_index":3254,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2943,"title":{},"body":{"injectables/WakelockService.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2949,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":2009,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":3022,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2060,"title":{},"body":{"injectables/PlayerService.html":{}}}],["warranties",{"_index":3099,"title":{},"body":{"license.html":{}}}],["wav",{"_index":965,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["we're",{"_index":1053,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/PlayerService.html":{}}}],["web",{"_index":3038,"title":{},"body":{"index.html":{},"properties.html":{}}}],["webstorage",{"_index":500,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["webworker",{"_index":3370,"title":{},"body":{"todo.html":{}}}],["well",{"_index":3262,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1768,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2687,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":3152,"title":{},"body":{"license.html":{}}}],["whether",{"_index":3260,"title":{},"body":{"license.html":{}}}],["white",{"_index":1087,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["width",{"_index":888,"title":{},"body":{"components/EqualizerComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window",{"_index":2047,"title":{},"body":{"injectables/PlayerService.html":{}}}],["window.focus",{"_index":2050,"title":{},"body":{"injectables/PlayerService.html":{}}}],["wish",{"_index":3131,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":3450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":3448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":3446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1589,"title":{},"body":{"injectables/LoaderService.html":{},"license.html":{}}}],["withviewtransitions",{"_index":3451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":3125,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1350,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1355,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":3438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":3066,"title":{},"body":{"index.html":{}}}],["works",{"_index":838,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":3112,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":3265,"title":{},"body":{"license.html":{}}}],["writablesignal",{"_index":1094,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["writes",{"_index":2514,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["writing",{"_index":3382,"title":{},"body":{"todo.html":{}}}],["wurde",{"_index":1177,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x",{"_index":912,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y",{"_index":913,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":81,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["yield",{"_index":1703,"title":{},"body":{"injectables/MetadataService.html":{}}}],["z",{"_index":1080,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zugewiesen",{"_index":1157,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Album.html":{"url":"interfaces/Album.html","title":"interface - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverArtUrls\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverArtUrls\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverArtUrls } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { LibraryService } from './library.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverArtUrls;\n}\n\n@Component({\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix,\n    MatProgressSpinner\n  ],\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss'\n})\nexport default class LibraryComponent implements OnInit {\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n  libraryService = inject(LibraryService);\n\n  readonly searchTerm = signal('');\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  ngOnInit() {\n    this.libraryService.reload();\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  imports: [ShellComponent],\n  templateUrl: './app.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    const updateService = inject(UpdateService);\n    const iconRegistry = inject(MatIconRegistry);\n    const sanitizer = inject(DomSanitizer);\n    const themeService = inject(ThemeService);\n\n    void updateService.init();\n\n    themeService.initializeTheme();\n\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    iconRegistry.addSvgIcon('logo', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                resetFrequencyBandGain\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nresetFrequencyBandGain(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FREQUENCY_BANDS, FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport type EqualizerGainValues = {\n  [Band in FrequencyBand]: number;\n};\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private localStorageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.localStorageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.localStorageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._eqGainNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      this._eqGainNode.disconnect(analyser);\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    for (const analyser of this._connectedAnalyzers) {\n      this._eqGainNode.disconnect(analyser);\n    }\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = structuredClone(this.equalizerGainValues());\n    bandGains[bandFrequency] = gainValue;\n\n    this.localStorageService.store('equalizerGainValues', bandGains);\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  resetFrequencyBandGain(bandFrequency: FrequencyBand) {\n    this.setFrequencyBandGain(bandFrequency, 0);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand, ...arguments_: unknown[]): string {\n    if (!value) {\n      return '';\n    }\n\n    if (value = 1000 && value = 10_000) {\n      return value.toString().slice(0, 2) + 'K';\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate'\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | undefined): string {\n    if (!value) {\n      return '0';\n    }\n    const bitrate = Math.round(value / 1000);\n    return `${bitrate} kb/s`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton, getLoadFilesMenuEntry } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.wait(300);\n  getLoadFilesMenuEntry().click();\n\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Color {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            TimePipe\n                            BitratePipe\n                                VisualizerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Readonly\n                                coverUrl\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.originalUrl)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BitratePipe } from './bitrate.pipe';\nimport { VisualizerComponent } from '../visualizer/visualizer.component';\nimport { PlayerService } from '../player.service';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  imports: [TimePipe, BitratePipe, VisualizerComponent],\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CoverDisplayComponent {\n  private themeService = inject(ThemeService);\n  playerService = inject(PlayerService);\n\n  readonly coverUrl = computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.originalUrl);\n\n  readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = playerService.currentlyLoadedTrack();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = playerService.currentlyLoadedTrack();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirHandleEntry.html":{"url":"interfaces/DirHandleEntry.html","title":"interface - DirHandleEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirHandleEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:     FileSystemDirectoryHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemDirectoryHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-equalizer\n            \n\n\n            \n                imports\n                \n                            MatSliderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                BANDS\n                            \n                            \n                                    Readonly\n                                canvasRef\n                            \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                            \n                                drawEqualizerResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawEqualizerResponse\n                        \n                    \n                \n            \n            \n                \ndrawEqualizerResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild>('eqCanvas')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, effect, ElementRef, inject, viewChild } from '@angular/core';\nimport { AudioService } from '../audio.service';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FREQUENCY_BANDS } from '../player.types';\nimport { ThemeService } from '../../theme/theme.service';\n\n@Component({\n  selector: 'mtb-equalizer',\n  imports: [MatSliderModule],\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  audioService = inject(AudioService);\n  themeService = inject(ThemeService);\n  readonly canvasRef = viewChild>('eqCanvas');\n\n  BANDS = FREQUENCY_BANDS;\n\n  constructor() {\n    // React to changes in equalizer values\n    effect(() => {\n      this.audioService.equalizerGainValues(); // Track the signal\n      this.audioService.baseGain(); // Track gain changes\n      this.drawEqualizerResponse();\n    });\n  }\n\n  displayFunction(value: number): string {\n    const numberValue = value.toFixed(1);\n    return numberValue + ' dB';\n  }\n\n  drawEqualizerResponse(): void {\n    if (!this.canvasRef()) return;\n\n    const canvas = this.canvasRef()!.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw grid lines\n    ctx.strokeStyle = '#dddddd';\n    ctx.lineWidth = 0.2;\n\n    // Horizontal grid lines (every 3dB)\n    for (let db = -12; db  {\n      return ((Math.log10(freq) - Math.log10(minFreq)) / (Math.log10(maxFreq) - Math.log10(minFreq))) * width;\n    };\n\n    // Draw frequency response curve with gain applied\n    ctx.strokeStyle = this.themeService.primaryColor;\n    ctx.lineWidth = 3;\n\n    const freqPoints: { x: number; y: number }[] = [];\n\n    // Start with the lowest frequency\n    freqPoints.push({\n      x: 0,\n      y: height / 2 - ((eqValues[this.BANDS[0]] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw points for each frequency band with gain applied\n    for (const freq of this.BANDS) {\n      const x = getXPos(freq);\n      // Apply gain influence to the curve\n      const y = height / 2 - ((eqValues[freq] + (gainValue - 1) * 12) * height) / 24;\n      freqPoints.push({ x, y });\n    }\n\n    // End with the highest frequency\n    freqPoints.push({\n      x: width,\n      y: height / 2 - ((eqValues[this.BANDS.at(-1)!] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw curve through points\n    ctx.beginPath();\n    ctx.moveTo(freqPoints[0].x, freqPoints[0].y);\n\n    for (let i = 0; i  freq >= minFreq && freq = 1000 ? `${freq / 1000}k` : `${freq}`;\n      ctx.fillText(label, x, height - 5);\n    }\n\n    // Display gain value\n    ctx.fillStyle = this.themeService.accentColor;\n    ctx.font = 'bold 12px Arial';\n    ctx.textAlign = 'right';\n    ctx.fillText(`Gain: ${gainValue.toFixed(1)}x`, width - 10, 20);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  @for (band of BANDS; track band) {\n    \n      \n        {{ band | band }}-->\n        \n      \n    \n  }\n\n  \n    \n      GAIN-->\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          @for (band of BANDS; track band) {                  {{ band | band }}-->                    }            GAIN-->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ALLOWED_MIMETYPES = [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n];\n\nexport const ALLOWED_EXTENSIONS = ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4'];\n\nexport interface FileData {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Readonly\n                                fileHandlesDropped\n                            \n                            \n                                    Readonly\n                                filesDroped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(['*/*'])\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fileHandlesDropped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filesDroped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n  readonly fileHandlesDropped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n\n    // Try to get file handles first\n    if (event.dataTransfer?.items && 'getAsFileSystemHandle' in event.dataTransfer.items[0]) {\n      try {\n        const fileHandles: FileSystemFileHandle[] = [];\n        const promises: Promise[] = [];\n\n        for (const item of Array.from(event.dataTransfer.items)) {\n          const promise = (item as any).getAsFileSystemHandle().then((handle: any) => {\n            if (handle && handle.kind === 'file') {\n              fileHandles.push(handle);\n            }\n          });\n          promises.push(promise);\n        }\n\n        // When all promises are resolved, emit the file handles\n        Promise.all(promises)\n          .then(() => {\n            if (fileHandles.length > 0) {\n              this.fileHandlesDropped.emit(fileHandles);\n            } else {\n              // Fall back to regular files if no file handles were obtained\n              this.handleFileFallback(event);\n            }\n          })\n          .catch(() => {\n            // Fall back to regular files on error\n            this.handleFileFallback(event);\n          });\n\n        return; // Exit early - we're handling with file handles\n      } catch (error) {\n        // Fall through to file fallback\n        console.warn('File System Access API failed:', error);\n      }\n    }\n\n    // Fallback to regular files\n    this.handleFileFallback(event);\n  }\n\n  private handleFileFallback(event: DragEvent) {\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (const file of Array.from(droppedFiles)) {\n      if (file && this.allowedTypes().includes(file.type)) {\n        files.push(file);\n      }\n    }\n    this.filesDroped.emit(files);\n  }\n}\n\n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileData } from './file-loader.helpers';\nimport { WritableSignal } from '@angular/core';\n\nexport abstract class FileLoaderService {\n  abstract currentFolderHandle: WritableSignal;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                            \n                                buttonActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ButtonGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private checkIntervals: number[] = [];\n  private pressedButtonsCaches: ActionCache[][] = [];\n  private activeAxesCaches: ActionCache[][] = [];\n\n  buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule],\n  templateUrl: './hotkeys-help-dialog.component.html',\n  styleUrl: './hotkeys-help-dialog.component.scss'\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-hotkeys-help-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule],\n  templateUrl: './hotkeys-help-dialog.component.html',\n  styleUrl: './hotkeys-help-dialog.component.scss'\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _pause\n                            \n                            \n                                defaults\n                            \n                            \n                                    Optional\n                                dialogRef\n                            \n                            \n                                helpOpen\n                            \n                            \n                                hotkeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    element: this.document\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hotkeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private worker: Worker;\n  private nextId = 0;\n  private pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexedDbTrackMetadata.html":{"url":"interfaces/IndexedDbTrackMetadata.html","title":"interface - IndexedDbTrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IndexedDbTrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TrackMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService implements FileLoaderService {\n  private fileInput!: HTMLInputElement;\n\n  private files: File[] = [];\n\n  constructor() {\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  readonly currentFolderHandle = signal(undefined);\n\n  async openFiles(): Promise {\n    return this.files.map((file) => ({ file }));\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            NgArrayPipesModule\n                            MatMenu\n                            MatMenuContent\n                            MatMenuItem\n                            MatMenuTrigger\n                            MatIcon\n                            MatIconButton\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            SafePipe\n                            MatHint\n                            FormsModule\n                            MatFormField\n                            MatInput\n                            MatPrefix\n                            MatSuffix\n                            MatProgressSpinner\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                filteredBySerchterm\n                            \n                            \n                                libraryService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                searchTerm\n                            \n                            \n                                    Readonly\n                                selectedAlbum\n                            \n                            \n                                    Readonly\n                                selectedArtist\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                uniqueAlbums\n                            \n                            \n                                    Readonly\n                                uniqueArtists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAlbumToPlaylist\n                            \n                            \n                                    Async\n                                addArtistToPlaylist\n                            \n                            \n                                    Async\n                                addTracksToPlaylist\n                            \n                            \n                                    Async\n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                playTrack\n                            \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                trackByAlbum\n                            \n                            \n                                trackByArtist\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAlbumToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAlbumToPlaylist(album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addArtistToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addArtistToPlaylist(artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTracksToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbTracks\n                                            \n                                                        IndexedDbTrackMetadata[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTrackToPlaylist(track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:153\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAlbum\n                        \n                    \n                \n            \n            \n                \ntrackByAlbum(index: number, album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:228\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByArtist\n                        \n                    \n                \n            \n            \n                \ntrackByArtist(index: number, artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:232\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredBySerchterm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        libraryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LibraryService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedAlbum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedArtist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueAlbums\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueArtists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverArtUrls } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { LibraryService } from './library.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverArtUrls;\n}\n\n@Component({\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix,\n    MatProgressSpinner\n  ],\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss'\n})\nexport default class LibraryComponent implements OnInit {\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n  libraryService = inject(LibraryService);\n\n  readonly searchTerm = signal('');\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  ngOnInit() {\n    this.libraryService.reload();\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n    \n        @if (metadataService.processing()) {\n  {{ metadataService.statusText() }}\n}\n\n\n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ uniqueArtists().length }}) \n        \n          \n            \n           \n      \n        {{ artist }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ uniqueAlbums().length }})\n        \n          \n            \n           \n      \n        \n          @if (album && album.coverUrl) {\n            \n          }\n        \n        {{ album.name }}{{ album.year ? ` | ${album.year}` : '' }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ tracks().length }})\n        \n          \n            \n          \n        \n      \n      \n        \n          @if (track && track.coverUrl) {\n            \n          }\n        \n        @if (selectedAlbum()) {\n          {{ track.track ? `${track.track}. ` : '' }}{{ track.title || track.fileName }}\n        } @else {\n          {{ track.title || track.fileName }}\n        }\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ tracks().length }} entries\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (metadataService.processing()) {  {{ metadataService.statusText() }}}                    @if (libraryService.isLoading()) {                                        }        ALL ({{ uniqueArtists().length }})                                                        {{ artist }}                                                                          Add to Playlist                          @if (libraryService.isLoading()) {                                        }        ALL ({{ uniqueAlbums().length }})                                                                 @if (album && album.coverUrl) {                      }                {{ album.name }}{{ album.year ? ` | ${album.year}` : \\'\\' }}                                                                          Add to Playlist                          @if (libraryService.isLoading()) {                                        }        ALL ({{ tracks().length }})                                                                              @if (track && track.coverUrl) {                      }                @if (selectedAlbum()) {          {{ track.track ? `${track.track}. ` : \\'\\' }}{{ track.title || track.fileName }}        } @else {          {{ track.title || track.fileName }}        }                                                                          Add to Playlist            @if (searchTerm()) {                }  {{ tracks().length }} entries'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LibraryService.html":{"url":"injectables/LibraryService.html","title":"injectable - LibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                indexedDbTracks\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/library/library.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        reload\n                        \n                    \n                \n            \n            \n                \nreload()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        indexedDbTracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata } from '../player.types';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibraryService {\n  private indexedDbService = inject(NgxIndexedDBService);\n  private metadataService = inject(MetadataService);\n\n  readonly isLoading = signal(false);\n\n  readonly indexedDbTracks = signal([]);\n  constructor() {\n    void this.loadLibrary();\n  }\n\n  reload() {\n    this.loadLibrary();\n  }\n\n  private async loadLibrary() {\n    try {\n      this.isLoading.set(true);\n      const result = await firstValueFrom(this.indexedDbService.getAll('library'));\n      const tagsWithOptionalBlobUrls = result.map((tag) => {\n        return this.metadataService.createObjectUrlForEmbeddedPicture(tag);\n      });\n\n      this.indexedDbTracks.set(tagsWithOptionalBlobUrls || []);\n      this.isLoading.set(false);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => void) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                processing\n                            \n                            \n                                    Readonly\n                                processingFile\n                            \n                            \n                                    Readonly\n                                processionPercent\n                            \n                            \n                                    Readonly\n                                statusText\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToLibrary\n                            \n                            \n                                createObjectUrlForEmbeddedPicture\n                            \n                            \n                                    Async\n                                createTrackFromFile\n                            \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToLibrary\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToLibrary(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AsyncGenerator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createObjectUrlForEmbeddedPicture\n                        \n                    \n                \n            \n            \n                \ncreateObjectUrlForEmbeddedPicture(meta: TrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meta\n                                            \n                                                            TrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TrackMetadata\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTrackFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTrackFromFile(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.filesToProcess() > 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processingFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processionPercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        statusText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata, type Track, TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\nimport { FileData } from '../file-loader-service/file-loader.helpers';\nimport SparkMD5 from 'spark-md5';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private id3TagsService = inject(Id3TagsService);\n  private lastfmMetadataService = inject(LastfmMetadataService);\n  private musicbrainzService = inject(MusicbrainzService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  private readonly totalFilesToProcess = signal(0);\n  private readonly filesToProcess = signal(0);\n  readonly processionPercent = computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  });\n\n  readonly processing = computed(() => {\n    return this.filesToProcess() > 0;\n  });\n\n  readonly processingFile = signal('');\n\n  readonly statusText = computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  });\n\n  async *addFilesToLibrary(...fileDatas: FileData[]): AsyncGenerator {\n    if (fileDatas?.length) {\n      this.totalFilesToProcess.set(fileDatas.length);\n      this.filesToProcess.set(fileDatas.length);\n      for (const fileData of fileDatas.values()) {\n        this.processingFile.set(fileData.file.name);\n        const track = await this.createTrackFromFile(fileData);\n        if (track) {\n          yield track; // Yield each track as soon as it's ready\n        }\n        this.filesToProcess.update((files) => files - 1);\n      }\n      this.totalFilesToProcess.set(0);\n    }\n  }\n\n  async createTrackFromFile(fileData: FileData): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.getMetadata(fileData);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: fileData.file,\n      fileHandle: fileData.fileHandle,\n      metadata: metadata\n    };\n  }\n\n  async getMetadata(fileData: FileData): Promise {\n    this.processingFile.set(fileData.file.name + ' - Generating hash...');\n    const hash = await generateFileHash(fileData.file);\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('library', hash));\n\n      if (metadataCache) {\n        if (\n          metadataCache.embeddedPicture &&\n          this.useTagEmbeddedPicture() &&\n          (metadataCache.coverUrl.thumbUrl === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())\n        ) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumbUrl: url, originalUrl: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    this.processingFile.set(fileData.file.name + ' - Reading tags...');\n    const tags = await this.id3TagsService.extractTags(fileData.file);\n\n    if (!tags) {\n      // if no tags\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverArtUrls | undefined;\n\n    if (this.useWebMetainfos() && tags.artist && tags.album) {\n      this.processingFile.set(fileData.file.name + ' - Getting cover pictures...');\n      coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n      if (!coverUrls) {\n        coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n    this.processingFile.set(fileData.file.name + ' - Reading colors...');\n    if (coverUrls?.originalUrl) {\n      palette = await extractColorsWithNodeVibrant(coverUrls.originalUrl);\n    } else if (tags.picture) {\n      const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n      palette = await extractColorsWithNodeVibrant(objectUrl);\n      URL.revokeObjectURL(objectUrl);\n    }\n\n    const metadata: IndexedDbTrackMetadata = {\n      hash: hash,\n      fileName: fileData.file.name,\n      fileHandle: fileData.fileHandle,\n      coverUrl: coverUrls ?? { thumbUrl: this.PLACEHOLDER_URL, originalUrl: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await this.indexedDBService.add('library', metadata).toPromise();\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (meta.coverUrl.originalUrl === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      if (meta.coverUrl?.originalUrl?.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.originalUrl);\n      }\n      if (meta.coverUrl?.thumbUrl?.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.thumbUrl);\n      }\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumbUrl: url, originalUrl: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nasync function generateFileHash(file: File): Promise {\n  const spark = new SparkMD5.ArrayBuffer();\n  const fileSize = file.size;\n\n  // For very small files, hash the entire content\n  if (fileSize  1024 * 1024) {\n    const middlePos = Math.floor(fileSize / 2) - Math.floor(chunkSize / 2);\n    const middleChunk = await file.slice(middlePos, middlePos + chunkSize).arrayBuffer();\n    spark.append(middleChunk);\n  }\n\n  // For files larger than 8MB, add quarter and three-quarter samples\n  if (fileSize > 8 * 1024 * 1024) {\n    const quarterPos = Math.floor(fileSize * 0.25);\n    const quarterChunk = await file.slice(quarterPos, quarterPos + chunkSize).arrayBuffer();\n    spark.append(quarterChunk);\n\n    const threeQuarterPos = Math.floor(fileSize * 0.75);\n    const threeQuarterChunk = await file.slice(threeQuarterPos, threeQuarterPos + chunkSize).arrayBuffer();\n    spark.append(threeQuarterChunk);\n  }\n\n  // Last chunk - often contains important metadata in audio files\n  const endChunk = await file.slice(Math.max(0, fileSize - chunkSize), fileSize).arrayBuffer();\n  spark.append(endChunk);\n\n  return spark.end();\n}\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  try {\n    const palette = await Vibrant.from(url).getPalette();\n    return {\n      vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n      darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n      lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n      muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n      darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n      lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n    };\n  } catch (error) {\n    console.error('Error extracting colors with Vibrant:', error);\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule],\n  templateUrl: './metadata-settings.component.html'\n})\nexport class MetadataSettingsComponent {\n  metadataService = inject(MetadataService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n    this.localStorageService.store('useWebMetainfos', event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n    this.localStorageService.store('useTagsCache', event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('useTagEmbeddedPicture', event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('preferTagEmbeddedPicture', event.checked);\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('library').toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { CoverArtArchiveApi, MusicBrainzApi } from 'musicbrainz-api';\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private readonly mbApi = new MusicBrainzApi({\n    appName: 'gblaster',\n    appVersion: '1.0.0',\n    appContactInfo: 'markus.mohoritsch@gmx.at'\n  });\n\n  private readonly caApi = new CoverArtArchiveApi();\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n\n    try {\n      const data = await this.mbApi.search('release-group', { query });\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      // const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      // const coverData = await firstValueFrom(this.http.get(url));\n      const coverData = await this.caApi.getReleaseGroupCovers(releaseGroupId);\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image;\n\n      // Use large thumbnail or fall back to the full image\n      const original = coverImage.thumbnails.large || coverImage.image;\n\n      return { thumbUrl: thumb, originalUrl: original };\n    } catch {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-player\n            \n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { PlayerService } from './player.service';\nimport { TitleService } from '../services/title.service';\nimport { AudioService } from './audio.service';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  selector: 'mtb-player',\n  imports: [PlaylistComponent, MatButtonModule, MatIconModule, CoverDisplayComponent, MatToolbarModule, MatTooltipModule, MatSliderModule, MatMenuModule],\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class PlayerComponent implements OnInit {\n  private titleService = inject(TitleService);\n  private fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n\n  ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                playTrackByHash\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                removeTrackFromPlaylist\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:51\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \naddTrackToPlaylist(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:215\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrackByHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrackByHash(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:254\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:236\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTrackFromPlaylist\n                        \n                    \n                \n            \n            \n                \nremoveTrackFromPlaylist(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:298\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:302\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:281\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:316\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:335\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n  private audioService = inject(AudioService);\n  private localStorageService = inject(LocalStorageService);\n  private fileLoaderService = inject(FileLoaderService);\n  private metadataService = inject(MetadataService);\n  private themeService = inject(ThemeService);\n  private wakelockService = inject(WakelockService, { optional: true });\n  private mediaSessionService = inject(MediaSessionService, { optional: true });\n\n  private destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  readonly durationSeconds = computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Focus the window first to ensure we're the active window\n        window.focus();\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n\n        const validFiles: FileData[] = [];\n\n        for (const fileHandle of launchParameters.files) {\n          try {\n            const file = await fileHandle.getFile();\n            if (ALLOWED_MIMETYPES.includes(file.type)) {\n              validFiles.push({ file, fileHandle });\n            }\n          } catch (error) {\n            console.error('Error processing file:', error);\n          }\n        }\n\n        if (validFiles.length > 0) {\n          await this.addFilesToPlaylist(...validFiles);\n          // If you want to play the first file immediately\n          // if (validFiles.length && this.currentPlaylist().length) {\n          //   const newTrack = this.currentPlaylist()[this.currentPlaylist().length - validFiles.length];\n          //   await this.playTrack(newTrack);\n          // }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.originalUrl ? [{ src: track.metadata.coverUrl.originalUrl, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const fileDatas: FileData[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...fileDatas);\n  }\n\n  addTrackToPlaylist(song: Track) {\n    if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.hash === song.metadata?.hash)) {\n      this.currentPlaylist.update((playlist) => [...playlist, song]);\n    }\n  }\n\n  removeTrackFromPlaylist(track: Track) {\n    // If the removed track is currently loaded, stop playback\n    if (this.currentlyLoadedTrack() === track) {\n      void this.stop();\n    }\n\n    // If the removed track is currently selected, deselect it\n    if (this.selectedTrack() === track) {\n      this.selectedTrack.set(undefined);\n    }\n    // Update the playlist by filtering out the specified track\n    this.currentPlaylist.update((playlist) => playlist.filter((t) => t !== track));\n  }\n\n  async addFilesToPlaylist(...fileDatas: FileData[]) {\n    for await (const track of this.metadataService.addFilesToLibrary(...fileDatas)) {\n      this.addTrackToPlaylist(track);\n    }\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async playTrackByHash(hash: string) {\n    const playlist = this.currentPlaylist();\n\n    const track = playlist.find((playlistTrack) => playlistTrack.metadata?.hash === hash);\n    if (track) {\n      await this.playTrack(track);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // eslint-disable-next-line sonarjs/pseudo-random\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerToolbarComponent.html":{"url":"components/PlayerToolbarComponent.html","title":"component - PlayerToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-toolbar\n            \n\n\n            \n                imports\n                \n                            MatIcon\n                            MatIconButton\n                            MatMenu\n                            MatSlider\n                            MatSliderThumb\n                            MatToolbar\n                            MatTooltip\n                            TimePipe\n                            MatMenuTrigger\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-toolbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player-toolbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                fileLoaderService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadLastDirectory\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showFilePickerAndLoadFiles\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLastDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLastDirectory()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showFilePickerAndLoadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    showFilePickerAndLoadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileLoaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FileLoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\n\nimport { MatMenu, MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { TimePipe } from '../time.pipe';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { PlayerService } from '../player.service';\nimport { AudioService } from '../audio.service';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { GamepadAxes, GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { HotkeysService } from '../../services/hotkeys/hotkeys.service';\nimport { FileLoaderService } from '../file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Component({\n  selector: 'player-toolbar',\n  imports: [MatIcon, MatIconButton, MatMenu, MatSlider, MatSliderThumb, MatToolbar, MatTooltip, TimePipe, MatMenuTrigger, MatMenuModule],\n  templateUrl: './player-toolbar.component.html',\n  styleUrl: './player-toolbar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayerToolbarComponent implements OnInit, OnDestroy {\n  private gamepadService = inject(GamepadService, { optional: true });\n  private hotkeysService = inject(HotkeysService, { optional: true });\n  fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  metadataService = inject(MetadataService);\n\n  readonly volumeIcon = computed(() => this.getVolumeIconForLevel(this.audioService.volume()));\n\n  ngOnInit() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showFilePickerAndLoadFiles());\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n\n  onSliderPositionChanged(value: number) {\n    if (value !== null) {\n      this.playerService.setSeekPosition(value);\n    }\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol \n    \n\n    \n        \n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n    \n      \n      Load folder/files...\n    \n    @if (fileLoaderService.currentFolderHandle()) {\n      \n        \n        Load last directory\n      \n    }\n  \n\n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (audioService.isPlaying()) {          } @else {          }                                                    Load folder/files...        @if (fileLoaderService.currentFolderHandle()) {                      Load last directory          }      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            FormsModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                menuTrigger\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                scrollViewport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                onContextMenu\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContextMenu\n                        \n                    \n                \n            \n            \n                \nonContextMenu(event: MouseEvent, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        menuTrigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('menuTrigger')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scrollViewport\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('scrollViewport')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'mtb-playlist',\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    FormsModule,\n    MatMenuModule\n  ],\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaylistComponent {\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  private destroRef = inject(DestroyRef);\n\n  readonly menuTrigger = viewChild('menuTrigger');\n\n  readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 140;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.playerService.currentPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.playerService.currentPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.playerService.currentPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.hash === currentTrack.metadata?.hash);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (\n        (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash\n      );\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByHash(index: number, song: Track): string {\n    return song.metadata.hash;\n  }\n\n  onContextMenu(event: MouseEvent, song: Track): void {\n    event.preventDefault();\n    const trigger = this.menuTrigger();\n    if (!trigger) return;\n    trigger.menuData = { song: song };\n\n    // Open with position\n    trigger.openMenu();\n\n    // set position\n    if (trigger.menu) {\n      // Forcefully reset the menu position after it's opened\n      setTimeout(() => {\n        const overlayRef = document.querySelector('.cdk-overlay-pane:last-child') as HTMLElement;\n        if (overlayRef) {\n          overlayRef.style.position = 'absolute';\n          overlayRef.style.left = `${event.clientX}px`;\n          overlayRef.style.top = `${event.clientY}px`;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying) {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n\n\n\n  \n\n\n\n\n  \n    \n      \n      Remove from playlist\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (song && song.metadata && song.metadata.coverUrl) {                  }        @let songPlaying = isPlaying(song)();        @if (songPlaying) {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }                          Remove from playlist      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverArtUrls.html":{"url":"interfaces/RemoteCoverArtUrls.html","title":"interface - RemoteCoverArtUrls","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverArtUrls\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            originalUrl\n                                        \n                                \n                                \n                                        \n                                            thumbUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-settings\n            \n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  selector: 'mtb-settings',\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent],\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss'\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                                FileDropOverlayComponent\n                                PlayerToolbarComponent\n                            MatProgressBar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                    Readonly\n                                isHandset\n                            \n                            \n                                loaderService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                sidenav\n                            \n                            \n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                    Async\n                                onFileHandlesDropped\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFileHandlesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFileHandlesDropped(files: FileSystemFileHandle[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        FileSystemFileHandle[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('drawer')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { PlayerService } from '../player/player.service';\nimport { ALLOWED_MIMETYPES, FileData } from '../player/file-loader-service/file-loader.helpers';\nimport { PlayerToolbarComponent } from '../player/player-toolbar/player-toolbar.component';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../player/metadata-service/metadata.service';\n\n@Component({\n  selector: 'mtb-shell',\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    RouterOutlet,\n    FileDropOverlayComponent,\n    PlayerToolbarComponent,\n    MatProgressBar\n  ],\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss'\n})\nexport class ShellComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  private router = inject(Router);\n  titleService = inject(TitleService);\n  loaderService = inject(LoaderService);\n  playerService = inject(PlayerService);\n  metadataService = inject(MetadataService);\n\n  readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  private isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files.map((file) => ({ file })));\n  }\n\n  async onFileHandlesDropped(files: FileSystemFileHandle[]) {\n    const fileData: FileData[] = [];\n    for (const fileHandle of files) {\n      const file = await fileHandle.getFile();\n      fileData.push({ file, fileHandle });\n    }\n\n    return this.playerService.addFilesToPlaylist(...fileData);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n\n      @if (loaderService.isLoading()) {\n        \n      }\n\n      \n\n      @let currentTrack = playerService.currentlyLoadedTrack();\n      {{ currentTrack?.metadata?.artist ? `${currentTrack?.metadata?.artist} - ` : '' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n    \n\n    @if (metadataService.processionPercent() \n    }\n    \n\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }            @let currentTrack = playerService.currentlyLoadedTrack();      {{ currentTrack?.metadata?.artist ? `${currentTrack?.metadata?.artist} - ` : \\'\\' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}        @if (metadataService.processionPercent()     }              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                buttonTooltip\n                            \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        buttonTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  imports: [MatCardModule, MatButtonModule],\n  templateUrl: './storage-settings.component.html'\n})\nexport class StorageSettingsComponent {\n  private localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accentColor\n                            \n                            \n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                primaryColor\n                            \n                            \n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FALLBACK_ACCENT_COLOR\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FALLBACK_PRIMARY_COLOR\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { TinyColor } from '@thebespokepixel/es-tinycolor';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Color } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  primaryColor = FALLBACK_PRIMARY_COLOR;\n\n  accentColor = FALLBACK_ACCENT_COLOR;\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  primaryColorPalette: Color[] = [];\n  accentColorPalette: Color[] = [];\n\n  initializeTheme() {\n    this.setOverlayClass();\n    this.setPrimaryColor(this.primaryColor);\n    this.setAccentColor(this.accentColor);\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n    this.localStorageService.store('darkMode', darkMode);\n    this.setOverlayClass();\n  }\n\n  setColors(colors: ColorConfig) {\n    this.setPrimaryColor(colors.mainColor);\n    this.setAccentColor(colors.peakColor);\n  }\n\n  private setPrimaryColor(color?: string) {\n    this.primaryColor = color || FALLBACK_PRIMARY_COLOR;\n    this.primaryColorPalette = this.computeColors(this.primaryColor);\n\n    for (const clr of this.primaryColorPalette) {\n      document.documentElement.style.setProperty(`--theme-primary-${clr.name}`, clr.hex);\n    }\n\n    this.meta.addTag({ name: 'theme-color', content: this.primaryColor }, true);\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor });\n  }\n\n  private setAccentColor(color?: string) {\n    this.accentColor = color || FALLBACK_ACCENT_COLOR;\n    this.accentColorPalette = this.computeColors(this.accentColor);\n\n    for (const clr of this.accentColorPalette) {\n      document.documentElement.style.setProperty(`--theme-accent-${clr.name}`, clr.hex);\n    }\n  }\n\n  private setOverlayClass() {\n    if (this.darkMode()) {\n      document.documentElement.style.setProperty('--app-color-scheme', 'dark');\n    } else {\n      document.documentElement.style.setProperty('--app-color-scheme', 'light');\n    }\n  }\n\n  private computeColors(hex: string): Color[] {\n    return [\n      this.getColorObject(new TinyColor(hex).lighten(55), '0'),\n      this.getColorObject(new TinyColor(hex).lighten(45), '10'),\n      this.getColorObject(new TinyColor(hex).lighten(35), '20'),\n      this.getColorObject(new TinyColor(hex).lighten(30), '25'),\n      this.getColorObject(new TinyColor(hex).lighten(25), '30'),\n      this.getColorObject(new TinyColor(hex).lighten(20), '35'),\n      this.getColorObject(new TinyColor(hex).lighten(15), '40'),\n      this.getColorObject(new TinyColor(hex), '50'),\n      this.getColorObject(new TinyColor(hex).darken(5), '60'),\n      this.getColorObject(new TinyColor(hex).darken(10), '70'),\n      this.getColorObject(new TinyColor(hex).darken(15), '80'),\n      this.getColorObject(new TinyColor(hex).darken(18), '90'),\n      this.getColorObject(new TinyColor(hex).darken(21), '95'),\n      this.getColorObject(new TinyColor(hex).darken(24), '98'),\n      this.getColorObject(new TinyColor(hex).darken(27), '99'),\n      this.getColorObject(new TinyColor(hex).darken(30), '100')\n    ];\n  }\n\n  private getColorObject(value: any, name: string): Color {\n    const color = new TinyColor(value);\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name: name,\n      hex: color.toHexString(false),\n      darkContrast: color.getBrightness() > lightnessLimit\n      // darkContrast: c.isLight()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  imports: [MatCardModule, MatCheckboxModule],\n  templateUrl: './theme-settings.component.html'\n})\nexport class ThemeSettingsComponent {\n  themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverArtUrls\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverArtUrls\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private swUpdate = inject(SwUpdate);\n  private dialog = inject(MatDialog);\n  private destroRef = inject(DestroyRef);\n\n  constructor() {\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroRef)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alpha\n                            \n                            \n                                analyser\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Readonly\n                                gap\n                            \n                            \n                                    Readonly\n                                lineThickness\n                            \n                            \n                                localStorageService\n                            \n                            \n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Readonly\n                                smoothing\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LocalStorageService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule],\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  private gamepadService = inject(GamepadService, { optional: true });\n  audioService = inject(AudioService);\n  playerService = inject(PlayerService);\n  visualsService = inject(VisualsService);\n  localStorageService = inject(LocalStorageService);\n\n  readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                analyser\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                mode\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({})\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('bars')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ thickness: 2 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:91\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]'\n})\nexport class VisualsDirective implements OnDestroy {\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i  {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                wakelock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        wakelock\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WakeLockSentinel\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  wakelock?: WakeLockSentinel;\n\n  constructor() {}\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : 20.1.0\n        \n            @angular/common : 20.1.0\n        \n            @angular/compiler : 20.1.0\n        \n            @angular/core : 20.1.0\n        \n            @angular/forms : 20.1.0\n        \n            @angular/material : 20.1.0\n        \n            @angular/platform-browser : 20.1.0\n        \n            @angular/router : 20.1.0\n        \n            @angular/service-worker : 20.1.0\n        \n            @thebespokepixel/es-tinycolor : ^3.1.0\n        \n            date-fns : ^4.1.0\n        \n            lucene-escape-query : ^1.0.1\n        \n            music-metadata : 11.6.0\n        \n            musicbrainz-api : ^0.25.0\n        \n            ngx-date-fns : 12.0.1\n        \n            ngx-indexed-db : 21.0.0\n        \n            ngx-pipes : 3.2.2\n        \n            ngx-webstorage : 19.0.1\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            spark-md5 : ^3.0.2\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../helpers-time.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/helpers-time.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    36 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.3.8\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : CC0-1.0\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs:\n\nuse webworker for node-vibrant\nAudio-File explorer + Suche\nPlaylist management (Sorting, Saving)\nVisuals via UserMediaInput from mic or system\nShare target\nWriting Meta-Tags\nFullscreen/Multiwindow Mode\nLocalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            EqualizerGainValues   (apps/.../audio.service.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/audio.service.ts\n    \n    \n        \n            \n                \n                    \n                    EqualizerGainValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../idexed-db-config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../player.types.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesMenuEntry   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZonelessChangeDetection(),\n    provideBrowserGlobalErrorListeners(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/idexed-db-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'gblasterDB',\n  version: 3,\n  objectStoresMeta: [\n    {\n      store: 'library',\n      storeConfig: { keyPath: 'hash', autoIncrement: false },\n      storeSchema: [\n        { name: 'hash', keypath: 'hash', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'directoryHandles',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/player.types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesMenuEntry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files_menu')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
