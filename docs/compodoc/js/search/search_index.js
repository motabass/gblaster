var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.072,1,2.836]],["body/interfaces/ActionCache.html",[0,0.127,1,4.349,2,1.053,3,0.232,4,0.232,5,0.143,6,3.421,7,0.385,8,0.551,9,5.342,10,1.559,11,0.577,12,0.011,13,0.4,14,5.032,15,3.884,16,1.472,17,5.076,18,2.102,19,0.717,20,3.421,21,1.245,22,1.697,23,4.781,24,3.421,25,2.856,26,3.631,27,3.631,28,3.421,29,3.082,30,3.631,31,3.421,32,3.421,33,3.421,34,3.24,35,3.24,36,4.938,37,3.082,38,3.631,39,2.508,40,3.631,41,2.761,42,3.631,43,3.177,44,3.631,45,3.919,46,3.631,47,3.24,48,3.631,49,3.421,50,3.631,51,3.421,52,3.631,53,3.421,54,3.631,55,3.24,56,3.631,57,3.421,58,3.631,59,3.082,60,3.631,61,3.24,62,3.631,63,3.421,64,3.631,65,3.421,66,3.631,67,3.421,68,3.631,69,3.421,70,3.24,71,3.631,72,3.631,73,3.631,74,3.631,75,0.008,76,0.008]],["title/interfaces/Album.html",[0,0.072,77,1.407]],["body/interfaces/Album.html",[0,0.047,2,0.572,3,0.126,4,0.126,5,0.173,7,0.135,8,0.359,10,1.17,11,0.382,12,0.011,13,0.205,16,0.799,19,1.08,21,0.676,39,1.634,75,0.005,76,0.005,77,2.425,78,2.512,79,3.728,80,1.343,81,3.267,82,2.022,83,0.697,84,0.976,85,3.406,86,0.525,87,3.008,88,2.255,89,0.377,90,1.76,91,1.995,92,1.674,93,1.529,94,4.087,95,3.263,96,1.674,97,3.831,98,1.76,99,2.833,100,1.858,101,1.22,102,0.949,103,3.48,104,3.831,105,3.831,106,3.217,107,1.972,108,2.333,109,1.76,110,3.48,111,1.467,112,3.48,113,1.308,114,3.48,115,3.48,116,3.48,117,2.281,118,3.48,119,2.109,120,1.467,121,3.217,122,2.109,123,1.322,124,1.858,125,2.553,126,1.972,127,3.48,128,2.109,129,3.831,130,3.831,131,3.831,132,3.831,133,3.831,134,2.512,135,1.071,136,2.512,137,1.308,138,2.512,139,1.071,140,0.353,141,1.105,142,1.179,143,1.058,144,1.858,145,1.858,146,2.281,147,1.972,148,1.674,149,1.949,150,4.644,151,2.512,152,2.512,153,1.996,154,3.831,155,2.512,156,2.512,157,1.615,158,2.512,159,2.512,160,2.512,161,2.512,162,2.512,163,2.512,164,3.435,165,2.512,166,2.281,167,2.512,168,6.322,169,5.196,170,2.512,171,2.512,172,2.512,173,3.134,174,1.686,175,2.512,176,2.512,177,3.831,178,5.196,179,3.831,180,4.644,181,2.437,182,2.281,183,3.48,184,5.081,185,2.512,186,1.972,187,3.831,188,2.512,189,2.512,190,2.512,191,2.512,192,2.512,193,2.512,194,3.48,195,2.512,196,5.57,197,2.512,198,2.512,199,3.008,200,1.491,201,2.512,202,4.644,203,2.281,204,1.529,205,4.644,206,2.512,207,2.512,208,4.644,209,2.512,210,2.512,211,1.674,212,3.831,213,2.512,214,2.514,215,2.512,216,3.831,217,3.831,218,2.512,219,2.512,220,2.512,221,2.512,222,2.512,223,2.512,224,2.281,225,2.281,226,1.972,227,2.512,228,2.512,229,2.512,230,2.164,231,1.972,232,1.105,233,2.512,234,2.651,235,2.512,236,2.512,237,2.512,238,2.512,239,2.512,240,1.141,241,1.366,242,2.281,243,2.281,244,1.674,245,0.922,246,2.512,247,2.512,248,2.512,249,3.48,250,2.512,251,2.512,252,2.512,253,2.512,254,2.281,255,2.281,256,2.512,257,2.512,258,2.512,259,4.644,260,2.512,261,5.196,262,2.512,263,2.512,264,3.831,265,3.831,266,1.972,267,2.512,268,2.512,269,2.512,270,2.512,271,2.512,272,2.512,273,2.512,274,2.512,275,3.831,276,3.831,277,2.512,278,1.41,279,2.512,280,2.512,281,2.512,282,1.76,283,2.512,284,2.512,285,2.281,286,2.512]],["title/interfaces/AnalyserConfig.html",[0,0.072,287,2.439]],["body/interfaces/AnalyserConfig.html",[0,0.137,2,1.001,3,0.221,4,0.221,5,0.136,7,0.236,8,0.533,10,1.631,11,0.592,12,0.011,13,0.402,18,2.869,19,1.035,22,1.614,25,2.764,75,0.008,76,0.008,287,3.621,288,2.797,289,4.145,290,4.449,291,4.449,292,4.449,293,2.677,294,2.568,295,2.677,296,2.677,297,2.677,298,2.677,299,2.677,300,2.677,301,2.677,302,2.797,303,2.797,304,2.568,305,3.466,306,3.325,307,3.325,308,3.325,309,2.568,310,3.325,311,2.677,312,2.861,313,2.861,314,3.325,315,2.677,316,2.677,317,2.568,318,2.797,319,2.93,320,2.468,321,3.543,322,2.677,323,2.468,324,4.016,325,3.076,326,2.677,327,3.325,328,3.607,329,3.607,330,2.376,331,3.325,332,3.747]],["title/components/AppComponent.html",[84,0.977,333,1.743]],["body/components/AppComponent.html",[3,0.219,4,0.219,5,0.175,12,0.011,13,0.233,75,0.008,76,0.008,80,1.515,83,0.69,84,1.6,86,0.91,89,0.653,111,2.542,123,1.609,135,2.412,139,2.412,140,0.612,141,1.916,153,1.79,333,3.022,334,2.075,335,2.044,336,2.044,337,2.044,338,4.959,339,3.962,340,3.962,341,3.301,342,3.382,343,1.75,344,3.022,345,6.443,346,3.051,347,0.991,348,4.959,349,3.049,350,4.959,351,4.959,352,3.049,353,2.443,354,4.182,355,3.655,356,5.137,357,4.959,358,4.959,359,4.959,360,4.959,361,4.959,362,4.959,363,4.959,364,3.655,365,4.959,366,4.959,367,4.959,368,4.959,369,4.959,370,4.959,371,4.959,372,2.044,373,2.57,374,2.201,375,1.746,376,3.123,377,2.044,378,2.044,379,1.978,380,1.552,381,2.044,382,1.978,383,2.044,384,1.978,385,1.856,386,2.044,387,1.746,388,1.8,389,1.8,390,2.656,391,1.978,392,3.123,393,1.978,394,2.044,395,1.978,396,1.8,397,2.044,398,1.978,399,2.044,400,1.856,401,1.978,402,1.978,403,2.044,404,1.978,405,1.916,406,2.044,407,1.978,408,2.044,409,1.978,410,1.856,411,1.978,412,1.978,413,1.978,414,1.916,415,1.978,416,2.044]],["title/injectables/AudioService.html",[417,0.757,418,2.153]],["body/injectables/AudioService.html",[0,0.042,3,0.114,4,0.114,5,0.165,7,0.121,8,0.331,10,1.427,11,0.502,12,0.011,13,0.233,16,2.116,21,1.79,22,1.597,39,3.067,41,1.66,75,0.005,76,0.005,80,1.392,83,0.48,85,2.153,86,0.473,88,2.113,89,0.34,91,1.179,96,1.509,102,0.855,140,0.318,143,1.43,149,2.258,153,1.79,157,1.152,174,2.164,230,1.597,234,0.908,241,1.261,266,1.777,320,2.76,330,2.351,343,0.7,346,2.113,347,1.673,374,0.881,417,0.698,418,1.985,419,1.029,420,2.056,421,4.351,422,3.654,423,3.416,424,4.467,425,3.952,426,4.351,427,4.351,428,3.952,429,4.351,430,4.467,431,0.926,432,4.918,433,4.028,434,4.028,435,3.861,436,4.13,437,4.918,438,4.028,439,4.028,440,4.028,441,4.028,442,4.028,443,4.028,444,3.212,445,4.351,446,2.579,447,2.579,448,1.717,449,3.536,450,4.48,451,2.579,452,2.179,453,1.392,454,3.416,455,3.536,456,3.888,457,2.579,458,4.028,459,2.579,460,2.579,461,1.44,462,2.579,463,3.536,464,4.845,465,2.579,466,1.961,467,2.477,468,2.994,469,2.579,470,2.579,471,3.536,472,2.579,473,3.536,474,5.334,475,2.579,476,3.536,477,2.579,478,3.536,479,3.536,480,2.579,481,2.579,482,3.536,483,2.579,484,4.467,485,2.579,486,2.579,487,3.536,488,2.768,489,2.768,490,2.768,491,2.9,492,2.649,493,2.9,494,2.9,495,3.048,496,3.048,497,3.048,498,2.579,499,4.748,500,2.579,501,2.579,502,4.918,503,2.579,504,2.579,505,2.579,506,3.536,507,2.579,508,3.536,509,2.969,510,2.579,511,2.579,512,2.579,513,1.44,514,1.322,515,2.969,516,2.969,517,3.416,518,0.741,519,2.264,520,1.44,521,2.264,522,4.181,523,2.264,524,2.264,525,2.264,526,2.264,527,4.467,528,2.264,529,2.264,530,2.264,531,3.536,532,2.264,533,2.264,534,2.264,535,2.264,536,2.776,537,2.056,538,2.969,539,2.264,540,2.264,541,2.615,542,3.212,543,2.264,544,2.264,545,2.264,546,2.264,547,1.777,548,2.264,549,2.264,550,2.264,551,3.536,552,2.264,553,1.901,554,1.44,555,1.901,556,1.586,557,2.264,558,1.674,559,1.901,560,2.264,561,1.901,562,3.536,563,3.536,564,2.264,565,2.776,566,3.536,567,3.536,568,2.264,569,2.264,570,2.264,571,2.264,572,2.264,573,2.264,574,2.264,575,2.264,576,1.586,577,1.378,578,1.901,579,2.264,580,2.264,581,2.264,582,2.264,583,2.264,584,2.264,585,3.536,586,2.264,587,2.264,588,2.264,589,2.264,590,2.264,591,2.264,592,3.212,593,2.264,594,2.264,595,2.056,596,2.264,597,1.777,598,1.271,599,2.264,600,1.586,601,2.264,602,2.264,603,2.264,604,2.264,605,2.264,606,2.264,607,2.264,608,2.264,609,2.264,610,2.264,611,2.264,612,2.264,613,2.264,614,2.264,615,2.264,616,2.264,617,2.264,618,2.264,619,3.536,620,2.264,621,2.056,622,2.056,623,2.056,624,2.056,625,1.674,626,2.056,627,2.264,628,2.264,629,2.264,630,3.536,631,2.264,632,2.264,633,2.264,634,2.264,635,2.264,636,2.264,637,3.536,638,2.264,639,2.264,640,2.264,641,2.264,642,2.264,643,2.264,644,2.264,645,2.264,646,2.264,647,2.264,648,2.264,649,2.264,650,2.264,651,2.264]],["title/interfaces/AxisGamepadAction.html",[0,0.072,24,2.836]],["body/interfaces/AxisGamepadAction.html",[0,0.127,1,3.41,2,1.05,3,0.232,4,0.232,5,0.142,6,3.41,7,0.346,8,0.55,9,3.62,10,1.468,11,0.577,12,0.011,13,0.399,14,5.457,15,3.872,16,1.467,17,5.336,18,2.095,19,0.715,20,3.41,21,1.241,22,1.692,23,4.775,24,4.34,25,3.135,26,5.336,27,5.336,28,3.41,29,3.073,30,3.62,31,3.41,32,3.41,33,3.41,34,3.23,35,3.23,36,4.929,37,3.073,38,3.62,39,2.503,40,3.62,41,2.756,42,3.62,43,3.171,44,3.62,45,3.911,46,3.62,47,3.23,48,3.62,49,3.41,50,3.62,51,3.41,52,3.62,53,3.41,54,3.62,55,3.23,56,3.62,57,3.41,58,3.62,59,3.073,60,3.62,61,3.23,62,3.62,63,3.41,64,3.62,65,3.41,66,3.62,67,3.41,68,3.62,69,3.41,70,3.23,71,3.62,72,3.62,73,3.62,74,3.62,75,0.008,76,0.008]],["title/pipes/BandPipe.html",[120,2.24,652,3.483]],["body/pipes/BandPipe.html",[3,0.262,4,0.262,5,0.161,11,0.428,12,0.011,13,0.28,19,0.982,43,2.817,75,0.009,76,0.009,80,1.554,83,0.618,89,0.783,96,3.475,98,3.653,120,3.7,123,1.484,140,0.733,142,2.449,157,1.598,347,1.187,431,1.365,448,1.328,452,1.859,453,1.187,456,4.516,461,3.317,466,2.02,492,3.175,517,4.974,652,5.755,653,5.94,654,6.336,655,2.605,656,4.974,657,4.379,658,5.755,659,6.825,660,5.94,661,5.755,662,5.94,663,5.94,664,5.94,665,5.94]],["title/interfaces/BarsVisualizerOptions.html",[0,0.072,327,2.24]],["body/interfaces/BarsVisualizerOptions.html",[0,0.136,2,0.961,3,0.212,4,0.212,5,0.13,7,0.226,8,0.519,10,1.638,11,0.608,12,0.011,13,0.4,18,3.183,19,1.018,22,1.548,25,3.005,75,0.008,76,0.008,287,2.684,288,2.684,289,4.008,290,2.812,291,2.812,292,2.812,293,2.569,294,2.464,295,2.569,296,2.569,297,2.569,298,2.569,299,2.569,300,2.569,301,2.569,302,2.684,303,2.684,304,2.464,305,4.155,306,3.986,307,3.986,308,3.986,309,2.464,310,3.236,311,2.569,312,2.786,313,2.786,314,3.236,315,2.569,316,2.569,317,2.464,318,2.684,319,2.812,320,2.368,321,3.473,322,2.569,323,2.368,324,4.18,325,2.994,326,2.569,327,3.614,328,3.914,329,3.785,330,3.551,331,3.236,332,3.688]],["title/interfaces/BaseVisualizerOptions.html",[0,0.072,324,2.439]],["body/interfaces/BaseVisualizerOptions.html",[0,0.136,2,0.991,3,0.219,4,0.219,5,0.134,7,0.233,8,0.53,10,1.625,11,0.599,12,0.011,13,0.402,18,3.211,19,1.13,22,1.597,25,2.746,75,0.008,76,0.008,287,2.769,288,2.769,289,3.733,290,2.901,291,2.901,292,2.901,293,2.65,294,2.542,295,2.65,296,2.65,297,2.65,298,2.65,299,2.65,300,2.65,301,2.65,302,2.769,303,2.769,304,2.542,305,3.443,306,3.303,307,3.303,308,3.303,309,2.542,310,3.303,311,2.65,312,3.465,313,3.465,314,4.026,315,2.65,316,2.65,317,2.542,318,2.769,319,2.901,320,2.443,321,3.526,322,2.65,323,2.443,324,4.231,325,3.594,326,4.049,327,3.303,328,3.594,329,3.594,330,2.352,331,3.303,332,3.733]],["title/pipes/BitratePipe.html",[120,2.24,666,3.483]],["body/pipes/BitratePipe.html",[3,0.269,4,0.269,5,0.165,10,1.442,11,0.439,12,0.011,13,0.286,19,0.997,39,2.279,75,0.009,76,0.009,80,1.571,83,0.522,89,0.802,98,3.743,120,3.755,123,1.521,140,0.751,142,2.509,153,1.438,157,1.506,214,2.941,347,1.217,431,1.399,448,1.361,452,1.905,453,1.217,466,1.83,492,3.253,655,2.36,656,5.048,657,4.487,658,5.84,661,5.84,666,5.84,667,6.43,668,6.087,669,6.501,670,6.087,671,6.087,672,6.087]],["title/interfaces/ButtonGamepadAction.html",[0,0.072,28,2.836]],["body/interfaces/ButtonGamepadAction.html",[0,0.128,1,3.447,2,1.061,3,0.234,4,0.234,5,0.144,6,3.447,7,0.348,8,0.554,9,3.659,10,1.472,11,0.561,12,0.011,13,0.4,14,5.32,15,3.914,16,1.483,17,5.357,18,2.118,19,0.722,20,3.447,21,1.255,22,1.71,23,4.799,24,3.447,25,3.151,26,3.659,27,3.659,28,4.37,29,4.547,30,3.659,31,3.447,32,3.447,33,3.447,34,3.265,35,3.265,36,4.962,37,3.106,38,3.659,39,2.52,40,3.659,41,2.775,42,3.659,43,3.193,44,3.659,45,3.938,46,3.659,47,3.265,48,3.659,49,3.447,50,3.659,51,3.447,52,3.659,53,3.447,54,3.659,55,3.265,56,3.659,57,3.447,58,3.659,59,3.106,60,3.659,61,3.265,62,3.659,63,3.447,64,3.659,65,3.447,66,3.659,67,3.447,68,3.659,69,3.447,70,3.265,71,3.659,72,3.659,73,3.659,74,3.659,75,0.008,76,0.008]],["title/interfaces/Chainable.html",[0,0.072,673,3.835]],["body/interfaces/Chainable.html",[0,0.089,2,1.081,3,0.239,4,0.239,5,0.185,7,0.255,12,0.011,16,1.902,75,0.008,76,0.008,83,0.584,347,1.081,374,1.848,431,1.566,448,1.209,453,1.081,515,5.021,541,3.512,555,5.021,673,5.979,674,5.41,675,6.869,676,5.41,677,5.41,678,4.748,679,5.41,680,4.748,681,5.41,682,5.41,683,5.41,684,5.979,685,7.826,686,5.979,687,5.431,688,5.431,689,5.41,690,5.41,691,5.41,692,5.41,693,4.748,694,5.41,695,5.41,696,5.41,697,5.41,698,7.826,699,5.41,700,5.41,701,3.164,702,5.41,703,5.41,704,6.812,705,5.41,706,6.812,707,6.812,708,5.41,709,5.41,710,4.748,711,5.41,712,6.812,713,4.84,714,5.41,715,5.41,716,5.41,717,5.41,718,2.473]],["title/interfaces/Color.html",[0,0.072,719,2.836]],["body/interfaces/Color.html",[0,0.106,2,1.29,3,0.285,4,0.285,5,0.175,7,0.304,8,0.623,11,0.581,12,0.011,13,0.304,19,1.168,22,2.594,75,0.009,76,0.009,80,1.661,719,4.922,720,6.451,721,7.295,722,4.862]],["title/interfaces/ColorConfig.html",[0,0.072,723,2.439]],["body/interfaces/ColorConfig.html",[0,0.129,2,1.097,3,0.242,4,0.242,5,0.203,7,0.258,8,0.565,11,0.567,12,0.011,13,0.389,19,1.189,25,2.339,75,0.008,76,0.008,77,1.767,79,3.21,81,2.813,82,2.348,83,0.643,94,3.21,95,2.93,123,1.965,124,3.562,173,2.189,200,1.875,278,3.386,312,3.471,313,3.471,453,1.572,456,3.064,488,3.064,489,3.064,490,3.064,491,3.21,492,2.932,493,3.21,494,3.21,495,3.374,496,3.374,497,3.374,576,3.374,723,3.837,724,3.781,725,4.226,726,3.374,727,2.054,728,3.523,729,4.462,730,2.932,731,4.226,732,4.872,733,3.21,734,3.562,735,2.602,736,3.781,737,3.562,738,3.562,739,3.21]],["title/interfaces/CoverArtImage.html",[0,0.072,740,2.836]],["body/interfaces/CoverArtImage.html",[0,0.119,2,0.887,3,0.196,4,0.196,5,0.12,7,0.209,8,0.492,10,0.814,11,0.546,12,0.011,13,0.209,19,1.148,22,2.182,75,0.007,76,0.007,77,1.429,82,1.516,83,0.683,86,0.814,89,0.585,101,1.891,102,1.471,140,0.548,143,1.513,149,1.58,153,1.884,157,1.707,200,1.516,204,2.371,214,2.985,230,2.182,232,2.616,234,2.553,240,2.702,241,2.441,245,1.429,282,2.728,343,1.205,380,1.388,417,1.037,518,1.274,655,1.429,718,2.736,727,1.661,740,4.397,741,1.61,742,3.057,743,4.996,744,3.572,745,4.996,746,5.253,747,2.371,748,2.274,749,3.057,750,2.88,751,2.88,752,3.472,753,2.24,754,1.769,755,2.186,756,2.274,757,2.371,758,3.885,759,2.736,760,4.397,761,2.728,762,2.88,763,4.124,764,3.057,765,3.057,766,2.728,767,2.88,768,2.88,769,2.371,770,2.728,771,2.274,772,2.371,773,2.371,774,3.057,775,3.057,776,3.057,777,2.371,778,2.458,779,2.274,780,3.068,781,4.124,782,3.057,783,3.057,784,3.198,785,2.595,786,3.057,787,3.057,788,3.057,789,3.057,790,3.057,791,3.057,792,3.198,793,4.124,794,3.057,795,3.057,796,2.88,797,3.057,798,3.057,799,3.057,800,3.057,801,4.124,802,3.057,803,3.057,804,1.891,805,3.057,806,3.057,807,2.467,808,3.057,809,3.057,810,3.057]],["title/interfaces/CoverArtResponse.html",[0,0.072,768,2.836]],["body/interfaces/CoverArtResponse.html",[0,0.12,2,0.905,3,0.2,4,0.2,5,0.123,7,0.213,8,0.499,10,0.831,11,0.327,12,0.011,13,0.213,19,1.134,22,1.459,75,0.007,76,0.007,77,1.459,82,1.547,83,0.687,86,0.831,89,0.597,101,1.931,102,1.502,140,0.559,143,1.524,149,1.603,153,1.894,157,1.714,200,1.547,204,2.42,214,3,230,2.205,232,2.644,234,2.574,240,2.73,241,2.456,245,1.459,282,2.785,343,1.23,380,1.417,417,1.052,518,1.301,655,1.459,718,2.775,727,1.695,740,4.747,741,1.644,742,3.121,743,3.121,744,2.231,745,3.121,747,2.42,748,2.322,749,3.121,750,2.94,751,2.94,752,3.509,753,2.272,754,1.807,755,2.231,756,2.322,757,2.42,758,3.94,759,2.775,760,4.443,761,2.785,762,2.94,763,4.182,764,3.121,765,3.121,766,2.785,767,2.94,768,3.94,769,3.908,770,2.785,771,2.322,772,2.42,773,2.42,774,3.121,775,3.121,776,3.121,777,2.42,778,2.484,779,2.322,780,3.111,781,4.182,782,3.121,783,3.121,784,3.243,785,2.649,786,3.121,787,3.121,788,3.121,789,3.121,790,3.121,791,3.121,792,3.243,793,4.182,794,3.121,795,3.121,796,2.94,797,3.121,798,3.121,799,3.121,800,3.121,801,4.182,802,3.121,803,3.121,804,1.931,805,3.121,806,3.121,807,2.502,808,3.121,809,3.121,810,3.121]],["title/interfaces/CoverColor.html",[0,0.072,811,2.836]],["body/interfaces/CoverColor.html",[0,0.136,2,1.183,3,0.261,4,0.261,5,0.211,7,0.279,8,0.592,11,0.519,12,0.011,13,0.39,19,1.191,75,0.009,76,0.009,82,2.023,83,0.507,241,1.852,453,1.615,722,4.725,727,2.216,728,3.035,741,2.149,753,2.696,754,2.362,759,3.293,804,2.524,807,2.44,811,5.583,812,4.08,813,5.244,814,3.164,815,3.843,816,3.843,817,3.843,818,3.843,819,3.843,820,3.64,821,3.64,822,2.808]],["title/interfaces/CoverColorPalette.html",[0,0.072,728,2.24]],["body/interfaces/CoverColorPalette.html",[0,0.134,2,1.115,3,0.246,4,0.246,5,0.205,7,0.262,8,0.571,11,0.598,12,0.011,13,0.383,19,1.145,75,0.008,76,0.008,82,1.905,83,0.478,241,1.745,453,1.744,722,3.262,727,2.087,728,3.559,741,2.024,753,2.599,754,2.224,759,3.174,804,2.377,807,2.298,811,5.772,812,3.842,813,3.62,814,4.228,815,5.136,816,5.136,817,5.136,818,5.136,819,5.136,820,3.429,821,3.429,822,2.644]],["title/components/CoverDisplayComponent.html",[84,0.977,379,1.743]],["body/components/CoverDisplayComponent.html",[3,0.167,4,0.167,5,0.146,7,0.178,8,0.442,12,0.011,13,0.178,21,1.473,75,0.007,76,0.007,77,1.73,79,4.186,80,1.355,81,2.753,83,0.637,84,1.394,85,3.824,86,0.696,89,0.5,108,3.623,109,2.332,123,1.341,135,2.01,137,2.455,139,2.01,140,0.468,141,1.465,143,0.758,148,3.141,149,1.962,153,1.269,157,1.104,333,1.513,334,1.73,335,1.563,336,1.563,337,1.563,339,3.302,340,3.302,341,3.213,342,3.277,344,1.513,347,1.246,349,2.332,354,3.486,355,2.796,364,2.796,372,1.563,373,2.142,374,1.835,375,1.335,376,2.795,377,1.563,378,1.563,379,2.705,380,2.547,381,1.563,382,1.513,383,1.563,384,1.513,385,1.42,386,1.563,387,1.335,388,1.376,389,1.376,390,2.213,391,1.513,392,2.795,393,1.513,394,1.563,395,1.513,396,1.376,397,1.563,398,1.513,399,1.563,400,1.42,401,1.513,402,1.513,403,1.563,404,1.513,405,1.465,406,1.563,407,1.513,408,1.563,409,1.513,410,1.42,411,2.705,412,1.513,413,1.513,414,1.465,415,1.513,416,1.563,423,3.701,466,1.557,666,4.971,667,5.951,669,5.406,735,2.547,823,5.951,824,3.792,825,3.701,826,4.596,827,5.37,828,5.37,829,6.234,830,6.78,831,5.37,832,5.37,833,5.37,834,5.37,835,3.792,836,5.37,837,3.792,838,3.792,839,3.792,840,3.792,841,3.329,842,5.406,843,3.024,844,4.714,845,4.714,846,4.714,847,6.78,848,6.78,849,3.792,850,6.78,851,3.486,852,6.78,853,6.78,854,6.78,855,6.78,856,5.37,857,5.37,858,3.792]],["title/interfaces/DirHandleEntry.html",[0,0.072,859,3.483]],["body/interfaces/DirHandleEntry.html",[0,0.077,2,0.942,3,0.208,4,0.208,5,0.22,7,0.222,8,0.513,10,1.282,11,0.449,12,0.011,13,0.222,41,1.943,75,0.008,76,0.008,83,0.662,86,0.866,88,2.01,89,0.621,90,2.899,91,2.156,92,2.758,93,2.52,101,2.01,102,1.564,140,0.582,142,1.943,143,0.942,144,3.061,145,3.061,149,1.245,153,1.876,157,1.664,164,3.061,230,2.393,232,1.821,234,2.795,240,1.881,241,1.95,278,2.323,343,1.28,346,2.01,353,2.323,417,1.08,468,3.071,518,1.354,554,2.633,655,2.008,701,2.758,759,3.532,778,2.534,859,4.97,860,2.899,861,2.236,862,3.759,863,3.475,864,5.399,865,6.16,866,2.899,867,3.971,868,2.899,869,3.48,870,3.061,871,3.759,872,3.475,873,4.139,874,4.139,875,5.567,876,4.139,877,5.471,878,4.139,879,3.475,880,4.139,881,4.139,882,4.139,883,4.139,884,4.139,885,3.475,886,4.139,887,4.139,888,3.833,889,3.759,890,4.139,891,4.139,892,4.139,893,3.759,894,3.475,895,4.139,896,4.139,897,4.139,898,3.759,899,4.139,900,3.475,901,3.759,902,4.139,903,4.139,904,4.139,905,3.759,906,3.249,907,6.13,908,4.97,909,3.759,910,4.139,911,4.139,912,4.139]],["title/components/EqualizerComponent.html",[84,0.977,382,1.743]],["body/components/EqualizerComponent.html",[3,0.203,4,0.203,5,0.166,7,0.325,8,0.505,10,1.267,11,0.332,12,0.011,13,0.217,19,0.835,21,1.631,75,0.008,76,0.008,80,1.533,83,0.631,84,1.543,86,0.846,89,0.607,93,2.462,95,2.617,123,1.533,135,2.298,137,2.807,139,2.298,140,0.569,141,1.78,153,1.089,157,0.947,333,1.838,334,1.977,335,1.899,336,1.899,337,1.899,339,3.775,340,3.775,341,3.279,342,3.356,344,1.838,347,1.38,349,2.833,372,1.899,373,2.449,374,2.097,375,1.622,376,3.035,377,1.899,378,1.899,379,1.838,380,1.442,381,1.899,382,2.937,383,1.899,384,1.838,385,1.725,386,1.899,387,1.622,388,1.672,389,1.672,390,2.53,391,1.838,392,3.035,393,1.838,394,1.899,395,1.838,396,1.672,397,1.899,398,1.838,399,1.899,400,1.725,401,1.838,402,1.838,403,1.899,404,1.838,405,1.78,406,1.899,407,1.838,408,1.899,409,1.838,410,1.725,411,1.838,412,1.838,413,1.838,414,1.78,415,1.838,416,1.899,418,3.627,431,1.411,448,1.03,452,1.442,453,0.921,466,1.725,516,5.089,517,5.635,565,4.231,652,5.504,913,4.608,914,4.525,915,5.504,916,6.139,917,6.139,918,7.668,919,6.139,920,6.139,921,4.608,922,3.591,923,4.608,924,4.608,925,2.833,926,4.608,927,3.397,928,6.139,929,4.608]],["title/interfaces/EqualizerGainValues.html",[0,0.072,424,3.483]],["body/interfaces/EqualizerGainValues.html",[0,0.056,2,0.682,3,0.151,4,0.151,5,0.135,10,1.393,12,0.011,13,0.277,16,1.39,22,1.1,39,2.983,41,1.407,75,0.006,76,0.006,83,0.554,85,2.661,86,0.627,88,2.122,89,0.45,91,1.561,96,1.997,102,1.132,140,0.421,143,1.547,149,2.128,153,1.904,157,1.328,174,2.495,230,1.1,234,1.202,241,1.558,266,2.352,320,1.682,330,1.619,343,0.927,346,1.455,347,0.682,374,1.166,417,0.863,418,1.682,420,2.721,421,2.996,422,2.516,423,2.352,424,4.685,425,2.721,426,2.996,427,2.996,428,2.721,429,2.996,430,2.721,432,2.996,435,2.352,436,2.516,437,2.996,445,2.996,449,2.996,450,3.67,454,3.431,455,2.996,456,3.607,463,2.996,464,4.685,466,1.244,467,2.099,468,3.183,471,2.996,473,2.996,474,5.159,476,2.996,478,2.996,479,2.996,482,2.996,484,3.969,487,2.996,488,2.78,489,2.78,490,2.78,491,2.912,492,2.661,493,2.912,494,2.912,495,3.061,496,3.061,497,3.061,499,4.332,502,4.37,506,2.996,508,2.996,509,2.516,513,1.906,514,1.75,515,3.67,516,3.67,517,4.452,518,0.981,519,2.996,520,1.906,521,2.996,522,4.655,523,2.996,524,2.996,525,2.996,526,2.996,527,5.15,528,2.996,529,2.996,530,2.996,531,4.37,532,2.996,533,2.996,534,2.996,535,2.996,536,3.431,537,2.721,538,3.67,539,2.996,540,2.996,541,3.232,542,3.969,543,2.996,544,2.996,545,2.996,546,2.996,547,2.352,548,2.996,549,2.996,550,2.996,551,4.37,552,2.996,553,2.516,554,1.906,555,2.516,556,2.099,557,2.996,558,2.216,559,2.516,560,2.996,561,2.516,562,4.37,563,4.37,564,2.996,565,3.431,566,4.37,567,4.37,568,2.996,569,2.996,570,2.996,571,2.996,572,2.996,573,2.996,574,2.996,575,2.996,576,2.099,577,1.824,578,2.516,579,2.996,580,2.996,581,2.996,582,2.996,583,2.996,584,2.996,585,4.37,586,2.996,587,2.996,588,2.996,589,2.996,590,2.996,591,2.996,592,3.969,593,2.996,594,2.996,595,2.721,596,2.996,597,2.352,598,1.682,599,2.996,600,2.099,601,2.996,602,2.996,603,2.996,604,2.996,605,2.996,606,2.996,607,2.996,608,2.996,609,2.996,610,2.996,611,2.996,612,2.996,613,2.996,614,2.996,615,2.996,616,2.996,617,2.996,618,2.996,619,4.37,620,2.996,621,2.721,622,2.721,623,2.721,624,2.721,625,2.216,626,2.721,627,2.996,628,2.996,629,2.996,630,4.37,631,2.996,632,2.996,633,2.996,634,2.996,635,2.996,636,2.996,637,4.37,638,2.996,639,2.996,640,2.996,641,2.996,642,2.996,643,2.996,644,2.996,645,2.996,646,2.996,647,2.996,648,2.996,649,2.996,650,2.996,651,2.996,930,3.413,931,3.413]],["title/interfaces/FileData.html",[0,0.072,867,2.335]],["body/interfaces/FileData.html",[0,0.101,2,1.234,3,0.272,4,0.272,5,0.235,7,0.291,8,0.607,11,0.533,12,0.011,13,0.372,75,0.009,76,0.009,153,1.746,278,4.037,453,1.477,731,4.861,860,3.797,861,2.928,866,3.797,867,3.948,932,3.448,933,5.42,934,5.42,935,5.42,936,5.42,937,6.485,938,5.42,939,5.42,940,5.42,941,5.42,942,5.42,943,5.42,944,5.42,945,5.42,946,5.42,947,5.42,948,5.42,949,5.42,950,5.42,951,5.42]],["title/components/FileDropOverlayComponent.html",[84,0.977,384,1.743]],["body/components/FileDropOverlayComponent.html",[3,0.14,4,0.14,5,0.226,7,0.222,8,0.389,11,0.407,12,0.011,13,0.15,16,1.575,21,1.333,39,1.769,75,0.006,76,0.006,80,1.447,83,0.273,84,1.261,86,0.584,89,0.419,123,1.181,135,1.769,140,0.393,141,1.229,142,1.948,143,1.519,149,2.007,153,1.652,157,0.654,204,1.7,225,4.497,226,3.257,232,1.826,240,1.885,241,1.765,333,1.269,334,1.522,335,1.311,336,1.311,337,1.311,341,3.145,342,3.196,344,1.269,347,1.398,372,1.311,373,1.885,374,1.615,375,1.12,376,2.75,377,1.311,378,1.311,379,1.269,380,0.995,381,1.311,382,1.269,383,1.311,384,2.49,385,3.261,386,1.311,387,1.12,388,1.154,389,1.154,390,1.948,391,1.269,392,2.573,393,1.269,394,1.311,395,1.269,396,1.154,397,1.311,398,1.269,399,1.311,400,1.191,401,1.269,402,1.269,403,1.311,404,1.269,405,1.229,406,1.311,407,1.269,408,1.311,409,1.269,410,1.769,411,1.269,412,1.269,413,1.269,414,1.229,415,1.269,416,1.311,431,1.086,448,1.261,452,1.765,453,1.127,466,1.409,467,1.956,547,2.192,598,2.779,624,2.536,626,2.536,693,4.149,701,4.09,719,3.068,730,2.526,731,1.956,778,1.715,825,2.192,864,2.065,900,2.345,952,3.181,953,5.336,954,6.355,955,7.239,956,7.239,957,3.181,958,5.64,959,3.661,960,3.068,961,4.726,962,5.64,963,4.726,964,5.64,965,5.64,966,5.64,967,4.726,968,4.726,969,4.726,970,7.733,971,3.181,972,4.726,973,3.181,974,4.726,975,3.181,976,3.661,977,3.181,978,6.672,979,3.181,980,3.181,981,2.792,982,3.181,983,3.181,984,3.181,985,3.181,986,3.181,987,3.181,988,3.181,989,3.181,990,3.181,991,3.181,992,3.181,993,4.726,994,6.672,995,3.181,996,4.726,997,4.726,998,3.181,999,4.726,1000,3.181,1001,4.726,1002,4.726,1003,3.181,1004,4.726,1005,3.181,1006,2.065,1007,4.951,1008,4.951,1009,4.726,1010,3.181,1011,3.181,1012,4.726,1013,5.64,1014,2.792,1015,4.726,1016,3.181,1017,5.48,1018,3.181,1019,3.181,1020,3.181,1021,3.181,1022,4.149,1023,3.484,1024,3.181,1025,3.181,1026,3.181,1027,3.181,1028,3.181,1029,3.181,1030,3.181,1031,3.181,1032,3.181,1033,3.181,1034,5.64,1035,3.181,1036,5.64,1037,3.181,1038,2.792,1039,2.792,1040,2.792,1041,4.149,1042,3.181,1043,2.536,1044,2.792,1045,3.181,1046,3.181,1047,3.181,1048,3.181,1049,3.181,1050,3.181,1051,3.181,1052,3.181,1053,3.181,1054,3.181,1055,3.181,1056,2.792,1057,2.792,1058,4.726,1059,3.181,1060,4.726,1061,3.181,1062,3.181,1063,2.792,1064,2.792,1065,3.181,1066,3.181,1067,3.181,1068,3.181,1069,2.792,1070,4.149,1071,3.181,1072,2.792,1073,3.181,1074,2.792,1075,3.181,1076,4.726,1077,2.345]],["title/classes/FileLoaderService.html",[140,0.539,869,2.439]],["body/classes/FileLoaderService.html",[3,0.266,4,0.266,5,0.198,7,0.284,8,0.599,11,0.435,12,0.011,13,0.284,75,0.009,76,0.009,83,0.624,89,0.795,140,0.745,347,1.565,431,1.675,448,1.629,778,2.951,860,4.999,861,3.856,867,3.225,868,3.71,869,4.068,872,5.77,879,5.993,885,5.993,932,4.54,1078,6.034,1079,6.034,1080,8.737,1081,7.828,1082,6.034,1083,6.034,1084,6.034]],["title/interfaces/FrequencyBarsConfig.html",[0,0.072,304,2.24]],["body/interfaces/FrequencyBarsConfig.html",[0,0.137,2,1.001,3,0.221,4,0.221,5,0.136,7,0.236,8,0.533,10,1.635,11,0.592,12,0.011,13,0.402,18,2.869,19,1.035,22,1.614,25,2.764,75,0.008,76,0.008,287,2.797,288,2.797,289,3.747,290,2.93,291,2.93,292,2.93,293,2.677,294,2.568,295,2.677,296,2.677,297,2.677,298,2.677,299,2.677,300,2.677,301,2.677,302,2.797,303,2.797,304,3.325,305,4.21,306,4.039,307,4.039,308,4.039,309,2.568,310,3.325,311,2.677,312,2.861,313,2.861,314,3.325,315,2.677,316,2.677,317,2.568,318,2.797,319,2.93,320,2.468,321,3.543,322,2.677,323,2.468,324,4.016,325,3.076,326,2.677,327,3.325,328,3.607,329,3.607,330,2.376,331,3.325,332,3.747]],["title/interfaces/GamepadAction.html",[0,0.072,17,3.011]],["body/interfaces/GamepadAction.html",[0,0.126,1,3.295,2,1.015,3,0.224,4,0.224,5,0.138,6,3.295,7,0.381,8,0.538,9,3.498,10,1.548,11,0.602,12,0.011,13,0.397,14,4.962,15,3.741,16,1.417,17,5.268,18,3.049,19,0.985,20,4.962,21,1.806,22,2.331,23,5.419,24,3.295,25,2.788,26,3.498,27,3.498,28,3.295,29,2.969,30,3.498,31,3.295,32,3.295,33,3.295,34,3.121,35,3.121,36,4.821,37,2.969,38,3.498,39,2.448,40,3.498,41,2.696,42,3.498,43,3.102,44,3.498,45,3.826,46,3.498,47,3.121,48,3.498,49,3.295,50,3.498,51,3.295,52,3.498,53,3.295,54,3.498,55,3.121,56,3.498,57,3.295,58,3.498,59,2.969,60,3.498,61,3.121,62,3.498,63,3.295,64,3.498,65,3.295,66,3.498,67,3.295,68,3.498,69,3.295,70,3.121,71,3.498,72,3.498,73,3.498,74,3.498,75,0.008,76,0.008,453,1.528]],["title/injectables/GamepadService.html",[417,0.757,1085,2.836]],["body/injectables/GamepadService.html",[1,3.521,3,0.131,4,0.131,5,0.081,7,0.351,8,0.37,9,3.102,10,1.542,11,0.492,12,0.011,13,0.14,14,5.195,16,1.812,18,3.125,20,5.085,21,1.612,22,0.96,23,1.935,24,3.923,26,4.702,27,4.702,28,3.923,29,3.535,31,1.935,32,4.599,33,3.923,34,3.335,35,2.768,37,3.173,39,2.429,70,3.335,75,0.006,76,0.006,80,1.208,83,0.386,89,0.393,140,0.368,142,1.228,143,1.584,149,1.189,153,1.908,157,1.403,343,0.809,346,2.312,347,1.416,417,0.78,419,1.189,431,1.035,448,1.351,452,1.891,453,1.208,466,1.931,518,0.856,598,2.218,655,1.45,959,2.922,1006,1.935,1085,2.922,1086,2.98,1087,5.424,1088,5.424,1089,4.501,1090,4.501,1091,5.424,1092,4.501,1093,4.501,1094,4.501,1095,2.98,1096,7.608,1097,4.501,1098,2.98,1099,7.608,1100,2.98,1101,6.044,1102,2.98,1103,7.294,1104,4.501,1105,2.98,1106,2.98,1107,2.98,1108,2.98,1109,2.98,1110,2.98,1111,2.98,1112,2.98,1113,2.98,1114,2.98,1115,5.424,1116,2.98,1117,5.424,1118,2.98,1119,2.98,1120,6.044,1121,2.98,1122,2.98,1123,2.98,1124,2.98,1125,4.501,1126,5.424,1127,5.173,1128,4.501,1129,2.616,1130,4.501,1131,2.98,1132,2.98,1133,2.98,1134,2.98,1135,2.98,1136,4.501,1137,2.98,1138,2.98,1139,2.98,1140,2.616,1141,2.98,1142,2.98,1143,3.998,1144,6.489,1145,2.98,1146,2.98,1147,5.424,1148,2.98,1149,2.98,1150,2.98,1151,2.98,1152,1.832,1153,2.98,1154,2.98,1155,2.98,1156,4.501,1157,2.98,1158,2.98,1159,2.98,1160,2.98,1161,2.98,1162,2.98,1163,4.761,1164,4.501,1165,3.318,1166,4.501,1167,4.501,1168,2.98,1169,2.98,1170,2.98,1171,4.501,1172,2.98,1173,2.98,1174,2.98,1175,4.501,1176,4.501,1177,5.424,1178,5.424,1179,6.044,1180,4.471,1181,5.424,1182,2.98,1183,6.044,1184,2.98,1185,5.989,1186,4.501,1187,4.501,1188,4.501,1189,2.98,1190,6.044,1191,2.98,1192,2.98,1193,4.501,1194,2.98,1195,2.98,1196,4.501,1197,4.501,1198,2.98,1199,2.98,1200,2.98,1201,2.98]],["title/interfaces/Hotkey.html",[0,0.072,1202,3.011]],["body/interfaces/Hotkey.html",[0,0.096,2,0.854,3,0.188,4,0.188,5,0.116,7,0.201,8,0.48,11,0.515,12,0.011,13,0.313,19,1.109,75,0.007,76,0.007,83,0.661,86,0.784,89,0.563,102,1.417,140,0.527,143,1.328,153,1.926,157,1.536,174,2.253,181,3.257,214,1.599,245,1.376,343,1.16,352,2.626,353,2.104,374,2.553,387,1.504,388,2.117,389,1.55,417,1.011,435,2.943,468,3.89,518,1.227,558,2.773,598,2.874,655,1.879,713,2.773,888,3.587,1143,3.148,1165,3.148,1202,4.02,1203,3.405,1204,5.508,1205,5.125,1206,5.82,1207,4.02,1208,2.626,1209,3.148,1210,3.587,1211,2.499,1212,4.65,1213,4.02,1214,5.691,1215,3.405,1216,2.773,1217,2.626,1218,3.405,1219,3.405,1220,3.412,1221,3.148,1222,3.148,1223,4.3,1224,3.405,1225,3.405,1226,2.626,1227,3.405,1228,3.405,1229,3.405,1230,3.405,1231,3.405,1232,3.405,1233,3.405,1234,3.405,1235,4.65,1236,3.405,1237,4.65,1238,4.65,1239,4.65,1240,3.148,1241,3.405,1242,3.405,1243,3.405,1244,3.405,1245,4.02,1246,3.405,1247,3.405,1248,3.405,1249,3.405,1250,5.296,1251,3.405,1252,4.65,1253,3.405,1254,3.405,1255,4.65,1256,3.405,1257,3.405,1258,3.405,1259,3.405,1260,3.405,1261,3.405,1262,3.405,1263,4.65,1264,3.405,1265,3.405,1266,3.148,1267,3.405,1268,5.691,1269,3.405,1270,4.65,1271,3.405,1272,3.148,1273,3.405,1274,3.405,1275,2.943,1276,3.405,1277,3.405,1278,3.405]],["title/interfaces/HotkeyInfo.html",[0,0.072,1216,2.836]],["body/interfaces/HotkeyInfo.html",[0,0.097,2,0.867,3,0.191,4,0.191,5,0.118,7,0.204,8,0.484,11,0.425,12,0.011,13,0.315,19,1.078,75,0.007,76,0.007,83,0.664,86,0.796,89,0.571,102,1.438,140,0.535,143,1.338,153,1.932,157,1.544,174,2.276,181,3.29,214,1.623,245,1.397,343,1.177,352,2.666,353,2.136,374,2.013,387,1.526,388,2.139,389,1.574,417,1.021,435,2.988,468,3.905,518,1.245,558,2.814,598,2.903,655,1.898,713,2.814,1143,3.196,1165,3.196,1202,2.988,1203,3.457,1204,4.344,1205,5.145,1206,5.294,1207,4.061,1208,2.666,1209,3.196,1210,3.624,1211,2.536,1212,4.698,1213,4.061,1214,6.519,1215,3.457,1216,3.825,1217,2.666,1218,3.457,1219,3.457,1220,3.447,1221,3.196,1222,3.196,1223,4.344,1224,3.457,1225,3.457,1226,2.666,1227,3.457,1228,3.457,1229,3.457,1230,3.457,1231,3.457,1232,3.457,1233,3.457,1234,3.457,1235,4.698,1236,3.457,1237,4.698,1238,4.698,1239,4.698,1240,3.196,1241,3.457,1242,3.457,1243,3.457,1244,3.457,1245,4.061,1246,3.457,1247,3.457,1248,3.457,1249,3.457,1250,5.337,1251,3.457,1252,4.698,1253,3.457,1254,3.457,1255,4.698,1256,3.457,1257,3.457,1258,3.457,1259,3.457,1260,3.457,1261,3.457,1262,3.457,1263,4.698,1264,3.457,1265,3.457,1266,3.196,1267,3.457,1268,5.726,1269,3.457,1270,4.698,1271,3.457,1272,3.196,1273,3.457,1274,3.457,1275,2.988,1276,3.457,1277,3.457,1278,3.457]],["title/interfaces/HotkeysData.html",[0,0.072,1279,3.483]],["body/interfaces/HotkeysData.html",[0,0.096,2,1.165,3,0.257,4,0.257,5,0.158,7,0.274,8,0.587,11,0.42,12,0.011,13,0.336,75,0.009,76,0.009,83,0.719,84,1.595,86,1.07,89,0.768,99,4.632,100,3.785,111,2.989,113,2.665,135,2.182,137,2.665,139,2.182,140,0.72,157,1.199,181,4.306,245,1.878,341,2.182,342,2.252,387,2.053,388,2.799,389,2.916,1210,3.585,1211,3.41,1216,3.785,1220,3.41,1226,3.585,1275,5.537,1279,5.689,1280,5.118,1281,4.298,1282,4.298,1283,5.26,1284,5.118,1285,4.388,1286,3.658,1287,5.118,1288,4.298,1289,4.298,1290,4.298,1291,5.118,1292,5.118,1293,4.648,1294,5.118]],["title/components/HotkeysHelpDialogComponent.html",[84,0.977,387,1.538]],["body/components/HotkeysHelpDialogComponent.html",[0,0.069,3,0.185,4,0.185,5,0.156,7,0.198,8,0.474,12,0.011,13,0.271,16,1.173,21,1.362,41,2.921,43,2.734,75,0.007,76,0.007,80,1.417,83,0.657,84,1.472,86,0.771,89,0.553,95,2.457,99,4.274,100,2.725,111,2.152,113,1.919,123,1.44,135,2.158,137,2.636,139,2.158,140,0.518,141,1.622,157,0.863,181,2.344,245,2.121,333,1.675,334,1.857,335,1.731,336,1.731,337,1.731,341,3.249,342,3.32,344,1.675,347,1.417,372,1.731,373,2.3,374,1.97,375,1.478,376,2.921,377,1.731,378,1.731,379,1.675,380,1.314,381,1.731,382,1.675,383,1.731,384,1.675,385,1.572,386,1.731,387,2.495,388,2.852,389,3.036,390,2.376,391,1.675,392,2.921,393,1.675,394,1.731,395,1.675,396,1.524,397,1.731,398,1.675,399,1.731,400,1.572,401,1.675,402,1.675,403,1.731,404,1.675,405,1.622,406,1.731,407,1.675,408,1.731,409,1.675,410,1.572,411,1.675,412,1.675,413,1.675,414,1.622,415,1.675,416,1.731,431,1.325,444,4.596,448,0.939,466,1.44,1202,3.973,1210,2.582,1211,2.456,1216,2.725,1220,3.372,1226,4.048,1275,2.893,1279,3.347,1280,6.519,1281,3.095,1282,3.095,1283,4.853,1284,3.685,1285,4.048,1286,3.375,1287,5.06,1288,4.249,1289,4.249,1290,4.249,1291,6.519,1292,3.685,1293,5.65,1294,3.685,1295,4.198,1296,3.685,1297,4.198,1298,4.198,1299,4.198,1300,7.087,1301,7.673,1302,7.087,1303,5.765,1304,5.765,1305,7.087,1306,5.765,1307,5.765,1308,5.06,1309,5.06,1310,5.765,1311,5.765,1312,5.765]],["title/injectables/HotkeysService.html",[417,0.757,1217,2.687]],["body/injectables/HotkeysService.html",[0,0.089,3,0.169,4,0.169,5,0.104,7,0.18,8,0.445,11,0.518,12,0.011,13,0.295,16,2.006,19,1.065,21,1.609,75,0.007,76,0.007,80,1.081,83,0.639,86,0.703,89,0.505,102,1.27,140,0.473,143,1.253,153,1.88,157,1.477,174,2.421,181,3.803,214,2.024,245,1.234,343,1.04,347,1.63,352,2.355,353,1.887,374,2.142,387,1.348,388,2.472,389,1.39,417,0.937,419,1.528,431,1.243,435,4.693,448,1.666,452,1.692,453,1.361,466,1.701,468,3.92,518,1.1,558,4.421,598,2.664,655,1.742,713,3.511,1143,2.823,1165,2.823,1202,2.64,1203,3.054,1204,3.986,1205,4.421,1206,5.295,1207,3.727,1208,2.355,1209,2.823,1210,3.855,1211,2.241,1212,4.311,1213,3.727,1214,5.43,1215,3.054,1216,2.486,1217,3.325,1218,3.054,1219,3.054,1220,3.163,1221,2.823,1222,4.621,1223,5.295,1224,4.311,1225,4.998,1226,3.855,1227,4.998,1228,3.054,1229,3.054,1230,3.054,1231,3.054,1232,3.054,1233,3.054,1234,4.311,1235,4.311,1236,3.054,1237,4.311,1238,4.311,1239,4.311,1240,2.823,1241,3.054,1242,3.054,1243,3.054,1244,3.054,1245,3.727,1246,3.054,1247,3.054,1248,3.054,1249,3.054,1250,4.998,1251,3.054,1252,4.311,1253,3.054,1254,3.054,1255,4.311,1256,3.054,1257,3.054,1258,3.054,1259,3.054,1260,4.311,1261,3.054,1262,3.054,1263,4.311,1264,3.054,1265,3.054,1266,5.02,1267,5.43,1268,5.43,1269,3.054,1270,4.311,1271,3.054,1272,2.823,1273,3.054,1274,3.054,1275,2.64,1276,3.054,1277,3.054,1278,3.054,1313,5.408,1314,5.408,1315,3.83,1316,3.83,1317,3.83,1318,3.83,1319,3.83,1320,3.83,1321,3.83,1322,3.83,1323,3.83,1324,3.83,1325,3.83]],["title/interfaces/Id3CoverPicture.html",[0,0.072,725,2.687]],["body/interfaces/Id3CoverPicture.html",[0,0.121,2,1.232,3,0.272,4,0.272,5,0.167,7,0.29,8,0.607,10,1.355,11,0.532,12,0.011,13,0.347,19,1.169,75,0.009,76,0.009,77,1.985,81,3.16,83,0.528,95,2.627,123,1.54,173,2.459,200,2.106,245,2.638,323,3.892,725,4.858,726,3.79,729,4.791,730,3.294,735,3.97,741,2.237,753,2.307,1152,4.538,1326,5.41,1327,4.914]],["title/interfaces/Id3Tags.html",[0,0.072,753,1.635]],["body/interfaces/Id3Tags.html",[0,0.115,2,1.133,3,0.25,4,0.25,5,0.154,7,0.267,8,0.577,10,1.287,11,0.62,12,0.011,13,0.33,19,1.194,75,0.009,76,0.009,77,2.563,81,4.079,83,0.486,95,3.392,123,1.416,173,3.174,200,2.718,245,1.826,323,2.792,453,1.747,725,4.893,726,3.485,729,5.165,730,3.029,735,3.878,741,2.057,746,6.155,753,2.625,1152,4.312,1326,4.975,1327,6.344]],["title/injectables/Id3TagsService.html",[417,0.757,1328,3.483]],["body/injectables/Id3TagsService.html",[3,0.2,4,0.2,5,0.213,7,0.213,10,1.115,11,0.438,12,0.011,13,0.213,16,2.13,20,2.944,21,1.072,39,1.698,75,0.007,76,0.007,80,0.907,83,0.587,89,0.598,140,0.56,142,1.869,143,1.525,153,1.855,157,1.249,174,2.646,181,2.532,199,3.125,241,2.55,343,1.232,346,2.92,347,1.214,417,1.053,419,1.809,431,1.396,448,1.014,452,1.419,453,0.907,461,2.532,466,1.133,518,1.303,536,3.125,598,3.375,726,4.212,727,1.698,741,2.486,753,1.698,754,1.809,755,2.234,759,3.487,778,2.205,820,3.735,821,2.789,822,2.881,906,5.041,959,3.943,1006,2.944,1022,3.981,1328,4.843,1329,4.535,1330,5.332,1331,4.535,1332,5.332,1333,7.316,1334,4.535,1335,6.074,1336,5.256,1337,4.535,1338,4.535,1339,7.627,1340,6.849,1341,3.981,1342,4.535,1343,3.981,1344,3.616,1345,4.535,1346,6.074,1347,4.535,1348,6.074,1349,4.535,1350,6.074,1351,4.535,1352,3.981,1353,4.535,1354,4.535,1355,4.535,1356,3.981,1357,6.849,1358,4.535,1359,3.343,1360,4.535,1361,3.981,1362,4.535,1363,3.981,1364,6.074,1365,4.535,1366,4.535,1367,4.535,1368,4.535,1369,4.535,1370,4.535,1371,4.535,1372,6.849,1373,4.535,1374,4.535,1375,4.535,1376,4.535,1377,4.535,1378,6.074,1379,5.332,1380,4.535,1381,4.535,1382,4.535,1383,4.535,1384,4.535,1385,4.535,1386,4.535,1387,4.535,1388,4.535,1389,4.535]],["title/interfaces/IndexedDbTrackMetadata.html",[0,0.072,94,2.556]],["body/interfaces/IndexedDbTrackMetadata.html",[0,0.13,2,1.109,3,0.245,4,0.245,5,0.205,7,0.261,8,0.569,11,0.544,12,0.011,13,0.39,19,1.166,25,2.95,75,0.008,76,0.008,77,1.787,79,3.246,81,2.845,82,2.365,83,0.646,94,4.049,95,2.95,123,1.973,124,3.602,173,2.213,200,1.896,278,4.004,312,2.448,313,2.448,453,1.383,456,3.098,488,3.098,489,3.098,490,3.098,491,3.246,492,2.965,493,3.246,494,3.246,495,3.412,496,3.412,497,3.412,576,3.412,723,3.098,724,3.824,725,4.256,726,3.412,727,2.077,728,3.548,729,4.493,730,2.965,731,4.856,732,5.127,733,3.246,734,3.602,735,2.632,736,3.824,737,3.602,738,3.602,739,3.246]],["title/interfaces/LastfmAlbum.html",[0,0.072,1390,2.836]],["body/interfaces/LastfmAlbum.html",[0,0.122,2,0.942,3,0.208,4,0.208,5,0.128,7,0.222,8,0.513,10,0.866,11,0.536,12,0.011,13,0.222,19,1.166,75,0.008,76,0.008,77,2.393,80,1.485,82,2.13,83,0.68,86,0.866,89,0.621,101,2.01,102,1.564,140,0.582,143,1.587,149,1.646,153,1.756,157,1.69,173,3.082,174,1.821,214,2.892,230,2.008,232,1.821,234,1.66,240,1.881,241,2.325,245,2.249,343,1.28,417,1.08,518,1.354,718,2.156,727,1.765,735,2.236,741,1.711,744,3.661,747,2.52,748,2.417,752,2.417,753,2.333,754,1.881,755,2.323,756,2.417,757,2.52,769,3.331,771,2.417,772,2.52,773,2.52,777,2.52,778,2.262,779,2.417,780,3.196,784,2.52,792,2.52,804,2.01,807,1.943,1390,4.533,1391,3.061,1392,3.061,1393,4.823,1394,2.758,1395,2.758,1396,3.833,1397,3.833,1398,3.061,1399,4.046,1400,2.899,1401,3.249,1402,3.249,1403,3.249,1404,3.249,1405,3.249,1406,3.061,1407,3.249,1408,3.249,1409,3.249,1410,3.249,1411,3.249,1412,4.046,1413,3.249,1414,3.249,1415,3.249,1416,3.061,1417,3.249,1418,3.249,1419,3.061,1420,3.249,1421,3.249,1422,3.249,1423,3.249,1424,3.249,1425,3.249]],["title/interfaces/LastfmErrorResponse.html",[0,0.072,1397,2.687]],["body/interfaces/LastfmErrorResponse.html",[0,0.122,2,0.952,3,0.21,4,0.21,5,0.129,7,0.224,8,0.516,10,1.288,11,0.506,12,0.011,13,0.224,19,1.153,75,0.008,76,0.008,77,2.402,80,0.952,82,2.143,83,0.682,86,0.874,89,0.627,101,2.029,102,1.579,140,0.588,143,1.591,149,1.657,153,1.762,157,1.693,173,2.502,174,1.839,214,2.901,230,2.021,232,1.839,234,1.676,240,1.899,241,2.539,245,2.26,343,1.293,417,1.087,518,1.367,718,2.176,727,1.782,735,2.258,741,1.728,744,2.345,747,2.544,748,2.44,752,2.44,753,2.348,754,1.899,755,2.345,756,2.44,757,2.544,769,3.352,771,2.44,772,2.544,773,2.544,777,2.544,778,2.277,779,2.44,780,3.216,784,2.544,792,2.544,804,2.029,807,1.962,1390,4.072,1391,3.09,1392,3.09,1393,4.072,1394,2.785,1395,2.785,1396,3.857,1397,4.314,1398,4.841,1399,4.072,1400,2.927,1401,3.28,1402,3.28,1403,3.28,1404,3.28,1405,3.28,1406,3.09,1407,3.28,1408,3.28,1409,3.28,1410,3.28,1411,3.28,1412,4.072,1413,3.28,1414,3.28,1415,3.28,1416,3.09,1417,3.28,1418,3.28,1419,3.09,1420,3.28,1421,3.28,1422,3.28,1423,3.28,1424,3.28,1425,3.28]],["title/interfaces/LastfmImage.html",[0,0.072,1393,2.836]],["body/interfaces/LastfmImage.html",[0,0.122,2,0.952,3,0.21,4,0.21,5,0.129,7,0.224,8,0.516,10,0.874,11,0.506,12,0.011,13,0.224,19,1.167,75,0.008,76,0.008,77,2.402,80,0.952,82,2.143,83,0.682,86,0.874,89,0.627,101,2.029,102,1.579,140,0.588,143,1.591,149,1.657,153,1.762,157,1.693,173,2.502,174,1.839,214,2.901,230,2.021,232,1.839,234,1.676,240,1.899,241,2.334,245,2.26,343,1.293,417,1.087,518,1.367,718,2.176,727,1.782,735,2.258,741,1.728,744,2.345,747,2.544,748,2.44,752,2.44,753,2.348,754,1.899,755,2.345,756,2.44,757,2.544,769,3.352,771,2.44,772,2.544,773,2.544,777,2.544,778,2.277,779,2.44,780,3.216,784,2.544,792,2.544,804,2.029,807,1.962,1390,4.072,1391,3.09,1392,3.09,1393,4.555,1394,4.363,1395,4.363,1396,3.857,1397,3.857,1398,3.09,1399,4.072,1400,2.927,1401,3.28,1402,3.28,1403,3.28,1404,3.28,1405,3.28,1406,3.09,1407,3.28,1408,3.28,1409,3.28,1410,3.28,1411,3.28,1412,4.072,1413,3.28,1414,3.28,1415,3.28,1416,3.09,1417,3.28,1418,3.28,1419,3.09,1420,3.28,1421,3.28,1422,3.28,1423,3.28,1424,3.28,1425,3.28]],["title/injectables/LastfmMetadataService.html",[417,0.757,1400,2.687]],["body/injectables/LastfmMetadataService.html",[0,0.122,3,0.208,4,0.208,5,0.128,7,0.222,10,0.867,11,0.45,12,0.011,13,0.222,19,1.132,75,0.008,76,0.008,77,2.395,80,1.247,82,2.132,83,0.68,86,0.867,89,0.622,101,2.013,102,1.566,140,0.583,143,1.587,149,1.648,153,1.757,157,1.69,173,2.489,174,1.824,214,2.894,230,2.395,232,1.824,234,1.662,240,1.883,241,2.326,245,2.251,343,1.282,347,0.944,417,1.081,419,1.883,431,1.434,448,1.055,452,1.477,453,0.944,518,1.356,718,2.158,727,1.767,735,2.239,741,2.264,744,2.326,747,2.523,748,2.42,752,2.42,753,2.783,754,1.883,755,2.326,756,2.42,757,2.523,769,3.334,771,2.42,772,2.523,773,2.523,777,3.334,778,2.536,779,2.42,780,3.198,784,2.523,792,2.523,804,2.013,807,1.946,822,2.239,1390,4.05,1391,4.05,1392,3.065,1393,4.05,1394,2.762,1395,2.762,1396,3.836,1397,3.836,1398,3.065,1399,4.05,1400,3.836,1401,3.254,1402,3.254,1403,3.254,1404,3.254,1405,3.254,1406,3.065,1407,3.254,1408,3.254,1409,3.254,1410,3.254,1411,3.254,1412,4.05,1413,3.254,1414,3.254,1415,3.254,1416,3.065,1417,3.254,1418,3.254,1419,3.065,1420,3.254,1421,3.254,1422,3.254,1423,3.254,1424,3.254,1425,3.254,1426,5.476,1427,4.721]],["title/interfaces/LastfmSuccessResponse.html",[0,0.072,1396,2.687]],["body/interfaces/LastfmSuccessResponse.html",[0,0.123,2,0.961,3,0.212,4,0.212,5,0.13,7,0.226,8,0.519,10,0.882,11,0.455,12,0.011,13,0.226,19,1.136,75,0.008,76,0.008,77,2.62,80,0.961,82,2.157,83,0.684,86,0.882,89,0.633,101,2.049,102,1.594,140,0.593,143,1.595,149,1.667,153,1.769,157,1.697,173,2.518,174,1.857,214,2.911,230,2.034,232,1.857,234,1.692,240,1.917,241,2.343,245,2.271,343,1.305,417,1.094,518,1.381,718,2.198,727,1.799,735,2.28,741,1.745,744,2.368,747,2.569,748,2.464,752,2.464,753,2.363,754,1.917,755,2.368,756,2.464,757,2.569,769,3.374,771,2.464,772,2.569,773,2.569,777,2.569,778,2.291,779,2.464,780,3.236,784,2.569,792,2.569,804,2.049,807,1.981,1390,4.86,1391,3.12,1392,3.12,1393,4.098,1394,2.812,1395,2.812,1396,4.335,1397,3.882,1398,3.12,1399,4.098,1400,2.956,1401,3.312,1402,3.312,1403,3.312,1404,3.312,1405,3.312,1406,3.12,1407,3.312,1408,3.312,1409,3.312,1410,3.312,1411,3.312,1412,4.098,1413,3.312,1414,3.312,1415,3.312,1416,3.12,1417,3.312,1418,3.312,1419,3.12,1420,3.312,1421,3.312,1422,3.312,1423,3.312,1424,3.312,1425,3.312]],["title/injectables/LegacyFileLoaderService.html",[417,0.757,1428,3.835]],["body/injectables/LegacyFileLoaderService.html",[3,0.226,4,0.226,5,0.236,7,0.342,8,0.541,12,0.011,13,0.241,21,1.212,39,1.92,75,0.008,76,0.008,83,0.623,88,2.186,89,0.676,140,0.633,142,2.114,143,1.454,149,1.921,153,1.556,157,1.054,164,4.274,174,1.981,230,2.556,234,1.805,343,1.393,346,3.1,347,1.534,417,1.141,419,2.046,431,1.513,448,1.472,466,1.281,518,1.473,547,3.534,598,2.527,655,1.652,701,4.489,778,2.639,860,4.88,861,3.764,863,3.78,866,3.153,867,2.741,868,3.153,869,3.676,870,3.329,872,5.361,879,5.361,885,5.657,976,3.329,1352,4.501,1363,4.501,1428,5.779,1429,7.936,1430,5.128,1431,5.128,1432,5.128,1433,5.128,1434,5.128,1435,5.128,1436,5.128,1437,5.128,1438,5.128,1439,5.128,1440,5.128,1441,5.128,1442,5.128,1443,5.128,1444,5.128,1445,5.128,1446,5.128,1447,5.128,1448,5.128,1449,5.128,1450,5.128,1451,5.128,1452,5.128]],["title/components/LibraryComponent.html",[84,0.977,141,1.688]],["body/components/LibraryComponent.html",[0,0.028,3,0.076,4,0.076,5,0.145,7,0.208,8,0.239,10,1.266,11,0.476,12,0.011,13,0.137,16,1.232,19,1.045,21,1.559,39,1.652,75,0.004,76,0.004,77,2.492,78,1.513,79,2.2,80,1.511,81,1.928,82,0.992,83,0.628,84,0.841,85,3.317,86,0.316,87,2.592,88,1.881,89,0.227,90,1.06,91,1.327,92,1.008,93,0.921,94,4.286,95,3.249,96,1.008,97,3.301,98,1.06,99,2.441,100,1.119,101,0.735,102,0.572,103,2.998,104,3.301,105,3.301,106,2.772,107,1.188,108,2.358,109,1.06,110,2.998,111,0.884,112,2.998,113,0.788,114,2.998,115,2.998,116,2.998,117,1.374,118,2.998,119,1.271,120,0.884,121,2.14,122,1.271,123,1.23,124,1.119,125,2.581,126,1.188,127,2.998,128,1.271,129,3.301,130,3.301,131,3.301,132,3.301,133,3.301,134,1.513,135,1.087,136,2.548,137,1.327,138,2.548,139,1.087,140,0.213,141,1.705,142,1.197,143,0.752,144,1.119,145,1.119,146,1.374,147,2.001,148,1.698,149,2.069,150,5.447,151,1.513,152,3.301,153,1.95,154,3.873,155,2.548,156,2.548,157,1.579,158,2.548,159,2.548,160,2.548,161,2.548,162,2.548,163,3.301,164,3.465,165,4.323,166,2.998,167,3.301,168,6.351,169,4.984,170,2.548,171,2.548,172,2.548,173,3.176,174,1.705,175,2.548,176,3.301,177,3.873,178,5.235,179,3.873,180,4.686,181,2.464,182,2.315,183,2.998,184,4.527,185,2.548,186,2.001,187,3.873,188,2.548,189,2.548,190,2.548,191,2.548,192,2.548,193,2.548,194,3.518,195,2.548,196,5.259,197,2.548,198,2.548,199,3.041,200,1.508,201,2.548,202,4.686,203,2.315,204,1.551,205,4.686,206,2.548,207,2.548,208,4.686,209,2.548,210,2.548,211,1.698,212,3.873,213,2.548,214,2.708,215,2.548,216,3.873,217,3.873,218,2.548,219,2.548,220,2.548,221,2.548,222,2.548,223,2.548,224,2.315,225,2.315,226,2.001,227,2.548,228,2.548,229,2.548,230,2.33,231,1.188,232,0.666,233,1.513,234,2.258,235,1.513,236,1.513,237,1.513,238,1.513,239,1.513,240,0.688,241,0.908,242,1.374,243,1.374,244,1.008,245,0.555,246,2.548,247,1.513,248,1.513,249,2.315,250,2.548,251,1.513,252,2.548,253,1.513,254,2.315,255,1.374,256,1.513,257,1.513,258,2.548,259,3.301,260,1.513,261,3.873,262,1.513,263,2.548,264,2.548,265,3.873,266,1.188,267,1.513,268,1.513,269,1.513,270,1.513,271,1.513,272,2.548,273,1.513,274,2.548,275,2.548,276,3.301,277,1.513,278,0.849,279,1.513,280,1.513,281,1.513,282,1.06,283,2.548,284,2.548,285,2.315,286,1.513,333,0.688,334,0.935,335,0.71,336,0.71,337,0.71,341,2.774,342,2.756,344,0.688,347,1.524,372,0.71,373,1.158,374,0.992,375,0.607,376,1.819,377,0.71,378,0.71,379,0.688,380,0.539,381,0.71,382,0.688,383,0.71,384,0.688,385,0.645,386,0.71,387,0.607,388,0.626,389,0.626,390,1.197,391,0.688,392,1.819,393,0.688,394,0.71,395,0.688,396,0.626,397,0.71,398,0.688,399,0.71,400,0.645,401,0.688,402,0.688,403,0.71,404,0.688,405,0.666,406,0.71,407,0.688,408,0.71,409,0.688,410,0.645,411,0.688,412,0.688,413,0.688,414,0.666,415,0.688,416,0.71,431,0.667,448,1.474,452,2.064,453,1.318,466,1.602,597,3.679,1453,2.903,1454,2.903,1455,2.903,1456,2.548,1457,2.903,1458,2.903,1459,2.903,1460,2.903,1461,2.903,1462,2.903,1463,2.548,1464,1.724,1465,1.724,1466,1.724,1467,1.724,1468,1.724,1469,1.724,1470,1.724,1471,1.724,1472,1.724,1473,1.724,1474,1.724,1475,1.724,1476,1.724,1477,1.724,1478,1.724,1479,1.724,1480,1.724,1481,1.724,1482,1.724,1483,1.724,1484,1.724,1485,2.903,1486,2.903,1487,3.679,1488,2.903,1489,4.413,1490,2.903,1491,4.413,1492,4.413,1493,4.413]],["title/interceptors/LoaderInterceptor.html",[1494,4.369,1495,3.483]],["body/interceptors/LoaderInterceptor.html",[3,0.264,4,0.264,5,0.162,7,0.282,11,0.432,12,0.011,13,0.282,75,0.009,76,0.009,80,1.198,83,0.712,86,1.1,89,0.79,102,1.988,140,0.74,142,2.47,143,1.198,157,1.232,347,1.198,417,1.257,431,1.668,448,1.34,452,1.875,453,1.198,748,3.072,906,4.129,1213,5.378,1495,5.785,1496,5.992,1497,5.992,1498,7.256,1499,7.256,1500,8.111,1501,6.851,1502,8.111,1503,5.992,1504,5.992,1505,7.256,1506,5.992,1507,5.26,1508,5.349,1509,5.992,1510,5.26,1511,5.992,1512,5.992,1513,5.992]],["title/injectables/LoaderService.html",[417,0.757,1508,3.221]],["body/injectables/LoaderService.html",[3,0.257,4,0.257,5,0.158,7,0.274,8,0.587,12,0.011,13,0.274,16,1.993,21,1.378,39,3.008,41,2.941,75,0.009,76,0.009,83,0.5,88,2.485,89,0.768,140,0.72,143,1.165,149,2.036,343,1.583,347,1.541,417,1.236,419,2.326,425,6.148,431,1.64,448,1.595,466,1.456,499,5.26,518,1.675,592,4.648,595,4.648,621,4.648,1508,5.26,1514,5.83,1515,8.243,1516,7.236,1517,5.83,1518,5.83,1519,5.83,1520,5.83,1521,8.243,1522,5.83,1523,5.83,1524,4.648]],["title/injectables/MediaSessionService.html",[417,0.757,1525,3.011]],["body/injectables/MediaSessionService.html",[3,0.205,4,0.205,5,0.126,7,0.219,10,1.452,11,0.533,12,0.011,13,0.219,16,2.208,29,4.5,75,0.008,76,0.008,80,1.477,83,0.529,86,0.854,89,0.613,123,1.162,140,0.574,143,1.235,153,1.639,174,1.797,232,2.386,240,2.464,241,1.933,343,1.263,346,2.957,347,1.538,417,1.07,418,3.044,419,1.855,422,5.829,423,5.093,431,1.42,448,1.652,452,2.312,453,1.477,467,2.86,518,1.336,537,3.708,888,3.799,922,2.721,1245,5.093,1525,4.257,1526,6.941,1527,6.304,1528,4.651,1529,6.178,1530,6.178,1531,6.178,1532,6.178,1533,4.651,1534,6.178,1535,6.936,1536,7.692,1537,6.487,1538,4.651,1539,6.178,1540,6.936,1541,4.651,1542,6.178,1543,4.651,1544,6.178,1545,4.651,1546,4.78,1547,4.651,1548,4.925,1549,5.422,1550,4.651,1551,4.083,1552,4.651,1553,4.651,1554,4.651,1555,4.651,1556,4.083,1557,4.651,1558,4.651,1559,6.178,1560,4.925,1561,5.422,1562,6.178,1563,4.651,1564,4.651,1565,4.083,1566,4.651,1567,4.651,1568,4.651,1569,4.651,1570,4.651,1571,4.651,1572,4.651]],["title/injectables/MetadataService.html",[125,2.556,417,0.757]],["body/injectables/MetadataService.html",[3,0.12,4,0.12,5,0.186,7,0.128,8,0.346,11,0.511,12,0.011,13,0.128,19,0.785,21,1.474,41,1.124,75,0.005,76,0.005,77,0.879,79,3.005,80,1.154,81,1.398,82,1.438,83,0.666,85,2.745,86,0.501,88,1.163,89,0.359,90,1.677,91,1.924,92,1.596,93,1.458,94,2.461,95,2.809,96,1.596,101,1.163,102,0.905,123,1.716,125,2.461,140,0.337,143,1.418,144,1.771,145,1.771,149,2.146,153,1.814,157,1.599,173,1.088,186,2.9,200,0.932,214,2.161,230,2.437,234,2.617,278,2.073,343,0.741,347,1.455,380,1.317,417,0.729,419,1.088,431,0.967,448,1.291,452,1.807,453,1.154,466,1.558,484,3.355,513,2.349,514,1.398,518,0.784,520,1.523,554,2.349,655,2.285,686,3.693,701,2.461,718,3.243,722,4.018,728,2.157,732,4.459,733,3.377,734,1.771,735,1.294,736,1.88,737,1.771,741,2.698,754,1.088,755,1.344,766,1.677,770,2.587,778,2.392,779,2.157,780,2.157,804,2.189,807,2.117,813,4.278,814,2.249,815,1.771,816,1.771,817,1.771,818,1.771,819,1.771,822,2.738,861,1.294,867,4.156,868,1.677,888,3.158,932,1.523,1328,3.355,1400,2.587,1573,2.395,1574,5.136,1575,5.136,1576,5.136,1577,5.136,1578,5.136,1579,3.693,1580,4.208,1581,4.208,1582,4.208,1583,2.728,1584,2.728,1585,2.395,1586,4.208,1587,4.208,1588,2.728,1589,4.095,1590,4.208,1591,2.728,1592,4.208,1593,2.728,1594,4.208,1595,2.728,1596,5.068,1597,4.208,1598,4.208,1599,2.728,1600,4.208,1601,2.728,1602,4.208,1603,2.728,1604,4.208,1605,2.728,1606,2.728,1607,2.395,1608,2.728,1609,2.395,1610,2.728,1611,2.728,1612,1.88,1613,2.728,1614,2.728,1615,2.395,1616,2.395,1617,2.728,1618,2.728,1619,2.728,1620,2.728,1621,2.728,1622,2.728,1623,2.728,1624,2.728,1625,2.728,1626,2.728,1627,2.728,1628,2.728,1629,2.728,1630,4.208,1631,2.175,1632,2.728,1633,2.395,1634,2.395,1635,2.728,1636,2.728,1637,2.728,1638,2.728,1639,2.728,1640,2.728,1641,4.208,1642,2.728,1643,2.728,1644,2.728,1645,4.208,1646,4.508,1647,2.728,1648,2.728,1649,4.208,1650,2.728,1651,5.773,1652,4.208,1653,4.208,1654,3.355,1655,3.355,1656,3.693,1657,5.136,1658,2.728,1659,2.728,1660,4.208,1661,5.136,1662,3.355,1663,2.728,1664,2.728,1665,2.728,1666,2.728,1667,6.238,1668,2.728,1669,2.728,1670,2.728,1671,2.728,1672,2.728,1673,2.728,1674,2.728,1675,6.238,1676,2.728,1677,4.208,1678,2.728,1679,4.208,1680,4.208,1681,2.728,1682,2.728,1683,2.728,1684,2.728,1685,2.728,1686,2.728,1687,2.728,1688,2.728,1689,2.728,1690,2.728,1691,2.728,1692,2.728,1693,2.728,1694,2.728,1695,2.728,1696,2.728,1697,2.728,1698,2.728,1699,2.728,1700,2.728,1701,2.728,1702,2.728,1703,2.728,1704,2.728,1705,2.395,1706,2.395,1707,2.728,1708,4.208,1709,2.728,1710,2.728,1711,2.728,1712,2.728,1713,2.728,1714,2.728,1715,2.728,1716,2.728,1717,2.728,1718,2.728,1719,2.395,1720,2.728,1721,2.728,1722,2.728,1723,2.728,1724,2.728,1725,2.728,1726,2.728,1727,2.728,1728,2.728,1729,2.728,1730,2.728,1731,2.728,1732,2.728]],["title/components/MetadataSettingsComponent.html",[84,0.977,391,1.743]],["body/components/MetadataSettingsComponent.html",[3,0.176,4,0.176,5,0.205,7,0.187,8,0.457,11,0.499,12,0.011,13,0.187,16,1.934,21,0.941,75,0.007,76,0.007,80,1.579,83,0.664,84,1.431,86,0.731,89,0.525,90,2.448,91,2.54,92,3.744,93,3.894,113,1.82,123,2.031,125,4.052,126,2.743,135,2.08,139,2.08,140,0.491,141,1.538,143,1.111,144,2.584,145,2.584,147,3.829,211,3.25,230,2.062,234,1.401,333,1.588,334,1.79,335,1.641,336,1.641,337,1.641,341,3.23,342,3.298,344,1.588,347,1.509,372,1.641,373,2.216,374,1.898,375,1.401,376,2.855,377,1.641,378,1.641,379,1.588,380,1.246,381,1.641,382,1.588,383,1.641,384,1.588,385,1.49,386,1.641,387,1.401,388,1.445,389,1.445,390,2.29,391,2.763,392,2.855,393,1.588,394,1.641,395,1.588,396,1.445,397,1.641,398,1.588,399,1.641,400,1.49,401,1.588,402,1.588,403,1.641,404,1.588,405,1.538,406,1.641,407,1.588,408,1.641,409,1.588,410,1.49,411,1.588,412,1.588,413,1.588,414,1.538,415,1.588,416,1.641,431,1.277,448,1.629,452,2.167,453,1.385,466,0.994,513,3.102,514,2.041,520,2.223,577,3.702,598,3.413,785,3.25,822,3.747,1180,3.829,1286,3.281,1406,3.607,1733,7.745,1734,6.799,1735,3.174,1736,5.103,1737,6.4,1738,4.095,1739,6.926,1740,5.556,1741,5.556,1742,5.556,1743,5.556,1744,3.98,1745,5.556,1746,8.353,1747,3.98,1748,5.556,1749,3.98,1750,5.556,1751,3.98,1752,5.556,1753,3.98,1754,3.98,1755,3.98,1756,3.494,1757,3.494,1758,3.174,1759,3.98,1760,3.98,1761,6.926,1762,3.98,1763,3.98,1764,3.98,1765,3.98,1766,3.98,1767,3.98,1768,3.98,1769,5.556,1770,6.08,1771,5.556,1772,4.877]],["title/interfaces/MusicbrainzReleaseGroup.html",[0,0.072,758,2.836]],["body/interfaces/MusicbrainzReleaseGroup.html",[0,0.119,2,0.88,3,0.194,4,0.194,5,0.119,7,0.207,8,0.49,10,0.808,11,0.486,12,0.011,13,0.207,19,1.171,22,1.418,75,0.007,76,0.007,77,1.418,82,1.504,83,0.682,86,0.808,89,0.58,101,1.876,102,1.46,140,0.543,143,1.509,149,1.572,153,1.88,157,1.705,200,2.469,204,3.863,214,2.979,230,2.173,232,2.606,234,2.545,240,2.691,241,2.435,245,1.418,282,2.707,343,1.195,380,1.377,417,1.032,453,1.19,518,1.264,655,1.418,718,2.722,727,1.648,740,3.865,741,1.598,742,3.034,743,3.034,744,2.169,745,3.034,747,2.352,748,2.257,749,3.034,750,2.858,751,2.858,752,3.459,753,2.229,754,1.756,755,2.169,756,2.257,757,2.352,758,4.379,759,3.452,760,5.052,761,4.444,762,2.858,763,4.103,764,3.034,765,3.034,766,2.707,767,2.858,768,2.858,769,2.352,770,2.707,771,2.257,772,2.352,773,2.352,774,3.034,775,3.034,776,3.034,777,2.352,778,2.449,779,2.257,780,3.052,781,4.103,782,3.034,783,3.034,784,3.182,785,2.575,786,3.034,787,3.034,788,3.034,789,3.034,790,3.034,791,3.034,792,3.182,793,4.103,794,3.034,795,3.034,796,2.858,797,3.034,798,3.034,799,3.034,800,3.034,801,4.103,802,3.034,803,3.034,804,1.876,805,3.034,806,3.034,807,2.454,808,3.034,809,3.034,810,3.034]],["title/interfaces/MusicbrainzResponse.html",[0,0.072,762,2.836]],["body/interfaces/MusicbrainzResponse.html",[0,0.119,2,0.894,3,0.197,4,0.197,5,0.121,7,0.21,8,0.495,10,1.248,11,0.434,12,0.011,13,0.21,19,1.131,22,1.44,75,0.007,76,0.007,77,1.44,82,1.527,83,0.685,86,0.821,89,0.589,101,1.906,102,1.483,140,0.552,143,1.517,149,1.589,153,1.888,157,1.71,200,1.527,204,2.389,214,2.99,230,2.19,232,2.627,234,2.561,240,2.712,241,2.446,245,1.44,282,2.749,343,1.214,380,1.399,417,1.042,518,1.284,655,1.44,718,2.75,727,1.673,740,3.905,741,1.622,742,3.081,743,3.081,744,2.203,745,3.081,747,2.389,748,2.292,749,3.081,750,2.902,751,2.902,752,3.486,753,2.252,754,1.783,755,2.203,756,2.292,757,2.389,758,4.722,759,2.75,760,5.075,761,2.749,762,3.905,763,5.231,764,5.012,765,3.081,766,2.749,767,2.902,768,2.902,769,2.389,770,2.749,771,2.292,772,2.389,773,2.389,774,3.081,775,3.081,776,3.081,777,2.389,778,2.468,779,2.292,780,3.084,781,4.146,782,3.081,783,3.081,784,3.215,785,2.615,786,3.081,787,3.081,788,3.081,789,3.081,790,3.081,791,3.081,792,3.215,793,4.146,794,3.081,795,3.081,796,2.902,797,3.081,798,3.081,799,3.081,800,3.081,801,4.146,802,3.081,803,3.081,804,1.906,805,3.081,806,3.081,807,2.48,808,3.081,809,3.081,810,3.081]],["title/injectables/MusicbrainzService.html",[417,0.757,770,2.687]],["body/injectables/MusicbrainzService.html",[0,0.119,3,0.197,4,0.197,5,0.121,7,0.21,10,0.819,11,0.322,12,0.011,13,0.21,19,1.131,22,1.436,75,0.007,76,0.007,77,1.436,80,0.891,82,1.523,83,0.684,86,0.819,89,0.588,101,1.901,102,1.479,140,0.55,143,1.516,149,1.586,153,1.887,157,1.709,200,1.523,204,2.383,214,2.989,230,2.443,232,2.623,234,2.558,240,2.709,241,2.444,245,1.436,282,2.742,343,1.211,347,0.891,380,1.395,417,1.041,419,1.779,431,1.38,448,0.997,452,1.395,453,0.891,518,1.281,655,1.436,718,2.746,727,1.669,740,3.899,741,2.18,742,3.073,743,3.073,744,2.197,745,3.073,747,2.383,748,2.286,749,3.073,750,2.895,751,2.895,752,3.481,753,2.72,754,1.779,755,2.197,756,2.286,757,2.383,758,3.899,759,2.746,760,4.408,761,2.742,762,2.895,763,4.139,764,3.073,765,3.073,766,2.742,767,2.895,768,2.895,769,2.383,770,3.693,771,2.286,772,2.383,773,2.383,774,3.073,775,3.073,776,3.073,777,3.209,778,2.637,779,2.286,780,3.079,781,4.139,782,3.073,783,3.073,784,3.209,785,2.608,786,3.073,787,3.073,788,3.073,789,3.073,790,3.073,791,3.073,792,3.209,793,4.139,794,3.073,795,3.073,796,2.895,797,3.073,798,3.073,799,3.073,800,3.073,801,4.139,802,3.073,803,3.073,804,1.901,805,3.073,806,3.073,807,2.475,808,3.073,809,3.073,810,3.073,822,2.115,1426,5.271,1773,4.459]],["title/injectables/NativeBrowserFileLoaderService.html",[417,0.757,871,3.483]],["body/injectables/NativeBrowserFileLoaderService.html",[0,0.073,3,0.197,4,0.197,5,0.227,7,0.21,8,0.494,10,0.819,12,0.011,13,0.21,21,1.054,41,1.838,75,0.007,76,0.007,83,0.65,86,0.819,88,1.901,89,0.588,90,2.742,91,2.039,92,2.608,93,2.383,101,1.901,102,1.479,140,0.55,142,1.838,143,0.891,144,2.895,145,2.895,149,1.793,153,1.846,157,1.641,164,3.899,230,2.615,232,1.722,234,2.75,240,1.779,241,1.879,278,2.197,343,1.211,346,2.895,347,1.452,353,3.737,417,1.041,419,1.779,431,1.38,448,1.343,466,1.114,468,2.959,518,1.281,554,2.49,655,1.934,701,2.608,759,2.746,778,2.752,859,3.555,860,4.663,861,3.597,862,6.046,863,3.287,864,5.071,865,5.414,866,2.742,867,3.883,868,2.742,869,3.353,870,2.895,871,4.788,872,5.006,873,3.914,874,3.914,875,5.414,876,3.914,877,5.271,878,3.914,879,5.356,880,3.914,881,3.914,882,3.914,883,3.914,884,3.914,885,5.356,886,3.914,887,3.914,888,3.693,889,3.555,890,3.914,891,3.914,892,3.914,893,3.555,894,3.287,895,3.914,896,3.914,897,3.914,898,3.555,899,3.914,900,3.287,901,3.555,902,3.914,903,3.914,904,3.914,905,3.555,906,3.073,907,5.961,908,4.788,909,3.555,910,3.914,911,3.914,912,3.914,1774,6.005,1775,4.459,1776,4.459]],["title/interfaces/OscVisualizerOptions.html",[0,0.072,331,2.24]],["body/interfaces/OscVisualizerOptions.html",[0,0.137,2,1.01,3,0.223,4,0.223,5,0.137,7,0.238,8,0.536,10,1.622,11,0.57,12,0.011,13,0.403,18,3.227,19,1.038,22,1.628,25,3.078,75,0.008,76,0.008,287,2.821,288,2.821,289,3.76,290,2.956,291,2.956,292,2.956,293,2.7,294,2.59,295,2.7,296,2.7,297,2.7,298,2.7,299,2.7,300,2.7,301,2.7,302,2.821,303,2.821,304,2.59,305,3.485,306,3.344,307,3.344,308,3.344,309,2.59,310,4.05,311,2.7,312,2.878,313,2.878,314,3.344,315,2.7,316,2.7,317,2.59,318,2.821,319,2.956,320,2.49,321,3.558,322,2.7,323,2.49,324,4.261,325,3.093,326,2.7,327,3.344,328,3.619,329,3.837,330,2.397,331,3.702,332,4.109]],["title/interfaces/OsciloscopeConfig.html",[0,0.072,309,2.24]],["body/interfaces/OsciloscopeConfig.html",[0,0.138,2,1.033,3,0.228,4,0.228,5,0.14,7,0.243,8,0.544,10,1.625,11,0.555,12,0.011,13,0.404,18,2.911,19,1.047,22,1.664,25,2.82,75,0.008,76,0.008,287,2.885,288,2.885,289,3.791,290,3.022,291,3.022,292,3.022,293,2.761,294,2.649,295,2.761,296,2.761,297,2.761,298,2.761,299,2.761,300,2.761,301,2.761,302,2.885,303,2.885,304,2.649,305,3.536,306,3.392,307,3.392,308,3.392,309,3.392,310,4.078,311,2.761,312,2.919,313,2.919,314,3.392,315,2.761,316,2.761,317,2.649,318,2.885,319,3.022,320,2.546,321,3.596,322,2.761,323,2.546,324,4.075,325,3.138,326,2.761,327,3.392,328,3.65,329,3.65,330,2.45,331,3.392,332,3.791]],["title/components/PlayerComponent.html",[84,0.977,393,1.743]],["body/components/PlayerComponent.html",[3,0.199,4,0.199,5,0.185,7,0.212,8,0.497,12,0.011,13,0.212,21,1.613,75,0.007,76,0.007,80,1.459,83,0.729,84,1.526,86,0.827,87,4.704,89,0.594,107,3.105,108,3.899,109,2.77,111,2.31,113,2.06,123,1.511,135,2.264,137,2.765,139,2.264,140,0.556,141,1.74,142,2.493,143,1.209,148,3.538,231,3.105,333,1.797,334,1.948,335,1.857,336,1.857,337,1.857,339,3.719,340,3.719,341,3.272,342,3.347,344,1.797,347,1.209,349,2.77,372,1.857,373,2.412,374,2.066,375,1.586,376,3.007,377,1.857,378,1.857,379,2.91,380,1.892,381,1.857,382,1.797,383,1.857,384,1.797,385,1.687,386,1.857,387,1.586,388,1.635,389,1.635,390,2.493,391,1.797,392,3.007,393,2.91,394,1.857,395,1.797,396,2.478,397,1.857,398,2.91,399,1.857,400,1.687,401,1.797,402,1.797,403,1.857,404,1.797,405,1.74,406,1.857,407,1.797,408,1.857,409,1.797,410,1.687,411,1.797,412,1.797,413,1.797,414,1.74,415,1.797,416,1.857,418,3.595,466,1.511,823,3.955,861,2.137,869,3.377,870,2.925,915,5.443,922,3.538,925,2.77,927,3.321,932,2.516,1285,4.198,1286,3.5,1777,4.505,1778,5.992,1779,5.443,1780,5.443,1781,6.048,1782,6.048,1783,4.505,1784,4.505,1785,4.458,1786,3.955,1787,3.321,1788,3.592,1789,4.505,1790,4.505,1791,3.955,1792,3.592,1793,4.505]],["title/injectables/PlayerService.html",[108,2.335,417,0.757]],["body/injectables/PlayerService.html",[3,0.097,4,0.097,5,0.171,7,0.104,8,0.292,10,1.309,11,0.503,12,0.011,13,0.104,16,1.948,19,0.607,21,1.605,39,2.367,41,2.111,43,1.043,75,0.004,76,0.004,77,0.708,80,1.358,83,0.611,85,3.379,86,0.404,88,1.902,89,0.29,91,1.006,95,3.461,96,1.287,108,1.897,123,0.549,125,2.076,126,1.516,140,0.271,143,1.453,147,1.516,149,2.144,153,1.898,157,1.619,164,3.325,166,4.481,173,0.877,200,0.751,204,1.897,214,2.249,230,2.628,232,0.85,234,2.316,240,0.877,241,1.397,242,1.753,249,1.753,254,1.753,255,1.753,278,1.749,312,2.651,313,2.651,320,2.524,343,0.597,346,1.902,347,1.644,354,2.304,355,1.621,364,1.621,417,0.615,418,1.749,419,0.877,422,3.29,431,0.816,436,1.621,448,1.747,452,2.126,453,1.426,461,2.492,464,3.558,466,1.845,468,2.524,513,1.982,514,1.127,518,0.632,520,1.228,554,1.228,561,1.621,600,1.352,655,1.438,675,4.496,723,2.86,733,2.076,737,2.304,738,1.428,739,1.287,778,1.62,861,1.684,866,1.352,867,3.211,868,1.352,869,1.982,870,1.428,888,1.352,893,1.753,922,1.287,925,1.352,932,1.982,1038,1.931,1308,1.931,1361,1.931,1412,1.428,1456,3.116,1487,3.53,1501,4.496,1525,2.446,1527,1.753,1537,1.931,1546,2.446,1556,3.116,1585,3.116,1792,1.753,1794,1.931,1795,4.463,1796,4.463,1797,4.463,1798,4.463,1799,4.463,1800,3.55,1801,4.463,1802,3.55,1803,3.55,1804,4.463,1805,3.55,1806,3.116,1807,3.116,1808,5.122,1809,4.463,1810,3.55,1811,3.55,1812,4.496,1813,4.496,1814,2.199,1815,2.199,1816,2.199,1817,3.55,1818,2.199,1819,3.558,1820,2.199,1821,2.199,1822,2.199,1823,2.199,1824,2.199,1825,3.55,1826,2.199,1827,2.199,1828,3.55,1829,2.199,1830,3.55,1831,2.199,1832,5.122,1833,3.55,1834,2.199,1835,2.199,1836,2.199,1837,2.199,1838,2.199,1839,3.55,1840,2.199,1841,2.199,1842,2.199,1843,2.199,1844,3.55,1845,3.55,1846,3.55,1847,2.199,1848,2.199,1849,2.199,1850,6.009,1851,5.122,1852,3.55,1853,3.55,1854,2.199,1855,3.55,1856,2.199,1857,3.55,1858,2.199,1859,2.199,1860,3.55,1861,2.199,1862,1.621,1863,2.446,1864,2.199,1865,2.199,1866,2.199,1867,1.753,1868,1.621,1869,1.621,1870,2.199,1871,2.199,1872,1.753,1873,1.753,1874,3.55,1875,2.199,1876,3.55,1877,2.199,1878,2.199,1879,3.55,1880,2.199,1881,3.55,1882,2.199,1883,2.199,1884,2.199,1885,2.199,1886,2.199,1887,2.199,1888,2.199,1889,2.199,1890,2.199,1891,3.55,1892,2.199,1893,3.116,1894,2.199,1895,1.931,1896,2.199,1897,3.55,1898,2.199,1899,1.931,1900,1.931,1901,3.55,1902,1.931,1903,2.199,1904,2.199,1905,2.199,1906,2.199,1907,2.199,1908,2.199,1909,2.199,1910,1.931,1911,2.199,1912,1.931,1913,4.463,1914,2.199,1915,2.199,1916,2.199,1917,2.199,1918,2.199,1919,2.199,1920,2.199,1921,2.199,1922,2.199,1923,2.199,1924,2.199,1925,2.199,1926,2.199,1927,2.199,1928,2.199,1929,2.199,1930,2.199,1931,2.199,1932,2.199,1933,2.199,1934,2.199,1935,2.199,1936,2.199,1937,2.199,1938,2.199,1939,2.199,1940,2.199,1941,2.199,1942,2.199,1943,2.199,1944,2.199,1945,2.199,1946,2.199,1947,1.931,1948,3.55,1949,3.116,1950,3.116,1951,1.931,1952,1.931,1953,2.199,1954,4.463,1955,1.931,1956,2.199,1957,2.199,1958,2.199,1959,2.199,1960,2.199,1961,3.55,1962,2.199,1963,3.55,1964,2.199,1965,2.199,1966,2.199,1967,1.931,1968,2.199,1969,5.122,1970,2.199,1971,2.199,1972,2.199,1973,2.199,1974,2.199,1975,2.199,1976,2.199,1977,2.199,1978,3.55,1979,2.199,1980,2.199,1981,2.199,1982,3.55,1983,1.287,1984,2.199,1985,2.611,1986,2.199,1987,3.076,1988,2.199,1989,2.199,1990,2.199,1991,2.199,1992,2.199,1993,1.931,1994,3.558,1995,3.558,1996,2.199,1997,2.199,1998,1.753,1999,1.931,2000,2.199,2001,2.199,2002,2.199,2003,2.199]],["title/components/PlayerToolbarComponent.html",[84,0.977,395,1.743]],["body/components/PlayerToolbarComponent.html",[3,0.12,4,0.12,5,0.139,7,0.128,8,0.345,10,1.481,11,0.495,12,0.011,13,0.128,16,2.074,19,0.571,21,1.362,34,1.672,35,4.048,37,1.591,39,1.919,70,1.672,75,0.005,76,0.005,80,1.511,83,0.686,84,1.146,85,2.739,86,0.499,87,3.533,89,0.358,103,4.087,106,3.779,107,1.874,108,3.08,109,1.672,110,4.087,111,1.394,112,4.087,113,1.243,123,1.048,135,1.571,137,1.919,139,1.571,140,0.336,141,1.05,142,1.73,143,1.025,148,2.455,149,1.354,157,0.559,230,1.857,231,1.874,294,1.394,333,1.085,334,1.352,335,1.121,336,1.121,337,1.121,339,2.581,340,2.581,341,3.076,342,3.065,344,1.085,347,1.6,349,1.672,372,1.121,373,1.674,374,1.434,375,0.957,376,2.376,377,1.121,378,1.121,379,1.085,380,0.851,381,1.121,382,1.085,383,1.121,384,1.085,385,1.018,386,1.121,387,0.957,388,0.987,389,0.987,390,1.73,391,1.085,392,2.376,393,1.085,394,1.121,395,2.299,396,2.49,397,1.121,398,1.085,399,1.121,400,1.018,401,1.085,402,1.085,403,1.121,404,1.085,405,1.05,406,1.121,407,1.085,408,1.121,409,1.085,410,1.018,411,1.085,412,1.085,413,1.085,414,1.05,415,1.085,416,1.121,418,2.84,430,2.168,431,0.965,448,1.715,452,2.147,453,1.453,461,2.344,466,2.028,655,1.352,739,2.455,826,3.779,841,2.387,843,3.346,851,3.742,861,1.29,869,3.218,870,1.765,922,2.455,925,1.672,927,2.005,932,1.518,959,3.328,1006,1.765,1085,2.725,1152,1.672,1204,2.005,1205,1.765,1206,2.005,1208,1.672,1217,2.581,1780,4.087,1787,2.005,1788,2.168,1792,3.346,1806,3.684,1807,3.684,1812,4.5,1813,4.5,1983,2.455,1985,3.851,2004,8.065,2005,7.079,2006,2.719,2007,3.684,2008,5.126,2009,5.126,2010,5.126,2011,5.126,2012,5.126,2013,4.197,2014,4.197,2015,5.126,2016,4.197,2017,4.197,2018,4.197,2019,5.126,2020,4.197,2021,4.197,2022,5.126,2023,5.126,2024,2.719,2025,2.719,2026,2.719,2027,2.719,2028,2.719,2029,2.719,2030,2.719,2031,4.197,2032,2.719,2033,4.197,2034,2.719,2035,2.719,2036,2.719,2037,2.719,2038,2.719,2039,2.719,2040,2.719,2041,2.719,2042,2.719,2043,2.719,2044,2.719,2045,2.719,2046,4.197,2047,2.719,2048,2.168,2049,2.387,2050,2.387,2051,2.387,2052,2.719,2053,2.387,2054,2.719,2055,2.719,2056,2.719,2057,2.719,2058,2.719,2059,2.719,2060,4.197,2061,4.197,2062,2.719,2063,2.719,2064,2.719,2065,2.719,2066,2.719,2067,2.719,2068,2.719,2069,2.719,2070,4.197,2071,2.719,2072,4.197,2073,5.126,2074,2.719,2075,2.719,2076,2.719,2077,2.719,2078,2.719,2079,2.719,2080,2.719,2081,4.197,2082,2.719,2083,4.197,2084,2.719,2085,2.719,2086,2.719,2087,2.719,2088,2.719,2089,2.719,2090,2.719,2091,2.719,2092,2.719,2093,2.719,2094,2.719,2095,2.719,2096,2.719,2097,2.719,2098,2.719,2099,2.719,2100,2.719,2101,2.719,2102,2.719,2103,2.719,2104,2.719,2105,2.719,2106,2.719,2107,2.719,2108,2.719,2109,5.764,2110,2.719,2111,2.719,2112,3.684,2113,5.059,2114,4.197,2115,4.197,2116,3.684,2117,3.684,2118,4.197,2119,4.197,2120,4.197]],["title/components/PlaylistComponent.html",[84,0.977,398,1.743]],["body/components/PlaylistComponent.html",[3,0.112,4,0.112,5,0.108,7,0.187,8,0.326,10,0.899,11,0.434,12,0.011,13,0.119,16,1.368,19,0.54,21,1.311,39,1.486,41,1.637,43,2.323,45,1.481,75,0.005,76,0.005,80,1.422,83,0.677,84,1.095,85,2.618,86,0.465,88,2.724,89,0.334,95,3.443,96,1.481,99,3.18,100,1.644,106,1.866,107,1.745,108,2.964,109,1.557,111,1.298,113,1.157,114,3.905,115,3.905,116,3.905,117,2.019,118,3.905,119,1.866,120,1.298,123,0.992,127,3.905,128,1.866,135,1.486,137,1.815,139,1.486,140,0.313,141,0.978,143,1.109,148,2.323,149,1.765,153,1.931,157,1.422,211,1.481,230,1.578,285,3.165,333,1.01,334,1.279,335,1.044,336,1.044,337,1.044,339,2.441,340,2.441,341,3.042,342,3.076,344,1.01,346,2.088,347,1.455,349,1.557,372,1.044,373,1.584,374,1.357,375,0.891,376,2.286,377,1.044,378,1.044,379,1.01,380,0.792,381,1.044,382,1.01,383,1.044,384,1.01,385,0.948,386,1.044,387,0.891,388,0.919,389,0.919,390,1.637,391,1.01,392,2.286,393,1.01,394,1.044,395,1.01,396,0.919,397,1.044,398,2.212,399,1.044,400,0.948,401,1.01,402,1.01,403,1.044,404,1.01,405,0.978,406,1.044,407,1.01,408,1.044,409,1.01,410,0.948,411,1.01,412,1.01,413,1.01,414,2.142,415,1.01,416,1.044,418,2.732,428,4.422,431,0.913,448,1.347,452,1.885,453,1.204,466,1.385,467,3.012,499,1.866,536,1.745,553,1.866,598,2.968,710,2.222,767,1.644,778,1.441,842,4.422,894,2.927,908,3.165,922,2.323,925,1.557,960,1.644,1007,2.222,1008,2.222,1014,3.485,1023,3.611,1069,3.485,1070,3.485,1077,1.866,1208,1.557,1285,3.012,1286,2.511,1293,2.019,1356,4.299,1463,3.485,1487,5.016,1546,3.822,1548,2.019,1549,4.299,1551,2.222,1631,2.019,1633,2.222,1780,3.905,1819,6.237,1862,1.866,1867,2.019,1868,1.866,1869,1.866,1872,2.019,1873,2.019,1902,2.222,1947,3.485,1967,3.485,2121,2.532,2122,4.299,2123,4.299,2124,4.898,2125,3.97,2126,3.97,2127,4.898,2128,4.898,2129,3.97,2130,3.97,2131,3.97,2132,2.532,2133,5.546,2134,2.532,2135,5.546,2136,2.532,2137,3.97,2138,4.898,2139,2.532,2140,3.97,2141,2.532,2142,2.532,2143,2.532,2144,3.97,2145,2.532,2146,2.532,2147,3.97,2148,2.532,2149,2.222,2150,2.532,2151,2.222,2152,2.222,2153,2.532,2154,2.222,2155,2.532,2156,2.532,2157,5.61,2158,2.532,2159,4.299,2160,7.114,2161,4.898,2162,2.532,2163,2.532,2164,2.532,2165,3.97,2166,2.532,2167,3.97,2168,2.222,2169,2.532,2170,2.532,2171,3.97,2172,2.532,2173,3.485,2174,2.532,2175,2.019,2176,4.898,2177,2.532,2178,2.222,2179,2.222,2180,2.222,2181,2.532,2182,2.019,2183,3.97,2184,2.532,2185,1.481,2186,2.222,2187,2.532,2188,2.532,2189,2.532,2190,4.898,2191,2.532,2192,5.546,2193,2.532,2194,2.532,2195,2.532,2196,3.485,2197,2.532,2198,2.532,2199,2.532,2200,3.97,2201,3.97,2202,4.898,2203,2.532,2204,2.532,2205,3.97,2206,2.532,2207,2.532,2208,3.485,2209,2.532,2210,4.898,2211,2.532,2212,2.532,2213,3.97,2214,3.97,2215,2.532,2216,4.898,2217,2.532,2218,2.019,2219,2.019,2220,3.97,2221,2.532,2222,2.532,2223,3.97,2224,2.532,2225,2.532,2226,3.97,2227,2.532,2228,2.532,2229,2.019,2230,2.532,2231,2.532,2232,2.532,2233,2.532,2234,2.222,2235,2.532,2236,3.97,2237,2.532,2238,2.532,2239,2.532,2240,2.532,2241,2.532,2242,2.532,2243,2.532,2244,2.532,2245,2.532,2246,3.97,2247,3.97,2248,5.546,2249,3.97,2250,3.97,2251,3.97]],["title/components/PromptDialogComponent.html",[84,0.977,400,1.635]],["body/components/PromptDialogComponent.html",[0,0.076,3,0.204,4,0.204,5,0.167,7,0.218,8,0.507,12,0.011,13,0.29,16,1.721,19,0.942,21,1.456,75,0.008,76,0.008,80,1.475,83,0.593,84,1.547,86,0.85,89,0.61,113,2.118,123,1.539,135,2.306,139,2.306,140,0.572,141,1.79,200,1.583,245,2.23,333,1.848,334,1.985,335,1.909,336,1.909,337,1.909,341,3.28,342,3.358,344,1.848,347,1.475,372,1.909,373,2.458,374,2.105,375,1.631,376,3.041,377,1.909,378,1.909,379,1.848,380,1.45,381,1.909,382,1.848,383,1.909,384,1.848,385,1.734,386,1.909,387,1.631,388,1.681,389,1.681,390,2.54,391,1.848,392,3.041,393,1.848,394,1.909,395,1.848,396,1.681,397,1.909,398,1.848,399,1.909,400,2.762,401,3.064,402,1.848,403,1.909,404,1.848,405,1.79,406,1.909,407,1.848,408,1.909,409,1.848,410,1.734,411,1.848,412,1.848,413,1.848,414,1.79,415,1.848,416,1.909,431,1.416,448,1.377,466,1.539,600,4.857,953,5.663,1210,2.849,1211,2.71,1220,3.604,1226,4.257,1281,3.415,1282,3.415,1283,5.103,1286,3.549,1288,4.542,1289,4.542,1290,4.542,1296,4.066,1394,2.71,2252,6.743,2253,6.743,2254,6.476,2255,4.632,2256,4.632,2257,4.632,2258,3.415,2259,3.693,2260,4.066,2261,4.066,2262,6.161,2263,6.161,2264,6.161]],["title/interfaces/PromptDialogData.html",[0,0.072,2258,3.221]],["body/interfaces/PromptDialogData.html",[0,0.097,2,1.175,3,0.259,4,0.259,5,0.159,7,0.277,8,0.59,11,0.558,12,0.011,13,0.338,19,1.177,75,0.009,76,0.009,83,0.663,84,1.603,86,1.079,89,0.775,113,2.688,135,2.201,139,2.201,140,0.726,200,2.753,245,1.894,341,2.201,342,2.271,400,2.201,401,2.861,600,3.616,953,4.334,1210,3.616,1211,3.44,1220,3.44,1226,3.616,1281,4.334,1282,4.334,1283,5.287,1286,3.677,1288,4.334,1289,4.334,1290,4.334,1394,4.714,2252,5.161,2253,5.161,2254,5.161,2258,5.287,2259,6.425,2260,5.161,2261,5.161]],["title/interfaces/RemoteCoverPicture.html",[0,0.072,82,1.493]],["body/interfaces/RemoteCoverPicture.html",[0,0.136,2,1.192,3,0.263,4,0.263,5,0.211,7,0.281,8,0.595,11,0.522,12,0.011,13,0.39,19,1.192,75,0.009,76,0.009,82,2.471,83,0.511,241,1.865,722,3.487,727,2.231,728,3.056,741,2.163,753,2.708,754,2.378,759,3.307,804,3.451,807,3.337,811,5.54,812,4.108,813,3.87,814,3.186,815,3.87,816,3.87,817,3.87,818,3.87,819,3.87,820,3.666,821,3.666,822,2.827]],["title/components/SettingsComponent.html",[84,0.977,402,1.743]],["body/components/SettingsComponent.html",[3,0.23,4,0.23,5,0.18,12,0.011,13,0.245,21,1.23,75,0.008,76,0.008,80,1.542,83,0.661,84,1.637,89,0.686,123,1.829,135,2.488,137,3.039,139,2.488,140,0.643,141,2.011,333,2.076,334,2.141,335,2.146,336,2.146,337,2.146,341,3.315,342,3.399,344,2.076,372,2.146,373,2.652,374,2.271,375,1.833,376,3.181,377,2.146,378,2.146,379,2.076,380,1.629,381,2.146,382,2.076,383,2.146,384,2.076,385,1.949,386,2.146,387,1.833,388,1.889,389,1.889,390,2.74,391,3.078,392,3.181,393,2.076,394,2.146,395,2.076,396,1.889,397,2.146,398,2.076,399,2.146,400,1.949,401,2.076,402,3.078,403,2.146,404,2.076,405,2.011,406,2.146,407,3.078,408,2.74,409,3.078,410,2.488,411,2.076,412,2.076,413,2.076,414,2.011,415,2.076,416,2.146,577,3.553,1734,4.569,1738,4.9,2265,5.206,2266,6.648,2267,4.569,2268,7.324,2269,4.569]],["title/components/ShellComponent.html",[84,0.977,344,1.743]],["body/components/ShellComponent.html",[3,0.142,4,0.142,5,0.202,7,0.151,8,0.392,11,0.409,12,0.011,13,0.151,16,0.898,19,0.772,21,1.763,75,0.006,76,0.006,80,1.452,83,0.721,84,1.269,86,0.59,89,0.424,99,3.685,100,2.088,102,1.067,108,3.355,111,1.649,113,1.47,120,1.649,121,3.513,122,2.371,123,1.19,125,3.672,126,2.216,135,1.784,137,2.179,139,1.784,140,0.397,141,1.242,143,1.135,146,2.564,147,3.284,148,2.788,149,2.013,153,1.342,157,0.98,181,1.796,230,2.261,234,1.132,244,2.788,278,2.348,333,1.283,334,1.535,335,1.326,336,1.326,337,1.326,341,3.149,342,3.202,344,2.504,347,1.55,372,1.326,373,1.901,374,1.628,375,1.132,376,2.588,377,1.326,378,1.326,379,1.283,380,1.006,381,1.326,382,1.283,383,1.326,384,2.504,385,1.784,386,1.326,387,1.132,388,1.167,389,1.167,390,1.964,391,1.283,392,2.588,393,1.283,394,1.326,395,2.504,396,2.06,397,1.326,398,1.283,399,1.326,400,1.204,401,1.283,402,1.283,403,1.326,404,1.283,405,1.242,406,1.326,407,1.283,408,1.326,409,1.283,410,1.204,411,1.283,412,1.283,413,1.283,414,1.242,415,1.283,416,1.326,431,1.095,448,1.269,452,1.776,453,1.135,461,2.661,466,1.864,468,3.093,577,2.547,701,3.321,731,3.491,842,3.799,843,3.799,844,4.183,845,4.183,846,5.51,861,1.525,866,3.491,867,3.034,868,1.978,901,2.564,914,3.513,932,1.796,954,2.823,960,2.088,1213,3.284,1285,3.491,1286,2.91,1507,2.823,1508,4.627,1510,4.183,1757,2.823,1778,4.983,1785,4.627,1786,2.823,1788,2.564,1791,4.183,1868,2.371,1869,2.371,1910,2.823,2005,2.823,2123,4.983,2149,2.823,2151,4.183,2152,2.823,2270,3.216,2271,4.183,2272,5.677,2273,5.677,2274,5.677,2275,4.765,2276,4.765,2277,5.677,2278,7.02,2279,4.983,2280,4.765,2281,4.765,2282,4.765,2283,4.765,2284,6.703,2285,3.216,2286,2.823,2287,4.765,2288,3.216,2289,4.765,2290,3.216,2291,3.216,2292,4.765,2293,4.765,2294,3.216,2295,3.216,2296,3.216,2297,3.216,2298,4.765,2299,3.216,2300,3.216,2301,4.765,2302,3.216,2303,3.216,2304,3.216,2305,3.216,2306,4.765,2307,3.216,2308,3.216,2309,2.564,2310,3.216,2311,3.216,2312,3.216,2313,3.216,2314,2.823,2315,3.216,2316,3.216,2317,3.216,2318,3.216,2319,3.216,2320,3.216,2321,3.216,2322,3.216,2323,3.216,2324,3.216,2325,3.216,2326,3.216,2327,3.216,2328,6.277,2329,4.765,2330,4.765]],["title/components/SlidePanelComponent.html",[84,0.977,404,1.743]],["body/components/SlidePanelComponent.html",[3,0.138,4,0.138,5,0.127,7,0.147,8,0.384,11,0.545,12,0.011,13,0.147,16,1.559,19,1.007,21,1.787,22,1.798,75,0.006,76,0.006,80,1.237,83,0.568,84,1.248,89,0.412,111,1.602,113,1.429,123,1.165,135,1.747,137,2.133,139,1.747,140,0.386,141,1.208,142,1.923,149,1.474,333,1.247,334,1.503,335,1.288,336,1.288,337,1.288,341,3.137,342,3.188,344,1.247,347,1.614,372,1.288,373,1.861,374,1.594,375,1.1,376,2.552,377,1.288,378,1.288,379,1.247,380,0.978,381,1.288,382,1.247,383,1.288,384,1.247,385,1.17,386,1.288,387,1.1,388,1.134,389,1.134,390,1.923,391,1.247,392,2.552,393,1.247,394,1.288,395,1.247,396,1.134,397,1.288,398,1.247,399,1.288,400,1.17,401,1.247,402,1.247,403,1.288,404,2.469,405,3.145,406,1.288,407,1.247,408,1.288,409,1.247,410,1.17,411,1.247,412,1.247,413,1.247,414,1.208,415,1.247,416,1.288,431,1.072,448,1.043,466,1.889,468,3.646,554,4.019,655,2.48,657,2.304,953,6.001,976,5.388,1208,1.922,1272,4.115,1285,3.433,1286,2.862,1779,4.451,1787,2.304,1950,2.744,1983,2.729,1985,3.621,1987,4.787,2122,4.9,2159,4.9,2218,4.451,2229,4.451,2331,7.146,2332,8.141,2333,3.126,2334,5.582,2335,5.676,2336,4.666,2337,4.666,2338,5.582,2339,5.582,2340,6.19,2341,6.19,2342,3.72,2343,5.582,2344,5.814,2345,7.198,2346,5.582,2347,4.666,2348,4.666,2349,4.666,2350,3.126,2351,6.19,2352,3.126,2353,3.126,2354,6.947,2355,4.935,2356,3.126,2357,3.126,2358,3.126,2359,3.126,2360,4.666,2361,4.666,2362,3.126,2363,3.126,2364,3.126,2365,4.666,2366,4.666,2367,4.666,2368,4.666,2369,6.947,2370,7.198,2371,6.495,2372,2.744,2373,2.744,2374,3.126,2375,3.126,2376,6.947,2377,6.623,2378,6.947,2379,3.126,2380,3.126,2381,3.126,2382,3.126,2383,3.126,2384,2.744,2385,2.744,2386,3.126,2387,3.126,2388,3.126,2389,3.126,2390,3.126,2391,5.582,2392,6.19,2393,6.19]],["title/components/StorageSettingsComponent.html",[84,0.977,407,1.743]],["body/components/StorageSettingsComponent.html",[3,0.22,4,0.22,5,0.175,7,0.234,12,0.011,13,0.234,16,1.391,75,0.008,76,0.008,80,1.517,83,0.65,84,1.603,86,0.914,89,0.656,91,2.277,113,2.277,123,1.614,135,2.419,139,2.419,140,0.615,141,1.924,143,0.996,333,1.987,334,2.081,335,2.053,336,2.053,337,2.053,341,3.302,342,3.384,344,1.987,347,0.996,372,2.053,373,2.577,374,2.207,375,1.753,376,3.128,377,2.053,378,2.053,379,1.987,380,1.558,381,2.053,382,1.987,383,2.053,384,1.987,385,1.864,386,2.053,387,1.753,388,1.808,389,1.808,390,2.663,391,1.987,392,3.128,393,1.987,394,2.053,395,1.987,396,1.808,397,2.053,398,1.987,399,2.053,400,1.864,401,1.987,402,1.987,403,2.053,404,1.987,405,1.924,406,2.053,407,3.027,408,3.381,409,1.987,410,1.864,411,1.987,412,1.987,413,1.987,414,1.924,415,1.987,416,2.053,431,1.485,448,1.113,513,2.781,514,2.553,520,2.781,577,4.306,578,3.671,1180,4.452,1286,3.677,1654,5.151,1735,3.971,1736,5.718,1738,4.763,1758,3.971,1772,5.671,2267,5.671,2394,6.461,2395,7.589,2396,4.371,2397,4.98]],["title/interfaces/TagsWorkerRequest.html",[0,0.072,820,2.687]],["body/interfaces/TagsWorkerRequest.html",[0,0.136,2,1.192,3,0.263,4,0.263,5,0.233,7,0.281,8,0.595,11,0.522,12,0.011,13,0.39,19,1.18,75,0.009,76,0.009,82,2.037,83,0.511,241,1.865,722,3.487,727,2.231,728,3.056,741,2.163,753,2.708,754,2.378,759,3.792,804,2.541,807,2.457,811,5.54,812,4.108,813,3.87,814,3.186,815,3.87,816,3.87,817,3.87,818,3.87,819,3.87,820,4.448,821,3.666,822,2.827]],["title/interfaces/TagsWorkerResponse.html",[0,0.072,821,2.687]],["body/interfaces/TagsWorkerResponse.html",[0,0.135,2,1.169,3,0.258,4,0.258,5,0.209,7,0.275,8,0.588,11,0.557,12,0.011,13,0.388,19,1.189,75,0.009,76,0.009,82,1.999,83,0.501,241,2.517,453,1.608,722,3.422,727,2.19,728,2.999,741,2.123,753,3.011,754,2.333,759,3.772,804,2.494,807,2.411,811,5.518,812,4.031,813,3.797,814,3.126,815,3.797,816,3.797,817,3.797,818,3.797,819,3.797,820,3.597,821,4.397,822,3.816]],["title/injectables/ThemeService.html",[354,2.836,417,0.757]],["body/injectables/ThemeService.html",[3,0.177,4,0.177,5,0.109,7,0.189,8,0.46,11,0.502,12,0.011,13,0.189,16,1.797,19,0.947,21,1.644,22,2.073,39,1.506,59,2.353,75,0.007,76,0.007,80,1.553,83,0.666,86,0.738,88,1.715,89,0.53,91,1.839,140,0.497,143,1.608,149,1.7,153,1.644,157,1.151,174,1.554,343,1.092,347,1.514,352,2.473,353,1.982,354,3.633,410,2.605,417,0.97,419,1.604,431,1.286,448,1.439,452,1.751,453,1.119,466,1.608,488,2.246,513,3.125,514,2.062,518,1.155,520,2.246,625,3.633,655,1.296,719,5.525,721,4.912,722,2.353,723,3.885,1063,3.531,1064,3.531,1072,4.912,1077,2.965,1589,4.462,1596,3.531,2398,4.022,2399,6.436,2400,7.314,2401,6.436,2402,6.958,2403,5.596,2404,5.596,2405,4.022,2406,5.596,2407,4.022,2408,4.125,2409,5.596,2410,4.022,2411,4.022,2412,5.596,2413,5.596,2414,6.958,2415,5.596,2416,4.022,2417,4.022,2418,5.649,2419,3.531,2420,4.022,2421,5.131,2422,5.131,2423,4.022,2424,4.022,2425,4.022,2426,4.022,2427,5.596,2428,4.022,2429,4.022,2430,4.022,2431,4.022,2432,4.022,2433,4.022,2434,4.022,2435,6.436,2436,5.596,2437,4.022,2438,5.596,2439,6.958,2440,4.022,2441,5.596,2442,5.596,2443,4.022,2444,4.022,2445,4.022,2446,4.022,2447,5.596,2448,4.022,2449,4.022,2450,5.596,2451,3.207,2452,4.022,2453,4.022,2454,8.511,2455,4.022,2456,4.022,2457,4.022,2458,4.022,2459,3.531,2460,4.022,2461,3.531,2462,4.022,2463,4.022,2464,4.022,2465,4.022,2466,4.022,2467,4.022,2468,4.022,2469,4.022,2470,4.022,2471,4.022,2472,4.022,2473,4.022,2474,4.022,2475,4.022,2476,4.022,2477,4.022,2478,4.022,2479,4.022,2480,4.022,2481,4.022,2482,4.022,2483,5.596,2484,3.531,2485,3.531,2486,4.022,2487,4.022,2488,4.022]],["title/components/ThemeSettingsComponent.html",[84,0.977,409,1.743]],["body/components/ThemeSettingsComponent.html",[3,0.215,4,0.215,5,0.173,7,0.229,8,0.523,11,0.351,12,0.011,13,0.229,16,1.359,18,2.539,21,1.15,75,0.008,76,0.008,80,1.561,83,0.645,84,1.586,86,0.894,89,0.641,123,1.59,135,2.383,139,2.383,140,0.601,141,1.88,333,1.942,334,2.05,335,2.006,336,2.006,337,2.006,341,3.296,342,3.376,344,1.942,347,1.272,354,4.884,355,3.588,364,4.692,372,2.006,373,2.539,374,2.175,375,1.714,376,3.101,377,2.006,378,2.006,379,1.942,380,1.523,381,2.006,382,1.942,383,2.006,384,1.942,385,1.822,386,2.006,387,1.714,388,1.767,389,1.767,390,2.624,391,1.942,392,3.101,393,1.942,394,2.006,395,1.942,396,1.767,397,2.006,398,1.942,399,2.006,400,1.822,401,1.942,402,1.942,403,2.006,404,1.942,405,1.88,406,2.006,407,1.942,408,2.006,409,3.001,410,3.054,411,1.942,412,1.942,413,1.942,414,1.88,415,1.942,416,2.006,431,1.463,448,1.088,452,1.523,453,0.973,466,1.216,577,3.402,598,2.398,1735,3.881,1736,5.655,1738,4.692,1758,3.881,2269,6.226,2396,4.273,2408,4.692,2451,5.075,2489,7.093,2490,7.093,2491,6.366,2492,6.366,2493,7.523,2494,4.868,2495,4.868,2496,4.868]],["title/pipes/TimePipe.html",[120,2.24,826,3.221]],["body/pipes/TimePipe.html",[3,0.268,4,0.268,5,0.165,10,1.441,11,0.438,12,0.011,13,0.286,19,0.995,75,0.009,76,0.009,80,1.57,83,0.627,89,0.801,98,3.737,120,3.751,123,1.518,140,0.75,142,2.505,157,1.249,214,2.939,347,1.215,431,1.397,448,1.358,452,1.901,453,1.215,461,3.393,466,1.518,654,6.423,655,2.625,656,5.043,657,4.479,658,5.834,659,6.892,661,5.834,826,5.394,851,4.75,2048,4.845,2049,5.334,2497,6.076,2498,6.076,2499,5.334]],["title/injectables/TitleService.html",[417,0.757,1785,3.221]],["body/injectables/TitleService.html",[3,0.269,4,0.269,5,0.165,7,0.286,8,0.602,11,0.439,12,0.011,13,0.286,16,1.7,19,1.069,21,1.438,75,0.009,76,0.009,80,1.217,83,0.628,86,1.117,88,3.35,89,0.802,140,0.751,143,1.217,149,2.075,200,2.85,343,1.653,347,1.464,352,3.743,353,2.999,417,1.269,419,2.428,431,1.684,448,1.361,452,1.905,453,1.217,466,1.521,518,1.749,1785,5.4,2500,6.087,2501,7.325,2502,7.325,2503,6.087,2504,6.087,2505,6.087,2506,6.087,2507,6.087,2508,6.087]],["title/interfaces/Track.html",[0,0.072,95,1.862]],["body/interfaces/Track.html",[0,0.129,2,1.088,3,0.24,4,0.24,5,0.23,7,0.256,8,0.562,11,0.583,12,0.011,13,0.388,19,1.162,25,2.321,75,0.008,76,0.008,77,1.754,79,3.184,81,2.791,82,2.337,83,0.641,94,3.184,95,3.187,123,2.091,124,3.534,173,2.172,200,1.86,278,3.982,312,2.402,313,2.402,453,1.367,456,3.04,488,3.04,489,3.04,490,3.04,491,3.184,492,2.909,493,3.184,494,3.184,495,3.347,496,3.347,497,3.347,576,3.347,723,3.04,724,3.751,725,4.205,726,3.347,727,2.038,728,3.506,729,4.439,730,2.909,731,4.823,732,5.246,733,3.184,734,3.534,735,2.582,736,3.751,737,3.534,738,3.534,739,3.184]],["title/interfaces/TrackMetadata.html",[0,0.072,732,2.836]],["body/interfaces/TrackMetadata.html",[0,0.124,2,0.986,3,0.217,4,0.217,5,0.194,7,0.232,8,0.528,11,0.622,12,0.011,13,0.378,19,1.206,25,2.102,75,0.008,76,0.008,77,2.435,79,4.422,81,3.876,82,2.583,83,0.612,94,2.884,95,3.341,123,1.888,124,3.201,173,3.016,200,2.583,278,3.163,312,2.175,313,2.175,453,1.714,456,2.753,488,2.753,489,2.753,490,2.753,491,2.884,492,2.635,493,2.884,494,2.884,495,3.032,496,3.032,497,3.032,576,3.032,723,2.753,724,3.398,725,4.649,726,3.032,727,1.846,728,3.876,729,4.908,730,2.635,731,3.947,732,4.908,733,4.422,734,4.908,735,3.586,736,5.21,737,4.908,738,3.201,739,2.884]],["title/injectables/UpdateService.html",[356,3.483,417,0.757]],["body/injectables/UpdateService.html",[3,0.218,4,0.218,5,0.134,7,0.233,12,0.011,13,0.233,75,0.008,76,0.008,83,0.689,86,0.909,89,0.652,101,2.111,102,1.642,140,0.611,143,1.43,153,1.69,157,1.47,174,1.913,200,1.692,211,2.897,230,2.592,245,2.304,343,1.345,346,3.049,347,1.43,356,5.132,400,1.854,417,1.115,419,1.975,431,1.479,448,1.439,468,2.44,518,1.422,600,4.657,625,4.916,655,1.595,778,2.748,1129,4.346,1209,3.65,1211,2.897,1220,2.897,1221,3.65,1336,3.412,1394,2.897,1634,4.346,1862,3.65,1867,3.948,1868,3.65,1869,3.65,1872,3.948,1873,3.948,1983,2.897,1985,4.184,1987,4.929,2258,4.745,2259,3.948,2309,3.948,2509,4.952,2510,7.573,2511,6.647,2512,4.952,2513,4.952,2514,4.952,2515,6.437,2516,6.278,2517,4.346,2518,4.952,2519,4.952,2520,4.952,2521,4.952,2522,4.952,2523,4.952,2524,4.952,2525,4.952,2526,5.218,2527,6.437,2528,4.952,2529,4.952,2530,4.952,2531,4.952,2532,4.952,2533,4.952,2534,4.952,2535,4.952,2536,4.952,2537,4.952,2538,4.952,2539,4.952,2540,4.952,2541,4.952,2542,4.952,2543,4.952,2544,4.952,2545,4.952,2546,4.346,2547,4.952,2548,4.952,2549,4.952,2550,4.952]],["title/components/VisualizerComponent.html",[84,0.977,411,1.743]],["body/components/VisualizerComponent.html",[3,0.092,4,0.092,5,0.092,7,0.098,8,0.28,10,1.479,11,0.517,12,0.011,13,0.098,16,1.962,21,1.843,37,1.223,43,1.615,47,2.094,55,2.094,75,0.004,76,0.004,80,1.457,83,0.65,84,0.964,85,3.567,86,0.384,87,2.971,88,0.891,89,0.275,91,0.956,93,1.82,95,1.452,108,2.656,109,1.285,111,1.071,113,0.956,123,0.851,135,1.275,137,1.557,139,1.275,140,0.258,141,0.807,142,1.404,143,0.418,148,1.992,149,2.246,157,1.327,231,1.44,289,3.288,293,1.82,294,1.746,295,1.82,296,1.82,297,1.82,298,1.82,299,2.656,300,1.82,301,1.82,302,1.902,303,1.902,304,1.071,305,2.925,306,2.806,307,3.173,308,2.806,309,1.071,310,2.548,314,2.806,325,3.509,328,3.255,329,3.061,332,3.179,333,0.834,334,1.097,335,0.862,336,0.862,337,0.862,339,2.094,340,2.094,341,2.942,342,2.96,344,0.834,346,1.837,347,1.645,349,1.285,372,0.862,373,1.359,374,1.164,375,0.736,376,2.049,377,0.862,378,0.862,379,0.834,380,0.654,381,0.862,382,0.834,383,0.862,384,0.834,385,0.782,386,0.862,387,0.736,388,0.759,389,0.759,390,1.404,391,0.834,392,2.049,393,0.834,394,0.862,395,0.834,396,0.759,397,0.862,398,0.834,399,0.862,400,0.782,401,0.834,402,0.834,403,0.862,404,1.983,405,0.807,406,0.862,407,0.834,408,0.862,409,0.834,410,0.782,411,1.983,412,2.183,413,0.834,414,1.92,415,0.834,416,0.862,418,2.449,431,0.783,448,1.492,450,2.511,452,2.088,453,1.372,454,2.971,466,2.145,509,2.511,513,2.775,514,1.071,520,1.902,655,0.673,723,2.407,915,3.437,922,1.992,925,1.285,927,1.541,959,2.798,1006,1.357,1085,2.211,1152,5.111,1285,2.651,1286,2.21,1395,1.992,1779,3.437,1787,1.541,1983,1.992,1985,4.014,1995,2.715,2050,1.835,2051,1.835,2053,1.835,2112,2.99,2218,2.715,2309,1.666,2331,1.835,2335,1.541,2551,2.09,2552,4.311,2553,4.311,2554,3.406,2555,3.406,2556,3.784,2557,5.474,2558,4.311,2559,3.784,2560,3.784,2561,5.474,2562,5.474,2563,3.963,2564,3.406,2565,3.406,2566,3.406,2567,3.406,2568,3.406,2569,3.406,2570,3.406,2571,3.406,2572,3.406,2573,3.406,2574,3.406,2575,2.09,2576,3.406,2577,2.09,2578,3.406,2579,2.09,2580,3.406,2581,2.09,2582,3.406,2583,2.09,2584,3.406,2585,2.09,2586,3.406,2587,2.09,2588,3.406,2589,2.09,2590,3.406,2591,2.09,2592,3.406,2593,3.406,2594,2.09,2595,2.99,2596,2.09,2597,3.406,2598,2.715,2599,2.09,2600,3.406,2601,3.406,2602,3.406,2603,3.406,2604,2.09,2605,3.406,2606,2.09,2607,3.406,2608,2.09,2609,3.406,2610,3.406,2611,2.09,2612,2.09,2613,3.406,2614,2.09,2615,3.406,2616,2.09,2617,3.406,2618,2.09,2619,2.09,2620,3.406,2621,3.406,2622,2.09,2623,3.406,2624,2.09,2625,2.09,2626,3.406,2627,2.09,2628,3.406,2629,3.406,2630,2.09,2631,3.406,2632,2.09,2633,2.09,2634,2.09,2635,2.09,2636,2.09,2637,2.09,2638,3.406,2639,2.09,2640,3.406,2641,2.09,2642,3.406,2643,2.09,2644,2.09,2645,1.835,2646,2.09,2647,2.09,2648,2.09,2649,2.09,2650,2.09,2651,2.09,2652,2.09,2653,2.09,2654,2.09,2655,2.09,2656,2.09,2657,2.09,2658,2.09,2659,2.09,2660,2.09,2661,2.09,2662,2.09,2663,2.09,2664,2.09,2665,2.09,2666,2.09,2667,2.09,2668,3.406,2669,3.406,2670,5.152,2671,2.99,2672,4.971,2673,3.406]],["title/interfaces/VisualsColorConfig.html",[0,0.072,311,2.335]],["body/interfaces/VisualsColorConfig.html",[0,0.137,2,1.003,3,0.221,4,0.221,5,0.136,7,0.236,8,0.534,10,1.62,11,0.582,12,0.011,13,0.402,18,2.871,19,1.133,22,1.616,25,2.767,75,0.008,76,0.008,287,2.801,288,2.801,289,3.75,290,2.934,291,2.934,292,2.934,293,2.681,294,2.572,295,2.681,296,2.681,297,2.681,298,2.681,299,2.681,300,2.681,301,2.681,302,2.801,303,2.801,304,2.572,305,3.469,306,3.328,307,3.328,308,3.328,309,2.572,310,3.328,311,3.469,312,3.478,313,3.478,314,4.041,315,2.681,316,2.681,317,2.572,318,2.801,319,2.934,320,2.472,321,3.546,322,2.681,323,2.472,324,4.018,325,3.079,326,2.681,327,3.328,328,3.609,329,3.609,330,2.379,331,3.328,332,3.75,453,1.614]],["title/directives/VisualsDirective.html",[375,1.538,414,1.688]],["body/directives/VisualsDirective.html",[3,0.135,4,0.135,5,0.083,7,0.144,8,0.378,10,0.562,11,0.442,12,0.011,13,0.144,16,1.54,18,2.619,21,1.448,22,2.221,39,2.294,41,2.526,43,2.179,75,0.006,76,0.006,80,0.918,83,0.472,86,0.562,89,0.403,123,0.765,140,0.378,142,1.894,143,1.503,149,2.142,153,1.984,157,1.134,174,1.775,199,3.8,214,1.72,226,2.11,245,1.776,289,1.509,304,1.57,305,2.947,306,2.827,307,2.827,308,2.827,309,1.57,310,2.827,311,1.636,312,2.027,313,2.027,314,2.355,315,3.821,316,2.947,317,3.141,318,2.565,320,1.509,321,2.264,322,1.636,323,1.509,325,1.452,326,2.455,328,2.906,329,3.488,330,1.452,332,3.019,341,1.72,346,2.35,347,1.555,375,1.617,413,1.221,414,1.775,415,1.833,418,2.264,431,1.056,444,3.663,448,1.233,450,4.839,452,1.438,453,0.918,454,4.524,466,1.53,509,3.387,538,2.257,541,1.988,597,2.11,655,1.776,656,3.166,688,2.441,723,3.666,851,1.988,922,1.791,925,1.883,959,3.579,976,4.774,981,2.688,1006,1.988,1044,2.688,1185,2.688,1336,3.8,1341,2.688,1343,2.688,1344,2.441,1395,1.791,1398,1.988,1546,3.166,1983,1.791,1985,3.584,1987,4.222,2342,3.663,2421,4.396,2422,4.396,2556,4.84,2560,4.84,2595,2.688,2598,3.663,2674,2.688,2675,6.127,2676,4.594,2677,4.594,2678,3.062,2679,4.594,2680,3.062,2681,4.594,2682,3.062,2683,4.594,2684,3.062,2685,3.062,2686,3.062,2687,4.594,2688,3.062,2689,3.062,2690,3.062,2691,3.062,2692,2.688,2693,2.688,2694,2.688,2695,2.688,2696,3.062,2697,3.062,2698,3.062,2699,3.062,2700,3.062,2701,4.594,2702,3.062,2703,3.062,2704,3.062,2705,3.062,2706,3.062,2707,3.062,2708,3.062,2709,3.062,2710,3.062,2711,7.149,2712,3.062,2713,3.062,2714,3.062,2715,2.11,2716,4.594,2717,3.062,2718,3.062,2719,3.062,2720,3.062,2721,3.062,2722,3.062,2723,5.514,2724,3.062,2725,4.594,2726,4.594,2727,3.062,2728,2.688,2729,3.062,2730,6.127,2731,3.062,2732,3.062,2733,3.062,2734,3.062,2735,3.062,2736,3.062,2737,4.594,2738,3.062,2739,3.062,2740,3.062,2741,5.514,2742,6.127,2743,3.062,2744,3.062,2745,3.062,2746,3.062,2747,4.594,2748,4.594,2749,4.594,2750,5.514,2751,3.062,2752,3.062,2753,3.062,2754,3.062,2755,3.062,2756,3.062,2757,3.062,2758,3.062,2759,3.062,2760,6.276,2761,4.594,2762,4.594,2763,2.688,2764,2.688,2765,3.062,2766,3.062,2767,3.062,2768,3.062,2769,3.062,2770,4.594,2771,4.84,2772,4.594,2773,4.594,2774,3.062,2775,3.062,2776,3.062,2777,3.062,2778,3.062,2779,3.062,2780,3.062,2781,3.062,2782,3.062,2783,3.062,2784,3.062,2785,3.062,2786,4.594,2787,3.062,2788,3.062,2789,3.062,2790,2.688,2791,3.062,2792,2.688,2793,2.688,2794,3.062,2795,3.062]],["title/injectables/VisualsService.html",[417,0.757,2563,3.483]],["body/injectables/VisualsService.html",[3,0.248,4,0.248,5,0.152,7,0.264,8,0.573,11,0.405,12,0.011,13,0.264,16,1.567,21,1.326,75,0.009,76,0.009,83,0.65,86,1.03,88,2.392,89,0.739,91,2.566,140,0.693,143,1.122,149,2.002,325,3.306,328,3.761,329,3.761,332,3.907,343,1.524,347,1.393,417,1.208,419,2.239,431,1.602,448,1.255,466,1.402,513,3.892,514,2.877,518,1.612,520,3.134,1983,3.283,1985,4.77,1987,5.619,2563,5.557,2692,4.926,2796,5.612,2797,7.581,2798,7.929,2799,5.612,2800,6.97,2801,5.612,2802,8.426,2803,5.612,2804,5.612,2805,5.612]],["title/interfaces/VisualsWorkerMessage.html",[0,0.072,315,2.335]],["body/interfaces/VisualsWorkerMessage.html",[0,0.136,2,0.98,3,0.216,4,0.216,5,0.133,7,0.231,8,0.526,10,1.61,11,0.598,12,0.011,13,0.401,18,2.839,19,1.026,22,2.293,25,2.726,75,0.008,76,0.008,287,2.737,288,2.737,289,3.717,290,2.868,291,2.868,292,2.868,293,2.62,294,2.513,295,2.62,296,2.62,297,2.62,298,2.62,299,2.62,300,2.62,301,2.62,302,2.737,303,2.737,304,2.513,305,3.418,306,3.278,307,3.278,308,3.278,309,2.513,310,3.278,311,2.62,312,2.822,313,2.822,314,3.278,315,3.418,316,4.031,317,3.649,318,4.212,319,4.164,320,3.717,321,4.083,322,4.031,323,3.507,324,3.974,325,3.033,326,2.62,327,3.278,328,3.578,329,3.578,330,2.325,331,3.278,332,3.717,453,1.657]],["title/injectables/WakelockService.html",[417,0.757,1863,3.011]],["body/injectables/WakelockService.html",[3,0.254,4,0.254,5,0.156,7,0.271,8,0.582,11,0.415,12,0.011,13,0.271,75,0.009,76,0.009,83,0.494,89,0.759,140,0.711,143,1.152,157,1.457,230,2.73,232,2.226,234,2.029,240,2.298,241,1.803,343,1.565,346,3.27,347,1.6,417,1.228,419,2.298,431,1.628,448,1.584,453,1.416,461,3.956,518,1.655,1863,4.882,2806,5.762,2807,6.116,2808,8.003,2809,8.003,2810,7.084,2811,5.762,2812,5.762,2813,7.084,2814,7.671,2815,5.762,2816,5.762,2817,5.762,2818,5.762,2819,5.762,2820,5.762,2821,5.762,2822,5.762]],["title/changelog.html",[2823,2.528,2824,2.704,2825,3.22]],["body/changelog.html",[0,0.009,5,0.131,10,0.098,11,0.104,12,0.003,18,0.573,21,0.239,29,4.401,41,1.024,43,2.408,45,2.052,47,3.05,49,3.562,51,3.14,53,3.562,55,2.405,57,3.676,59,2.753,61,3.122,63,2.13,65,1.612,67,3.368,69,4.15,75,0.001,76,0.001,77,0.325,80,0.202,81,0.274,83,0.086,84,0.484,86,0.098,88,0.612,92,0.312,93,0.539,95,1.495,121,0.394,123,0.977,125,0.312,137,0.244,139,0.811,140,0.125,173,0.403,174,0.554,184,0.426,186,0.368,196,0.805,200,0.345,203,0.426,204,0.285,211,2.753,226,0.368,232,0.39,243,1.98,244,1.777,245,0.172,266,0.696,317,0.274,321,0.263,328,0.253,329,0.479,330,0.479,334,0.8,343,0.145,346,0.228,353,1.068,373,0.726,375,0.188,380,0.95,385,0.378,396,0.786,410,0.378,412,0.403,418,0.263,436,0.744,453,0.107,454,0.696,467,0.883,489,0.298,490,0.298,514,0.517,522,1.612,527,0.426,536,0.696,538,0.744,541,0.347,542,0.426,547,0.368,553,0.394,554,1.016,555,1.83,556,1.119,558,0.347,559,0.744,561,0.394,565,0.368,576,0.883,577,1.482,597,3.419,600,5,622,1.144,623,1.98,625,1.407,656,1.493,669,0.426,684,1.597,687,0.805,688,0.426,701,0.312,718,0.244,719,1.407,730,1.482,733,0.312,734,0.347,739,0.312,744,0.497,753,0.2,754,0.213,760,5.776,771,0.274,785,0.312,796,0.655,814,0.767,822,0.863,825,1.254,851,0.655,861,0.253,864,1.181,867,0.285,875,0.805,894,2.239,900,0.744,906,0.368,914,0.394,960,0.655,976,0.932,1017,0.469,1023,0.394,1039,2.881,1043,0.805,1056,0.886,1057,5.564,1074,0.469,1077,2.739,1127,0.805,1140,3.432,1163,1.902,1180,0.696,1205,0.347,1207,0.368,1222,0.744,1240,0.394,1245,1.493,1266,0.394,1309,0.469,1336,1.254,1344,1.144,1359,1.058,1379,0.469,1395,0.312,1416,0.347,1419,0.347,1487,2.936,1516,1.26,1524,0.426,1548,0.805,1560,0.805,1561,0.469,1565,0.469,1579,0.469,1612,1.493,1655,0.426,1656,0.469,1662,0.426,1706,0.469,1756,0.469,1770,0.469,1819,0.426,1862,0.394,1893,1.26,1895,2.18,1899,1.902,1900,0.469,1912,0.469,1949,4.246,1951,0.886,1952,0.469,1955,0.469,1983,0.312,1994,0.426,1998,4.048,1999,1.597,2007,1.902,2113,0.886,2116,0.886,2117,0.469,2154,0.469,2157,0.469,2168,0.469,2173,1.597,2175,0.426,2178,1.26,2179,0.469,2180,0.469,2182,0.805,2185,0.591,2186,4.008,2196,0.469,2208,0.469,2219,0.426,2229,0.426,2234,1.26,2271,0.469,2279,0.469,2314,1.26,2342,0.426,2344,0.469,2355,0.426,2371,2.18,2372,0.886,2384,0.886,2385,0.469,2408,0.394,2451,0.426,2459,3.591,2461,4.131,2484,0.469,2485,0.469,2511,1.26,2516,0.886,2526,0.989,2546,4.354,2559,0.469,2598,4.375,2645,0.469,2670,0.469,2671,0.469,2695,0.469,2715,2.561,2728,0.886,2760,0.469,2763,3.079,2790,0.469,2792,0.469,2793,0.469,2807,1.144,2825,1.26,2826,0.534,2827,2.772,2828,0.534,2829,0.534,2830,0.534,2831,0.534,2832,0.347,2833,0.534,2834,5.744,2835,5.897,2836,4.706,2837,1.009,2838,0.534,2839,6.339,2840,3.282,2841,1.009,2842,1.435,2843,0.426,2844,0.534,2845,3.282,2846,0.534,2847,3.037,2848,0.469,2849,0.534,2850,0.534,2851,1.435,2852,1.009,2853,0.534,2854,0.534,2855,6.283,2856,6.498,2857,6.976,2858,0.534,2859,0.534,2860,0.534,2861,0.534,2862,6.542,2863,0.534,2864,1.009,2865,0.534,2866,0.534,2867,0.534,2868,2.18,2869,0.534,2870,0.534,2871,0.534,2872,0.534,2873,0.534,2874,1.435,2875,0.469,2876,0.534,2877,0.534,2878,0.534,2879,0.469,2880,0.534,2881,1.144,2882,1.435,2883,0.534,2884,0.534,2885,0.534,2886,0.534,2887,1.009,2888,0.534,2889,0.534,2890,0.886,2891,2.167,2892,0.534,2893,0.534,2894,0.534,2895,0.534,2896,0.534,2897,0.534,2898,0.534,2899,0.534,2900,0.534,2901,0.534,2902,0.469,2903,0.534,2904,1.435,2905,0.534,2906,0.534,2907,0.534,2908,0.534,2909,1.435,2910,1.435,2911,0.534,2912,0.534,2913,0.534,2914,4.091,2915,0.534,2916,0.534,2917,0.534,2918,0.534,2919,0.534,2920,0.534,2921,6.225,2922,0.534,2923,0.534,2924,0.534,2925,0.534,2926,0.534,2927,1.435,2928,0.534,2929,2.18,2930,0.534,2931,0.534,2932,0.534,2933,0.534,2934,0.534,2935,1.435,2936,0.534,2937,0.534,2938,0.534,2939,0.534,2940,5.897,2941,1.009,2942,0.534,2943,0.534,2944,1.009,2945,0.534,2946,0.534,2947,0.534,2948,0.534,2949,0.534,2950,0.534,2951,1.902,2952,2.881,2953,2.167,2954,0.534,2955,0.534,2956,4.457,2957,0.534,2958,0.534,2959,0.805,2960,0.534,2961,0.534,2962,0.469,2963,2.167,2964,0.534,2965,1.435,2966,0.534,2967,1.009,2968,0.534,2969,1.009,2970,0.534,2971,0.534,2972,0.534,2973,0.534,2974,0.534,2975,1.009,2976,0.534,2977,0.534,2978,0.534,2979,0.534,2980,0.534,2981,0.534,2982,0.534,2983,0.534,2984,0.534,2985,0.534,2986,3.282,2987,0.534,2988,0.534,2989,0.534,2990,0.534,2991,0.534,2992,0.534,2993,0.534,2994,0.534,2995,0.534,2996,0.534,2997,0.534,2998,1.009,2999,1.902,3000,1.435,3001,0.534,3002,1.009,3003,0.534,3004,0.534,3005,3.507,3006,0.534,3007,0.534,3008,0.534,3009,0.534,3010,0.534,3011,0.534,3012,0.534,3013,0.534,3014,0.534,3015,1.435,3016,0.534,3017,0.534,3018,2.483,3019,4.26,3020,0.534,3021,0.534,3022,0.534,3023,0.534,3024,0.534,3025,0.534,3026,1.009,3027,0.534,3028,1.819,3029,0.534,3030,0.534,3031,0.534,3032,0.534,3033,0.534,3034,0.534,3035,0.534,3036,0.534,3037,0.534,3038,0.534,3039,0.534,3040,0.534,3041,0.534,3042,0.534,3043,0.534,3044,0.534,3045,0.534,3046,0.534,3047,0.534,3048,0.534,3049,0.534,3050,0.534,3051,2.167,3052,0.534,3053,0.534,3054,0.534,3055,0.534,3056,0.534,3057,0.534,3058,1.009,3059,0.534,3060,0.534,3061,1.902,3062,0.534,3063,1.435,3064,1.144,3065,1.435,3066,0.534,3067,0.534,3068,1.26,3069,0.534,3070,0.534,3071,1.26,3072,1.009,3073,1.009,3074,0.534,3075,0.534,3076,0.469,3077,0.534,3078,0.534,3079,0.534,3080,0.534,3081,0.534,3082,0.534,3083,0.534,3084,0.534,3085,1.009,3086,0.534,3087,0.534,3088,0.534,3089,0.534,3090,0.534,3091,0.534,3092,0.534,3093,1.009,3094,0.534,3095,0.534,3096,1.819,3097,1.435,3098,0.534,3099,0.534,3100,0.534,3101,0.534,3102,0.534,3103,1.435,3104,1.009,3105,0.534,3106,0.534,3107,0.534,3108,0.534,3109,0.534,3110,0.534,3111,1.009,3112,0.534,3113,0.469,3114,0.534,3115,0.534,3116,0.534,3117,0.534,3118,0.534,3119,0.534,3120,0.534,3121,0.886,3122,0.534,3123,0.534,3124,1.009,3125,0.534,3126,0.534,3127,0.534,3128,0.534,3129,0.534,3130,0.534,3131,0.534,3132,0.534,3133,0.534,3134,0.534,3135,0.534,3136,1.819,3137,5.188,3138,0.534,3139,0.534,3140,0.534,3141,0.534,3142,0.534,3143,0.534,3144,0.534,3145,2.167,3146,0.534,3147,0.534,3148,0.534,3149,0.534,3150,0.534,3151,0.534,3152,0.534,3153,0.534,3154,0.534,3155,0.534,3156,0.534,3157,0.534,3158,0.534,3159,0.534,3160,0.534,3161,2.772,3162,0.534,3163,0.534,3164,0.534,3165,0.534,3166,0.426,3167,0.534,3168,0.534,3169,0.534,3170,0.534,3171,0.534,3172,0.534,3173,0.534,3174,0.534,3175,0.534,3176,0.805,3177,0.534,3178,0.534,3179,0.534,3180,0.534,3181,6.667,3182,0.534,3183,0.534,3184,0.534,3185,0.534,3186,0.534,3187,0.534,3188,0.534,3189,0.534,3190,0.534,3191,0.534,3192,0.534,3193,0.534,3194,0.534,3195,0.534,3196,0.534,3197,0.534,3198,0.534,3199,0.534,3200,0.534,3201,1.435,3202,0.534,3203,0.534,3204,0.534,3205,0.534,3206,0.534,3207,0.534,3208,0.534,3209,0.534,3210,6.225,3211,0.534,3212,0.469,3213,0.534,3214,0.534,3215,0.534,3216,0.534,3217,0.534,3218,0.534,3219,6.759,3220,0.534,3221,0.534,3222,0.534,3223,1.009,3224,0.534,3225,0.534,3226,0.534,3227,0.534,3228,0.534,3229,1.819,3230,0.534,3231,0.534,3232,0.534,3233,0.534,3234,0.534,3235,0.534,3236,0.534,3237,0.534,3238,0.534,3239,0.534,3240,0.534,3241,0.534,3242,0.534,3243,0.534,3244,7.83,3245,7.424,3246,0.534,3247,0.534,3248,0.534,3249,0.534,3250,0.534,3251,0.534,3252,0.534,3253,3.781,3254,0.534,3255,0.534,3256,0.534,3257,0.534,3258,0.534,3259,1.819,3260,1.009,3261,1.435,3262,0.534,3263,0.534,3264,0.534,3265,0.534,3266,0.534,3267,0.534,3268,0.534,3269,0.534,3270,0.534,3271,5.968,3272,0.469,3273,0.534,3274,1.819,3275,1.819,3276,0.534,3277,0.534,3278,2.167,3279,2.772,3280,0.534,3281,0.534,3282,0.534,3283,0.534,3284,0.534,3285,0.534,3286,1.26,3287,0.534,3288,0.534,3289,0.534,3290,0.534,3291,0.534,3292,0.534,3293,0.534,3294,0.534,3295,0.534,3296,0.534,3297,1.009,3298,0.534,3299,0.534,3300,0.534,3301,2.483,3302,0.534,3303,0.534,3304,0.534,3305,0.534,3306,2.772,3307,1.009,3308,0.534,3309,1.009,3310,1.009,3311,0.534,3312,0.534,3313,0.534,3314,0.534,3315,0.534,3316,0.534,3317,3.507,3318,0.534,3319,0.534,3320,0.534,3321,0.534,3322,0.534,3323,0.534,3324,0.534,3325,2.666,3326,0.534,3327,0.534,3328,0.534,3329,0.534,3330,0.534,3331,3.716,3332,0.534,3333,0.534,3334,0.534,3335,0.534,3336,7.071,3337,0.534,3338,0.534,3339,1.819,3340,2.18,3341,0.534,3342,0.534,3343,0.534,3344,0.534,3345,1.819,3346,0.534,3347,0.534,3348,0.534,3349,0.534,3350,0.534,3351,0.534,3352,0.534,3353,0.534,3354,0.534,3355,0.534,3356,0.534,3357,0.534,3358,0.534,3359,0.534,3360,0.534,3361,0.534,3362,0.534,3363,0.534,3364,0.534,3365,0.534,3366,0.534,3367,0.534,3368,0.534,3369,0.534,3370,0.534,3371,0.534,3372,0.534,3373,0.534,3374,0.469,3375,0.534,3376,0.534,3377,0.534,3378,0.534,3379,0.534,3380,0.534,3381,0.534,3382,0.534,3383,0.534,3384,0.534,3385,3.282,3386,7.313,3387,0.534,3388,0.534,3389,0.534,3390,0.534,3391,0.534,3392,0.534,3393,0.534,3394,0.534,3395,0.534,3396,0.534,3397,0.534,3398,0.534,3399,0.534,3400,0.534,3401,0.534,3402,0.534,3403,0.534,3404,0.534,3405,1.009,3406,1.435,3407,1.435,3408,0.534,3409,0.534,3410,0.534,3411,0.534,3412,0.534,3413,1.009,3414,0.534,3415,0.534,3416,0.534,3417,0.534,3418,0.534,3419,0.534,3420,0.534,3421,0.534,3422,0.534,3423,0.534,3424,0.534,3425,0.534,3426,0.534,3427,0.534,3428,1.435,3429,1.009,3430,1.009,3431,0.534,3432,0.534,3433,0.534,3434,0.534,3435,0.534,3436,0.534,3437,0.534,3438,0.534,3439,0.534,3440,0.534,3441,0.534,3442,0.534,3443,0.534,3444,0.534,3445,0.534,3446,0.534,3447,0.534,3448,1.009,3449,0.534,3450,0.534,3451,0.534,3452,0.534,3453,0.534,3454,0.534,3455,0.534,3456,0.534,3457,0.534,3458,2.772,3459,6.037,3460,0.534,3461,0.534,3462,0.534,3463,0.534,3464,0.534,3465,0.534,3466,0.534,3467,0.534,3468,0.534,3469,0.534,3470,0.534,3471,0.534,3472,0.534,3473,0.534,3474,0.534,3475,1.009,3476,0.534,3477,0.534,3478,0.534,3479,0.534,3480,0.534,3481,0.534,3482,0.534,3483,0.534,3484,0.534,3485,0.534,3486,0.534,3487,0.534,3488,0.534,3489,4.837,3490,0.534,3491,0.534,3492,0.534,3493,0.534,3494,0.534,3495,0.534,3496,0.534,3497,0.534,3498,0.534,3499,0.534,3500,0.534,3501,0.534,3502,0.534,3503,0.534,3504,0.534,3505,0.534,3506,0.534,3507,0.534,3508,0.534,3509,0.534,3510,0.534,3511,0.534,3512,0.534,3513,0.534,3514,0.534,3515,0.534,3516,0.534,3517,0.534,3518,0.534,3519,1.009,3520,0.534,3521,1.009,3522,0.534,3523,0.534,3524,0.534,3525,0.534,3526,0.534,3527,0.534,3528,0.534,3529,0.534,3530,0.534,3531,0.534,3532,0.534,3533,0.534,3534,0.534,3535,0.534,3536,0.534,3537,0.534,3538,0.534,3539,0.534,3540,0.534,3541,0.534,3542,0.534,3543,0.534,3544,2.167,3545,0.534,3546,0.534,3547,0.534,3548,0.534,3549,4.706,3550,5.078,3551,0.534,3552,0.534,3553,0.534,3554,0.534,3555,0.534,3556,0.534,3557,0.534,3558,0.534,3559,0.534,3560,0.534,3561,0.534,3562,0.534,3563,0.534,3564,0.534,3565,0.534,3566,0.534,3567,0.534,3568,0.534,3569,0.534,3570,0.469,3571,0.534,3572,0.534,3573,0.534,3574,0.534,3575,0.534,3576,1.819,3577,1.435,3578,0.534,3579,0.534,3580,0.534,3581,0.534,3582,0.534,3583,0.534,3584,0.534,3585,0.534,3586,1.009,3587,0.534,3588,0.534,3589,0.534,3590,0.534,3591,0.534,3592,0.534,3593,0.534,3594,0.534,3595,0.534,3596,0.534,3597,0.534,3598,0.534,3599,0.534,3600,0.534,3601,1.009,3602,0.534,3603,0.534,3604,0.534,3605,1.009,3606,0.534,3607,0.534,3608,0.534,3609,0.534,3610,0.534,3611,0.534,3612,0.534,3613,0.534,3614,0.534,3615,0.534,3616,0.534,3617,0.534,3618,1.435,3619,0.534,3620,0.534,3621,0.534,3622,0.534,3623,0.534,3624,0.534,3625,0.534,3626,0.534,3627,0.534,3628,0.534,3629,0.534,3630,0.534,3631,0.534,3632,0.534,3633,0.534,3634,0.534,3635,0.469,3636,0.534,3637,0.534,3638,0.534,3639,0.534,3640,0.534,3641,0.534,3642,7.578,3643,1.009,3644,0.534,3645,0.534,3646,0.534,3647,0.534,3648,0.534,3649,0.534,3650,0.534,3651,0.534,3652,0.534,3653,0.534,3654,0.534,3655,0.534,3656,0.534,3657,0.534,3658,0.534,3659,0.534,3660,0.534,3661,1.435,3662,1.435,3663,0.534,3664,0.534,3665,0.534,3666,0.534,3667,0.534,3668,0.534,3669,0.534,3670,0.534,3671,0.534,3672,0.534,3673,1.009,3674,0.534,3675,0.534,3676,0.534,3677,1.009,3678,0.534,3679,0.534,3680,0.534,3681,0.534,3682,1.009,3683,0.534,3684,0.534,3685,0.534,3686,0.534,3687,0.534,3688,0.534,3689,0.534,3690,0.534,3691,0.534,3692,0.534,3693,0.534,3694,0.534,3695,0.534,3696,0.534,3697,0.534,3698,0.534,3699,0.534,3700,2.772,3701,0.534,3702,0.534,3703,0.534,3704,1.009,3705,0.534,3706,0.534,3707,0.534,3708,0.534,3709,0.534,3710,0.534,3711,0.534,3712,0.534,3713,0.534,3714,0.534,3715,0.534,3716,0.534,3717,0.534,3718,0.534,3719,0.534,3720,0.534,3721,1.435,3722,0.534,3723,0.534,3724,0.534,3725,0.534,3726,0.534,3727,0.534,3728,0.534,3729,0.534,3730,0.534,3731,1.009,3732,0.534,3733,0.534,3734,0.534,3735,0.534,3736,0.534,3737,0.534,3738,0.534,3739,0.534,3740,0.534,3741,0.534,3742,0.534,3743,0.534,3744,0.534,3745,0.534,3746,0.534,3747,0.534,3748,1.009,3749,0.534,3750,0.534,3751,0.534,3752,0.534,3753,0.534,3754,0.534,3755,0.534,3756,0.534,3757,0.534,3758,0.534,3759,0.534,3760,0.534,3761,0.534,3762,0.534,3763,0.534,3764,0.534,3765,0.534,3766,0.534,3767,0.534,3768,0.534,3769,0.534,3770,0.534,3771,0.534,3772,0.534,3773,0.534,3774,0.534,3775,0.534,3776,0.534,3777,4.091,3778,0.534,3779,0.534,3780,1.009,3781,1.009,3782,0.534,3783,0.534,3784,0.534,3785,0.534,3786,0.534,3787,0.534,3788,0.534,3789,0.534,3790,0.534,3791,0.534,3792,0.534,3793,0.534,3794,0.534,3795,0.534,3796,0.534,3797,0.534,3798,0.534,3799,2.772,3800,0.534,3801,1.009,3802,1.009,3803,0.534,3804,0.534,3805,0.534,3806,0.534,3807,0.534,3808,0.534,3809,0.534,3810,0.534,3811,0.534,3812,0.534,3813,0.534,3814,0.534,3815,0.534,3816,0.534,3817,0.534,3818,0.534,3819,0.534,3820,0.534,3821,0.534,3822,0.534,3823,0.534,3824,0.534,3825,0.534,3826,0.534,3827,0.534,3828,1.009,3829,0.534,3830,0.534,3831,0.534,3832,0.534,3833,0.534,3834,0.534,3835,0.534,3836,0.534,3837,0.534,3838,0.534,3839,0.534,3840,0.534,3841,0.534,3842,0.534,3843,0.534,3844,0.534,3845,0.534,3846,0.534,3847,0.534,3848,0.534,3849,0.534,3850,0.534,3851,0.534,3852,0.534,3853,0.534,3854,0.534,3855,0.534,3856,0.534,3857,0.534,3858,0.534,3859,0.534,3860,0.534,3861,1.009,3862,0.534,3863,0.534,3864,0.534,3865,0.534,3866,0.534,3867,0.534,3868,0.534,3869,0.696,3870,1.254,3871,0.534,3872,0.534,3873,0.534,3874,0.534,3875,0.534,3876,0.534,3877,0.534,3878,0.534,3879,0.534,3880,0.534,3881,0.534,3882,0.534,3883,0.534,3884,0.534,3885,0.534,3886,0.534,3887,0.534,3888,0.534,3889,0.534,3890,0.534,3891,0.534,3892,1.819,3893,0.534,3894,0.534,3895,0.534,3896,0.534,3897,0.534,3898,1.009,3899,0.534,3900,0.534,3901,0.534,3902,0.534,3903,0.534,3904,0.534,3905,0.534,3906,0.534,3907,0.534,3908,0.534,3909,0.534,3910,0.534,3911,0.534,3912,0.534,3913,0.534,3914,0.534,3915,0.534,3916,0.534,3917,0.534,3918,0.534,3919,0.534,3920,0.534,3921,0.534,3922,0.534,3923,0.534,3924,0.534,3925,0.534,3926,0.534,3927,0.534,3928,0.534,3929,0.534,3930,0.534,3931,0.534,3932,0.534,3933,0.534,3934,0.534,3935,0.534,3936,0.534,3937,0.534,3938,0.534,3939,0.534,3940,0.534,3941,0.534,3942,0.534,3943,0.469,3944,0.534,3945,0.534,3946,0.534,3947,0.534,3948,0.534,3949,0.534,3950,0.534,3951,0.534,3952,0.534,3953,0.534,3954,0.534,3955,0.534,3956,0.534,3957,0.534,3958,0.534,3959,0.534,3960,0.534,3961,0.534,3962,0.534,3963,0.534,3964,0.534,3965,0.534,3966,0.534,3967,0.534,3968,0.534,3969,1.009,3970,0.534,3971,0.534,3972,0.534,3973,0.534,3974,0.534,3975,0.534,3976,0.534,3977,0.534,3978,0.534,3979,0.534,3980,0.534,3981,0.534,3982,0.534,3983,0.534,3984,0.534,3985,0.534,3986,0.534,3987,0.534,3988,0.534,3989,0.534,3990,0.534,3991,0.534,3992,0.534,3993,0.534,3994,0.534,3995,0.534,3996,0.534,3997,0.534,3998,0.534,3999,0.534,4000,0.534,4001,0.534,4002,0.534,4003,0.534,4004,0.534,4005,0.534,4006,0.534,4007,2.483,4008,0.534,4009,0.534,4010,0.534,4011,0.534,4012,0.534,4013,0.534,4014,0.534,4015,0.534,4016,1.009,4017,0.534,4018,0.534,4019,0.534,4020,0.534,4021,0.534,4022,1.819,4023,0.534,4024,0.534,4025,0.534,4026,0.534,4027,0.534,4028,0.534,4029,0.534,4030,0.534,4031,0.534,4032,0.534,4033,0.534,4034,0.469,4035,0.534,4036,0.534,4037,1.902,4038,0.534,4039,0.534,4040,7.661,4041,0.534,4042,0.534,4043,0.534,4044,0.534,4045,0.534,4046,0.534,4047,0.534,4048,0.534,4049,0.534,4050,0.534,4051,0.534,4052,0.534,4053,0.534,4054,0.534,4055,0.534,4056,0.534,4057,1.009,4058,0.534,4059,0.534,4060,0.534,4061,0.534,4062,0.534,4063,0.534,4064,0.534,4065,0.534,4066,0.534,4067,0.534,4068,0.534,4069,0.534,4070,0.534,4071,0.534,4072,0.534,4073,0.534,4074,0.534,4075,0.534,4076,0.534,4077,0.534,4078,0.534,4079,0.534,4080,0.534,4081,0.534,4082,0.534,4083,0.534,4084,0.534,4085,0.534,4086,0.534,4087,0.534,4088,1.009,4089,0.534,4090,0.534,4091,0.534,4092,0.534,4093,2.772,4094,0.534,4095,0.534,4096,0.534,4097,0.534,4098,2.772,4099,0.534,4100,0.534,4101,0.534,4102,0.534,4103,0.534,4104,0.534,4105,0.534,4106,0.534,4107,0.534,4108,0.534,4109,0.534,4110,0.534,4111,0.534,4112,1.009,4113,0.534,4114,0.534,4115,0.534,4116,0.534,4117,0.534,4118,0.534,4119,0.534,4120,0.534,4121,0.534,4122,0.534,4123,0.534,4124,0.534,4125,0.534,4126,2.167,4127,0.534,4128,0.534,4129,0.534,4130,0.534,4131,1.009,4132,0.534,4133,0.534,4134,0.534,4135,0.534,4136,1.009,4137,0.534,4138,0.534,4139,0.534,4140,0.534,4141,0.534,4142,1.009,4143,0.534,4144,0.534,4145,0.534,4146,0.534,4147,0.534,4148,0.534,4149,0.534,4150,0.534,4151,0.534,4152,0.534,4153,0.534,4154,0.534,4155,0.534,4156,1.009,4157,1.902,4158,0.534,4159,0.534,4160,0.534,4161,0.534,4162,0.534,4163,0.534,4164,0.534,4165,0.534,4166,0.534,4167,1.435,4168,0.534,4169,0.534,4170,0.534,4171,0.534,4172,0.534,4173,0.534,4174,0.534,4175,0.534,4176,0.534,4177,0.534,4178,1.435,4179,0.534,4180,0.534,4181,0.534,4182,0.534,4183,0.534,4184,0.534,4185,0.534,4186,0.534,4187,0.534,4188,0.469,4189,0.534,4190,1.009,4191,0.534,4192,0.534,4193,0.534,4194,0.534,4195,0.534,4196,0.534,4197,0.534,4198,0.534,4199,0.534,4200,0.534,4201,0.534,4202,0.534,4203,0.534,4204,0.534,4205,0.534,4206,0.534,4207,0.534,4208,0.534,4209,1.009,4210,1.009,4211,0.534,4212,1.009,4213,0.534,4214,0.534,4215,0.534,4216,0.534,4217,0.534,4218,0.534,4219,0.534,4220,0.534,4221,0.534,4222,0.534,4223,0.534,4224,0.534,4225,0.534,4226,0.534,4227,0.534,4228,0.534,4229,0.534,4230,0.534,4231,0.534,4232,0.534,4233,0.534,4234,0.469,4235,0.534,4236,0.534,4237,1.009,4238,0.534,4239,0.534,4240,0.534,4241,0.534,4242,0.534,4243,0.534,4244,0.534,4245,0.534,4246,0.534,4247,0.534,4248,0.534,4249,0.534,4250,0.534,4251,0.534,4252,0.534,4253,0.534,4254,0.534,4255,0.534,4256,0.426,4257,0.534,4258,0.534,4259,0.534,4260,0.534,4261,0.534,4262,0.534,4263,0.534,4264,0.534,4265,0.534,4266,0.534,4267,0.534,4268,0.534,4269,0.534,4270,0.534,4271,0.534,4272,0.534,4273,0.534,4274,0.534,4275,0.534,4276,0.534,4277,0.534,4278,0.534,4279,0.469,4280,0.534,4281,0.534,4282,0.534,4283,1.435,4284,0.534,4285,0.534,4286,0.534,4287,0.534,4288,0.534,4289,0.534,4290,0.534,4291,0.534,4292,0.534,4293,0.534,4294,0.534,4295,0.534,4296,1.819,4297,0.534,4298,0.534,4299,0.534,4300,0.534,4301,0.534,4302,2.772,4303,2.167,4304,0.534,4305,0.534,4306,0.534,4307,0.534,4308,0.534,4309,0.534,4310,0.534,4311,0.534,4312,0.534,4313,0.534,4314,0.534,4315,0.534,4316,0.534,4317,0.534,4318,1.009,4319,0.534,4320,0.534,4321,0.534,4322,0.534,4323,0.534,4324,0.534,4325,0.534,4326,0.534,4327,0.534,4328,0.534,4329,0.534,4330,0.534,4331,0.534,4332,0.534,4333,0.534,4334,0.534,4335,0.534,4336,0.534,4337,0.534,4338,0.534,4339,0.534,4340,0.534,4341,0.534,4342,0.534,4343,0.534,4344,0.534,4345,1.009,4346,0.534,4347,0.534,4348,0.534,4349,0.534,4350,0.534,4351,0.534,4352,0.534,4353,0.534,4354,0.534,4355,0.534,4356,0.534,4357,0.534,4358,0.534,4359,0.534,4360,0.534,4361,0.534,4362,0.534,4363,0.534,4364,0.534,4365,0.534,4366,0.534,4367,0.534,4368,0.534,4369,0.534,4370,0.534,4371,0.534,4372,0.534,4373,0.534,4374,1.819,4375,0.534,4376,0.534,4377,0.534,4378,0.534,4379,0.534,4380,0.534,4381,0.534,4382,0.534,4383,0.534,4384,0.534,4385,0.534,4386,0.534,4387,0.534,4388,0.534,4389,0.534,4390,0.534,4391,0.534,4392,0.534,4393,0.534,4394,0.534,4395,0.534,4396,0.534,4397,0.534,4398,0.534,4399,0.534,4400,0.534,4401,0.534,4402,0.534,4403,0.534,4404,0.534,4405,0.534,4406,0.534,4407,0.534,4408,0.534,4409,0.534,4410,0.534,4411,0.534,4412,0.534,4413,2.167,4414,2.167,4415,0.534,4416,0.534,4417,0.534,4418,0.534,4419,0.534,4420,0.534,4421,0.534,4422,0.534,4423,0.534,4424,0.534,4425,0.534,4426,0.534,4427,0.534,4428,0.534,4429,0.534,4430,0.534,4431,0.534,4432,0.534,4433,0.534,4434,0.534,4435,0.534,4436,0.534,4437,0.534,4438,0.534,4439,0.534,4440,0.534,4441,0.534,4442,0.534,4443,0.534,4444,0.534,4445,0.534,4446,0.534,4447,0.534,4448,0.534,4449,0.534,4450,0.534,4451,0.534,4452,0.534,4453,0.534,4454,0.534,4455,0.534,4456,0.534,4457,0.534,4458,0.534,4459,7.542,4460,0.534,4461,0.534,4462,0.534,4463,0.534,4464,0.534,4465,0.534,4466,0.534,4467,0.534,4468,0.534,4469,0.534,4470,0.534,4471,0.469,4472,1.435,4473,0.534,4474,0.534,4475,0.534,4476,0.469,4477,0.534,4478,0.534,4479,0.534,4480,0.534,4481,0.534,4482,0.534,4483,0.534,4484,0.534,4485,0.534,4486,0.534,4487,0.534,4488,0.534,4489,0.534,4490,0.534,4491,0.534,4492,0.534,4493,0.534,4494,0.886,4495,0.534,4496,0.534,4497,0.534,4498,0.534,4499,0.534,4500,0.534,4501,0.534,4502,0.534,4503,0.534,4504,1.009,4505,0.534,4506,0.534,4507,0.534,4508,0.534,4509,0.534,4510,0.534,4511,0.534,4512,0.534,4513,0.534,4514,0.534,4515,0.534,4516,0.534,4517,0.534,4518,0.534,4519,0.534,4520,0.534,4521,0.534,4522,0.534,4523,0.534,4524,0.534,4525,0.534,4526,0.534,4527,0.534,4528,0.534,4529,0.534,4530,0.534,4531,0.534,4532,0.534,4533,0.534,4534,0.534,4535,0.534,4536,0.534,4537,0.534,4538,0.534,4539,0.534,4540,0.534,4541,0.534,4542,0.534,4543,0.534,4544,0.534,4545,0.534,4546,0.534,4547,0.534,4548,0.534,4549,0.534,4550,0.534,4551,0.534,4552,0.534,4553,0.534,4554,0.534,4555,0.534,4556,0.534,4557,0.534,4558,0.534,4559,0.534,4560,0.534,4561,0.534,4562,0.534,4563,0.534,4564,0.534,4565,0.534,4566,0.534,4567,0.534,4568,0.534,4569,0.534,4570,0.534,4571,0.534,4572,0.534,4573,0.534,4574,0.534,4575,0.534,4576,0.534,4577,0.534,4578,0.534,4579,0.534,4580,0.534,4581,0.534,4582,0.534,4583,0.534,4584,0.534,4585,0.534,4586,0.534,4587,0.534,4588,0.534,4589,0.534,4590,0.534,4591,0.534,4592,0.534,4593,0.534,4594,0.534,4595,0.534,4596,0.534,4597,0.534,4598,0.534,4599,0.534,4600,0.534,4601,1.009,4602,0.534,4603,0.534,4604,0.534,4605,0.534,4606,0.534,4607,0.534,4608,0.534,4609,0.534,4610,0.534,4611,0.534,4612,0.534,4613,0.534,4614,0.534,4615,0.534,4616,0.534,4617,0.534,4618,0.534,4619,0.534,4620,0.534,4621,0.534,4622,0.534,4623,0.534,4624,0.534,4625,0.534,4626,0.534,4627,0.534,4628,0.534,4629,0.534,4630,0.534,4631,0.534,4632,0.534,4633,0.534,4634,0.534,4635,0.534,4636,1.009,4637,0.534,4638,0.534,4639,0.534,4640,0.534,4641,0.534,4642,1.009,4643,1.009,4644,1.009,4645,0.534,4646,0.534,4647,0.534,4648,0.534,4649,0.534,4650,0.534,4651,0.534,4652,1.009,4653,1.009,4654,0.534,4655,0.534,4656,0.534,4657,0.534,4658,0.534,4659,0.534,4660,0.534,4661,0.534,4662,0.534,4663,0.534,4664,0.534,4665,0.534,4666,0.534,4667,0.534,4668,0.534,4669,0.534,4670,0.534,4671,0.534,4672,0.534,4673,0.534,4674,0.534,4675,0.534,4676,0.534,4677,0.534,4678,0.534,4679,0.534,4680,0.534,4681,0.534,4682,0.534,4683,0.534,4684,0.534,4685,0.534,4686,0.534,4687,0.534,4688,0.534,4689,0.534,4690,0.534,4691,0.534,4692,0.534,4693,0.534,4694,0.534,4695,0.534,4696,0.534,4697,0.534,4698,0.534,4699,0.534,4700,0.534,4701,0.534,4702,0.534,4703,0.534,4704,0.534,4705,0.534,4706,0.534,4707,0.534,4708,0.534,4709,0.534,4710,0.534,4711,0.534,4712,0.534,4713,0.534,4714,0.534,4715,0.534,4716,0.534,4717,0.534,4718,0.534,4719,0.534,4720,0.534,4721,0.534,4722,0.534,4723,0.534,4724,0.534,4725,0.534,4726,0.534,4727,0.534,4728,0.534,4729,0.534,4730,0.534,4731,0.534,4732,0.534,4733,0.534,4734,0.534,4735,0.534,4736,0.534,4737,0.534,4738,0.534,4739,0.534,4740,0.534,4741,0.534,4742,0.534,4743,0.534,4744,0.534,4745,0.534,4746,0.534,4747,0.534,4748,0.534,4749,0.534,4750,0.534,4751,0.534,4752,1.009,4753,0.534,4754,1.009,4755,0.534,4756,1.009,4757,1.435,4758,0.534,4759,0.534,4760,1.009,4761,0.534,4762,1.009,4763,8.189,4764,0.534,4765,0.534,4766,1.009,4767,0.534,4768,0.534,4769,0.534,4770,1.009,4771,0.534,4772,1.009,4773,0.534,4774,1.009,4775,0.534,4776,1.009,4777,0.534,4778,1.009,4779,0.534,4780,0.534,4781,0.534,4782,0.534,4783,1.009,4784,0.534,4785,1.009,4786,0.534,4787,1.009,4788,0.534,4789,1.009,4790,0.534,4791,1.009,4792,0.534,4793,1.009,4794,0.534,4795,1.009,4796,0.534,4797,1.009,4798,0.534,4799,0.534,4800,1.009,4801,1.009,4802,0.534,4803,0.534,4804,1.009,4805,0.534,4806,1.009,4807,0.534,4808,1.009,4809,0.534,4810,1.009,4811,0.534,4812,0.534,4813,1.009,4814,0.534,4815,0.534,4816,1.009,4817,0.469,4818,0.534,4819,0.534,4820,1.009,4821,0.534,4822,1.009,4823,0.534,4824,0.534,4825,1.009,4826,1.009,4827,0.534,4828,0.534,4829,1.009,4830,1.435,4831,1.819,4832,0.534,4833,0.534,4834,0.534,4835,1.009,4836,0.534,4837,1.009,4838,0.534,4839,0.534,4840,1.009,4841,0.534,4842,1.009,4843,0.534,4844,1.009,4845,0.534,4846,1.009,4847,0.534,4848,1.009,4849,0.534,4850,1.009,4851,0.534,4852,0.534,4853,1.009,4854,0.534,4855,1.009,4856,0.534,4857,1.009,4858,0.534,4859,1.009,4860,0.534,4861,1.009,4862,0.534,4863,1.009,4864,0.534,4865,1.009,4866,0.534,4867,1.009,4868,0.534,4869,0.534,4870,1.009,4871,0.534,4872,0.534,4873,0.534,4874,1.009,4875,0.534,4876,0.534,4877,0.534,4878,1.009,4879,0.534,4880,0.368,4881,0.534,4882,0.534,4883,0.534,4884,1.435,4885,0.534,4886,1.009,4887,0.534,4888,1.009,4889,1.009,4890,1.819,4891,1.009,4892,0.534,4893,0.534,4894,0.534,4895,0.534,4896,0.534,4897,0.534,4898,0.534,4899,1.009,4900,1.009,4901,0.534,4902,0.534,4903,1.009,4904,0.534,4905,0.534,4906,1.009,4907,0.534,4908,1.009,4909,0.534,4910,1.009,4911,0.534,4912,1.009,4913,0.534,4914,1.009,4915,1.435,4916,0.534,4917,0.534,4918,0.534,4919,1.009,4920,0.534,4921,1.009,4922,0.534,4923,1.435,4924,0.534,4925,0.534,4926,0.534,4927,1.009,4928,0.534,4929,1.009,4930,0.534,4931,0.534,4932,0.534,4933,0.534,4934,0.534,4935,0.534,4936,0.534,4937,1.009,4938,0.534,4939,1.009,4940,0.534,4941,1.009,4942,0.534,4943,1.009,4944,0.534,4945,1.009,4946,0.534,4947,1.009,4948,0.534,4949,1.009,4950,0.534,4951,1.009,4952,0.534,4953,1.009,4954,0.534,4955,1.009,4956,0.534,4957,1.009,4958,0.534,4959,1.009,4960,0.534,4961,1.009,4962,0.534,4963,1.009,4964,0.534,4965,1.009,4966,0.534,4967,1.009,4968,0.534,4969,1.009,4970,0.534,4971,1.009,4972,0.534,4973,1.009,4974,0.534,4975,0.534,4976,0.534,4977,0.534,4978,1.009,4979,0.534,4980,0.534,4981,0.534,4982,0.534,4983,1.009,4984,1.819,4985,1.009,4986,0.534,4987,1.435,4988,0.534,4989,0.534,4990,0.534,4991,1.009,4992,0.534,4993,0.744,4994,0.534,4995,0.534,4996,0.534,4997,0.534,4998,1.009,4999,0.534,5000,0.534,5001,0.534,5002,1.009,5003,0.534,5004,1.009,5005,0.534,5006,1.009,5007,0.534,5008,1.009,5009,0.534,5010,1.009,5011,0.534,5012,1.009,5013,0.534,5014,1.009,5015,1.009,5016,0.534,5017,0.534,5018,1.009,5019,0.534,5020,0.534,5021,1.009,5022,0.534,5023,0.534,5024,1.009,5025,0.534,5026,0.534,5027,1.009,5028,0.534,5029,0.534,5030,0.534,5031,0.534,5032,0.534,5033,0.534,5034,0.534,5035,0.534,5036,0.534,5037,0.534,5038,0.534,5039,1.009,5040,0.534,5041,0.534,5042,1.009,5043,0.534,5044,0.534,5045,1.009,5046,0.534,5047,0.534,5048,1.009,5049,0.534,5050,0.534,5051,0.534,5052,1.009,5053,0.534,5054,0.534,5055,0.534,5056,1.009,5057,0.534,5058,1.009,5059,0.534,5060,0.534,5061,0.534,5062,0.534,5063,1.009,5064,0.534,5065,1.009,5066,0.534,5067,1.009,5068,0.534,5069,1.009,5070,0.534,5071,0.534,5072,0.534,5073,0.534,5074,0.534,5075,1.009,5076,0.534,5077,1.009,5078,0.534,5079,0.534,5080,1.009,5081,0.534,5082,1.009,5083,0.534,5084,0.534,5085,0.534,5086,0.534,5087,0.534,5088,0.534,5089,1.009,5090,0.534,5091,0.534,5092,0.534,5093,1.009,5094,0.534,5095,0.534,5096,0.534,5097,0.534,5098,0.534,5099,0.469,5100,0.534,5101,1.009,5102,0.534,5103,1.009,5104,0.534,5105,0.469,5106,0.534,5107,0.534,5108,0.534,5109,0.534,5110,1.009,5111,0.534,5112,1.009,5113,0.534,5114,1.009,5115,0.534,5116,0.534,5117,1.009,5118,0.534,5119,0.534,5120,1.009,5121,0.534,5122,0.534,5123,0.534,5124,1.009,5125,0.534,5126,1.009,5127,0.534,5128,1.009,5129,0.534,5130,1.009,5131,0.534,5132,1.009,5133,0.534,5134,1.009,5135,0.534,5136,1.009,5137,0.534,5138,1.009,5139,0.534,5140,1.009,5141,0.534,5142,1.009,5143,0.534,5144,1.009,5145,0.534,5146,0.534,5147,0.534,5148,0.534,5149,0.534]],["title/dependencies.html",[2715,3.614,3064,2.924]],["body/dependencies.html",[12,0.011,75,0.009,76,0.009,89,0.773,91,3.682,92,3.434,93,3.137,98,3.609,102,1.947,119,4.327,120,3.009,122,4.327,123,1.466,128,4.327,352,4.406,353,3.53,514,3.009,730,3.137,750,3.81,751,3.81,752,3.009,761,4.406,814,3.137,1208,3.609,1336,4.045,1607,5.152,1612,4.045,1615,5.152,1616,5.152,2418,5.152,2419,5.152,2517,5.152,2715,4.045,2848,5.152,3212,5.152,3272,7.593,3325,5.152,3374,5.152,3943,5.152,4234,5.152,4471,5.152,4476,5.152,5150,5.87,5151,5.87,5152,7.165,5153,5.87,5154,5.87,5155,7.165,5156,5.87,5157,5.87,5158,5.87,5159,5.87,5160,5.87,5161,5.87,5162,5.87,5163,5.87]],["title/miscellaneous/enumerations.html",[5164,2.146,5165,4.603]],["body/miscellaneous/enumerations.html",[6,3.876,7,0.281,12,0.011,37,4.236,38,4.115,40,4.115,41,2.985,42,4.115,43,3.434,44,4.115,45,4.236,46,4.115,47,3.672,48,4.115,49,3.876,50,4.115,51,3.876,52,4.115,53,3.876,54,4.115,55,3.672,56,4.115,57,3.876,58,4.115,59,3.493,60,4.115,61,3.672,62,4.115,63,3.876,64,4.115,65,3.876,66,4.115,67,3.876,68,4.115,69,3.876,70,4.452,71,4.115,72,4.115,73,4.115,74,4.115,75,0.009,76,0.009,466,2.23,5164,3.493,5165,5.242,5166,6.356]],["title/miscellaneous/functions.html",[2959,4.181,5164,2.146]],["body/miscellaneous/functions.html",[5,0.222,7,0.206,10,1.323,11,0.597,12,0.011,19,1.08,21,1.032,22,2.321,75,0.007,76,0.007,80,1.67,321,3.826,327,2.24,331,2.24,353,3.311,448,1.93,452,2.615,453,1.67,466,1.48,655,1.407,713,4.362,718,2.708,741,2.439,756,3.036,778,2.439,860,3.642,861,2.809,862,3.483,863,4.954,864,2.836,865,5.744,889,3.483,905,3.483,932,2.439,1085,2.836,1152,4.43,1217,2.686,1330,5.199,1332,3.835,1525,3.01,1526,3.835,1527,3.483,1573,3.835,1705,3.835,1719,3.835,1794,3.835,1863,3.01,1993,3.835,1994,4.722,1995,3.483,2048,4.722,2499,3.835,2843,3.483,2959,3.483,5164,2.555,5167,6.72,5168,7.189,5169,6.72,5170,6.72,5171,6.72,5172,6.72,5173,4.369,5174,5.923,5175,5.923,5176,4.369,5177,5.899,5178,3.835,5179,5.923,5180,4.369,5181,5.923,5182,5.899,5183,5.923,5184,5.923,5185,5.923,5186,5.923,5187,5.923,5188,4.369,5189,5.899,5190,5.923,5191,6.72,5192,5.923,5193,6.72,5194,6.72,5195,6.72,5196,5.923,5197,6.72,5198,5.923,5199,6.72,5200,5.923,5201,5.899,5202,5.923,5203,5.923,5204,5.899,5205,3.835,5206,3.835,5207,4.369,5208,4.369,5209,4.369,5210,4.369,5211,4.369,5212,4.369,5213,4.369,5214,5.923,5215,4.369,5216,4.369,5217,4.369]],["title/index.html",[7,0.173,2823,2.528,2824,2.704]],["body/index.html",[5,0.191,12,0.011,59,3.348,75,0.009,76,0.009,77,1.844,123,1.994,173,2.283,186,3.944,200,1.956,353,2.82,380,2.208,396,2.077,410,2.143,517,4.862,522,4.58,577,3.059,578,4.219,625,3.716,719,3.716,730,3.059,785,3.348,814,3.059,822,2.715,914,4.219,976,4.58,1127,4.563,1180,3.944,1327,4.563,1359,4.219,1560,4.563,1609,5.024,1612,3.944,1654,4.563,1662,5.625,2408,5.201,2715,3.944,2807,4.563,2823,3.944,2832,3.716,2868,6.193,2879,5.024,2881,5.625,2929,5.024,2952,5.024,2962,5.024,3068,6.714,3071,5.024,3076,5.024,3113,5.024,3121,5.024,4037,6.193,4157,5.024,4817,5.024,5105,5.024,5218,5.024,5219,5.024,5220,5.724,5221,5.724,5222,5.724,5223,5.724,5224,5.724,5225,7.055,5226,7.055,5227,5.724,5228,5.724,5229,5.724,5230,5.724,5231,5.724,5232,5.724,5233,5.724,5234,5.724,5235,5.724,5236,5.724,5237,5.724,5238,5.724,5239,5.724,5240,5.724,5241,5.724,5242,5.724,5243,5.724]],["title/license.html",[2823,2.528,2824,2.704,4993,2.704]],["body/license.html",[10,0.847,12,0.006,29,3.595,61,1.895,75,0.006,76,0.006,194,2.457,199,2.123,200,1.053,211,4.191,224,3.68,245,0.992,347,0.616,375,1.625,423,3.181,461,1.72,515,3.402,541,2,565,2.123,680,2.705,687,2.457,744,1.518,761,1.895,766,1.895,807,1.903,825,2.123,851,2.996,898,5.248,909,2.457,1040,2.705,1041,2.705,1207,4.536,1223,2.271,1359,2.271,1524,5.712,1546,2.123,1631,4.9,1985,2.7,2182,3.68,2355,2.457,2373,2.705,2526,2.123,2771,2.705,2856,2.705,2875,6.289,2890,2.705,2902,2.705,2951,6.838,2999,2.705,3166,2.457,3340,2.705,3570,2.705,4188,4.858,4256,2.457,4993,5.094,5099,4.052,5244,7.164,5245,7.368,5246,6.583,5247,7.164,5248,3.081,5249,3.081,5250,3.081,5251,7.368,5252,3.081,5253,4.616,5254,3.081,5255,3.081,5256,3.081,5257,5.534,5258,3.081,5259,5.534,5260,5.534,5261,3.081,5262,6.146,5263,3.081,5264,5.534,5265,3.081,5266,3.081,5267,3.081,5268,3.081,5269,7.368,5270,3.081,5271,3.081,5272,4.616,5273,4.616,5274,3.081,5275,3.081,5276,4.616,5277,7.79,5278,8.434,5279,4.616,5280,4.616,5281,3.081,5282,3.081,5283,3.081,5284,4.616,5285,8.543,5286,3.081,5287,5.534,5288,4.616,5289,3.081,5290,4.616,5291,3.081,5292,4.616,5293,3.081,5294,5.534,5295,3.081,5296,4.616,5297,4.616,5298,6.146,5299,3.081,5300,3.081,5301,3.081,5302,6.146,5303,4.616,5304,3.081,5305,3.081,5306,4.616,5307,3.081,5308,3.081,5309,3.081,5310,5.534,5311,6.583,5312,7.534,5313,6.583,5314,5.534,5315,3.081,5316,3.081,5317,3.081,5318,4.616,5319,3.081,5320,4.616,5321,3.081,5322,3.081,5323,3.081,5324,3.081,5325,3.081,5326,3.081,5327,2.123,5328,3.081,5329,3.081,5330,4.616,5331,3.081,5332,7.79,5333,6.583,5334,3.081,5335,3.081,5336,4.616,5337,3.081,5338,4.616,5339,3.081,5340,3.081,5341,3.081,5342,3.081,5343,3.081,5344,3.081,5345,3.081,5346,3.081,5347,3.081,5348,3.081,5349,3.081,5350,3.081,5351,3.081,5352,3.081,5353,6.146,5354,3.081,5355,3.081,5356,3.081,5357,3.081,5358,5.534,5359,3.081,5360,3.081,5361,3.081,5362,4.616,5363,3.081,5364,3.081,5365,5.534,5366,4.616,5367,3.081,5368,3.081,5369,3.081,5370,3.081,5371,4.616,5372,3.081,5373,3.081,5374,3.081,5375,3.081,5376,3.081,5377,6.583,5378,3.081,5379,3.081,5380,3.081,5381,3.081,5382,3.081,5383,3.081,5384,3.081,5385,3.081,5386,4.616,5387,3.081,5388,5.534,5389,3.081,5390,3.081,5391,3.081,5392,3.081,5393,3.081,5394,3.081,5395,3.081,5396,7.164,5397,5.534,5398,3.081,5399,7.164,5400,4.616,5401,4.616,5402,3.081,5403,5.534,5404,3.081,5405,4.616,5406,3.081,5407,3.081,5408,3.081,5409,3.081,5410,3.081,5411,6.91,5412,4.616,5413,5.534,5414,4.616,5415,3.081,5416,3.081,5417,6.583,5418,4.616,5419,4.616,5420,5.534,5421,4.616,5422,4.616,5423,4.616,5424,4.616,5425,3.081,5426,3.081,5427,3.081,5428,3.081,5429,3.081,5430,3.081,5431,6.146,5432,3.081,5433,3.081,5434,3.081,5435,3.081,5436,3.081,5437,3.081,5438,3.081,5439,3.081,5440,3.081,5441,6.146,5442,5.534,5443,4.616,5444,5.534,5445,4.616,5446,4.616,5447,4.616,5448,3.081,5449,3.081,5450,3.081,5451,3.081,5452,4.616,5453,3.081,5454,6.146,5455,3.081,5456,3.081,5457,3.081,5458,3.081,5459,4.616,5460,3.081,5461,3.081,5462,3.081,5463,3.081,5464,3.081,5465,3.081,5466,3.081,5467,3.081,5468,3.081,5469,3.081,5470,4.616,5471,3.081,5472,3.081,5473,3.081,5474,3.081,5475,3.081,5476,3.081,5477,3.081,5478,3.081,5479,3.081,5480,3.081,5481,3.081,5482,3.081,5483,3.081,5484,3.081,5485,3.081,5486,3.081,5487,3.081,5488,3.081,5489,4.616,5490,3.081,5491,3.081,5492,3.081,5493,3.081,5494,3.081,5495,3.081,5496,3.081,5497,3.081,5498,4.616,5499,3.081,5500,3.081,5501,3.081,5502,3.081,5503,3.081,5504,3.081,5505,3.081,5506,3.081,5507,3.081,5508,3.081,5509,3.081,5510,3.081,5511,3.081]],["title/modules.html",[3176,4.723]],["body/modules.html",[12,0.01,75,0.01,76,0.01,3176,5.559]],["title/overview.html",[5512,5.199]],["body/overview.html",[2,1.361,12,0.01,41,3.225,45,3.982,75,0.01,76,0.01,98,4.186,140,0.84,334,2.193,375,2.397,419,2.716,2956,6.867,5512,5.976,5513,6.808]],["title/properties.html",[8,0.431,3064,2.924]],["body/properties.html",[8,0.552,12,0.011,75,0.009,76,0.009,396,2.437,522,4.359,1205,4.359,2526,4.628,2881,5.354,4279,5.894,4993,4.95,5219,5.894,5514,6.715,5515,6.715,5516,6.715,5517,6.715,5518,6.715,5519,6.715]],["title/todo.html",[554,2.048,2823,2.528,2824,2.704]],["body/todo.html",[5,0.18,12,0.01,18,2.643,75,0.009,76,0.009,211,3.875,522,4.301,814,3.54,822,3.142,1043,5.282,1487,4.565,1589,5.282,1612,4.565,3061,5.815,4494,5.815,5520,6.625,5521,6.625,5522,6.625,5523,6.625,5524,6.625,5525,6.625,5526,5.815,5527,6.625,5528,6.625,5529,6.625,5530,6.625,5531,6.625,5532,6.625,5533,6.625]],["title/miscellaneous/typealiases.html",[5164,2.146,5534,5.244]],["body/miscellaneous/typealiases.html",[6,3.734,7,0.271,11,0.415,12,0.011,14,4.594,23,4.594,30,3.964,31,3.734,32,4.594,33,3.734,34,3.537,35,3.537,75,0.009,76,0.009,288,3.212,289,3.487,293,3.074,294,2.949,295,3.074,296,3.074,297,3.074,298,3.074,299,3.074,300,3.074,301,3.074,321,3.487,325,3.357,327,2.949,328,3.357,329,3.357,331,2.949,332,3.487,456,3.952,488,3.212,489,3.212,490,3.212,491,3.365,492,3.074,493,3.365,494,3.365,724,3.964,738,4.594,739,3.365,741,2.088,888,3.537,1391,3.734,1392,4.594,1396,3.537,1397,3.537,1399,4.594,5164,3.365,5166,6.729,5535,5.752,5536,7.666,5537,7.077,5538,5.752,5539,5.752,5540,5.752,5541,5.752,5542,5.752,5543,5.752]],["title/miscellaneous/variables.html",[5164,2.146,5544,4.603]],["body/miscellaneous/variables.html",[7,0.142,10,1.485,11,0.628,12,0.011,18,1.813,19,0.968,21,1.995,39,1.13,43,1.432,75,0.006,76,0.006,77,1.464,80,1.371,90,1.857,173,1.813,182,3.624,183,5.202,200,1.868,289,2.24,306,2.33,307,2.33,308,2.33,310,2.33,312,2.006,313,2.006,314,2.33,316,2.429,317,1.548,322,2.429,323,1.488,325,1.432,326,2.429,330,2.156,380,0.945,396,1.65,420,2.407,456,1.686,466,2.109,467,1.857,468,3.379,488,1.686,489,1.686,490,1.686,491,1.766,492,1.613,493,1.766,494,1.766,495,1.857,496,1.857,497,1.857,516,3.351,559,3.351,577,1.613,655,2.209,678,3.99,713,4.236,733,3.198,759,1.38,825,2.081,860,1.857,861,1.432,864,2.951,866,2.795,869,1.686,932,1.686,933,4.799,934,2.65,935,2.65,936,2.65,937,3.99,938,2.65,939,2.65,940,2.65,941,2.65,942,2.65,943,2.65,944,2.65,945,3.99,946,2.65,947,2.65,948,2.65,949,2.65,950,2.65,951,2.65,1023,2.226,1085,1.96,1152,1.857,1217,1.857,1495,2.407,1525,2.081,1646,2.65,1655,3.624,1863,2.081,2175,2.407,2219,3.624,2286,2.65,2421,4.85,2422,4.85,2526,2.081,2674,2.65,2693,3.99,2694,3.99,2764,3.99,2843,2.407,3166,3.624,3181,2.65,4034,2.65,4256,5.673,5164,1.766,5168,7.461,5177,2.65,5178,3.99,5182,2.65,5189,2.65,5201,2.65,5204,2.65,5205,2.65,5206,4.799,5218,2.65,5544,2.65,5545,4.546,5546,4.546,5547,4.546,5548,4.546,5549,4.546,5550,4.546,5551,4.546,5552,4.546,5553,6.084,5554,3.019,5555,3.019,5556,4.546,5557,5.467,5558,4.546,5559,3.019,5560,4.546,5561,4.546,5562,3.019,5563,4.546,5564,6.525,5565,4.546,5566,4.546,5567,5.467,5568,4.546,5569,4.546,5570,4.546,5571,4.546,5572,4.546,5573,4.546,5574,4.546,5575,4.546,5576,3.019,5577,4.546,5578,3.019,5579,3.019,5580,3.019,5581,3.019,5582,3.019,5583,3.019,5584,3.019,5585,3.019,5586,3.019,5587,3.019,5588,3.019,5589,3.019,5590,3.019,5591,3.019,5592,3.019,5593,3.019,5594,3.019,5595,3.019,5596,3.019,5597,3.019,5598,3.019,5599,3.019,5600,3.019,5601,3.019,5602,6.525,5603,3.019,5604,3.019,5605,3.019,5606,3.019,5607,3.019,5608,3.019,5609,3.019,5610,3.019,5611,3.019,5612,3.019,5613,3.019,5614,3.019,5615,4.546,5616,7.116,5617,4.546,5618,4.546,5619,3.019,5620,3.019,5621,3.019,5622,3.019,5623,3.019,5624,3.019,5625,3.019,5626,3.019,5627,3.019,5628,3.019,5629,3.019,5630,3.019,5631,3.019,5632,3.019,5633,3.019,5634,3.019,5635,3.019,5636,3.019,5637,3.019,5638,3.019,5639,3.019,5640,3.019,5641,6.857,5642,4.546,5643,3.019,5644,3.019,5645,6.084,5646,3.019,5647,3.019,5648,3.019,5649,3.019,5650,3.019,5651,3.019]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.061,334,0.72,385,0.836,960,1.45,2185,1.307,4880,1.539,5327,1.539]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.21,12,0.009,75,0.009,76,0.009,244,3.913,334,2.495,385,2.899,556,4.113,960,5.027,2185,4.53,2832,4.342,3253,5.337,3869,4.61,3870,5.337,5652,4.931,5653,5.709,5654,4.931]],["title/additional-documentation/ui-components-slide-panel.html",[334,0.798,405,0.956,2185,1.448,2335,1.825,4880,1.706,5327,1.706]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.009,75,0.009,76,0.009,244,3.928,334,2.5,405,2.998,556,4.129,2185,4.54,2335,5.722,2832,4.359,3253,5.349,3869,4.628,3870,5.349,5652,4.95,5653,5.722,5654,4.95]],["title/additional-documentation/ui-components-dialogs.html",[334,0.894,2185,1.624,4880,1.913,5327,1.913,5655,2.437]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,244,3.944,334,2.506,556,4.145,2185,4.551,2832,4.376,3253,5.361,3869,4.646,3870,5.361,5652,4.969,5653,5.734,5654,4.969,5655,6.828]],["title/additional-documentation/helpers.html",[4880,2.528,5327,2.528,5656,3.22]],["body/additional-documentation/helpers.html",[12,0.009,75,0.009,76,0.009,244,3.883,556,4.082,1998,5.292,2832,4.309,3253,5.615,3286,5.826,3635,7.153,3869,5.313,3870,5.313,5526,6.767,5652,5.683,5653,5.683,5654,5.683,5656,7.153]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":1111,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.2",{"_index":2111,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["0.5",{"_index":509,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.7",{"_index":2629,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":2593,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0038838",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["00399df",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["006b52c",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["009b48d",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["00b47ed",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["00d5b5e",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["0107dc5",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["0129566",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["013e987",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["0174ddf",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["019de24",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["025a430",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["027ad79",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["02bde5d",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["02c06cb",{"_index":5137,"title":{},"body":{"changelog.html":{}}}],["02d4bfb",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["02e548c",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["0325a08",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["0338bd7",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["03a0491",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["045b043",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["0486e25",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["04b4812",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["04dca08",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["0581767",{"_index":5081,"title":{},"body":{"changelog.html":{}}}],["05a441e",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["05b4ddd",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["05ddceb",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["0629b20",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["063950a",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["063d395",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["0674adf",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["067bbea",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["072caca",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["07d6959",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["07de52a",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["07ec810",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["0843a41",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["0858a77",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["0885ef3",{"_index":2925,"title":{},"body":{"changelog.html":{}}}],["08b1238",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["0903cd2",{"_index":5088,"title":{},"body":{"changelog.html":{}}}],["092dc60",{"_index":5121,"title":{},"body":{"changelog.html":{}}}],["0960760",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["097fe6b",{"_index":5113,"title":{},"body":{"changelog.html":{}}}],["09ae300",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["09eba6b",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["0a9aedc",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["0b2a071",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["0b30a9f",{"_index":5047,"title":{},"body":{"changelog.html":{}}}],["0ba1f5d",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["0bde446",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["0c889a3",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["0c91659",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["0cabcad",{"_index":5123,"title":{},"body":{"changelog.html":{}}}],["0cec276",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["0d0dfcb",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["0d76c85",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["0dc096d",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["0e060af",{"_index":5074,"title":{},"body":{"changelog.html":{}}}],["0e3c35d",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["0e6195d",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["0f45127",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["0f6c72b",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["0f8326e",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["0f8e394",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)).then((entry",{"_index":874,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["1.0",{"_index":5248,"title":{},"body":{"license.html":{}}}],["1.0.1",{"_index":5156,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":5150,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["1.2.4",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["10.0.1",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["10.0.2",{"_index":4441,"title":{},"body":{"changelog.html":{}}}],["10.0.3",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["10.0.4",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["10.1",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["10.1.0",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["10.2.0",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["10.2.5",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["10.2.7",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["10.3.0",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["10.3.1",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["10.3.2",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":1596,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":492,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["101bbd0",{"_index":5003,"title":{},"body":{"changelog.html":{}}}],["1024",{"_index":298,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["108",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["1081f8e",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["1098d6a",{"_index":5149,"title":{},"body":{"changelog.html":{}}}],["10_000",{"_index":662,"title":{},"body":{"pipes/BandPipe.html":{}}}],["10bf971",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.0.0",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["11.0.2",{"_index":5157,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":4396,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["11.1.2",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["11.2.0",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["11.3.0",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["11.3.1",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["11.4.0",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["11.4.1",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["11.4.10",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["11.4.11",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["11.4.2",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["11.4.3",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["11.4.5",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["11.4.6",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["11.4.8",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["11.4.9",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["11.5.0",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["11.5.1",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["11.5.10",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["11.5.11",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["11.5.12",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["11.5.13",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["11.5.14",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["11.5.3",{"_index":4311,"title":{},"body":{"changelog.html":{}}}],["11.5.4",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["11.5.5",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["11.5.6",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["11.5.7",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["11.5.8",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["11.5.9",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["112db1a",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["11ae344",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.0",{"_index":4234,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["12.0.1",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["12.0.10",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["12.0.11",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["12.0.12",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["12.0.13",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["12.0.15",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["12.0.16",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["12.0.3",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["12.0.4",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["12.0.5",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["12.0.6",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["12.0.7",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["12.0.8",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["12.0.9",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["12000",{"_index":5541,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["120476b",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["120f02a",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["122856c",{"_index":4250,"title":{},"body":{"changelog.html":{}}}],["123835c",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["128",{"_index":295,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["128a3c3",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["12_000",{"_index":495,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["12a71dd",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["13.0.0",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["13.0.1",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["13.0.10",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["13.0.11",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["13.0.12",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["13.0.13",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["13.0.16",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["13.0.18",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["13.0.19",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["13.0.2",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["13.0.20",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["13.0.3",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["13.0.5",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["13.0.6",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["13.0.7",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["13.0.8",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["13.0.9",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["13.1.0",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["13.1.1",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["13.1.10",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["13.1.11",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["13.1.12",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["13.1.2",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["13.1.3",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["13.1.4",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["13.1.5",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["13.1.6",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["13.1.7",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["13.1.8",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["13.1.9",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["13.2",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["13.2.0",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["13.2.1",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["13.2.2",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["13.2.3",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["13.2.4",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["13.2.5",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["13.2.6",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["13.3.0",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["13.3.1",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["13.3.2",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["13.3.3",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["13.3.4",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["13.3.5",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["131",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["133059f",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["1333d05",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["135",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["1385586",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["139",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["13bf8e2",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["14.0.0",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["14.0.10",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["14.0.11",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["14.0.12",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["14.0.13",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["14.0.2",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["14.0.3",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["14.0.4",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["14.0.5",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["14.0.6",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["14.0.7",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["14.0.8",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["14.0.9",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["14.1.0",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["14.1.1",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["14.1.10",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["14.1.11",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["14.1.12",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["14.1.13",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["14.1.14",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["14.1.15",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["14.1.16",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["14.1.17",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["14.1.18",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["14.1.19",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["14.1.2",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["14.1.20",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["14.1.23",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["14.1.3",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["14.1.4",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["14.1.5",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["14.1.6",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["14.1.7",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["14.1.8",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["14.1.9",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["140",{"_index":2168,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["14000",{"_index":5542,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["141",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["14148e0",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["142",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["144",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["1455d32",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["146",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["147",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["14768e6",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["14_000",{"_index":496,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["14a5bd3",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["15.0.0",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["15.0.1",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["15.0.2",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["15.0.3",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["15.0.4",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["15.0.5",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["15.0.6",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["15.0.7",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["15.0.8",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["15.0.9",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["15.1.1",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["15.1.10",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["15.1.11",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["15.1.12",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["15.1.13",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["15.1.14",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["15.1.16",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["15.1.17",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["15.1.2",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["15.1.3",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["15.1.4",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["15.1.5",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["15.1.6",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["15.1.7",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["15.1.8",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["15.1.9",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["150",{"_index":2484,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["155e1fd",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["15dded8",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1140,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["16.0.1",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["16.0.2",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["16.0.3",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["16.0.4",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["16.0.5",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["16.0.6",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["16000",{"_index":5543,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["1604161",{"_index":5057,"title":{},"body":{"changelog.html":{}}}],["162acda",{"_index":5127,"title":{},"body":{"changelog.html":{}}}],["16384",{"_index":5539,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["164",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["166c79d",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["16925cf",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["16_000",{"_index":497,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":302,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["16d8b1b",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2956,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["17.0.10",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["17.0.11",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["17.0.12",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["17.0.13",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["17.0.14",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["17.0.15",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["17.0.16",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["17.0.17",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["17.0.18",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["17.0.2",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["17.0.3",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["17.0.4",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["17.0.5",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["17.0.6",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["17.0.7",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["17.0.8",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["17.0.9",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["170",{"_index":489,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["170ea47",{"_index":5049,"title":{},"body":{"changelog.html":{}}}],["171",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["172",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["17266a3",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["1730f16",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["1745489",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["17a1677",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["17e4083",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["17ed8a6",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["18.0.1",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["18.1.0",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["18.1.1",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["18.2.0",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["18.2.2",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["18.2.3",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["18.2.4",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["18.2.5",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["18.2.6",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["18.2.7",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["181",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["184a834",{"_index":5141,"title":{},"body":{"changelog.html":{}}}],["1857720",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["18a45bd",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["18cab80",{"_index":5072,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["19.0.0",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["19.0.1",{"_index":3374,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.0.10",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["19.0.2",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["19.0.3",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["19.0.4",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["19.0.5",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["19.0.6",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["19.0.7",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["19.0.8",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["19.0.9",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["19.1.0",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["19.1.1",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["19.2.0",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["19.2.1",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["19.2.10",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["19.2.2",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["19.2.3",{"_index":3272,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.4",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["19.2.5",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["19.2.6",{"_index":5152,"title":{},"body":{"dependencies.html":{}}}],["19.2.7",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["19.2.8",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["19.2.9",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["19.2.x",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["19.3.0",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["19.4.0",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["19.4.1",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["19.4.10",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["19.4.11",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["19.4.12",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["19.4.13",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["19.4.14",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["19.4.15",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["19.4.2",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["19.4.3",{"_index":3212,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.4.4",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["19.4.5",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["19.4.6",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["19.4.7",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["19.4.8",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["19.4.9",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["19.5.0",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["19.5.1",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["19.5.3",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["19.5.4",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["194199c",{"_index":5068,"title":{},"body":{"changelog.html":{}}}],["195",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["1989419",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["199",{"_index":1067,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":5383,"title":{},"body":{"license.html":{}}}],["19bf065",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["1a30a33",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["1a33b93",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["1a65661",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["1a92061",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["1c4c67e",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["1c7fa4e",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["1c876b6",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["1c9fedf",{"_index":5055,"title":{},"body":{"changelog.html":{}}}],["1d0b823",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["1de2a3c",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["1e340e1",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["1e4fd87",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["1e660c9",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["1e96bc3",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["1ebb626",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["1ffd91e",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["2.8.1",{"_index":5163,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1077,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["20.0.0",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["20.1.0",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["20.1.1",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["20.1.2",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["20.1.3",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["20.1.4",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["20.2.1",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["20.2.10",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["20.2.11",{"_index":2933,"title":{},"body":{"changelog.html":{}}}],["20.2.12",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["20.2.13",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["20.2.14",{"_index":2907,"title":{},"body":{"changelog.html":{}}}],["20.2.15",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["20.2.16",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["20.2.17",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["20.2.18",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["20.2.19",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["20.2.2",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["20.2.20",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["20.2.21",{"_index":5514,"title":{},"body":{"properties.html":{}}}],["20.2.3",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["20.2.4",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["20.2.5",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["20.2.6",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["20.2.7",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["20.2.9",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["200",{"_index":2485,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["20050dc",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["20110c3",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["2011e46",{"_index":5135,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":299,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["206",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["207",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["208",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["20cf16a",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["20d1b8b",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["20rem",{"_index":2351,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["2119d47",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["220",{"_index":2645,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["220c7f4",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["221781e",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["223",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["228ee85",{"_index":5019,"title":{},"body":{"changelog.html":{}}}],["22afab3",{"_index":5071,"title":{},"body":{"changelog.html":{}}}],["22da5c7",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["22ec300",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["23061dd",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["2346f13",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["235",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["2389739",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2598,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["240",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["241",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["242",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["2427749",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["2434ec6",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["24e4c9a",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2459,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["250",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["2500235",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["250d7f9",{"_index":5032,"title":{},"body":{"changelog.html":{}}}],["251",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":1076,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":296,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["26",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["261",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["264",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["2708806",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["272",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["275e54d",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["27acba5",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["27fdc57",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["28465d6",{"_index":5005,"title":{},"body":{"changelog.html":{}}}],["28548eb",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["286",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["287",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["287138c",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["288",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["289",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["289ec3d",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["28cff25",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["292ed5a",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["29878bc",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["29f1cbe",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["29f2b37",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["2a4184c",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["2a427ed",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["2a99961",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["2ab7cc1",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["2aee517",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["2b942c4",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["2bb0e78",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["2bb5430",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["2bcfefb",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["2bdc500",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["2bfabd0",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["2c0f612",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["2ce3664",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["2d68f3b",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["2db5dc7",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["2e2cf66",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["2e5b003",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["2eb6cae",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["2f0d555",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["2f592f3",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["2f67e34",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.0.2",{"_index":5162,"title":{},"body":{"dependencies.html":{}}}],["3.0.4",{"_index":5161,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":5154,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":5158,"title":{},"body":{"dependencies.html":{}}}],["3.9.17",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["3.9.19",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":2461,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["300",{"_index":1109,"title":{},"body":{"injectables/GamepadService.html":{}}}],["3000",{"_index":493,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["301",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["305aec6",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["308b3e5",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["308bd9f",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["30_000",{"_index":1335,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["30fec73",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["30fps",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":5096,"title":{},"body":{"changelog.html":{}}}],["310",{"_index":490,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["312",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["314f02a",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":293,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3233ed1",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["32570e0",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["32768",{"_index":5540,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":303,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["32c3f4d",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["32e3ad6",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["331bb8f",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["337a109",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["338",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["339af30",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["339bd87",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["339d07b",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["33bb6c8",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["33d73d9",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["34663be",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":2463,"title":{},"body":{"injectables/ThemeService.html":{}}}],["358",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["3597f8b",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["35a78e4",{"_index":5133,"title":{},"body":{"changelog.html":{}}}],["360px",{"_index":1273,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["362",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["362d9db",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["368",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["369",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["36e8709",{"_index":2912,"title":{},"body":{"changelog.html":{}}}],["372",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["3773370",{"_index":4997,"title":{},"body":{"changelog.html":{}}}],["3797092",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["37f76dc",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["37fa04d",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["381",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["389407a",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["38d27f1",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["390",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["392b41d",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["395",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["397399b",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1402,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3a9067b",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["3acc7bf",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["3bccffb",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["3ccea4c",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["3ce805f",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["3d1f63c",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["3e58c71",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["3e7b9a4",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["3e8e5d0",{"_index":4979,"title":{},"body":{"changelog.html":{}}}],["3f2c562",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["3f449ec",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["3f668a5",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["3f73f6e",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["3fbfb97",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["3ff6d19",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":5373,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":5159,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":3943,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["4.1.1",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["4.4",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["40",{"_index":2465,"title":{},"body":{"injectables/ThemeService.html":{}}}],["401",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["402",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["4035819",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["403737f",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["4040b59",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["409",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["4096",{"_index":300,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["40cc765",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":5513,"title":{},"body":{"overview.html":{}}}],["411",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["4164d59",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["418b524",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["419",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["41e632f",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["422fc8e",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["423",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["424242",{"_index":2693,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["42a58d9",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["42f56c1",{"_index":5145,"title":{},"body":{"changelog.html":{}}}],["431",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["431a9ad",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["43463ab",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["438",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["43a40a4",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["43d9b1f",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["440hz",{"_index":708,"title":{},"body":{"interfaces/Chainable.html":{}}}],["4452ab9",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["448",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["450",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["452f074",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["455",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["457",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["460",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["465",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["466",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["467",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["468",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["4695772",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["469a890",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["46c60ce",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["46e627b",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["473",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["4781958",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["47842e1",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["478c88a",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["47b6776",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["47e3527",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["483",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["49a76e8",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["49b1735",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["49d8293",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["4a42a18",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["4a4b1c4",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["4a66bde",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["4aa52ed",{"_index":2917,"title":{},"body":{"changelog.html":{}}}],["4bdbceb",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["4c16c1e",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["4c272db",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["4c8c0ad",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["4c8f851",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["4d47689",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["4d9ca69",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["4dbf4b8",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["4df45ed",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["4e27dea",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["4e72fcd",{"_index":5034,"title":{},"body":{"changelog.html":{}}}],["4e9a327",{"_index":5116,"title":{},"body":{"changelog.html":{}}}],["4eac2a7",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["4ec2e90",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["4ef0700",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["4f1794f",{"_index":5023,"title":{},"body":{"changelog.html":{}}}],["4f70846",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["4f91524",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["4feefcd",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":1064,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":765,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["5059439",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["505e77f",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["5061051",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["50b7005",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["50dbff9",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["5101ea6",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["511",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["51154fe",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":297,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":1939,"title":{},"body":{"injectables/PlayerService.html":{}}}],["51304c2",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["51a51dd",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["51dfdf7",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["51e219a",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["521e049",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["522",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["5273759",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["529",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["52afb10",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["52bf10d",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["52d642b",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["5302fb4",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["532",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["5321e86",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["53749c8",{"_index":5100,"title":{},"body":{"changelog.html":{}}}],["53818e8",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["539",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["53a8631",{"_index":5092,"title":{},"body":{"changelog.html":{}}}],["540",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["540fdd8",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["541",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["5467c6f",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["547",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["549",{"_index":2923,"title":{},"body":{"changelog.html":{}}}],["549bfa1",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["550",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["55e56b8",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["55f3319",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["569161e",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["56a3899",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["572a9f8",{"_index":5102,"title":{},"body":{"changelog.html":{}}}],["5742e12",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["57f591d",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["58",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["580c58d",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["5824006",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["586ef29",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["58fb13b",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["592ac3b",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["592cb7a",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["597ee4f",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["59f1df2",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["59f4ac4",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["5a61397",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["5a7054c",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["5a92c07",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["5aecee8",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["5aed853",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["5af2ad7",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["5bab2a7",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["5c1346d",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["5cbeb5b",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["5cec62d",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["5e77b33",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["5ed4032",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["5effed4",{"_index":2968,"title":{},"body":{"changelog.html":{}}}],["5f1d097",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["5fe0756",{"_index":5119,"title":{},"body":{"changelog.html":{}}}],["5ffbd62",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["5sec.mp3",{"_index":709,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["6.3.0",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["6.3.1",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["6.4.0",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["6.4.1",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["6.5.0",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["6.5.1",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["6.5.2",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["6.5.3",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["6.5.4",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["6.5.5",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["6.5.6",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["6.5.7",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["6.5.8",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["6.5.9",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["6.6.0",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["6.6.1",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["6.6.2",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["6.6.4",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["6.6.5",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["6.6.6",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["6.6.7",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["6.7.0",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["6.7.1",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["6.7.2",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["6.7.3",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["6.7.4",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["60",{"_index":488,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":491,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["6000",{"_index":494,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600f7e6",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["60d5b05",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["60dbedc",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["61721ca",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["61eb69b",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["620afb8",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["62c64c5",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["62cfee7",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["62f7474",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["635e855",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["63600c3",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["63f69d0",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":294,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["646c494",{"_index":5009,"title":{},"body":{"changelog.html":{}}}],["64a34dc",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["64d30e1",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["654bac2",{"_index":5031,"title":{},"body":{"changelog.html":{}}}],["6655a9c",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["667c54e",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["667f875",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["669facb",{"_index":5076,"title":{},"body":{"changelog.html":{}}}],["670b3af",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["6756668",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["6782ecd",{"_index":5122,"title":{},"body":{"changelog.html":{}}}],["678aef6",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["67a17ee",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["681d4cd",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["6841a21",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["6878f22",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["68d9939",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["68e8dc6",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["6926167",{"_index":5066,"title":{},"body":{"changelog.html":{}}}],["6966d17",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["69ed6f4",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["6a6ec18",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["6a8d3be",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["6aed158",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["6b0ec83",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["6b2d8b8",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["6b5e613",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["6b9ff38",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["6bc0773",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["6bd60c5",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["6bf609d",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["6bfb6ba",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["6c219df",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["6c27523",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["6c63788",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["6c6f88c",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["6cab435",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["6cd086c",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["6cee32d",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["6d26668",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["6d2a8fe",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["6d52ad4",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["6d67484",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["6d6f310",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["6ee2324",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["6f12a37",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["6f1cdb4",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["6f6ac17",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["6fc1434",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["6fdfa5a",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":1061,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["7.0.0",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["7.0.2",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["7.0.3",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["7.0.4",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["7.0.5",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["7.0.6",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["7.1.0",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["7.1.1",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["7.2.0",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["7.8.2",{"_index":5160,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2469,"title":{},"body":{"injectables/ThemeService.html":{}}}],["707a0cb",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["70990de",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["713322f",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["71bd586",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["71e1d6c",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":2217,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["72075fe",{"_index":5104,"title":{},"body":{"changelog.html":{}}}],["722901c",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["72575f6",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["726da93",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["72be3d3",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["72dafd7",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["72fa061",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["73",{"_index":2621,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["73050ff",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["7353f84",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["7362da7",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["73b9b59",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["73bd100",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["73ed2ca",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["7440340",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["7445539",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["7445cc4",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["7484f35",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["748a302",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["7493e98",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["74e7c83",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["7522583",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["7528cd4",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["752aa76",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["7553170",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["7560dfa",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["756dc90",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["7579ea9",{"_index":2898,"title":{},"body":{"changelog.html":{}}}],["7593825",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["75fc12c",{"_index":5139,"title":{},"body":{"changelog.html":{}}}],["764711a",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["7667c50",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["76ace70",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["77091b9",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["774ffed",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["7762874",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["77707fb",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["7785053",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["77c544b",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["78fcf7a",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["79c83aa",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["79d861d",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["79fee74",{"_index":5129,"title":{},"body":{"changelog.html":{}}}],["7a1bbe5",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["7a66d5a",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["7a6f294",{"_index":5025,"title":{},"body":{"changelog.html":{}}}],["7a838a9",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["7a8645a",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["7b38580",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["7b491de",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["7b8cdeb",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["7bebf2d",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["7c00473",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["7c5bbe5",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["7ccbc95",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["7cf10f9",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["7d3846a",{"_index":2993,"title":{},"body":{"changelog.html":{}}}],["7d9d809",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["7def043",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["7defe9b",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["7e11361",{"_index":2928,"title":{},"body":{"changelog.html":{}}}],["7e45969",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["7f1e3c1",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["7f8ad27",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["7f90220",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["7fa33e8",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["7fb56e0",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["7fcd244",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["8.0.0",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["8.0.1",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["8.1.0",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["8.1.1",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["8.1.10",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["8.1.2",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["8.1.3",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["8.1.4",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["8.1.5",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["8.1.6",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["8.1.7",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["8.1.8",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["8.1.9",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["80",{"_index":2471,"title":{},"body":{"injectables/ThemeService.html":{}}}],["800",{"_index":5606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800fdae",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["801cd46",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["80553e8",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["80b42ce",{"_index":5115,"title":{},"body":{"changelog.html":{}}}],["80d5e14",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["8192",{"_index":301,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["81bb449",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["822ff08",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["8264f64",{"_index":5051,"title":{},"body":{"changelog.html":{}}}],["8268a8b",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["826cbe5",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["828148a",{"_index":5131,"title":{},"body":{"changelog.html":{}}}],["8337321",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["834f706",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["8377116",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["839a546",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["8448134",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["845189d",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["84a2466",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["84ac04c",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["84e91e3",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["8515368",{"_index":5038,"title":{},"body":{"changelog.html":{}}}],["858ff56",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["8596088",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["85d2a14",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["85eb0ba",{"_index":5017,"title":{},"body":{"changelog.html":{}}}],["8626722",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["862a41d",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["864d7e1",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["866de3e",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["869dddb",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["86a18bb",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["86a63af",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["86bda79",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["86be7eb",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["870e50b",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["8738efc",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["87adc2c",{"_index":5043,"title":{},"body":{"changelog.html":{}}}],["892689d",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["8a371a0",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["8aabc76",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["8b184a4",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["8b6bfeb",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["8b9fdf5",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["8c297a1",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["8c47814",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["8c56320",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["8c75c5f",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["8c90a58",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["8c9c5c3",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["8cab1e2",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["8d072f1",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["8d3ed72",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["8d47dd4",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["8d5f783",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["8d61f2e",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["8da74bb",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["8df3910",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["8dfc611",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["8e2ff5a",{"_index":5062,"title":{},"body":{"changelog.html":{}}}],["8e36da3",{"_index":5064,"title":{},"body":{"changelog.html":{}}}],["8e7ecec",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["8ebff84",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["8ec046f",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["8ee0628",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["8f60273",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["9.0.0",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["9.0.1",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["9.0.10",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["9.0.11",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["9.0.2",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["9.0.3",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["9.0.4",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["9.0.5",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["9.0.6",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["9.0.7",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["9.0.8",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["9.0.9",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["9.1.0",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["9.1.1",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["9.1.2",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["9.1.3",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["9.2.2",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["9.2.3",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["9.2.4",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":2473,"title":{},"body":{"injectables/ThemeService.html":{}}}],["901f502",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["908f395",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["90df676",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["90e9f96",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["91d4a54",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["9280e3a",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["92d89c3",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["930dc28",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["934d323",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["939f6b8",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["93f4474",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["9458a12",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["949055a",{"_index":5020,"title":{},"body":{"changelog.html":{}}}],["94b7001",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":2475,"title":{},"body":{"injectables/ThemeService.html":{}}}],["953bf76",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["95902bb",{"_index":5091,"title":{},"body":{"changelog.html":{}}}],["96/9/ec",{"_index":5379,"title":{},"body":{"license.html":{}}}],["9644dde",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["965f5d8",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["96bcdfc",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["96dbdf6",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["972b1ee",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["9767a1a",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["9767ad0",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["97ccbb6",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["97d68d0",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["98",{"_index":2477,"title":{},"body":{"injectables/ThemeService.html":{}}}],["986dd30",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["98a793b",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":2479,"title":{},"body":{"injectables/ThemeService.html":{}}}],["99126c0",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["9934470",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["998ad7c",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["9b0ad09",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["9b11a20",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["9bb71cc",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["9c56a21",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["9ce5e31",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["9d2ef7e",{"_index":5078,"title":{},"body":{"changelog.html":{}}}],["9d81efd",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["9dfd762",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["9e95c2d",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["9ea103a",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["9eb089c",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["9fa1a37",{"_index":5022,"title":{},"body":{"changelog.html":{}}}],["9fb4192",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["9fb859e",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["_audiocontext",{"_index":526,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audioelement",{"_index":524,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audiosourcenode",{"_index":528,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_connectedanalyzers",{"_index":535,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_eqgainnode",{"_index":532,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_frequencyfilters",{"_index":533,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_gainnode",{"_index":530,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_hasended",{"_index":539,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_internalanalyzer",{"_index":2697,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":1227,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a.album",{"_index":209,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.artist",{"_index":206,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.title",{"_index":228,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.track",{"_index":213,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.year.localecompare(b.year",{"_index":195,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a00ccd1",{"_index":4999,"title":{},"body":{"changelog.html":{}}}],["a04aa39",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["a0517fe",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["a0aa269",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["a0c15a4",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["a0e7ce7",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["a10893b",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["a11eb42",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["a12f9c3",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["a19a09f",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["a1a074f",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["a1da736",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["a280f97",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["a2a4811",{"_index":5053,"title":{},"body":{"changelog.html":{}}}],["a2b1db1",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["a358906",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["a3ae7df",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["a409033",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["a40c9e8",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["a457b9c",{"_index":5083,"title":{},"body":{"changelog.html":{}}}],["a4b6dab",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["a4de6d4",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["a552ea9",{"_index":4262,"title":{},"body":{"changelog.html":{}}}],["a555517",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["a5849e4",{"_index":5109,"title":{},"body":{"changelog.html":{}}}],["a6386d2",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["a7cf166",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["a7f82ab",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["a8073a9",{"_index":5040,"title":{},"body":{"changelog.html":{}}}],["a84cb97",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["a867afe",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["a8bb04b",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["a90639a",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["a948ad5",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["a9a8e68",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["a9a9c0b",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ab311db",{"_index":5143,"title":{},"body":{"changelog.html":{}}}],["ab5a0f8",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["ab89f63",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["ab98677",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["abandoned",{"_index":5477,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":5409,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2264,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["abc0b07",{"_index":5044,"title":{},"body":{"changelog.html":{}}}],["abccf03",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":5607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":5489,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2241,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["abstacted",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":1080,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":1183,"title":{},"body":{"injectables/GamepadService.html":{}}}],["ac02523",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["ac62dde",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["accent",{"_index":1063,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":2426,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":2399,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accepts",{"_index":897,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":1044,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["accessors",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":5450,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":5492,"title":{},"body":{"license.html":{}}}],["achse",{"_index":1147,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":5508,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"license.html":{}}}],["action(details",{"_index":1564,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":3005,"title":{},"body":{"changelog.html":{}}}],["actions/cache",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["actions/checkout",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["actions/setup",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["actions/upload",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["activated",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["activatewakelock",{"_index":2808,"title":{},"body":{"injectables/WakelockService.html":{}}}],["active",{"_index":1903,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeaxescaches",{"_index":1114,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["ad57b9c",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["ad6497d",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["ad7e0f1",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["ada5e83",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["ada6807",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["adapt",{"_index":5349,"title":{},"body":{"license.html":{}}}],["add",{"_index":597,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["addalbumtoplaylist",{"_index":1453,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addalbumtoplaylist(album",{"_index":263,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addartisttoplaylist",{"_index":1454,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addartisttoplaylist(artist",{"_index":258,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["added",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["addeventlistener('gamepadconnected",{"_index":1119,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":1122,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestolibrary",{"_index":1579,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["addfilestolibrary(...filedatas",{"_index":1624,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(filedatas",{"_index":1583,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestoplaylist",{"_index":1800,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...filedatas",{"_index":1959,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(filedatas",{"_index":1815,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":5451,"title":{},"body":{"license.html":{}}}],["additional",{"_index":5327,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["adds",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["addtrackstoplaylist",{"_index":1455,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addtrackstoplaylist(...dbtracks",{"_index":274,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addtracktoplaylist",{"_index":1456,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["addtracktoplaylist(song",{"_index":1817,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addtracktoplaylist(track",{"_index":272,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["adjust",{"_index":2879,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["advertising",{"_index":5423,"title":{},"body":{"license.html":{}}}],["ae202ad",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["ae93b7a",{"_index":5107,"title":{},"body":{"changelog.html":{}}}],["aefd739",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["af0ef42",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["af2926f",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["af8a6b4",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["af96dfb",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["aff4dea",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["affected",{"_index":5452,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":5332,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":5411,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":5467,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":1925,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":1923,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":958,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["again",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":5367,"title":{},"body":{"license.html":{}}}],["agents",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["aiff",{"_index":937,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":77,"title":{"interfaces/Album.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["album.coverurl",{"_index":1488,"title":{},"body":{"components/LibraryComponent.html":{}}}],["album.name",{"_index":265,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["album.year",{"_index":1489,"title":{},"body":{"components/LibraryComponent.html":{}}}],["albumcompare",{"_index":208,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap",{"_index":185,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.has(albumname",{"_index":189,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.set(albumname",{"_index":190,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.values()].sort((a",{"_index":193,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumname",{"_index":187,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albums",{"_index":184,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["albumtracks",{"_index":269,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["aliases",{"_index":5535,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1068,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allex/crc32",{"_index":1607,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["allowed_extensions",{"_index":945,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":866,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":893,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1443,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":2277,"title":{},"body":{"components/ShellComponent.html":{}}}],["allowedcommonjsdeps",{"_index":5030,"title":{},"body":{"changelog.html":{}}}],["allowedtypes",{"_index":964,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":314,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["alpha.40",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["amended",{"_index":5389,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["analyserconfig",{"_index":287,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":322,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analysers",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["analyservalue",{"_index":2741,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyze",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["analyzer",{"_index":2792,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["and/or",{"_index":5287,"title":{},"body":{"license.html":{}}}],["android",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["angular",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["angular.json",{"_index":5028,"title":{},"body":{"changelog.html":{}}}],["angular/animations",{"_index":5151,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4471,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2303,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":117,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":1208,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":748,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["angular/compiler",{"_index":5153,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":89,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":1868,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":128,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4476,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":113,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1758,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2495,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2635,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":1211,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":2153,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":111,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":134,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["angular/material/list",{"_index":100,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":107,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/material/progress",{"_index":2151,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2636,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2305,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1755,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":927,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":1788,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":1787,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2517,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angularmaterial",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["angulartitleservice",{"_index":2505,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2699,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["any).getasfilesystemhandle().then((handle",{"_index":1025,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["api",{"_index":900,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["api_key",{"_index":1417,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":773,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["apis",{"_index":5220,"title":{},"body":{"index.html":{}}}],["app",{"_index":625,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{}}}],["app.component.html",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":333,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":5545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["append",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["applicable",{"_index":5396,"title":{},"body":{"license.html":{}}}],["application",{"_index":2372,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["applicationconfig",{"_index":5582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":5462,"title":{},"body":{"license.html":{}}}],["apply",{"_index":5336,"title":{},"body":{"license.html":{}}}],["apps",{"_index":5228,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":5546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":5567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":5576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":5559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../default",{"_index":5556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":5554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":5555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":5178,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":5183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":5166,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":5190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../lastfm",{"_index":5538,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":5196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":5173,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":5175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":5176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":5186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":5564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":5188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":5537,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../settings.po.ts",{"_index":5562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":5558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":5536,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":5168,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":5200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":5633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":674,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":676,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":5626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":5622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:14",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":5581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":5640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:136",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:143",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:151",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:158",{"_index":472,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:164",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:172",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:178",{"_index":481,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:186",{"_index":477,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:191",{"_index":465,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:199",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:203",{"_index":475,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:211",{"_index":480,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:219",{"_index":470,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":500,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":504,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":503,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":505,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":501,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":485,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":486,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":510,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:34",{"_index":483,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":507,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:37",{"_index":498,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:43",{"_index":512,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:45",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:8",{"_index":931,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":667,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":653,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:10",{"_index":660,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":913,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14",{"_index":923,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16",{"_index":924,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18",{"_index":921,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":860,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":78,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:111",{"_index":1482,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:162",{"_index":1470,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:168",{"_index":1469,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:173",{"_index":1471,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:179",{"_index":1468,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:187",{"_index":1465,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:196",{"_index":1464,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:213",{"_index":1467,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:222",{"_index":1466,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:239",{"_index":1473,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:243",{"_index":1472,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:247",{"_index":1474,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:52",{"_index":1476,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:53",{"_index":1477,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:55",{"_index":1478,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:59",{"_index":1475,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:72",{"_index":1480,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:73",{"_index":1479,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:74",{"_index":1481,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:76",{"_index":1484,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:84",{"_index":1483,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":741,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player",{"_index":2004,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":1777,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:25",{"_index":1784,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:26",{"_index":1783,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":1794,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:137",{"_index":1820,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:142",{"_index":1818,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:148",{"_index":1829,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:162",{"_index":1816,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:168",{"_index":1840,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:174",{"_index":1838,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:178",{"_index":1824,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:190",{"_index":1822,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:206",{"_index":1841,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:215",{"_index":1821,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:236",{"_index":1827,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:25",{"_index":1849,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:254",{"_index":1826,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:263",{"_index":1835,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:27",{"_index":1859,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:281",{"_index":1836,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:29",{"_index":1848,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:298",{"_index":1831,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:302",{"_index":1834,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":1858,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:316",{"_index":1842,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:32",{"_index":1861,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:335",{"_index":1843,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:34",{"_index":1847,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:41",{"_index":1856,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:45",{"_index":1854,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:51",{"_index":1814,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":724,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":2121,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:142",{"_index":2134,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:148",{"_index":2136,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:154",{"_index":2141,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:159",{"_index":2142,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:163",{"_index":2139,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:40",{"_index":2146,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:41",{"_index":2143,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:44",{"_index":2145,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:46",{"_index":2148,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:48",{"_index":2132,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2497,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:10",{"_index":2498,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2551,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2583,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2577,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2581,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2579,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2587,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2585,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26",{"_index":2612,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2596,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2625,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31",{"_index":2632,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2619,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2630,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2622,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2594,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2599,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2614,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2608,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2616,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2606,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2618,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2573,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2627,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2611,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2604,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2624,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2591,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2589,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2575,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2674,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105",{"_index":2682,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126",{"_index":2684,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2688,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2685,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188",{"_index":2680,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2689,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2686,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23",{"_index":2679,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33",{"_index":2678,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93",{"_index":2691,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2796,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2801,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2799,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":288,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":5205,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":5215,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":1086,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":1105,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":1098,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":1102,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":1095,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15",{"_index":1106,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":1093,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1280,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":5216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":1203,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100",{"_index":1318,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104",{"_index":1319,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26",{"_index":1322,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30",{"_index":1325,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32",{"_index":1324,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34",{"_index":1323,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36",{"_index":1321,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38",{"_index":1315,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48",{"_index":1317,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85",{"_index":1320,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96",{"_index":1316,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1497,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1503,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1514,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1518,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1517,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1519,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1526,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2500,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2504,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2503,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":5217,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2806,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:11",{"_index":2811,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:28",{"_index":2812,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:7",{"_index":2810,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1733,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2265,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2394,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2489,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2270,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:42",{"_index":2300,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:43",{"_index":2295,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:44",{"_index":2297,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:45",{"_index":2296,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:47",{"_index":2291,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:56",{"_index":2294,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:58",{"_index":2299,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:60",{"_index":2285,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:65",{"_index":2290,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:69",{"_index":2288,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":5621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":2398,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:20",{"_index":2416,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:22",{"_index":2417,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:23",{"_index":2411,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:25",{"_index":2405,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:31",{"_index":2410,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:37",{"_index":2407,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":720,"title":{},"body":{"interfaces/Color.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2509,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2512,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:45",{"_index":2514,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:52",{"_index":2513,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":5619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":5620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["april",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["arguments_",{"_index":659,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["arising",{"_index":5378,"title":{},"body":{"license.html":{}}}],["array.from(droppedfiles",{"_index":1050,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["array.from(event.datatransfer.items",{"_index":1024,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["arrays",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["art",{"_index":1662,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["artifact",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["artist",{"_index":173,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist/album",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["artist:${luceneescapequery.escape(artist",{"_index":788,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["artistcompare",{"_index":205,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artists",{"_index":203,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["artwork",{"_index":1934,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2510,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":5469,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1621,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":5412,"title":{},"body":{"license.html":{}}}],["associating",{"_index":5331,"title":{},"body":{"license.html":{}}}],["async",{"_index":230,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["asyncgenerator",{"_index":1586,"title":{},"body":{"injectables/MetadataService.html":{}}}],["atrack",{"_index":212,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["attorney",{"_index":5254,"title":{},"body":{"license.html":{}}}],["audio",{"_index":522,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["audio.service",{"_index":925,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":941,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":934,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":943,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":935,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":938,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":944,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":940,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":939,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":942,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/x",{"_index":936,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":527,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audiocontext.creategain",{"_index":566,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":564,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement",{"_index":542,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audioelement.autoplay",{"_index":548,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.controls",{"_index":549,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.id",{"_index":544,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.loop",{"_index":543,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.preload",{"_index":552,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.style.display",{"_index":546,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.volume",{"_index":550,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioservice",{"_index":418,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["audioservice.isplaying",{"_index":2112,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":563,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiosource.connect(eqgain",{"_index":572,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audit",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["auf",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":5518,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":5356,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":5286,"title":{},"body":{"license.html":{}}}],["auto",{"_index":553,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["autofix",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["autofixes",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["autoincrement",{"_index":5617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":5274,"title":{},"body":{"license.html":{}}}],["autoscroll",{"_index":2174,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":199,"title":{},"body":{"interfaces/Album.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2778,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2769,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2779,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avatar",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1353,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["await",{"_index":234,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":2212,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["axis.valueof",{"_index":1190,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":1195,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":1194,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":1087,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":1193,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":1196,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":1096,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":194,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["b.track",{"_index":218,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["b04ce8b",{"_index":5086,"title":{},"body":{"changelog.html":{}}}],["b0d0fe4",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["b20fd36",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["b241b46",{"_index":5041,"title":{},"body":{"changelog.html":{}}}],["b286be9",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["b2b5088",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["b2dcbb8",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["b2ed530",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["b3905a0",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["b416bff",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["b4d909a",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["b599685",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["b5dfb18",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["b5f68a1",{"_index":5007,"title":{},"body":{"changelog.html":{}}}],["b63676f",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["b65204b",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["b6729e6",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["b6a809a",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["b6bd950",{"_index":5035,"title":{},"body":{"changelog.html":{}}}],["b708169",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["b7303ed",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["b73ce66",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["b7bb801",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["b7be438",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["b7e8f76",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["b80e2ea",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["b820bf4",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["b8a2ac7",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["b8ad144",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["b925747",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["b9445d4",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["b99bf0c",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ba13cfe",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["ba2a28a",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["ba634aa",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["babdb9f",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":226,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["background",{"_index":1074,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["backgroundcolor",{"_index":829,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["badges",{"_index":4088,"title":{},"body":{"changelog.html":{}}}],["band",{"_index":517,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"index.html":{}}}],["band.pipe",{"_index":926,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bandfrequency",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":648,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandgains[bandfrequency",{"_index":650,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandpipe",{"_index":652,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{}}}],["bands",{"_index":918,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bar",{"_index":2314,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["barcount",{"_index":305,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["bark",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["barkscalebandenergy",{"_index":5547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":328,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2556,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":327,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":5548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":707,"title":{},"body":{"interfaces/Chainable.html":{}}}],["based",{"_index":5395,"title":{},"body":{"license.html":{}}}],["basegain",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["basesubscribingclass",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["basevisualizeroptions",{"_index":324,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":5258,"title":{},"body":{"license.html":{}}}],["bb34f11",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["bb4a1a8",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["bb4ded8",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["bb4e0ce",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["bb8466d",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["bba9cb0",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["bbda480",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["bc4e4dc",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["bcbcbc",{"_index":2694,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["bd0ddc3",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["bd67275",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["bda90a4",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["be025cd",{"_index":5046,"title":{},"body":{"changelog.html":{}}}],["be57fa9",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["be7f8fc",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["be90110",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["bef3e3e",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":2204,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["below",{"_index":5279,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":5425,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":1890,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":1165,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["better",{"_index":2763,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["bf7b3a9",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["bfccd74",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["bfd28ec",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["bfd4685",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["bffc736",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["bigger",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["biquadfilternode",{"_index":534,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bitrate",{"_index":669,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"changelog.html":{}}}],["bitrate.pipe",{"_index":839,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":666,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1703,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1658,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1681,"title":{},"body":{"injectables/MetadataService.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2368,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["bootstrap",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["border",{"_index":1060,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["both",{"_index":220,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["bottom",{"_index":2159,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":1058,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["branch",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":1987,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2301,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2302,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2320,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2319,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2318,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2321,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["browserlist",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["btrack",{"_index":217,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["buffer",{"_index":2760,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["buffer.buffer",{"_index":2785,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":326,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2765,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2762,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2759,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bugs",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3340,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["buildapiurl(method",{"_index":1411,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["builds",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["bundles",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1163,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["button.pressed",{"_index":1176,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":1178,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":1088,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":1181,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":1186,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":1099,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2259,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2338,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":5497,"title":{},"body":{"license.html":{}}}],["c.islight",{"_index":2488,"title":{},"body":{"injectables/ThemeService.html":{}}}],["c042ae8",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["c08196a",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["c0c9413",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["c0d5ae4",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["c20efb2",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["c2c0b8f",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["c3062ed",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["c31aaa6",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["c3208e7",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["c339811",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["c35bc38",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["c363f4e",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["c398655",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["c3bb2d1",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["c3d7490",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["c4668f1",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["c51af5f",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["c550911",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["c64cd79",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["c6dff5e",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["c73a2ce",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["c78b2bf",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["c82e02b",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["c86decf",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["c9dcf09",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["ca80a43",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["ca87d69",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["cace929",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":1180,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":1188,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":1182,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":1187,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cacheable",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["caching",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["calculate",{"_index":2201,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["calculating",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":621,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":1204,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["called",{"_index":1523,"title":{},"body":{"injectables/LoaderService.html":{}}}],["cancel",{"_index":2254,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2788,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":5434,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":316,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["canvasgradient",{"_index":5579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":5549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvaswidth",{"_index":5550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2672,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":308,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":306,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":5551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":5624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":1985,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":5593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1380,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":240,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":5413,"title":{},"body":{"license.html":{}}}],["cb01a92",{"_index":5050,"title":{},"body":{"changelog.html":{}}}],["cb19d50",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["cb797bc",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["cbab637",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["cbc6e41",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["cbef1c8",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["cc0",{"_index":5247,"title":{},"body":{"license.html":{}}}],["ccbf388",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["cd2a934",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["cd5831f",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["cd620b6",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["cdb5380",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["cdf04e9",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":114,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":115,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":116,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["ce588f9",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["ce621ee",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["cea2824",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["cefa1f1",{"_index":5146,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":1070,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":5289,"title":{},"body":{"license.html":{}}}],["cf00688",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["cf13446",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["chainable",{"_index":673,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2178,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["changed",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["changedarkmode",{"_index":2491,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2492,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changelog",{"_index":2825,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":2173,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["changing",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["check",{"_index":896,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":1173,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":1112,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":710,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlaylistComponent.html":{}}}],["child(${link",{"_index":5636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chore",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["chore(config",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["chore(deps",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["chromaprint",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":5224,"title":{},"body":{"index.html":{}}}],["ci",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["circular",{"_index":329,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":5302,"title":{},"body":{"license.html":{}}}],["class",{"_index":140,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"overview.html":{}}}],["class.closed",{"_index":2348,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2349,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":1078,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":623,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["clear",{"_index":1772,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":5499,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":1201,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":1153,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearmetadatacache",{"_index":1739,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2395,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1364,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["cli",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":2890,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["close",{"_index":1293,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2339,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2548,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2340,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closing",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["clr",{"_index":2438,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.hex",{"_index":2442,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.name",{"_index":2441,"title":{},"body":{"injectables/ThemeService.html":{}}}],["code",{"_index":2373,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":719,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"index.html":{}}}],["color.getbrightness",{"_index":2487,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.tohexstring(false",{"_index":2486,"title":{},"body":{"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":723,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2749,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2747,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2748,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorful",{"_index":5515,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":2408,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["colors.ts",{"_index":5557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":2377,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["command",{"_index":698,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":685,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":5314,"title":{},"body":{"license.html":{}}}],["committen",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":2008,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["commons",{"_index":5245,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":5351,"title":{},"body":{"license.html":{}}}],["compare",{"_index":202,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["comparison",{"_index":227,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["compatibility",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["compensation",{"_index":5329,"title":{},"body":{"license.html":{}}}],["competition",{"_index":5369,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2180,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["compodoc",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":84,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["component_template",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":334,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2518,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2252,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":954,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/ShellComponent.html":{}}}],["components/slide",{"_index":2331,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":689,"title":{},"body":{"interfaces/Chainable.html":{}}}],["compressed",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["computecolors(hex",{"_index":2453,"title":{},"body":{"injectables/ThemeService.html":{}}}],["computed",{"_index":85,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":5483,"title":{},"body":{"license.html":{}}}],["confer",{"_index":5275,"title":{},"body":{"license.html":{}}}],["config",{"_index":2546,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["config).afterclosed",{"_index":2550,"title":{},"body":{"injectables/UpdateService.html":{}}}],["configuration",{"_index":2986,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":571,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["connected",{"_index":1131,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":1124,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connections",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["consents",{"_index":5503,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":5328,"title":{},"body":{"license.html":{}}}],["consistency",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["console",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["console.error('error",{"_index":242,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["console.error('file",{"_index":281,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('worker",{"_index":1377,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":591,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["console.log('button",{"_index":1142,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":1898,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":1148,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":884,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":1146,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":1159,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":1155,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2529,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2525,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2536,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":1150,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":1129,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2709,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":1132,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1637,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('hash",{"_index":1642,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('id3tags",{"_index":1664,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('vibrant",{"_index":1677,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('webcover",{"_index":1669,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1639,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('hash",{"_index":1644,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('id3tags",{"_index":1666,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('vibrant",{"_index":1679,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('webcover",{"_index":1672,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":1162,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":1170,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":784,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('file",{"_index":1042,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["console.warn('loaderservice",{"_index":1522,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('missing",{"_index":1673,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('no",{"_index":810,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":2820,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":1237,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1559,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":153,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["constructor",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["contemplated",{"_index":5440,"title":{},"body":{"license.html":{}}}],["content",{"_index":1072,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["contents",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":559,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contrary",{"_index":5471,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":5402,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":5315,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":5295,"title":{},"body":{"license.html":{}}}],["control",{"_index":2384,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["controls",{"_index":5231,"title":{},"body":{"index.html":{}}}],["converter",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["converttobarkscale",{"_index":5167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":5422,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1011,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":5277,"title":{},"body":{"license.html":{}}}],["core",{"_index":521,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["corporation",{"_index":5250,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2728,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["corresponding",{"_index":5394,"title":{},"body":{"license.html":{}}}],["council",{"_index":5382,"title":{},"body":{"license.html":{}}}],["count",{"_index":764,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["cover",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cover_api_url",{"_index":775,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverart",{"_index":1770,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["coverartimage",{"_index":740,"title":{"interfaces/CoverArtImage.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverartresponse",{"_index":768,"title":{"interfaces/CoverArtResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":830,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":811,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":728,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":737,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":1845,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":1846,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":800,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":802,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdisplay",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["coverdisplaycomponent",{"_index":379,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":801,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":806,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["covers",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["coverurl",{"_index":79,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1667,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.original",{"_index":1676,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc",{"_index":733,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["crc32",{"_index":1606,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc32(hashstring",{"_index":1715,"title":{},"body":{"injectables/MetadataService.html":{}}}],["create",{"_index":541,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":1145,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":1141,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture",{"_index":1580,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1587,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile",{"_index":1581,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(filedata",{"_index":1590,"title":{},"body":{"injectables/MetadataService.html":{}}}],["creative",{"_index":5244,"title":{},"body":{"license.html":{}}}],["creator",{"_index":5281,"title":{},"body":{"license.html":{}}}],["crossing",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["css",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["cultural",{"_index":5296,"title":{},"body":{"license.html":{}}}],["culture",{"_index":5319,"title":{},"body":{"license.html":{}}}],["current",{"_index":2182,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"license.html":{}}}],["currentalbum",{"_index":268,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentalbum.name",{"_index":270,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentanalyser",{"_index":2724,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2718,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2722,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":872,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":2205,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":1950,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":1795,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2716,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2720,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":1796,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentposition",{"_index":1969,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":842,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack.metadata?.crc",{"_index":2195,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":845,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":847,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":846,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":854,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":853,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":852,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":850,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":855,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":844,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":848,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["custom",{"_index":684,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":703,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":5628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":5638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":5631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":5632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":5629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":5639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":5623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":5627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":5635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":700,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":555,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":715,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":711,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":699,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":716,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":5506,"title":{},"body":{"license.html":{}}}],["d0b8d34",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["d0cd94f",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["d1b4f51",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["d200e57",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["d254989",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["d2765b8",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["d29b113",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["d2e1df8",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["d2f46f8",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["d3",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["d38c534",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["d3bca3a",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["d489b64",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["d4abfdc",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["d505863",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["d50fcd7",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["d516e97",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["d562368",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["d597302",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["d5cd7ea",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["d612735",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["d6210df",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["d629a20",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["d641392",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["d64a3c3",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["d690072",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["d78443f",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["d7b3ea2",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["d895f0f",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["d8a2bf9",{"_index":3139,"title":{},"body":{"changelog.html":{}}}],["d8bf0e7",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["d933c1e",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["d954540",{"_index":5090,"title":{},"body":{"changelog.html":{}}}],["d9677d0",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["da978b1",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":5266,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2451,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{}}}],["dark)').matches",{"_index":2415,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":721,"title":{},"body":{"interfaces/Color.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":2400,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":817,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":816,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2543,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":1062,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":245,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["data.album.image",{"_index":1422,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2263,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2262,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":793,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["database",{"_index":5288,"title":{},"body":{"license.html":{}}}],["databaseconfig",{"_index":5552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":5385,"title":{},"body":{"license.html":{}}}],["date",{"_index":761,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"license.html":{}}}],["dateien",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["dates",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["db",{"_index":93,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["db2122c",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["db48fe2",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["dbb788d",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["dbc354f",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["dbconfig",{"_index":5612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbtrack",{"_index":275,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle",{"_index":279,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle?.getfile",{"_index":277,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtracks",{"_index":276,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dc41223",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["dc45fe1",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["dc55360",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["dd93cb1",{"_index":5125,"title":{},"body":{"changelog.html":{}}}],["ddab2f3",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["de5bda9",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["december",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["declare",{"_index":695,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorator",{"_index":5037,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":2365,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":2016,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["decreasevolume(value",{"_index":2024,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["deemed",{"_index":5460,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":1110,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":1108,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":1222,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["defects",{"_index":5491,"title":{},"body":{"license.html":{}}}],["defined",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1312,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":2184,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dep",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":2715,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["depicted",{"_index":5364,"title":{},"body":{"license.html":{}}}],["deploy",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":3181,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":1089,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":1094,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":1090,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":1097,"title":{},"body":{"injectables/GamepadService.html":{}}}],["description",{"_index":1205,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"changelog.html":{},"properties.html":{}}}],["deselect",{"_index":1953,"title":{},"body":{"injectables/PlayerService.html":{}}}],["desktop",{"_index":5235,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":1872,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1388,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":1862,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["details",{"_index":1536,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":1981,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":1980,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":2179,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["determine",{"_index":2203,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":5427,"title":{},"body":{"license.html":{}}}],["dev",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["devcontainer.json",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["dfa400c",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":1220,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":1215,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1288,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1287,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1281,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2256,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":2257,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1297,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1296,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1299,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2255,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1295,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2253,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":1226,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1270,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1277,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":5655,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["didn't",{"_index":911,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["diesen",{"_index":1231,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dir",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":375,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":899,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":2117,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["dirhandle",{"_index":2843,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dirhandle.values",{"_index":890,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry",{"_index":859,"title":{"interfaces/DirHandleEntry.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry).topromise",{"_index":883,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":1999,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["disableclose",{"_index":2547,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabled",{"_index":4241,"title":{},"body":{"changelog.html":{}}}],["disabletooltipinteractivity",{"_index":5608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":5472,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":5264,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2790,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["disconnectallanalyzers",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["disconnectanalysernode",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["disconnected",{"_index":1151,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":1149,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":5495,"title":{},"body":{"license.html":{}}}],["display",{"_index":825,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":1789,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":827,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":828,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":824,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":838,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":837,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":835,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":668,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:8",{"_index":670,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":823,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayed",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["displayfunction",{"_index":919,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":920,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":1252,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":5437,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":5375,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2202,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":5338,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":5253,"title":{},"body":{"license.html":{}}}],["document",{"_index":1207,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":557,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["document.body.append(this.fileinput",{"_index":1445,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1437,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style.setproperty",{"_index":2439,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2534,"title":{},"body":{"injectables/UpdateService.html":{}}}],["document.queryselector('.cdk",{"_index":2237,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["documented",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":319,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["dotenv",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["double",{"_index":895,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["doubleclick",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["download",{"_index":1769,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2729,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drag",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["dragend",{"_index":1003,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":990,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":995,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":987,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":970,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":1000,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":989,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":998,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":988,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":2770,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":5169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":5170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":5171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawosc",{"_index":5172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":385,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":969,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":991,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dropped",{"_index":2901,"title":{},"body":{"changelog.html":{}}}],["dual",{"_index":714,"title":{},"body":{"interfaces/Chainable.html":{}}}],["dummy",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["duplicates",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["duration",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":1797,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2544,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":5510,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":2848,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["e",{"_index":1246,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2387,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":1248,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":1249,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e102482",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["e11e3bd",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["e218808",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["e252172",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["e2a0794",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["e2e1eb4",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["e336db1",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["e34b732",{"_index":5097,"title":{},"body":{"changelog.html":{}}}],["e36192c",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["e38cec9",{"_index":2853,"title":{},"body":{"changelog.html":{}}}],["e42b61f",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["e486f52",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["e4b565b",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["e4d8e7c",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["e4ec6c1",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["e5de213",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["e615145",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["e6660e2",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["e6d7fd2",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["e6fc6eb",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["e7032e1",{"_index":5098,"title":{},"body":{"changelog.html":{}}}],["e727ac0",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["e7aa58d",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["e7c9ada",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["e844d5d",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["e933c61",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["e96ef56",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["e992cb4",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["e99d4f2",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["ea0dd16",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["ea1fc76",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["ea63800",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["ea688e0",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["ea932ef",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["eaa27a6",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["eab1d35",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["eac8dd6",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":1631,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{},"license.html":{}}}],["eaeb47a",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["eaf46cf",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["eaf70a8",{"_index":5079,"title":{},"body":{"changelog.html":{}}}],["early",{"_index":1037,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["eb5338b",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["ebab8da",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["ec067ee",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["ec1f94a",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["eccaa4a",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["ecf45e6",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["ed57248",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["ee83304",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["ee8b31b",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["ef11066",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["ef22e4a",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["ef650c5",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["efc9aad",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["eff95d0",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1546,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":5461,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":5323,"title":{},"body":{"license.html":{}}}],["eine",{"_index":1166,"title":{},"body":{"injectables/GamepadService.html":{}}}],["electron",{"_index":5070,"title":{},"body":{"changelog.html":{}}}],["elects",{"_index":5335,"title":{},"body":{"license.html":{}}}],["element",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":981,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":523,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["elementscrolled",{"_index":2162,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2702,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2705,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embedded",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["embeddedpicture",{"_index":736,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["emit",{"_index":1030,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["empty",{"_index":1308,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":2156,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":2175,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1410,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1409,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":706,"title":{},"body":{"interfaces/Chainable.html":{}}}],["endings",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["enhance",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["enjoyment",{"_index":5439,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2775,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":1902,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":756,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(coverimage.image",{"_index":809,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails.large",{"_index":808,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails['500",{"_index":805,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(images[1]['#text",{"_index":1424,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(images[5]['#text",{"_index":1425,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(url",{"_index":5211,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entfernt",{"_index":4179,"title":{},"body":{"changelog.html":{}}}],["entries",{"_index":1486,"title":{},"body":{"components/LibraryComponent.html":{}}}],["entries[0].contentrect",{"_index":2739,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":875,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["entry.getfile",{"_index":892,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":891,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":5165,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":5553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":5588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":576,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["eqgain",{"_index":567,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.connect(eqinput",{"_index":573,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.gain.value",{"_index":582,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqinput",{"_index":568,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput",{"_index":569,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput.connect(gain",{"_index":574,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equalizer",{"_index":914,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"index.html":{}}}],["equalizer'},{'name",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizer.component.html",{"_index":916,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":917,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":382,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":424,"title":{"interfaces/EqualizerGainValues.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equitable",{"_index":5436,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":5393,"title":{},"body":{"license.html":{}}}],["error",{"_index":241,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/WakelockService.html":{}}}],["error('metadata",{"_index":1350,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1387,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1373,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1382,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error.message",{"_index":2821,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errorevent",{"_index":1376,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":5494,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1699,"title":{},"body":{"injectables/MetadataService.html":{}}}],["erweitert",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["es",{"_index":1309,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"changelog.html":{}}}],["esbuild",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["escape",{"_index":751,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["eslint",{"_index":1998,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"additional-documentation/helpers.html":{}}}],["eslint/utils",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["eslintrc",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":5106,"title":{},"body":{"changelog.html":{}}}],["establish",{"_index":2714,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["etag",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["european",{"_index":5380,"title":{},"body":{"license.html":{}}}],["event",{"_index":598,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["event.checked",{"_index":1761,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["event.clientx}px",{"_index":2243,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.clienty}px",{"_index":2245,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.currentversion.hash",{"_index":2530,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1370,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2766,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2767,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":1010,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer.items[0",{"_index":1020,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":1009,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.items",{"_index":1018,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2538,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":1130,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2531,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":1007,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.stoppropagation",{"_index":1008,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2523,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2527,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventcoalescing",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["eventmanager",{"_index":1212,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":624,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":690,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusions",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["exclusive",{"_index":5276,"title":{},"body":{"license.html":{}}}],["execute",{"_index":5654,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["executor",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["exercise",{"_index":5459,"title":{},"body":{"license.html":{}}}],["existing",{"_index":687,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{},"license.html":{}}}],["exists",{"_index":2793,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["exit",{"_index":626,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{}}}],["expect",{"_index":1894,"title":{},"body":{"injectables/PlayerService.html":{}}}],["expectation",{"_index":5326,"title":{},"body":{"license.html":{}}}],["expected",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":5521,"title":{},"body":{"todo.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":5441,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2386,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":5099,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["extent",{"_index":5333,"title":{},"body":{"license.html":{}}}],["extract",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["extractcolorswithnodevibrant",{"_index":5174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurls.original",{"_index":1678,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(objecturl",{"_index":1683,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1719,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1421,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extraction",{"_index":1359,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":5227,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1330,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1332,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["f038069",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["f0442a7",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["f06b116",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["f076ced",{"_index":5026,"title":{},"body":{"changelog.html":{}}}],["f0ae911",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["f0f7618",{"_index":5094,"title":{},"body":{"changelog.html":{}}}],["f12cad8",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["f154aed",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["f1580e8",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["f18fa1f",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["f1b02b7",{"_index":5118,"title":{},"body":{"changelog.html":{}}}],["f1cad4d",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["f1f709b",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["f201082",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["f209ddb",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["f24dcc7",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["f278040",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["f2cfbcc",{"_index":5016,"title":{},"body":{"changelog.html":{}}}],["f306ca1",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["f31886e",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["f3351c2",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["f34b7cf",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["f36895a",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["f37d715",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["f386a36",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["f3a09c7",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["f3a3520",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["f3f4ae7",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["f3f93f6",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["f401a49",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["f4324a4",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["f4928f5",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["f4f50ef",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["f52095f",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["f54702d",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["f591692",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["f5c6154",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["f5ee0e6",{"_index":5001,"title":{},"body":{"changelog.html":{}}}],["f69d368",{"_index":4994,"title":{},"body":{"changelog.html":{}}}],["f78467f",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["f7913c1",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["f8b7451",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["f8cbc65",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["f908dd2",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["f954f07",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["f9c114e",{"_index":4986,"title":{},"body":{"changelog.html":{}}}],["f9c93ce",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["faec05d",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["failed",{"_index":1045,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fall",{"_index":225,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{}}}],["fallback",{"_index":1041,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"license.html":{}}}],["fallback_accent_color",{"_index":2421,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":2422,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2673,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["falling",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":468,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2211,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":464,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{}}}],["fb05c12",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["fc633d2",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["fc998b4",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["fd18536",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["fd45c70",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["fdad632",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["fe15d24",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["fe4ebfa",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["fear",{"_index":5300,"title":{},"body":{"license.html":{}}}],["feat",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5221,"title":{},"body":{"index.html":{}}}],["february",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["fee270f",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["fee5161",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["fefaba0",{"_index":5111,"title":{},"body":{"changelog.html":{}}}],["fetchalbuminfo(artist",{"_index":1407,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":797,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ff39494",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["ff778a5",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["ff7cdad",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["ffa9bb5",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["ffc8723",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["ffe5da9",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["ffnet",{"_index":1230,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2669,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2557,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":289,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2154,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.arraybuffer",{"_index":1718,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.lastmodified",{"_index":1714,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.name",{"_index":1711,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.size",{"_index":1713,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.type",{"_index":1712,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata",{"_index":867,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["filedata.file",{"_index":1640,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.file.name",{"_index":1685,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.filehandle",{"_index":1641,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.push",{"_index":901,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["filedata.push(...subfiles",{"_index":904,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedatas",{"_index":1585,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["filedatas.values",{"_index":1628,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedatas?.length",{"_index":1625,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":384,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":278,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filehandle.getfile",{"_index":1910,"title":{},"body":{"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filehandles",{"_index":1021,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.length",{"_index":1032,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.push(handle",{"_index":1027,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandlesdropped",{"_index":965,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileinput",{"_index":1434,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":1049,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":869,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice.currentfolderhandle",{"_index":2115,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["fileloaderservicefactory",{"_index":5177,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":734,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["filepath",{"_index":704,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":701,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["files.push(file",{"_index":1052,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesdroped",{"_index":966,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filestoprocess",{"_index":1623,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesystemdirectoryhandle",{"_index":865,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filesystemfilehandle",{"_index":731,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filesystemfilehandles",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["fill",{"_index":2780,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":266,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["filter((artist",{"_index":172,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filter.gain.value",{"_index":580,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["filtered",{"_index":168,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.filter((item",{"_index":178,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.sort((a",{"_index":201,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filteredbyserchterm",{"_index":152,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtering",{"_index":1955,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["finalize",{"_index":1506,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["findreleasegroupid(artist",{"_index":786,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":2768,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":1158,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebase",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["firebuttonaction(index",{"_index":1154,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":5252,"title":{},"body":{"license.html":{}}}],["first",{"_index":204,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["firstvaluefrom",{"_index":101,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2549,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":792,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getall('metatags",{"_index":235,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('dirhandle",{"_index":873,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('metatags",{"_index":1647,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":5487,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2862,"title":{},"body":{"changelog.html":{}}}],["fix(deps",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["fix(eslint",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":1057,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["flac",{"_index":947,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["flat",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":1056,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["float32array",{"_index":5206,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2385,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["fns",{"_index":5155,"title":{},"body":{"dependencies.html":{}}}],["focus",{"_index":1900,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["folder/files",{"_index":2114,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["folders",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":5347,"title":{},"body":{"license.html":{}}}],["font",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["forcefully",{"_index":2232,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["form",{"_index":5309,"title":{},"body":{"license.html":{}}}],["format",{"_index":735,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formating",{"_index":5085,"title":{},"body":{"changelog.html":{}}}],["formatlabel",{"_index":2017,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formatlabel(value",{"_index":2026,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formats",{"_index":5223,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":2048,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":2499,"title":{},"body":{"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatting",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":127,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["found",{"_index":282,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":5318,"title":{},"body":{"license.html":{}}}],["freely",{"_index":5308,"title":{},"body":{"license.html":{}}}],["frequency",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["frequency_bands",{"_index":516,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["frequencyband",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["frequencybarsconfig",{"_index":304,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":5560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":743,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["full",{"_index":5644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen/multiwindow",{"_index":5532,"title":{},"body":{"todo.html":{}}}],["fully",{"_index":5405,"title":{},"body":{"license.html":{}}}],["function",{"_index":888,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":2959,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["funkt",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["further",{"_index":5320,"title":{},"body":{"license.html":{}}}],["future",{"_index":5417,"title":{},"body":{"license.html":{}}}],["für",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["gain",{"_index":565,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":575,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gain.gain.value",{"_index":584,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainnode",{"_index":531,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainvalue",{"_index":474,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gamepad",{"_index":1127,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":1174,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":1107,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":2074,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":2084,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":2075,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":1120,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":1125,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":1128,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":1085,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":5182,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":307,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gax",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["gblaster",{"_index":5218,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1702,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":2832,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":5184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1705,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehash(filedata.file",{"_index":1643,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generatefilehashmd5(file",{"_index":1716,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator",{"_index":2960,"title":{},"body":{"changelog.html":{}}}],["generator.bitdroid.de/#section",{"_index":5240,"title":{},"body":{"index.html":{}}}],["generierte",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["getanalysernode",{"_index":2690,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getasfilesystemhandle",{"_index":1019,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["getaudiofilesfromdirhandle",{"_index":5185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":889,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":903,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(handle",{"_index":887,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2757,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2758,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":5561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcolorobject(value",{"_index":2481,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getcoverdisplay",{"_index":5563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1426,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":777,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1447,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gethasended",{"_index":511,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1298,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":678,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":702,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1582,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(filedata",{"_index":1592,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":5565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":5187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":1966,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":1993,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":5566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":5568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":2823,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettoolbartitle",{"_index":5569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":5570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":2108,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["getvolumeslider",{"_index":5571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gh",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2727,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":1892,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":1896,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":2413,"title":{},"body":{"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":1134,"title":{},"body":{"injectables/GamepadService.html":{}}}],["google",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["gp",{"_index":1136,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":1135,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":1137,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":5572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":912,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":877,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":909,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["greater",{"_index":5322,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5400,"title":{},"body":{"license.html":{}}}],["grid",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["group/${releasegroupid",{"_index":799,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["group?query=${query}&limit=5&fmt=json",{"_index":791,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":763,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":794,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":795,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["grpc/grpc",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["hack",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":864,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.kind",{"_index":1026,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handle.requestpermission",{"_index":910,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":1048,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1375,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlefilefallback(event",{"_index":1046,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handlemessage",{"_index":1368,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":1245,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["handles",{"_index":1017,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["handling",{"_index":1039,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["hanging",{"_index":1354,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1274,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["hashing",{"_index":1708,"title":{},"body":{"injectables/MetadataService.html":{}}}],["hashstring",{"_index":1710,"title":{},"body":{"injectables/MetadataService.html":{}}}],["height",{"_index":2218,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":5428,"title":{},"body":{"license.html":{}}}],["held",{"_index":5475,"title":{},"body":{"license.html":{}}}],["help",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["helpers",{"_index":5656,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":1225,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":693,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":5403,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":5263,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":5268,"title":{},"body":{"license.html":{}}}],["hex",{"_index":722,"title":{},"body":{"interfaces/Color.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":1015,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1440,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1515,"title":{},"body":{"injectables/LoaderService.html":{}}}],["hilfe",{"_index":1232,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["history",{"_index":5112,"title":{},"body":{"changelog.html":{}}}],["hk",{"_index":1263,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":1265,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hooks",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["hopefully",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":1054,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2369,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2383,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2366,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2367,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2379,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2382,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2380,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2381,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2347,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":983,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hosting",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["hotkey",{"_index":1202,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1301,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1304,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1307,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":1216,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1291,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeys.service",{"_index":1284,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1279,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":387,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":1217,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":5189,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["htmlaudioelement",{"_index":525,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["htmlcanvaselement",{"_index":2698,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlelement",{"_index":2239,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["htmlinputelement",{"_index":1435,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":771,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["http_interceptors",{"_index":5609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":747,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["httpevent",{"_index":1504,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1502,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1505,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1500,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":5239,"title":{},"body":{"index.html":{}}}],["https://coverartarchive.org",{"_index":776,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://github.com/motabass/gblaster",{"_index":5517,"title":{},"body":{"properties.html":{}}}],["https://musicbrainz.org/ws/2",{"_index":774,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://on.cypress.io/custom",{"_index":694,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":5241,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/20917710/fast",{"_index":1709,"title":{},"body":{"injectables/MetadataService.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1403,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["husky",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":2868,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["iconregistry",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgicon('logo",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgiconset(sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":4037,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["id",{"_index":759,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":754,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3coverpicture",{"_index":725,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":753,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3tagsservice",{"_index":1328,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":5317,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":729,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ignore",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["ignores",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["ii",{"_index":5353,"title":{},"body":{"license.html":{}}}],["iii",{"_index":5358,"title":{},"body":{"license.html":{}}}],["image",{"_index":744,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"license.html":{}}}],["image.front",{"_index":803,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images",{"_index":769,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images[5]?.['#text",{"_index":1423,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["iml",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":1916,"title":{},"body":{"injectables/PlayerService.html":{}}}],["implement",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":5387,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":5398,"title":{},"body":{"license.html":{}}}],["implements",{"_index":142,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":5484,"title":{},"body":{"license.html":{}}}],["import",{"_index":83,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":5648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":5650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":5646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":5651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1343,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["imports",{"_index":139,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["improve",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":3570,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["including",{"_index":5312,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":5305,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":2018,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["increasevolume(value",{"_index":2028,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":930,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["indexed",{"_index":92,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":4817,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["indexeddbservice",{"_index":144,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["indexeddbtrackmetadata",{"_index":94,"title":{"interfaces/IndexedDbTrackMetadata.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["indexeddbtracks",{"_index":151,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ineffective",{"_index":5447,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":5464,"title":{},"body":{"license.html":{}}}],["inferred",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":5257,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":5303,"title":{},"body":{"license.html":{}}}],["init",{"_index":2511,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["initbarkscale",{"_index":5191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":558,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["initializetheme",{"_index":2402,"title":{},"body":{"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2293,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":86,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["inject(audioservice",{"_index":922,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2315,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":1873,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":1219,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":984,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":1218,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":1792,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["inject(gamepadservice",{"_index":2053,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":2054,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["inject(httpclient",{"_index":772,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["inject(id3tagsservice",{"_index":1617,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1618,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(loaderservice",{"_index":1510,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":520,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1290,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":1221,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":1871,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":2424,"title":{},"body":{"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":147,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["inject(musicbrainzservice",{"_index":1619,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":145,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(ngzone",{"_index":2696,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject(playerservice",{"_index":148,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":986,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":146,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2519,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2506,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":1791,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":2631,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":1870,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2703,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1289,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":417,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":419,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":976,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('bars",{"_index":2687,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":2342,"title":{},"body":{"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["inset",{"_index":1065,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2537,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":5237,"title":{},"body":{"index.html":{}}}],["instant",{"_index":2210,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["instead",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["integriert",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["intended",{"_index":5342,"title":{},"body":{"license.html":{}}}],["intending",{"_index":5430,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1498,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1499,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1494,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1496,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["intergrated",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["internal",{"_index":2791,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":1869,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":1199,"title":{},"body":{"injectables/GamepadService.html":{}}}],["introducing",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":5446,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":5465,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":5463,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":5457,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":5406,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":2129,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":2133,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":2155,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":1189,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":5192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":5207,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":5193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2278,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":5194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ismediasessionsupported",{"_index":5195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnan(atrack",{"_index":222,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["isnan(btrack",{"_index":223,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["isoscvisualizeroptions",{"_index":5198,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":5208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["isplaying",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":2135,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isstopped",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ist",{"_index":1238,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":5199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":1633,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["item",{"_index":1023,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["item.album",{"_index":180,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item.artist",{"_index":179,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item__content",{"_index":5637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1069,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["itemsize",{"_index":2216,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":5365,"title":{},"body":{"license.html":{}}}],["january",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["jb",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["jest",{"_index":3286,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["js",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1419,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["judged",{"_index":5444,"title":{},"body":{"license.html":{}}}],["july",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["jurisdictions",{"_index":5271,"title":{},"body":{"license.html":{}}}],["justify",{"_index":1071,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["k",{"_index":664,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kb/s",{"_index":672,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["keine",{"_index":1311,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":5229,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1247,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":1243,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":5616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":1206,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["keys.replaceall",{"_index":1262,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":5482,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5340,"title":{},"body":{"license.html":{}}}],["known",{"_index":5415,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1700,"title":{},"body":{"injectables/MetadataService.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["lang",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":766,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["last",{"_index":2116,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["last.fm",{"_index":1406,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1609,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1401,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1390,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1397,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1393,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1400,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1399,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1396,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2773,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["late",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["latencyhint",{"_index":560,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["latent",{"_index":5490,"title":{},"body":{"license.html":{}}}],["later",{"_index":5301,"title":{},"body":{"license.html":{}}}],["latest",{"_index":2952,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["launch",{"_index":1899,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["launchparameters",{"_index":1897,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":1909,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":1907,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":1891,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":5251,"title":{},"body":{"license.html":{}}}],["laws",{"_index":5270,"title":{},"body":{"license.html":{}}}],["layout",{"_index":2929,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layouts",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["lazy",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["leadingminutezero",{"_index":5214,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":967,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":972,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2354,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1428,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":5246,"title":{},"body":{"license.html":{}}}],["legally",{"_index":5445,"title":{},"body":{"license.html":{}}}],["legend",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":5265,"title":{},"body":{"license.html":{}}}],["lib",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":244,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":136,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":138,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":141,"title":{"components/LibraryComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libs",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["libs/.../helpers",{"_index":5180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/helpers",{"_index":5213,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":953,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":4993,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{},"properties.html":{}}}],["license.md",{"_index":4996,"title":{},"body":{"changelog.html":{}}}],["licensed",{"_index":5479,"title":{},"body":{"license.html":{}}}],["light",{"_index":2452,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":819,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":2483,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":818,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":5363,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":5313,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":5371,"title":{},"body":{"license.html":{}}}],["limited",{"_index":5346,"title":{},"body":{"license.html":{}}}],["line",{"_index":2000,"title":{},"body":{"injectables/PlayerService.html":{}}}],["lines",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["linethickness",{"_index":2558,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":5634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3635,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["linting",{"_index":5084,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":2219,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":599,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lite",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":746,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/Id3Tags.html":{}}}],["load",{"_index":2113,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["loadcomponent",{"_index":5645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":1951,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["loadedtrack",{"_index":1961,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":861,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":868,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["loader.helpers.ts",{"_index":933,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1509,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":870,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["loader.service.abstract.ts",{"_index":1079,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":1082,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:6",{"_index":1083,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:7",{"_index":1084,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":5179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":863,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:11",{"_index":1430,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:18",{"_index":1774,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:24",{"_index":1433,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:26",{"_index":1431,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:32",{"_index":1776,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:42",{"_index":1775,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:43",{"_index":1432,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1495,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1508,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2329,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":675,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":243,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["loadingcounter",{"_index":1520,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadlastdirectory",{"_index":2019,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["local",{"_index":1654,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localecompare(b.album",{"_index":210,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.artist",{"_index":207,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.title",{"_index":229,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localization",{"_index":5533,"title":{},"body":{"todo.html":{}}}],["localstorage",{"_index":578,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":513,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["lock.json",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["locking",{"_index":5232,"title":{},"body":{"index.html":{}}}],["logic",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["lookup",{"_index":1674,"title":{},"body":{"injectables/MetadataService.html":{}}}],["loop",{"_index":478,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lowersearchterm",{"_index":155,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["lucene",{"_index":750,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["luceneescapequery",{"_index":749,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["made",{"_index":5343,"title":{},"body":{"license.html":{}}}],["main",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["main_audio",{"_index":545,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["maincolor",{"_index":312,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":622,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["make",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":5259,"title":{},"body":{"license.html":{}}}],["management",{"_index":5523,"title":{},"body":{"todo.html":{}}}],["manifest",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["manifest.json",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":181,"title":{},"body":{"interfaces/Album.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2322,"title":{},"body":{"components/ShellComponent.html":{}}}],["map((tag",{"_index":170,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mapping",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["march",{"_index":2856,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["maskable",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["mat",{"_index":5630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1282,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":5603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1286,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1736,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2493,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2490,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":1209,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2515,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1283,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":1210,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":3068,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["matformfield",{"_index":129,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matformfieldmodule",{"_index":2124,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":2207,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":1996,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":2206,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(math.random",{"_index":2003,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":1997,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":1853,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.max(0",{"_index":2221,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":1855,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.round(value",{"_index":671,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["mathint",{"_index":130,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticon",{"_index":110,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonbutton",{"_index":112,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonmodule",{"_index":1285,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":131,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matlistmodule",{"_index":99,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenu",{"_index":103,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["matmenucontent",{"_index":104,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenuitem",{"_index":105,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenumodule",{"_index":1780,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matmenutrigger",{"_index":106,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matoptionmodule",{"_index":2553,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprefix",{"_index":132,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressbar",{"_index":2274,"title":{},"body":{"components/ShellComponent.html":{}}}],["matprogressspinnermodule",{"_index":2123,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2552,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2304,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2272,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslider",{"_index":2009,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidermodule",{"_index":915,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matsliderthumb",{"_index":2010,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidetogglechange",{"_index":1746,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1737,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matsuffix",{"_index":133,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mattoolbar",{"_index":2011,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattoolbarmodule",{"_index":1778,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltip",{"_index":2012,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattooltipmodule",{"_index":1779,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":1994,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":290,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":5420,"title":{},"body":{"license.html":{}}}],["md5",{"_index":1616,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["mdc",{"_index":4034,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["meaning",{"_index":5341,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":2167,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["meatadata",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1560,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":529,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["mediametadata(metadata",{"_index":1569,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1540,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasession",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["mediasessionaction",{"_index":1535,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1537,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1571,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1525,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":5201,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":5421,"title":{},"body":{"license.html":{}}}],["member",{"_index":5426,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2234,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["menus",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["menutrigger",{"_index":2127,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["merchantability",{"_index":5486,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1240,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["merged.description",{"_index":1258,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":1259,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1398,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1369,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["meta",{"_index":1589,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"todo.html":{}}}],["meta.coverurl.original",{"_index":1694,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl.original.startswith('blob",{"_index":1695,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl.thumb.startswith('blob",{"_index":1697,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1693,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1704,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":123,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1691,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":757,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1610,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1392,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:36",{"_index":1427,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":755,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1646,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["metadatacache.coverurl.thumb",{"_index":1650,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1648,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1659,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":125,"title":{"injectables/MetadataService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["metadataservice.processionpercent",{"_index":2330,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadatasettingscomponent",{"_index":391,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["metatags",{"_index":5614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meter",{"_index":5233,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":5573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1416,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["methods",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["mic",{"_index":5528,"title":{},"body":{"todo.html":{}}}],["migrate",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["migrated",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["migrating",{"_index":2378,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2371,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["min",{"_index":1995,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2559,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["mindecibels",{"_index":291,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["miscellaneous",{"_index":5164,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":5036,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":4279,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["mobile",{"_index":4157,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mobx",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modes",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":5304,"title":{},"body":{"license.html":{}}}],["module",{"_index":1344,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["modules",{"_index":3176,"title":{"modules.html":{}},"body":{"changelog.html":{},"modules.html":{}}}],["monochrome",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["monochrome.svg",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["monorepo",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["moral",{"_index":5354,"title":{},"body":{"license.html":{}}}],["more",{"_index":688,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["motabass",{"_index":5519,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":2049,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":2309,"title":{},"body":{"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":5325,"title":{},"body":{"license.html":{}}}],["mouseevent",{"_index":2138,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["move",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["moved",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["mp3",{"_index":946,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":951,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mtb",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":5611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":730,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":785,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1611,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzreleasegroup",{"_index":758,"title":{"interfaces/MusicbrainzReleaseGroup.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzresponse",{"_index":762,"title":{"interfaces/MusicbrainzResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":770,"title":{"injectables/MusicbrainzService.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":815,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Color.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":696,"title":{},"body":{"interfaces/Chainable.html":{}}}],["nan",{"_index":216,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["narrowing",{"_index":2389,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":5386,"title":{},"body":{"license.html":{}}}],["native",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["nativebrowserfileloaderservice",{"_index":871,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigates",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["navigateto",{"_index":2280,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2283,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigation",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["navigator.getgamepads",{"_index":1126,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1568,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1572,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1563,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1558,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1567,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1566,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2817,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2818,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":849,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nearby",{"_index":2209,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["nearly",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":5502,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":5345,"title":{},"body":{"license.html":{}}}],["neu",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":174,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["newsize",{"_index":318,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["newtrack",{"_index":1918,"title":{},"body":{"injectables/PlayerService.html":{}}}],["next",{"_index":1501,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1512,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1337,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2802,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ng",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["ng11",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["ng15",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["ngafterviewinit",{"_index":992,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngarraypipesmodule",{"_index":97,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ngclass",{"_index":2122,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2388,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2390,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":1006,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":231,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngoptimizedimage",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["ngx",{"_index":91,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":90,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1143,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":1612,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["node_modules",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["nodes",{"_index":562,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["non",{"_index":5454,"title":{},"body":{"license.html":{}}}],["none",{"_index":547,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"changelog.html":{}}}],["notable",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["notes.md",{"_index":5087,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":1905,"title":{},"body":{"injectables/PlayerService.html":{}}}],["notification",{"_index":5015,"title":{},"body":{"changelog.html":{}}}],["november",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["now",{"_index":2771,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["npm",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["npmrc",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["nrwl",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["nrwl/nx",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":1152,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(a.track",{"_index":215,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(axisindex",{"_index":1117,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(b.track",{"_index":219,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(buttonindex",{"_index":1115,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(duration",{"_index":1555,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number_",{"_index":928,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["numbers",{"_index":221,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["nx",{"_index":3253,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["obeservable",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":1655,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":5613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1661,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":5511,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1213,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":1244,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":1256,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2317,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2737,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":1251,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2740,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtained",{"_index":1035,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["obtaining",{"_index":5501,"title":{},"body":{"license.html":{}}}],["october",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["offers",{"_index":5480,"title":{},"body":{"license.html":{}}}],["offline",{"_index":5236,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":317,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":5578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":2220,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ogg",{"_index":948,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["ohne",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["older",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["oldsource",{"_index":629,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["onchanges",{"_index":2334,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["oncontextmenu",{"_index":2130,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["oncontextmenu(event",{"_index":2137,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ondestroy",{"_index":959,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":739,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["onfilehandlesdropped",{"_index":2281,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilehandlesdropped(files",{"_index":2287,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped",{"_index":2282,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped(files",{"_index":2289,"title":{},"body":{"components/ShellComponent.html":{}}}],["oninit",{"_index":87,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1740,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1745,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onsliderpositionchanged",{"_index":2020,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":2031,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1741,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1748,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1742,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1750,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1743,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1752,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":2021,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onvolumechange(value",{"_index":2033,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["open",{"_index":2229,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["opened",{"_index":2235,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["openedstate",{"_index":2343,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":885,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2341,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["optimizations",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["optimize",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":2670,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["optional",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":713,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":1235,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":1242,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":950,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["origin",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["original",{"_index":807,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"license.html":{}}}],["originalfn",{"_index":717,"title":{},"body":{"interfaces/Chainable.html":{}}}],["os",{"_index":5230,"title":{},"body":{"index.html":{}}}],["osc",{"_index":332,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2560,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":3113,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["oscilloscopepath",{"_index":5574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":309,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":331,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":5238,"title":{},"body":{"index.html":{}}}],["others",{"_index":5324,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":224,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["out",{"_index":1361,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{}}}],["output",{"_index":978,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":2199,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":968,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":974,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":960,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":963,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":962,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":957,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":977,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":980,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:15",{"_index":979,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:39",{"_index":975,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:49",{"_index":973,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:55",{"_index":971,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":956,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":955,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlayref",{"_index":2236,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.left",{"_index":2242,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.position",{"_index":2240,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.top",{"_index":2244,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overrides",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["overtly",{"_index":5404,"title":{},"body":{"license.html":{}}}],["overview",{"_index":5512,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":686,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["overwritten",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["owner",{"_index":5284,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":5283,"title":{},"body":{"license.html":{}}}],["owners",{"_index":5290,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2784,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":3064,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["packages",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["packgr",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":4880,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["palette",{"_index":1675,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1729,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1730,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1723,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1724,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1731,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1732,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1725,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1726,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1727,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1728,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1721,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1722,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pane:last",{"_index":2238,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["panel",{"_index":2335,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2336,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2337,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2333,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2353,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2350,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2358,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2359,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2352,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2356,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2357,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2364,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2360,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2361,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2363,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2362,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2332,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":5372,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1412,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":697,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":5381,"title":{},"body":{"license.html":{}}}],["part",{"_index":4188,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["partial",{"_index":1223,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":5488,"title":{},"body":{"license.html":{}}}],["party",{"_index":5509,"title":{},"body":{"license.html":{}}}],["pass",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["passed",{"_index":2776,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":5474,"title":{},"body":{"license.html":{}}}],["path",{"_index":5641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":5580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":5643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":313,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1378,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1338,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["per",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["perform",{"_index":5350,"title":{},"body":{"license.html":{}}}],["performance",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["performance.now",{"_index":1185,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":5357,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5292,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":5496,"title":{},"body":{"license.html":{}}}],["permission",{"_index":907,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":5504,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":5401,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":2962,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["person",{"_index":5330,"title":{},"body":{"license.html":{}}}],["person's",{"_index":5362,"title":{},"body":{"license.html":{}}}],["persons",{"_index":5500,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":5361,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1327,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pictures",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["pin",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":120,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":2163,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":98,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{},"overview.html":{}}}],["pipetransform",{"_index":661,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1620,"title":{},"body":{"injectables/MetadataService.html":{}}}],["placement",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["play",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["play/pause",{"_index":2059,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playback",{"_index":561,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["player",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player'},{'name",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.component.html",{"_index":1781,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":1782,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":109,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":96,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1547,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":5647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/file",{"_index":2311,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/library",{"_index":5649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1757,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/ShellComponent.html":{}}}],["player/player",{"_index":2312,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.service",{"_index":2310,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.types",{"_index":2423,"title":{},"body":{"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":393,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":108,"title":{"injectables/PlayerService.html":{}},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":843,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["playerservice.currentlyloadedtrack();@let",{"_index":858,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["playerservice.currenttime",{"_index":2118,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playerservice.repeat",{"_index":2120,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playertoolbarcomponent",{"_index":395,"title":{"components/PlayerToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playing",{"_index":1548,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["playlist",{"_index":1487,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"todo.html":{}}}],["playlist'},{'name",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":2125,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":2126,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.filter((t",{"_index":1957,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.find((playlisttrack",{"_index":1972,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.findindex((track",{"_index":2193,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":1970,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":1967,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":1790,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":398,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.crc",{"_index":1946,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlisttrack.metadata?.crc",{"_index":1973,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":1801,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":2131,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":2140,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":1802,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":1823,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":5222,"title":{},"body":{"index.html":{}}}],["playstate",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["playtrack",{"_index":1457,"title":{},"body":{"components/LibraryComponent.html":{}}}],["playtrack(track",{"_index":254,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["playtrackbycrc",{"_index":1803,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playtrackbycrc(crc",{"_index":1825,"title":{},"body":{"injectables/PlayerService.html":{}}}],["please",{"_index":691,"title":{},"body":{"interfaces/Chainable.html":{}}}],["plug",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["pluginnewanalysernode",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["plugins",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":1055,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["polfills",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["polyfills",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["pool",{"_index":2761,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":1852,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":467,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":2902,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["postcss",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["prdefinded",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["pre",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["precommit",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["prefertagembeddedpicture",{"_index":1574,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefetch",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":5594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preparations",{"_index":5148,"title":{},"body":{"changelog.html":{}}}],["present",{"_index":5493,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":5448,"title":{},"body":{"license.html":{}}}],["preset",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["pressedbuttonscaches",{"_index":1113,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prettier",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["prevents",{"_index":2375,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":1804,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":712,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":2440,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":2425,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":2401,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":789,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1771,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":5360,"title":{},"body":{"license.html":{}}}],["private",{"_index":143,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["prive",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["problems",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["process",{"_index":2774,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["processing",{"_index":1912,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["processionpercent",{"_index":1575,"title":{},"body":{"injectables/MetadataService.html":{}}}],["production",{"_index":3166,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":778,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1352,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promise.all(promises",{"_index":1031,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promise.reject(new",{"_index":1349,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1022,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{}}}],["promises.push(promise",{"_index":1028,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promote",{"_index":5316,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":5424,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":400,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2258,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"properties.html":{}}}],["props",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["protected",{"_index":5344,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":5366,"title":{},"body":{"license.html":{}}}],["protection",{"_index":5384,"title":{},"body":{"license.html":{}}}],["protobufjs",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":4256,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":5596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":5262,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":518,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["provideexperimentalzonelesschangedetection",{"_index":5584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":5597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":5585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":5591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":5599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":5583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":5256,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":5586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":5298,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":5359,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":5337,"title":{},"body":{"license.html":{}}}],["pure",{"_index":654,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":5269,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":5311,"title":{},"body":{"license.html":{}}}],["put",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["pwa",{"_index":5219,"title":{},"body":{"index.html":{},"properties.html":{}}}],["q",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["query",{"_index":752,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["queryparams",{"_index":1414,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["queue",{"_index":1906,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":5438,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["random",{"_index":2002,"title":{},"body":{"injectables/PlayerService.html":{}}}],["randomposition",{"_index":1965,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":2196,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["rate",{"_index":857,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["read",{"_index":692,"title":{},"body":{"interfaces/Chainable.html":{}}}],["readded",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["reader",{"_index":5243,"title":{},"body":{"index.html":{}}}],["readme",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":5073,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":149,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":1634,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/UpdateService.html":{}}}],["real",{"_index":1707,"title":{},"body":{"injectables/MetadataService.html":{}}}],["realkeys",{"_index":1261,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":5443,"title":{},"body":{"license.html":{}}}],["record",{"_index":1413,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2730,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["recursive",{"_index":5054,"title":{},"body":{"changelog.html":{}}}],["redirectto",{"_index":5642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":5307,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":5060,"title":{},"body":{"changelog.html":{}}}],["reenabled",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["refactored",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["refactorings",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":5261,"title":{},"body":{"license.html":{}}}],["regards",{"_index":5370,"title":{},"body":{"license.html":{}}}],["register",{"_index":1313,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":1234,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":1091,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":1100,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":1092,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":1104,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1275,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":5590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":5589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":1239,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registry",{"_index":2985,"title":{},"body":{"changelog.html":{}}}],["regular",{"_index":1034,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["reinstall",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["reject",{"_index":1339,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1366,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1358,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":2951,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["relationship",{"_index":5255,"title":{},"body":{"license.html":{}}}],["release",{"_index":760,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["release:${luceneescapequery.escape(album",{"_index":787,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":781,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2809,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":5299,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":5293,"title":{},"body":{"license.html":{}}}],["reload",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["remainder",{"_index":5466,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":5468,"title":{},"body":{"license.html":{}}}],["remember",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":1660,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverpicture",{"_index":82,"title":{"interfaces/RemoteCoverPicture.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":894,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["removed",{"_index":1949,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["removetrackfromplaylist",{"_index":1805,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist(track",{"_index":1828,"title":{},"body":{"injectables/PlayerService.html":{}}}],["rename",{"_index":4995,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["renderer",{"_index":985,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":982,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rendering",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["renew",{"_index":1653,"title":{},"body":{"injectables/MetadataService.html":{}}}],["renovate",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["renovate.json",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":1798,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":738,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["replace",{"_index":1706,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["replaced",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["report",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["reporting",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":5516,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":5481,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":5348,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":5321,"title":{},"body":{"license.html":{}}}],["request",{"_index":906,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["request.reject(new",{"_index":1372,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1374,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe(draw",{"_index":2787,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1379,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["requestwakelock",{"_index":2816,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":5505,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":5433,"title":{},"body":{"license.html":{}}}],["reset",{"_index":2233,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["resizeobserver",{"_index":2701,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2738,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1363,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(tags",{"_index":1365,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1451,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["resolved",{"_index":1029,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["respect",{"_index":5470,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":5498,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":5234,"title":{},"body":{"index.html":{}}}],["result",{"_index":233,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["result.map((tag",{"_index":237,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["result.matches",{"_index":2323,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":5267,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":1266,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["retained",{"_index":5355,"title":{},"body":{"license.html":{}}}],["return",{"_index":157,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":5306,"title":{},"body":{"license.html":{}}}],["revert",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["revocation",{"_index":5432,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":5147,"title":{},"body":{"changelog.html":{}}}],["rgb(255",{"_index":1075,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0,0",{"_index":834,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["rid",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":2355,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{},"license.html":{}}}],["rights",{"_index":5278,"title":{},"body":{"license.html":{}}}],["root",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotation",{"_index":2764,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["rounding",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":2286,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":121,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["routeroutlet",{"_index":2273,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":5575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":5453,"title":{},"body":{"license.html":{}}}],["rule",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":3869,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":5652,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":102,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1507,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":119,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":118,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["sample",{"_index":856,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":330,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sandbox",{"_index":5242,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["saving",{"_index":5525,"title":{},"body":{"todo.html":{}}}],["scale",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":5029,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":2414,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scientific",{"_index":5297,"title":{},"body":{"license.html":{}}}],["screen",{"_index":5105,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scroll",{"_index":2157,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollbehavior",{"_index":2213,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":2169,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":2208,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollposition",{"_index":2165,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":2158,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":2188,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":2191,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":2128,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scss",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":796,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["searchterm",{"_index":150,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["searchterm.tolowercase",{"_index":156,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["seconds",{"_index":1832,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seeking",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["seekleft",{"_index":1806,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekleft(seconds",{"_index":1830,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":2035,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekright",{"_index":1807,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekright(seconds",{"_index":1833,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":2037,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekto",{"_index":1565,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["seektohandler(details",{"_index":1979,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["seektto",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1458,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":250,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1459,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":246,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selected",{"_index":1952,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["selectedalbum",{"_index":165,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":163,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":166,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selection",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["selectnext",{"_index":1808,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":1809,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":1810,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":1837,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1460,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":252,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["self",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["semantics",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":2782,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":1156,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separate",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["separator",{"_index":5592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seperated",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["september",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["service/file",{"_index":932,"title":{},"body":{"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":726,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1391,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1429,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":5210,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":126,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["service/metadata.service.ts",{"_index":1573,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:150",{"_index":1588,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1605,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1603,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:28",{"_index":1601,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:29",{"_index":1595,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:33",{"_index":1599,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:37",{"_index":1584,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:52",{"_index":1591,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:67",{"_index":1593,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":124,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":812,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":5212,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":742,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:40",{"_index":1773,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":862,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":2999,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":2051,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":2050,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":2052,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["services/loader/loader.service",{"_index":2307,"title":{},"body":{"components/ShellComponent.html":{}}}],["services/media",{"_index":1865,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":1786,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":1864,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1561,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["session.service",{"_index":1866,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":5197,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1528,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1538,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1543,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1545,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1541,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1533,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1527,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":536,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["set(filtered",{"_index":175,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["set.svg",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor(color",{"_index":2445,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1529,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1534,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2564,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2574,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2565,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2576,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":469,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1530,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1539,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2566,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2578,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2567,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2580,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2403,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":2406,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2404,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":2409,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2568,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2582,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":471,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setfrequencybandgain",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":473,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setgap",{"_index":2569,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2584,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2570,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2586,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":476,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setmindb",{"_index":2571,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2588,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setoverlayclass",{"_index":2449,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setplaybackstate(state",{"_index":1570,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor(color",{"_index":2434,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":1811,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":1839,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1531,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1542,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2572,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2590,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1356,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["setting",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["settings",{"_index":577,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2268,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1738,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":2266,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1735,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2494,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":2396,"title":{},"body":{"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":1754,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":1753,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":1751,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1749,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:34",{"_index":1747,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":1744,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1734,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2267,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2269,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":402,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2501,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2502,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2736,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupvisualsworkerwithoptions",{"_index":5202,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":5209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":479,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["several",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":5431,"title":{},"body":{"license.html":{}}}],["share",{"_index":5529,"title":{},"body":{"todo.html":{}}}],["sharereplay",{"_index":2306,"title":{},"body":{"components/ShellComponent.html":{}}}],["shas",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["shell",{"_index":2271,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["shell'},{'name",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2275,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2276,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":344,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":1229,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":2058,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["show",{"_index":1516,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{}}}],["showdelay",{"_index":5605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":880,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["showfilepickerandloadfiles",{"_index":2022,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["showpicker",{"_index":879,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["shows",{"_index":682,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2561,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":1799,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2344,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["sidenav",{"_index":2279,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["signal",{"_index":88,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["signal(0",{"_index":484,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{}}}],["signal(44_100",{"_index":506,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(false",{"_index":499,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2592,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2597,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2605,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2607,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":2412,"title":{},"body":{"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2613,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2615,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2617,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2620,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1594,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":1857,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":1860,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2628,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1600,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1602,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1604,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2800,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.storageservice.retrieve('basegain",{"_index":482,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(this.storageservice.retrieve('volume",{"_index":508,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(true",{"_index":502,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(undefined",{"_index":164,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["signals",{"_index":538,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["signalös",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":5392,"title":{},"body":{"license.html":{}}}],["simpler",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["simplified",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["sind",{"_index":1310,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1395,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["sizes",{"_index":1938,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":1059,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2284,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2370,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":5577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":405,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":404,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["slider",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["sliders",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":767,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{}}}],["smaller",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["smooth",{"_index":2190,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2562,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":292,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["snyk",{"_index":5059,"title":{},"body":{"changelog.html":{}}}],["soll",{"_index":2542,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["sonarjs/pseudo",{"_index":2001,"title":{},"body":{"injectables/PlayerService.html":{}}}],["song",{"_index":1819,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["song.file.name",{"_index":2250,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":2246,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":2247,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.crc",{"_index":2225,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.crc",{"_index":1947,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":2251,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":2249,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":2248,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["soon",{"_index":1632,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sort",{"_index":198,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["sortable",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":5524,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["spark",{"_index":1615,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["sparkmd5",{"_index":1614,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sparkmd5.arraybuffer.hash(await",{"_index":1717,"title":{},"body":{"injectables/MetadataService.html":{}}}],["specified",{"_index":1956,"title":{},"body":{"injectables/PlayerService.html":{}}}],["spectrogram",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":2152,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["splashscreen",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1936,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stable",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":656,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["standard",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["standing",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2824,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starts",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["startvisualization(getdatamethod",{"_index":2756,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":537,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":5442,"title":{},"body":{"license.html":{}}}],["statt",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["statutory",{"_index":5485,"title":{},"body":{"license.html":{}}}],["steps",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":320,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2675,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storageservice",{"_index":519,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["storagesettingscomponent",{"_index":407,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":182,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":5615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":5618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structures",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["stuff",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["style",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["stylelint",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":952,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":137,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":961,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styling",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1255,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":902,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":515,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"license.html":{}}}],["sublicensable",{"_index":5456,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2164,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":1214,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":5282,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1303,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1306,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":5390,"title":{},"body":{"license.html":{}}}],["successors",{"_index":5429,"title":{},"body":{"license.html":{}}}],["such",{"_index":5377,"title":{},"body":{"license.html":{}}}],["suche",{"_index":5522,"title":{},"body":{"todo.html":{}}}],["support",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["supported",{"_index":1562,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":5225,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":5478,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":5410,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":634,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["svg",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["svgo",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["swc/core",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["switch",{"_index":1983,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["switched",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["swupdate",{"_index":2516,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["swupdate.activateupdate().then",{"_index":2533,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2521,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntildestroyed(this.destroref)).subscribe((event",{"_index":2522,"title":{},"body":{"injectables/UpdateService.html":{}}}],["syntax",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":1043,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{},"todo.html":{}}}],["t",{"_index":1958,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tag",{"_index":186,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["tag.album",{"_index":188,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.album?.tolowercase().includes(lowersearchterm",{"_index":162,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist",{"_index":171,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist?.tolowercase().includes(lowersearchterm",{"_index":160,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.coverurl",{"_index":192,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.filename?.tolowercase().includes(lowersearchterm",{"_index":161,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.title?.tolowercase().includes(lowersearchterm",{"_index":159,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.year",{"_index":191,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tags",{"_index":822,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["tags.album",{"_index":780,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":779,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1689,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1680,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1682,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1608,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1329,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1334,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1331,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1686,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1687,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":727,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1326,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1688,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagswithoptionalbloburls",{"_index":236,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tagsworkerrequest",{"_index":820,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":821,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":1867,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":5449,"title":{},"body":{"license.html":{}}}],["target",{"_index":5530,"title":{},"body":{"todo.html":{}}}],["targetindex",{"_index":2192,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1300,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":705,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templates",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["templateurl",{"_index":135,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["temporarily",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["termination",{"_index":5435,"title":{},"body":{"license.html":{}}}],["terms",{"_index":5339,"title":{},"body":{"license.html":{}}}],["territories",{"_index":5418,"title":{},"body":{"license.html":{}}}],["test",{"_index":556,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":3870,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1394,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":813,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thebespokepixel/es",{"_index":2419,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["theme",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{}}}],["theme.types",{"_index":2420,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice",{"_index":354,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice.initializetheme",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["themesettingscomponent",{"_index":409,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":5388,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":310,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["this._audiocontext",{"_index":587,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.createanalyser",{"_index":615,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.resume",{"_index":635,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.state",{"_index":633,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement",{"_index":585,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":596,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":603,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":613,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":590,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":593,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":594,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":610,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":605,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":601,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.currenttime",{"_index":645,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.fastseek(position",{"_index":644,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.loop",{"_index":642,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.pause",{"_index":638,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.play",{"_index":636,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.src",{"_index":630,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiosourcenode",{"_index":586,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":617,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.clear",{"_index":628,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":620,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.foreach((analyser",{"_index":627,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":618,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._eqgainnode",{"_index":588,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._eqgainnode.connect(analyser",{"_index":616,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._eqgainnode.disconnect(analyser",{"_index":619,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[band",{"_index":579,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":647,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._gainnode",{"_index":589,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.asobservable",{"_index":540,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.next(true",{"_index":614,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._internalanalyzer",{"_index":2742,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":1250,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":2446,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.accentcolorpalette",{"_index":2447,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":1198,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...filedatas",{"_index":1944,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(...validfiles",{"_index":1914,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addtrackstoplaylist(...this.filteredbyserchterm",{"_index":262,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(...tracks",{"_index":261,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(track",{"_index":273,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtracktoplaylist(track",{"_index":255,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":1942,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.allowedtypes().includes(file.type",{"_index":1051,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.alpha",{"_index":2610,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2654,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2725,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2638,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2644,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2642,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2640,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2751,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2750,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2781,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2507,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2786,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}/release",{"_index":790,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1420,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.askuserforupdate().then((update",{"_index":2532,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.currenttime",{"_index":1556,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2794,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2649,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1554,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":1921,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":1962,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1551,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1549,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":1851,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":1940,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2595,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2752,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":1928,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":1990,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":1988,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(value",{"_index":2107,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":1118,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":1171,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":1169,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":1160,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.barcount",{"_index":2600,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2658,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2719,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2743,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2746,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2745,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2744,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":583,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.breakpointobserver",{"_index":2316,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1408,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":1116,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":1167,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":1161,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":1175,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":1184,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":1157,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.canvas",{"_index":2704,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2731,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2710,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.capfalldown",{"_index":2603,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2662,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2601,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2660,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":1139,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":1138,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":1200,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":1133,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2393,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.colorconfig",{"_index":2723,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":2448,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":2437,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":1121,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":798,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":1172,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":1168,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":570,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1692,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1663,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(filedata",{"_index":1629,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.currentfolderhandle",{"_index":886,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(entry.handle",{"_index":878,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(handle",{"_index":881,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":1850,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":1844,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":1941,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":1963,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":1976,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().length",{"_index":1917,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":1945,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist()[this.currentplaylist().length",{"_index":1919,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":1948,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":602,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.darkmode",{"_index":2450,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":2430,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1292,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":2076,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.default_deadspace",{"_index":1191,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":1103,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":1241,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1271,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1278,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1294,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2261,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2260,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1269,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":1123,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":1224,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":1002,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":993,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":999,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":997,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drop.bind(this",{"_index":1005,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":1004,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":604,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues",{"_index":649,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[band",{"_index":581,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":646,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":651,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":1253,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1405,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1404,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":783,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2639,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2656,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.filehandlesdropped.emit(filehandles",{"_index":1033,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.fileinput",{"_index":1436,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1442,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1450,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1449,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1448,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1439,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1444,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1441,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1438,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.openfiles",{"_index":1943,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.files",{"_index":1452,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.files.map((file",{"_index":1446,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filesdroped.emit(files",{"_index":1053,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.filestoprocess",{"_index":1597,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.set(filedatas.length",{"_index":1627,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.update((files",{"_index":1635,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filteredbyserchterm",{"_index":169,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.filteredbyserchterm().filter((track",{"_index":259,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":782,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":1197,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":1177,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":2061,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":2103,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":2105,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":2104,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":2091,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":2092,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":2099,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":2098,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":2101,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":2095,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":2100,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":2096,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":2097,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":2102,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":2093,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":2094,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":2073,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":2062,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":2063,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":2082,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":2080,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":2087,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":2069,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":2085,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":2071,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":2078,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":2089,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":2065,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":2067,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2648,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2646,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2602,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2666,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getcolorobject(new",{"_index":2454,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.getmetadata(filedata",{"_index":1638,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":2046,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer.files",{"_index":1047,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1348,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlefilefallback(event",{"_index":1036,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handlemessage",{"_index":1346,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.helpopen",{"_index":1268,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1276,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":1254,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":1236,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":1264,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":1257,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":2055,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":2056,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.register",{"_index":2057,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.id3tagsservice.extracttags(filedata.file",{"_index":1665,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":2077,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.indexeddbservice.add('metatags",{"_index":1690,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('metatags').topromise",{"_index":1768,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.update('dirhandle",{"_index":882,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.indexeddbtracks().filter((tag",{"_index":158,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.indexeddbtracks.set(tagswithoptionalbloburls",{"_index":239,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.isautoscrollenabled",{"_index":2171,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":2172,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":1192,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":592,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":595,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":643,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(false",{"_index":609,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(true",{"_index":612,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying",{"_index":637,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(false",{"_index":611,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(true",{"_index":608,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(false",{"_index":607,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(true",{"_index":641,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.lastfm_api_key",{"_index":1418,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1670,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":1016,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":1001,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.linethickness",{"_index":2623,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2664,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1513,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loaderservice.show",{"_index":1511,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loadingcounter",{"_index":1521,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2397,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2655,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2659,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2663,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2661,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":2431,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2657,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2667,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2665,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2653,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('prefertagembeddedpicture",{"_index":1767,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2651,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('usetagembeddedpicture",{"_index":1765,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usetagscache",{"_index":1763,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usewebmetainfos",{"_index":1760,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2805,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mediasessionservice",{"_index":1874,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":1880,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":1877,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":1875,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":1882,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":1884,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":1886,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":1878,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":1930,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":1888,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.menutrigger",{"_index":2227,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.meta.addtag",{"_index":2443,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.meta.updatetag",{"_index":2444,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.metadataservice.addfilestolibrary(...filedatas",{"_index":1960,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.createobjecturlforembeddedpicture(tag",{"_index":238,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1766,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1764,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1762,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1759,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2643,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2652,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2717,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1671,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":1881,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1351,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2392,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2391,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2721,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2754,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":996,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":639,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.pendingrequests.clear",{"_index":1389,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1357,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1381,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1371,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1362,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1386,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1651,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice.addfilestoplaylist(...filedata",{"_index":2327,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addfilestoplaylist(...files.map((file",{"_index":2326,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addtracktoplaylist(track",{"_index":280,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2609,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":2183,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.darkmuted?.hex",{"_index":832,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.lightmuted?.hex",{"_index":833,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.coverurl?.original",{"_index":836,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.crc",{"_index":2223,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":2176,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":2119,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.next",{"_index":2086,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpause",{"_index":2060,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":2224,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.playtrackbycrc(track.crc",{"_index":256,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.previous",{"_index":2088,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectnext",{"_index":2083,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":2081,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":2106,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.stop",{"_index":2064,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playpause",{"_index":1876,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(newtrack",{"_index":1920,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":1968,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":1975,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":1971,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":1974,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1652,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":1179,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":1883,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":2435,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.primarycolorpalette",{"_index":2436,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.register",{"_index":1228,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":994,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":1012,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":1984,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":1986,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":1991,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":1989,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2815,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2712,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2789,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate(['/player",{"_index":257,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.router.navigate([route",{"_index":2325,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":606,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.scrolltobottom",{"_index":2181,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":2187,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":2161,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":154,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.seekleft(10",{"_index":1885,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":2070,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seekright(10",{"_index":1887,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":2072,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seektohandler(details",{"_index":1889,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":640,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.selectedalbum",{"_index":197,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(album",{"_index":251,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(undefined",{"_index":248,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":177,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist.set(artist",{"_index":247,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":1954,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":1977,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(track",{"_index":253,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack.set(undefined",{"_index":249,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.selectsong(track",{"_index":1927,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setaccentcolor(colors.peakcolor",{"_index":2433,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setaccentcolor(this.accentcolor",{"_index":2429,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setoverlayclass",{"_index":2427,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setplaybackstate('none",{"_index":1553,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1552,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1550,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setprimarycolor(colors.maincolor",{"_index":2432,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setprimarycolor(this.primarycolor",{"_index":2428,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setseekposition(details.seektime",{"_index":1982,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":1978,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2713,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.showfilepickerandloadfiles",{"_index":2090,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.shuffle",{"_index":1964,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":1992,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":2324,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2641,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2650,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2753,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2755,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":1879,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2726,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.storageservice.retrieve('equalizergainvalues",{"_index":487,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.swupdate",{"_index":2520,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2540,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2539,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.darkmode",{"_index":831,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":1922,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2496,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2508,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":1793,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":1233,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":2079,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.togglerepeat",{"_index":2068,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.toggleshuffle",{"_index":2066,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.totalfilestoprocess",{"_index":1598,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(0",{"_index":1636,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(filedatas.length",{"_index":1626,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.uniquealbums",{"_index":267,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1557,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.usetagembeddedpicture",{"_index":1649,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1645,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1668,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2732,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2735,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2733,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2734,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2706,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2711,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2795,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2803,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2804,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2647,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2626,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":551,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.wakelock",{"_index":2814,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2819,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":2822,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":1924,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":1926,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1340,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1347,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1345,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2708,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1367,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1384,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1383,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1385,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":5294,"title":{},"body":{"license.html":{}}}],["threads.js",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["through",{"_index":1040,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"license.html":{}}}],["throughout",{"_index":5272,"title":{},"body":{"license.html":{}}}],["thum",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["thumb",{"_index":804,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thumbnails",{"_index":745,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["time",{"_index":851,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["time.pipe",{"_index":841,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["time.ts",{"_index":5181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timed",{"_index":1360,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1355,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1333,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":826,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2772,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["tinycolor",{"_index":2418,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["tinycolor(hex",{"_index":2466,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(10",{"_index":2468,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(15",{"_index":2470,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(18",{"_index":2472,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(21",{"_index":2474,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(24",{"_index":2476,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(27",{"_index":2478,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(30",{"_index":2480,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(5",{"_index":2467,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(15",{"_index":2464,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(20",{"_index":2462,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(25",{"_index":2460,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(30",{"_index":2458,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(35",{"_index":2457,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(45",{"_index":2456,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(55",{"_index":2455,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(value",{"_index":2482,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":200,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":5625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":1785,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2328,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":554,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["todo.md",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["todos",{"_index":4494,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["toggle",{"_index":1756,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["togglehelpdialog",{"_index":1267,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2345,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":2023,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["togglerepeat",{"_index":1812,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["toggleshuffle",{"_index":1813,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["togglevisualmode",{"_index":2798,"title":{},"body":{"injectables/VisualsService.html":{}}}],["token",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["toolbar",{"_index":2007,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"changelog.html":{}}}],["toolbar'},{'name",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["toolbar.component",{"_index":2313,"title":{},"body":{"components/ShellComponent.html":{}}}],["toolbar.component.html",{"_index":2013,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2014,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":2006,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:104",{"_index":2032,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:110",{"_index":2034,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:121",{"_index":2027,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:125",{"_index":2041,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:129",{"_index":2042,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:133",{"_index":2039,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:138",{"_index":2030,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:142",{"_index":2036,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:146",{"_index":2038,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:150",{"_index":2029,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:154",{"_index":2025,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:158",{"_index":2040,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:28",{"_index":2044,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:29",{"_index":2045,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:30",{"_index":2043,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:32",{"_index":2047,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar/player",{"_index":2005,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["tools",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["tooltips",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":2346,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["tosignal",{"_index":2308,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2292,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1302,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["totalfilestoprocess",{"_index":1622,"title":{},"body":{"injectables/MetadataService.html":{}}}],["touppercase",{"_index":1305,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":95,"title":{"interfaces/Track.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["track.album",{"_index":264,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.artist",{"_index":260,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.coverurl",{"_index":1490,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.crc",{"_index":286,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.filename",{"_index":1493,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.metadata",{"_index":1929,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":1933,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":1932,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.original",{"_index":1937,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.original",{"_index":1935,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":1931,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.crc",{"_index":2194,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["track.title",{"_index":1492,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.track",{"_index":1491,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackby",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["trackbyalbum",{"_index":1461,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum(index",{"_index":284,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyartist",{"_index":1462,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyartist(index",{"_index":283,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbycrc",{"_index":1463,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackbycrc(index",{"_index":285,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["tracking",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["trackmetadata",{"_index":732,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":196,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["tracks().length",{"_index":1485,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tracks.push(...albumtracks",{"_index":271,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trademark",{"_index":5473,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":5455,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2783,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":657,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":658,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["transitions",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["translate",{"_index":5352,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2671,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["treaty",{"_index":5397,"title":{},"body":{"license.html":{}}}],["tree",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trial",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["trials",{"_index":5108,"title":{},"body":{"changelog.html":{}}}],["trigger",{"_index":2226,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menu",{"_index":2231,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menudata",{"_index":2228,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.openmenu",{"_index":2230,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["true",{"_index":655,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":232,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["ts",{"_index":1893,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["tsconfig",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":3325,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["tslint",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["ttry",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":1101,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":5534,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1895,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["types/node",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["typing",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["ubuntu",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":2185,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":323,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["um",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["unconditional",{"_index":5458,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":5407,"title":{},"body":{"license.html":{}}}],["und",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":214,"title":{},"body":{"interfaces/Album.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":2875,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["understands",{"_index":5507,"title":{},"body":{"license.html":{}}}],["uneeded",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["unfair",{"_index":5368,"title":{},"body":{"license.html":{}}}],["unicorn",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":183,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["uniquealbums",{"_index":176,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniqueartists",{"_index":167,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["unit",{"_index":5653,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":5249,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1314,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":1260,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["unsubscribe",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":600,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["update.service",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["updated",{"_index":2186,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["updateinterval",{"_index":2777,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1532,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1544,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updates",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["updateservice",{"_index":356,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["updateservice.init",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["updating",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":5280,"title":{},"body":{"license.html":{}}}],["url",{"_index":718,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1342,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2707,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":631,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["url.createobjecturl(new",{"_index":1657,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.original",{"_index":1696,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.thumb",{"_index":1698,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1684,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":632,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["urls",{"_index":1656,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["urlsearchparams",{"_index":1415,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["usage",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":211,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["useclass",{"_index":5610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2376,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":5602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":908,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["usermediainput",{"_index":5527,"title":{},"body":{"todo.html":{}}}],["uses",{"_index":5226,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1576,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1577,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":5604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1578,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":3076,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["utc",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["v",{"_index":5374,"title":{},"body":{"license.html":{}}}],["v0.10.0",{"_index":5132,"title":{},"body":{"changelog.html":{}}}],["v0.11.0",{"_index":5130,"title":{},"body":{"changelog.html":{}}}],["v0.12.0",{"_index":5128,"title":{},"body":{"changelog.html":{}}}],["v0.13.0",{"_index":5126,"title":{},"body":{"changelog.html":{}}}],["v0.14.0",{"_index":5124,"title":{},"body":{"changelog.html":{}}}],["v0.15.0",{"_index":5120,"title":{},"body":{"changelog.html":{}}}],["v0.16.0",{"_index":5117,"title":{},"body":{"changelog.html":{}}}],["v0.17.0",{"_index":5114,"title":{},"body":{"changelog.html":{}}}],["v0.18.0",{"_index":5110,"title":{},"body":{"changelog.html":{}}}],["v0.19.0",{"_index":5103,"title":{},"body":{"changelog.html":{}}}],["v0.20.0",{"_index":5101,"title":{},"body":{"changelog.html":{}}}],["v0.21.0",{"_index":5095,"title":{},"body":{"changelog.html":{}}}],["v0.22.0",{"_index":5093,"title":{},"body":{"changelog.html":{}}}],["v0.23.0",{"_index":5089,"title":{},"body":{"changelog.html":{}}}],["v0.24.0",{"_index":5082,"title":{},"body":{"changelog.html":{}}}],["v0.25.0",{"_index":5080,"title":{},"body":{"changelog.html":{}}}],["v0.28.0",{"_index":5077,"title":{},"body":{"changelog.html":{}}}],["v0.29.0",{"_index":5075,"title":{},"body":{"changelog.html":{}}}],["v0.4.0",{"_index":5144,"title":{},"body":{"changelog.html":{}}}],["v0.5.0",{"_index":5142,"title":{},"body":{"changelog.html":{}}}],["v0.6.0",{"_index":5140,"title":{},"body":{"changelog.html":{}}}],["v0.7.0",{"_index":5138,"title":{},"body":{"changelog.html":{}}}],["v0.8.0",{"_index":5136,"title":{},"body":{"changelog.html":{}}}],["v0.9.0",{"_index":5134,"title":{},"body":{"changelog.html":{}}}],["v1.0.0",{"_index":5069,"title":{},"body":{"changelog.html":{}}}],["v1.0.1",{"_index":5067,"title":{},"body":{"changelog.html":{}}}],["v1.0.2",{"_index":5065,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":5063,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":5058,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":5056,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":5052,"title":{},"body":{"changelog.html":{}}}],["v1.10.0",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["v1.11.0",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["v1.11.1",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["v1.11.10",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["v1.11.11",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["v1.11.12",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["v1.11.2",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["v1.11.3",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["v1.11.4",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["v1.11.5",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["v1.11.6",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["v1.11.7",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["v1.11.8",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["v1.11.9",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["v1.12.0",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["v1.13.0",{"_index":4947,"title":{},"body":{"changelog.html":{}}}],["v1.14.0",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["v1.15.0",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["v1.16.0",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["v1.17.0",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["v1.18.0",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["v1.19.0",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":5048,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":5045,"title":{},"body":{"changelog.html":{}}}],["v1.2.2",{"_index":5042,"title":{},"body":{"changelog.html":{}}}],["v1.3.0",{"_index":5039,"title":{},"body":{"changelog.html":{}}}],["v1.4.0",{"_index":5033,"title":{},"body":{"changelog.html":{}}}],["v1.4.1",{"_index":5027,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":5024,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":5021,"title":{},"body":{"changelog.html":{}}}],["v1.6.1",{"_index":5018,"title":{},"body":{"changelog.html":{}}}],["v1.6.2",{"_index":5012,"title":{},"body":{"changelog.html":{}}}],["v1.6.3",{"_index":5010,"title":{},"body":{"changelog.html":{}}}],["v1.6.4",{"_index":5008,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["v1.7.1",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":5002,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":4998,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["v1.9.1",{"_index":4987,"title":{},"body":{"changelog.html":{}}}],["v10.0.0",{"_index":4446,"title":{},"body":{"changelog.html":{}}}],["v10.0.1",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["v10.0.2",{"_index":4440,"title":{},"body":{"changelog.html":{}}}],["v10.0.3",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["v10.0.4",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["v10.1.0",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["v10.2.0",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["v10.3.0",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["v10.3.1",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["v10.3.2",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["v11.0.0",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["v11.0.2",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["v11.1.0",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["v11.1.1",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["v11.1.2",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["v11.18.0",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["v11.2.0",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["v11.20.0",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["v11.22.0",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["v11.24.1",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["v11.3.0",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["v11.3.1",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["v11.30.1",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["v11.4.0",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["v11.4.1",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["v11.4.10",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["v11.4.11",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["v11.4.2",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["v11.4.3",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["v11.4.5",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["v11.4.6",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["v11.4.7",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["v11.4.8",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["v11.4.9",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["v11.5.0",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["v11.5.1",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["v11.5.10",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["v11.5.11",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["v11.5.12",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["v11.5.13",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["v11.5.14",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["v11.5.2",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["v11.5.3",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["v11.5.4",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["v11.5.5",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["v11.5.6",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["v11.5.7",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["v11.5.8",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["v11.5.9",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["v12",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["v12.0.0",{"_index":4233,"title":{},"body":{"changelog.html":{}}}],["v12.0.1",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["v12.0.10",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["v12.0.11",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["v12.0.12",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["v12.0.13",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["v12.0.14",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["v12.0.15",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["v12.0.16",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["v12.0.2",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["v12.0.3",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["v12.0.4",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["v12.0.5",{"_index":4208,"title":{},"body":{"changelog.html":{}}}],["v12.0.6",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["v12.0.7",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["v12.0.8",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["v12.0.9",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["v12.2.13",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["v12.2.5",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["v12.3.0",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["v12.6.2",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["v12.8.0",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["v12.9.0",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["v13",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["v13.0.0",{"_index":4139,"title":{},"body":{"changelog.html":{}}}],["v13.0.1",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["v13.0.10",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["v13.0.11",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["v13.0.12",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["v13.0.13",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["v13.0.16",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["v13.0.18",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["v13.0.19",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["v13.0.2",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["v13.0.20",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["v13.0.3",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["v13.0.5",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["v13.0.6",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["v13.0.7",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["v13.0.8",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["v13.0.9",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["v13.1.0",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["v13.1.1",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["v13.1.10",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["v13.1.11",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["v13.1.12",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["v13.1.2",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["v13.1.3",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["v13.1.4",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["v13.1.5",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["v13.1.6",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["v13.1.7",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["v13.1.8",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["v13.1.9",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["v13.10.1",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["v13.11.2",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["v13.11.4",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["v13.13.0",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["v13.14.2",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["v13.15.1",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["v13.2.0",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["v13.2.1",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["v13.2.2",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["v13.2.3",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["v13.2.4",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["v13.2.5",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["v13.2.6",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["v13.22.0",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["v13.24.2",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["v13.26.0",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["v13.28.0",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["v13.29.1",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["v13.29.3",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["v13.3.0",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["v13.3.1",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["v13.3.2",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["v13.3.3",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["v13.3.4",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["v13.3.5",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["v13.31.2",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["v13.32.0",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["v13.33.0",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["v13.34.0",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["v13.35.0",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["v13.35.1",{"_index":2922,"title":{},"body":{"changelog.html":{}}}],["v13.5.1",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["v13.7.2",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["v13.7.5",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["v14.0.0",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["v14.0.1",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["v14.0.10",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["v14.0.11",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["v14.0.12",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["v14.0.13",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["v14.0.2",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["v14.0.3",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["v14.0.4",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["v14.0.5",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["v14.0.6",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["v14.0.7",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["v14.0.8",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["v14.0.9",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["v14.1.0",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["v14.1.1",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["v14.1.10",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["v14.1.11",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["v14.1.12",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["v14.1.13",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["v14.1.14",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["v14.1.15",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["v14.1.16",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["v14.1.17",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["v14.1.18",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["v14.1.19",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["v14.1.2",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["v14.1.20",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["v14.1.23",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["v14.1.3",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["v14.1.4",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["v14.1.5",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["v14.1.6",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["v14.1.7",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["v14.1.8",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["v14.1.9",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["v15",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["v15.0.0",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["v15.0.1",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["v15.0.2",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["v15.0.3",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["v15.0.4",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["v15.0.5",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["v15.0.6",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["v15.0.7",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["v15.0.8",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["v15.0.9",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["v15.1.0",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["v15.1.1",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["v15.1.10",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["v15.1.11",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["v15.1.12",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["v15.1.13",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["v15.1.14",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["v15.1.16",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["v15.1.17",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["v15.1.2",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["v15.1.3",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["v15.1.4",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["v15.1.5",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["v15.1.6",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["v15.1.7",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["v15.1.8",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["v15.1.9",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["v15.4.4",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["v16.0.0",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["v16.0.1",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["v16.0.2",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["v16.0.3",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["v16.0.4",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["v16.0.5",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["v16.0.6",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["v17",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["v17.0.1",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["v17.0.10",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["v17.0.11",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["v17.0.12",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["v17.0.13",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["v17.0.14",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["v17.0.15",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["v17.0.16",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["v17.0.17",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["v17.0.18",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["v17.0.2",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["v17.0.3",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["v17.0.4",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["v17.0.5",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["v17.0.6",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["v17.0.7",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["v17.0.8",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["v17.0.9",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["v18",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["v18.0.0",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["v18.0.1",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["v18.1.0",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["v18.1.1",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["v18.16.5",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["v18.2.0",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["v18.2.2",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["v18.2.3",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["v18.2.4",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["v18.2.5",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["v18.2.6",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["v18.2.7",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["v19",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["v19.0.0",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["v19.0.1",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["v19.0.10",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["v19.0.2",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["v19.0.3",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["v19.0.4",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["v19.0.5",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["v19.0.6",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["v19.0.7",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["v19.0.8",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["v19.0.9",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["v19.1.0",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["v19.1.1",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["v19.2.0",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["v19.2.1",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["v19.2.10",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["v19.2.2",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["v19.2.3",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["v19.2.4",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["v19.2.5",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["v19.2.6",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["v19.2.7",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["v19.2.8",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["v19.2.9",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["v19.3.0",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["v19.4.0",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["v19.4.1",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["v19.4.10",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["v19.4.11",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["v19.4.12",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["v19.4.13",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["v19.4.14",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["v19.4.15",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["v19.4.2",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["v19.4.3",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["v19.4.4",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["v19.4.5",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["v19.4.6",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["v19.4.7",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["v19.4.8",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["v19.4.9",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["v19.5.0",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["v19.5.1",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["v19.5.3",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["v19.5.4",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["v2.0.2",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["v2.5.0",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["v2.5.3",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["v2.6.0",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["v2.6.1",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["v2.6.2",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["v2.6.3",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["v2.7.0",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["v2.8.1",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["v20.0.0",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["v20.0.1",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["v20.1.0",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["v20.1.1",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["v20.1.2",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["v20.1.3",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["v20.1.4",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["v20.2.0",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["v20.2.1",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["v20.2.10",{"_index":2937,"title":{},"body":{"changelog.html":{}}}],["v20.2.11",{"_index":2932,"title":{},"body":{"changelog.html":{}}}],["v20.2.12",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["v20.2.13",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["v20.2.14",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["v20.2.15",{"_index":2895,"title":{},"body":{"changelog.html":{}}}],["v20.2.16",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["v20.2.17",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["v20.2.18",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["v20.2.19",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["v20.2.2",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["v20.2.20",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["v20.2.21",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["v20.2.3",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["v20.2.4",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["v20.2.5",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["v20.2.6",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["v20.2.7",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["v20.2.8",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["v20.2.9",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["v20.8.6",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["v24",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["v3.0.3",{"_index":4914,"title":{},"body":{"changelog.html":{}}}],["v3.0.4",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["v3.0.5",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["v3.0.6",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["v3.0.7",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["v3.0.8",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["v3.0.9",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":4886,"title":{},"body":{"changelog.html":{}}}],["v3.10.0",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["v3.11.0",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["v3.4.0",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["v3.4.1",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["v3.5.0",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["v3.5.1",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["v3.6.0",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["v3.7.0",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["v3.8.0",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["v3.8.1",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["v3.9.0",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["v4.2.0",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["v4.3.1",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["v4.4.0",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["v4.5.0",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["v4.6.0",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["v4.7.0",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["v5.1.0",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["v5.2.0",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["v5.2.1",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["v5.2.10",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["v5.2.11",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["v5.2.12",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["v5.2.2",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["v5.2.3",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["v5.2.4",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["v5.2.5",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["v5.2.6",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["v5.2.7",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["v5.2.8",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["v5.2.9",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["v5.48.0",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["v6.0.0",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["v6.0.1",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["v6.1.0",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["v6.1.1",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["v6.2.0",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["v6.2.1",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["v6.2.2",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["v6.2.3",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["v6.2.4",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["v6.2.5",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["v6.2.6",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["v6.3.0",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["v6.3.1",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["v6.4.0",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["v6.4.1",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["v6.5.0",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["v6.5.1",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["v6.5.2",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["v6.5.3",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["v6.5.4",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["v6.5.5",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["v6.5.6",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["v6.5.7",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["v6.5.8",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["v6.5.9",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["v6.6.0",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["v6.6.1",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["v6.6.2",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["v6.6.3",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["v6.6.4",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["v6.6.5",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["v6.6.6",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["v6.6.7",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["v6.7.0",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["v6.7.1",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["v6.7.2",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["v6.7.3",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["v6.7.4",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["v7.0.0",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["v7.0.1",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["v7.0.2",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["v7.0.3",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["v7.0.4",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["v7.0.5",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["v7.0.6",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["v7.1.0",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["v7.1.1",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["v7.13.1",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["v7.13.3",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["v7.13.4",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["v7.2.0",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["v8.0.0",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["v8.0.1",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["v8.0.3",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["v8.1.0",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["v8.1.1",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["v8.1.10",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["v8.1.2",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["v8.1.3",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["v8.1.4",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["v8.1.5",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["v8.1.6",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["v8.1.7",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["v8.1.8",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["v8.1.9",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["v8.26.1",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["v8.31.0",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["v8.4.21",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["v8.6.0",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["v9.0.0",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["v9.0.1",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["v9.0.10",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["v9.0.11",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["v9.0.2",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["v9.0.3",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["v9.0.4",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["v9.0.5",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["v9.0.6",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["v9.0.7",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["v9.0.8",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["v9.0.9",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["v9.1.0",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["v9.1.1",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["v9.1.2",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["v9.1.3",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["v9.2.0",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["v9.2.1",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["v9.2.2",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["v9.2.3",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["v9.2.4",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["validfiles",{"_index":1908,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.length",{"_index":1913,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.push",{"_index":1911,"title":{},"body":{"injectables/PlayerService.html":{}}}],["value",{"_index":466,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":929,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":665,"title":{},"body":{"pipes/BandPipe.html":{}}}],["value.tostring().slice(0",{"_index":663,"title":{},"body":{"pipes/BandPipe.html":{}}}],["values",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["var",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":5544,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables.scss",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["variant",{"_index":2110,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["various",{"_index":683,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verfügbar",{"_index":2541,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":5203,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle).then((granted",{"_index":876,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":905,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2526,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2524,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2535,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2528,"title":{},"body":{"injectables/UpdateService.html":{}}}],["versions",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["very",{"_index":2170,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vi",{"_index":5376,"title":{},"body":{"license.html":{}}}],["via",{"_index":5526,"title":{},"body":{"todo.html":{},"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":814,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["vibrant.from(url).getpalette",{"_index":1720,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1613,"title":{},"body":{"injectables/MetadataService.html":{}}}],["view",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":2149,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":2298,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('menutrigger",{"_index":2144,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild('scrollviewport",{"_index":2147,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport",{"_index":2160,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":2198,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":2215,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":2166,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":2189,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":2222,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":2214,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":5391,"title":{},"body":{"license.html":{}}}],["virtual",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":1013,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visible",{"_index":1014,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":2197,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":2200,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":3071,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["visualizefrequencybars",{"_index":2676,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2681,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2677,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2683,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["visualizer.component.html",{"_index":2554,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2555,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":840,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":2150,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":411,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":325,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":321,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizers",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["visualizerworker",{"_index":2700,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2797,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals",{"_index":3061,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["visuals.types",{"_index":2692,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2637,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2634,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2633,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":311,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":414,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":2563,"title":{"injectables/VisualsService.html":{}},"body":{"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":2668,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":315,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["vm2",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":2109,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["volume",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlayerToolbarComponent.html":{}}}],["volumeicon",{"_index":2015,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["voluntarily",{"_index":5334,"title":{},"body":{"license.html":{}}}],["vulnerabilities",{"_index":5061,"title":{},"body":{"changelog.html":{}}}],["w9jds/firebase",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["wait",{"_index":2177,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":5476,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5399,"title":{},"body":{"license.html":{}}}],["waives",{"_index":5408,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2807,"title":{},"body":{"injectables/WakelockService.html":{},"changelog.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2813,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":1863,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":5204,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":1915,"title":{},"body":{"injectables/PlayerService.html":{}}}],["warns",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":5260,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["wav",{"_index":949,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["waveform",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["we're",{"_index":1038,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/PlayerService.html":{}}}],["web",{"_index":2881,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["webmanifest",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["webpack",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["webstorage",{"_index":514,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"dependencies.html":{}}}],["webworker",{"_index":5520,"title":{},"body":{"todo.html":{}}}],["well",{"_index":5416,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1701,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2545,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":5310,"title":{},"body":{"license.html":{}}}],["whether",{"_index":5414,"title":{},"body":{"license.html":{}}}],["white",{"_index":1073,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["whitelist",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":1272,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window",{"_index":1901,"title":{},"body":{"injectables/PlayerService.html":{}}}],["window.focus",{"_index":1904,"title":{},"body":{"injectables/PlayerService.html":{}}}],["window.showopenfilepicker",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":5291,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":5600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":5598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":5595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1524,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{},"license.html":{}}}],["withviewtransitions",{"_index":5601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":5285,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1336,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1341,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":5587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workers",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":3121,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["works",{"_index":898,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":5273,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":5419,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["writablesignal",{"_index":1081,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["writes",{"_index":2374,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["writing",{"_index":5531,"title":{},"body":{"todo.html":{}}}],["wurde",{"_index":1164,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":81,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["yield",{"_index":1630,"title":{},"body":{"injectables/MetadataService.html":{}}}],["z",{"_index":1066,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zone",{"_index":2695,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["zoneless",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["zu",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["zugewiesen",{"_index":1144,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Album.html":{"url":"interfaces/Album.html","title":"interface - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { Router } from '@angular/router';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  private router = inject(Router);\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n\n  readonly searchTerm = signal('');\n\n  private readonly indexedDbTracks = signal([]);\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    let filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.year.localeCompare(b.year));\n  });\n\n  readonly tracks = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n    const searchTerm = this.searchTerm();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('metatags'));\n      const tagsWithOptionalBlobUrls = result.map((tag) => {\n        return this.metadataService.createObjectUrlForEmbeddedPicture(tag);\n      });\n\n      this.indexedDbTracks.set(tagsWithOptionalBlobUrls || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByCrc(track.crc);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByCrc(index: number, track: IndexedDbTrackMetadata): string {\n    return track.crc;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  templateUrl: './app.component.html',\n  imports: [ShellComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    const updateService = inject(UpdateService);\n    const iconRegistry = inject(MatIconRegistry);\n    const sanitizer = inject(DomSanitizer);\n    const themeService = inject(ThemeService);\n\n    updateService.init();\n\n    themeService.initializeTheme();\n\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    iconRegistry.addSvgIcon('logo', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._eqGainNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      this._eqGainNode.disconnect(analyser);\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      this._eqGainNode.disconnect(analyser);\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true,\n  standalone: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand, ...arguments_: unknown[]): string {\n    if (!value) {\n      return '';\n    }\n\n    if (value = 1000 && value = 10_000) {\n      return value.toString().slice(0, 2) + 'K';\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate',\n  standalone: true\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | undefined): string {\n    if (!value) {\n      return '0';\n    }\n    const bitrate = Math.round(value / 1000);\n    return `${bitrate} kb/s`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Color {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtImage.html":{"url":"interfaces/CoverArtImage.html","title":"interface - CoverArtImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            front\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            thumbnails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        front\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        front:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnails:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtResponse.html":{"url":"interfaces/CoverArtResponse.html","title":"interface - CoverArtResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            images\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         CoverArtImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverArtImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            TimePipe\n                            BitratePipe\n                                VisualizerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Readonly\n                                coverUrl\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.original)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BitratePipe } from './bitrate.pipe';\nimport { VisualizerComponent } from '../visualizer/visualizer.component';\nimport { PlayerService } from '../player.service';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [TimePipe, BitratePipe, VisualizerComponent]\n})\nexport class CoverDisplayComponent {\n  private themeService = inject(ThemeService);\n  playerService = inject(PlayerService);\n\n  readonly coverUrl = computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.original);\n\n  readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = playerService.currentlyLoadedTrack();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = playerService.currentlyLoadedTrack();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirHandleEntry.html":{"url":"interfaces/DirHandleEntry.html","title":"interface - DirHandleEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirHandleEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:     FileSystemDirectoryHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemDirectoryHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('dirHandle', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('dirHandle', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-equalizer\n            \n\n\n            \n                imports\n                \n                            MatSliderModule\n                            BandPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                BANDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { AudioService, FREQUENCY_BANDS } from '../audio.service';\nimport { BandPipe } from './band.pipe';\nimport { MatSliderModule } from '@angular/material/slider';\n\n@Component({\n  selector: 'mtb-equalizer',\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  imports: [MatSliderModule, BandPipe],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  audioService = inject(AudioService);\n\n  BANDS = FREQUENCY_BANDS;\n\n  displayFunction(value: number): string {\n    const number_ = value.toFixed(1);\n    return number_ + ' dB';\n  }\n}\n\n    \n\n    \n        \n  \n    @for (band of BANDS; track band; let i = $index) {\n      \n        \n          {{ band | band }}\n          \n        \n      \n    }\n\n    \n      \n        GAIN\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for (band of BANDS; track band; let i = $index) {                        {{ band | band }}                            }                  GAIN                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EqualizerGainValues.html":{"url":"interfaces/EqualizerGainValues.html","title":"interface - EqualizerGainValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EqualizerGainValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [band: number]:        number\n\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._eqGainNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      this._eqGainNode.disconnect(analyser);\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      this._eqGainNode.disconnect(analyser);\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ALLOWED_MIMETYPES = [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n];\n\nexport const ALLOWED_EXTENSIONS = ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4'];\n\nexport interface FileData {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Readonly\n                                fileHandlesDropped\n                            \n                            \n                                    Readonly\n                                filesDroped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(['*/*'])\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fileHandlesDropped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filesDroped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n  readonly fileHandlesDropped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n\n    // Try to get file handles first\n    if (event.dataTransfer?.items && 'getAsFileSystemHandle' in event.dataTransfer.items[0]) {\n      try {\n        const fileHandles: FileSystemFileHandle[] = [];\n        const promises: Promise[] = [];\n\n        for (const item of Array.from(event.dataTransfer.items)) {\n          const promise = (item as any).getAsFileSystemHandle().then((handle: any) => {\n            if (handle && handle.kind === 'file') {\n              fileHandles.push(handle);\n            }\n          });\n          promises.push(promise);\n        }\n\n        // When all promises are resolved, emit the file handles\n        Promise.all(promises)\n          .then(() => {\n            if (fileHandles.length > 0) {\n              this.fileHandlesDropped.emit(fileHandles);\n            } else {\n              // Fall back to regular files if no file handles were obtained\n              this.handleFileFallback(event);\n            }\n          })\n          .catch(() => {\n            // Fall back to regular files on error\n            this.handleFileFallback(event);\n          });\n\n        return; // Exit early - we're handling with file handles\n      } catch (error) {\n        // Fall through to file fallback\n        console.warn('File System Access API failed:', error);\n      }\n    }\n\n    // Fallback to regular files\n    this.handleFileFallback(event);\n  }\n\n  private handleFileFallback(event: DragEvent) {\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (const file of Array.from(droppedFiles)) {\n      if (file && this.allowedTypes().includes(file.type)) {\n        files.push(file);\n      }\n    }\n    this.filesDroped.emit(files);\n  }\n}\n\n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileData } from './file-loader.helpers';\nimport { WritableSignal } from '@angular/core';\n\nexport abstract class FileLoaderService {\n  abstract currentFolderHandle: WritableSignal;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                            \n                                buttonActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ButtonGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private checkIntervals: number[] = [];\n  private pressedButtonsCaches: ActionCache[][] = [];\n  private activeAxesCaches: ActionCache[][] = [];\n\n  buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-hotkeys-help-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _pause\n                            \n                            \n                                defaults\n                            \n                            \n                                    Optional\n                                dialogRef\n                            \n                            \n                                helpOpen\n                            \n                            \n                                hotkeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    element: this.document\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hotkeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private worker: Worker;\n  private nextId = 0;\n  private pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexedDbTrackMetadata.html":{"url":"interfaces/IndexedDbTrackMetadata.html","title":"interface - IndexedDbTrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IndexedDbTrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TrackMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService implements FileLoaderService {\n  private fileInput!: HTMLInputElement;\n\n  private files: File[] = [];\n\n  constructor() {\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  readonly currentFolderHandle = signal(undefined);\n\n  async openFiles(): Promise {\n    return this.files.map((file) => ({ file }));\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            NgArrayPipesModule\n                            MatMenu\n                            MatMenuContent\n                            MatMenuItem\n                            MatMenuTrigger\n                            MatIcon\n                            MatIconButton\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            SafePipe\n                            MatHint\n                            FormsModule\n                            MatFormField\n                            MatInput\n                            MatPrefix\n                            MatSuffix\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                filteredBySerchterm\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                searchTerm\n                            \n                            \n                                    Readonly\n                                selectedAlbum\n                            \n                            \n                                    Readonly\n                                selectedArtist\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                uniqueAlbums\n                            \n                            \n                                    Readonly\n                                uniqueArtists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAlbumToPlaylist\n                            \n                            \n                                    Async\n                                addArtistToPlaylist\n                            \n                            \n                                    Async\n                                addTracksToPlaylist\n                            \n                            \n                                    Async\n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                playTrack\n                            \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                trackByAlbum\n                            \n                            \n                                trackByArtist\n                            \n                            \n                                trackByCrc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAlbumToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAlbumToPlaylist(album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addArtistToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addArtistToPlaylist(artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTracksToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbTracks\n                                            \n                                                        IndexedDbTrackMetadata[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTrackToPlaylist(track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAlbum\n                        \n                    \n                \n            \n            \n                \ntrackByAlbum(index: number, album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByArtist\n                        \n                    \n                \n            \n            \n                \ntrackByArtist(index: number, artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:239\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByCrc\n                        \n                    \n                \n            \n            \n                \ntrackByCrc(index: number, track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:247\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredBySerchterm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedAlbum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedArtist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n    const searchTerm = this.searchTerm();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueAlbums\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.year.localeCompare(b.year));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueArtists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { Router } from '@angular/router';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  private router = inject(Router);\n  metadataService = inject(MetadataService);\n  playerService = inject(PlayerService);\n\n  readonly searchTerm = signal('');\n\n  private readonly indexedDbTracks = signal([]);\n\n  readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    let filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.year.localeCompare(b.year));\n  });\n\n  readonly tracks = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n    const searchTerm = this.searchTerm();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('metatags'));\n      const tagsWithOptionalBlobUrls = result.map((tag) => {\n        return this.metadataService.createObjectUrlForEmbeddedPicture(tag);\n      });\n\n      this.indexedDbTracks.set(tagsWithOptionalBlobUrls || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByCrc(track.crc);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByCrc(index: number, track: IndexedDbTrackMetadata): string {\n    return track.crc;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ tracks().length }} entries\n\n\n\n  \n    \n      \n        (All)\n        \n          \n            \n           \n      \n        {{ artist }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        (All)\n        \n          \n            \n           \n      \n        \n          @if (album && album.coverUrl) {\n            \n          }\n        \n        {{ album.name }}{{ album.year ? ' | ' + album.year : '' }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        (All)\n        \n          \n            \n          \n        \n      \n      \n        \n          @if (track && track.coverUrl) {\n            \n          }\n        \n        @if (selectedAlbum()) {\n          {{ track.track ? track.track + '. ' : '' }}{{ track.title || track.fileName }}\n        } @else {\n          {{ track.title || track.fileName }}\n        }\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (searchTerm()) {                }  {{ tracks().length }} entries                    (All)                                                       {{ artist }}                                                                          Add to Playlist                          (All)                                                                 @if (album && album.coverUrl) {                      }                {{ album.name }}{{ album.year ? \\' | \\' + album.year : \\'\\' }}                                                                          Add to Playlist                          (All)                                                                              @if (track && track.coverUrl) {                      }                @if (selectedAlbum()) {          {{ track.track ? track.track + \\'. \\' : \\'\\' }}{{ track.title || track.fileName }}        } @else {          {{ track.title || track.fileName }}        }                                                                          Add to Playlist      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                processionPercent\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToLibrary\n                            \n                            \n                                createObjectUrlForEmbeddedPicture\n                            \n                            \n                                    Async\n                                createTrackFromFile\n                            \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToLibrary\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToLibrary(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AsyncGenerator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createObjectUrlForEmbeddedPicture\n                        \n                    \n                \n            \n            \n                \ncreateObjectUrlForEmbeddedPicture(meta: TrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meta\n                                            \n                                                            TrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TrackMetadata\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTrackFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTrackFromFile(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processionPercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { crc32 } from '@allex/crc32';\nimport { computed, inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata, type Track, TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\nimport { FileData } from '../file-loader-service/file-loader.helpers';\n\n// import * as SparkMD5 from 'spark-md5';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private id3TagsService = inject(Id3TagsService);\n  private lastfmMetadataService = inject(LastfmMetadataService);\n  private musicbrainzService = inject(MusicbrainzService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  private readonly totalFilesToProcess = signal(0);\n  private readonly filesToProcess = signal(0);\n  readonly processionPercent = computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  });\n\n  async *addFilesToLibrary(...fileDatas: FileData[]): AsyncGenerator {\n    if (fileDatas?.length) {\n      this.totalFilesToProcess.set(fileDatas.length);\n      this.filesToProcess.set(fileDatas.length);\n      for (const fileData of fileDatas.values()) {\n        const track = await this.createTrackFromFile(fileData);\n        if (track) {\n          yield track; // Yield each track as soon as it's ready\n        }\n        this.filesToProcess.update((files) => files - 1);\n      }\n      this.totalFilesToProcess.set(0);\n    }\n  }\n\n  async createTrackFromFile(fileData: FileData): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.getMetadata(fileData);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: fileData.file,\n      fileHandle: fileData.fileHandle,\n      metadata: metadata\n    };\n  }\n\n  async getMetadata(fileData: FileData): Promise {\n    // console.time('hash');\n    const crc = generateFileHash(fileData.file);\n    // console.timeEnd('hash');\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('metatags', crc));\n\n      if (metadataCache) {\n        if (\n          metadataCache.embeddedPicture &&\n          this.useTagEmbeddedPicture() &&\n          (metadataCache.coverUrl.thumb === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())\n        ) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    // console.time('id3tags');\n    const tags = await this.id3TagsService.extractTags(fileData.file);\n    // console.timeEnd('id3tags');\n    if (!tags) {\n      // if no tags\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverPicture | undefined;\n\n    if (this.useWebMetainfos()) {\n      if (tags.artist && tags.album) {\n        // console.time('webcover');\n        coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n        if (!coverUrls) {\n          coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n        }\n        // console.timeEnd('webcover');\n      } else {\n        // console.warn('Missing tags for lookup');\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n\n    if (coverUrls?.original) {\n      // console.time('vibrant');\n      palette = await extractColorsWithNodeVibrant(coverUrls.original);\n      // console.timeEnd('vibrant');\n    } else if (tags.picture) {\n      // console.time('vibrant');\n      const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n      palette = await extractColorsWithNodeVibrant(objectUrl);\n      URL.revokeObjectURL(objectUrl);\n      // console.timeEnd('vibrant');\n    }\n\n    const metadata: IndexedDbTrackMetadata = {\n      crc: crc,\n      fileName: fileData.file.name,\n      fileHandle: fileData.fileHandle,\n      coverUrl: coverUrls ?? { thumb: this.PLACEHOLDER_URL, original: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await this.indexedDBService.add('metatags', metadata).toPromise();\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (meta.coverUrl.original === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      if (meta.coverUrl.original.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.original);\n      }\n      if (meta.coverUrl.thumb.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.thumb);\n      }\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nfunction generateFileHash(file: File): string {\n  // TODO: replace with real file hashing? https://stackoverflow.com/questions/20917710/fast-file-hashing-of-large-files\n  const hashString: string = file.name + file.type + file.size + file.lastModified;\n  return crc32(hashString, 'hex') as string;\n}\n//\n// async function generateFileHashMD5(file: File): Promise {\n//   return SparkMD5.ArrayBuffer.hash(await file.arrayBuffer());\n// }\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  const palette = await Vibrant.from(url).getPalette();\n  return {\n    vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n    darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n    lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n    muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n    darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n    lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  templateUrl: './metadata-settings.component.html',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule]\n})\nexport class MetadataSettingsComponent {\n  metadataService = inject(MetadataService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n    this.localStorageService.store('useWebMetainfos', event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n    this.localStorageService.store('useTagsCache', event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('useTagEmbeddedPicture', event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('preferTagEmbeddedPicture', event.checked);\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('metatags').toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzReleaseGroup.html":{"url":"interfaces/MusicbrainzReleaseGroup.html","title":"interface - MusicbrainzReleaseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzReleaseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            first-release-date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first-release-date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first-release-date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzResponse.html":{"url":"interfaces/MusicbrainzResponse.html","title":"interface - MusicbrainzResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            release-groups\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release-groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release-groups:         MusicbrainzReleaseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MusicbrainzReleaseGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('dirHandle', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('dirHandle', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-player\n            \n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { PlayerService } from './player.service';\nimport { TitleService } from '../services/title.service';\nimport { AudioService } from './audio.service';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  selector: 'mtb-player',\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [PlaylistComponent, MatButtonModule, MatIconModule, CoverDisplayComponent, MatToolbarModule, MatTooltipModule, MatSliderModule, MatMenuModule]\n})\nexport default class PlayerComponent implements OnInit {\n  private titleService = inject(TitleService);\n  private fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n\n  ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                playTrackByCrc\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                removeTrackFromPlaylist\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:51\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \naddTrackToPlaylist(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:215\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrackByCrc\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrackByCrc(crc: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:254\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                crc\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:236\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTrackFromPlaylist\n                        \n                    \n                \n            \n            \n                \nremoveTrackFromPlaylist(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:298\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:302\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:281\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:316\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:335\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n  private audioService = inject(AudioService);\n  private localStorageService = inject(LocalStorageService);\n  private fileLoaderService = inject(FileLoaderService);\n  private metadataService = inject(MetadataService);\n  private themeService = inject(ThemeService);\n  private wakelockService = inject(WakelockService, { optional: true });\n  private mediaSessionService = inject(MediaSessionService, { optional: true });\n\n  private destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  readonly durationSeconds = computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Focus the window first to ensure we're the active window\n        window.focus();\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n\n        const validFiles: FileData[] = [];\n\n        for (const fileHandle of launchParameters.files) {\n          try {\n            const file = await fileHandle.getFile();\n            if (ALLOWED_MIMETYPES.includes(file.type)) {\n              validFiles.push({ file, fileHandle });\n            }\n          } catch (error) {\n            console.error('Error processing file:', error);\n          }\n        }\n\n        if (validFiles.length) {\n          await this.addFilesToPlaylist(...validFiles);\n          // If you want to play the first file immediately\n          // if (validFiles.length && this.currentPlaylist().length) {\n          //   const newTrack = this.currentPlaylist()[this.currentPlaylist().length - validFiles.length];\n          //   await this.playTrack(newTrack);\n          // }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.original ? [{ src: track.metadata.coverUrl.original, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const fileDatas: FileData[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...fileDatas);\n  }\n\n  addTrackToPlaylist(song: Track) {\n    if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.crc === song.metadata?.crc)) {\n      this.currentPlaylist.update((playlist) => [...playlist, song]);\n    }\n  }\n\n  removeTrackFromPlaylist(track: Track) {\n    // If the removed track is currently loaded, stop playback\n    if (this.currentlyLoadedTrack() === track) {\n      void this.stop();\n    }\n\n    // If the removed track is currently selected, deselect it\n    if (this.selectedTrack() === track) {\n      this.selectedTrack.set(undefined);\n    }\n    // Update the playlist by filtering out the specified track\n    this.currentPlaylist.update((playlist) => playlist.filter((t) => t !== track));\n  }\n\n  async addFilesToPlaylist(...fileDatas: FileData[]) {\n    for await (const track of this.metadataService.addFilesToLibrary(...fileDatas)) {\n      this.addTrackToPlaylist(track);\n    }\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async playTrackByCrc(crc: string) {\n    const playlist = this.currentPlaylist();\n\n    const track = playlist.find((playlistTrack) => playlistTrack.metadata?.crc === crc);\n    if (track) {\n      await this.playTrack(track);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // eslint-disable-next-line sonarjs/pseudo-random\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerToolbarComponent.html":{"url":"components/PlayerToolbarComponent.html","title":"component - PlayerToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-toolbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            MatIcon\n                            MatIconButton\n                            MatMenu\n                            MatSlider\n                            MatSliderThumb\n                            MatToolbar\n                            MatTooltip\n                            TimePipe\n                            MatMenuTrigger\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-toolbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player-toolbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                fileLoaderService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadLastDirectory\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showFilePickerAndLoadFiles\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLastDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLastDirectory()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showFilePickerAndLoadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    showFilePickerAndLoadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileLoaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FileLoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatMenu, MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { TimePipe } from '../time.pipe';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { PlayerService } from '../player.service';\nimport { AudioService } from '../audio.service';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { GamepadAxes, GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { HotkeysService } from '../../services/hotkeys/hotkeys.service';\nimport { FileLoaderService } from '../file-loader-service/file-loader.service.abstract';\n\n@Component({\n  selector: 'player-toolbar',\n  imports: [CommonModule, MatIcon, MatIconButton, MatMenu, MatSlider, MatSliderThumb, MatToolbar, MatTooltip, TimePipe, MatMenuTrigger, MatMenuModule],\n  templateUrl: './player-toolbar.component.html',\n  styleUrl: './player-toolbar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayerToolbarComponent implements OnInit, OnDestroy {\n  private gamepadService = inject(GamepadService, { optional: true });\n  private hotkeysService = inject(HotkeysService, { optional: true });\n  fileLoaderService = inject(FileLoaderService);\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n\n  readonly volumeIcon = computed(() => this.getVolumeIconForLevel(this.audioService.volume()));\n\n  ngOnInit() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showFilePickerAndLoadFiles());\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n\n  onSliderPositionChanged(value: number) {\n    if (value !== null) {\n      this.playerService.setSeekPosition(value);\n    }\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol \n    \n\n    \n        \n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n    \n      \n      Load folder/files...\n    \n    @if (fileLoaderService.currentFolderHandle()) {\n      \n        \n        Load last directory\n      \n    }\n  \n\n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (audioService.isPlaying()) {          } @else {          }                                                    Load folder/files...        @if (fileLoaderService.currentFolderHandle()) {                      Load last directory          }      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            FormsModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                menuTrigger\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                scrollViewport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                onContextMenu\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByCrc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContextMenu\n                        \n                    \n                \n            \n            \n                \nonContextMenu(event: MouseEvent, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByCrc\n                        \n                    \n                \n            \n            \n                \ntrackByCrc(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        menuTrigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('menuTrigger')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scrollViewport\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('scrollViewport')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'mtb-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    FormsModule,\n    MatMenuModule\n  ]\n})\nexport class PlaylistComponent {\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  private destroRef = inject(DestroyRef);\n\n  readonly menuTrigger = viewChild('menuTrigger');\n\n  readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 140;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.playerService.currentPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.playerService.currentPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.playerService.currentPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.crc === currentTrack.metadata?.crc);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByCrc(index: number, song: Track): string {\n    return song.metadata.crc;\n  }\n\n  onContextMenu(event: MouseEvent, song: Track): void {\n    event.preventDefault();\n    const trigger = this.menuTrigger();\n    if (!trigger) return;\n    trigger.menuData = { song: song };\n\n    // Open with position\n    trigger.openMenu();\n\n    // set position\n    if (trigger.menu) {\n      // Forcefully reset the menu position after it's opened\n      setTimeout(() => {\n        const overlayRef = document.querySelector('.cdk-overlay-pane:last-child') as HTMLElement;\n        if (overlayRef) {\n          overlayRef.style.position = 'absolute';\n          overlayRef.style.left = `${event.clientX}px`;\n          overlayRef.style.top = `${event.clientY}px`;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying) {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n\n\n\n  \n\n\n\n\n  \n    \n      \n      Remove from playlist\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (song && song.metadata && song.metadata.coverUrl) {                  }        @let songPlaying = isPlaying(song)();        @if (songPlaying) {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }                          Remove from playlist      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverPicture.html":{"url":"interfaces/RemoteCoverPicture.html","title":"interface - RemoteCoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            original\n                                        \n                                \n                                \n                                        \n                                            thumb\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        original\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumb:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-settings\n            \n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  selector: 'mtb-settings',\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss',\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent]\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                                FileDropOverlayComponent\n                                PlayerToolbarComponent\n                            MatProgressBar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                    Readonly\n                                isHandset\n                            \n                            \n                                loaderService\n                            \n                            \n                                metadataService\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                sidenav\n                            \n                            \n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                    Async\n                                onFileHandlesDropped\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFileHandlesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFileHandlesDropped(files: FileSystemFileHandle[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        FileSystemFileHandle[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('drawer')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { PlayerService } from '../player/player.service';\nimport { ALLOWED_MIMETYPES, FileData } from '../player/file-loader-service/file-loader.helpers';\nimport { PlayerToolbarComponent } from '../player/player-toolbar/player-toolbar.component';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../player/metadata-service/metadata.service';\n\n@Component({\n  selector: 'mtb-shell',\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss',\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    RouterOutlet,\n    FileDropOverlayComponent,\n    PlayerToolbarComponent,\n    MatProgressBar\n  ]\n})\nexport class ShellComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  private router = inject(Router);\n  titleService = inject(TitleService);\n  loaderService = inject(LoaderService);\n  playerService = inject(PlayerService);\n  metadataService = inject(MetadataService);\n\n  readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  private isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files.map((file) => ({ file })));\n  }\n\n  async onFileHandlesDropped(files: FileSystemFileHandle[]) {\n    const fileData: FileData[] = [];\n    for (const fileHandle of files) {\n      const file = await fileHandle.getFile();\n      fileData.push({ file, fileHandle });\n    }\n\n    return this.playerService.addFilesToPlaylist(...fileData);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n\n      @if (loaderService.isLoading()) {\n        \n      }\n\n      \n\n      @let currentTrack = playerService.currentlyLoadedTrack();\n      {{ currentTrack?.metadata?.artist ? currentTrack?.metadata?.artist + ' - ' : '' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n    \n\n    @if (metadataService.processionPercent() \n    }\n    \n\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }            @let currentTrack = playerService.currentlyLoadedTrack();      {{ currentTrack?.metadata?.artist ? currentTrack?.metadata?.artist + \\' - \\' : \\'\\' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}        @if (metadataService.processionPercent()     }              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                buttonTooltip\n                            \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        buttonTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  templateUrl: './storage-settings.component.html',\n  imports: [MatCardModule, MatButtonModule]\n})\nexport class StorageSettingsComponent {\n  private localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { TinyColor } from '@thebespokepixel/es-tinycolor';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Color } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  private primaryColor = FALLBACK_PRIMARY_COLOR;\n\n  private accentColor = FALLBACK_ACCENT_COLOR;\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  primaryColorPalette: Color[] = [];\n  accentColorPalette: Color[] = [];\n\n  initializeTheme() {\n    this.setOverlayClass();\n    this.setPrimaryColor(this.primaryColor);\n    this.setAccentColor(this.accentColor);\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n    this.localStorageService.store('darkMode', darkMode);\n    this.setOverlayClass();\n  }\n\n  setColors(colors: ColorConfig) {\n    this.setPrimaryColor(colors.mainColor);\n    this.setAccentColor(colors.peakColor);\n  }\n\n  private setPrimaryColor(color?: string) {\n    this.primaryColor = color || FALLBACK_PRIMARY_COLOR;\n    this.primaryColorPalette = this.computeColors(this.primaryColor);\n\n    for (const clr of this.primaryColorPalette) {\n      document.documentElement.style.setProperty(`--theme-primary-${clr.name}`, clr.hex);\n    }\n\n    this.meta.addTag({ name: 'theme-color', content: this.primaryColor }, true);\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor });\n  }\n\n  private setAccentColor(color?: string) {\n    this.accentColor = color || FALLBACK_ACCENT_COLOR;\n    this.accentColorPalette = this.computeColors(this.accentColor);\n\n    for (const clr of this.accentColorPalette) {\n      document.documentElement.style.setProperty(`--theme-accent-${clr.name}`, clr.hex);\n    }\n  }\n\n  private setOverlayClass() {\n    if (this.darkMode()) {\n      document.documentElement.style.setProperty('--app-color-scheme', 'dark');\n    } else {\n      document.documentElement.style.setProperty('--app-color-scheme', 'light');\n    }\n  }\n\n  private computeColors(hex: string): Color[] {\n    return [\n      this.getColorObject(new TinyColor(hex).lighten(55), '0'),\n      this.getColorObject(new TinyColor(hex).lighten(45), '10'),\n      this.getColorObject(new TinyColor(hex).lighten(35), '20'),\n      this.getColorObject(new TinyColor(hex).lighten(30), '25'),\n      this.getColorObject(new TinyColor(hex).lighten(25), '30'),\n      this.getColorObject(new TinyColor(hex).lighten(20), '35'),\n      this.getColorObject(new TinyColor(hex).lighten(15), '40'),\n      this.getColorObject(new TinyColor(hex), '50'),\n      this.getColorObject(new TinyColor(hex).darken(5), '60'),\n      this.getColorObject(new TinyColor(hex).darken(10), '70'),\n      this.getColorObject(new TinyColor(hex).darken(15), '80'),\n      this.getColorObject(new TinyColor(hex).darken(18), '90'),\n      this.getColorObject(new TinyColor(hex).darken(21), '95'),\n      this.getColorObject(new TinyColor(hex).darken(24), '98'),\n      this.getColorObject(new TinyColor(hex).darken(27), '99'),\n      this.getColorObject(new TinyColor(hex).darken(30), '100')\n    ];\n  }\n\n  private getColorObject(value: TinyColor, name: string): Color {\n    const color = new TinyColor(value);\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name: name,\n      hex: color.toHexString(false),\n      darkContrast: color.getBrightness() > lightnessLimit\n      // darkContrast: c.isLight()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  templateUrl: './theme-settings.component.html',\n  imports: [MatCardModule, MatCheckboxModule]\n})\nexport class ThemeSettingsComponent {\n  themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true,\n  standalone: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            crc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private swUpdate = inject(SwUpdate);\n  private dialog = inject(MatDialog);\n  private destroRef = inject(DestroyRef);\n\n  constructor() {\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroRef)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alpha\n                            \n                            \n                                analyser\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Readonly\n                                gap\n                            \n                            \n                                    Readonly\n                                lineThickness\n                            \n                            \n                                localStorageService\n                            \n                            \n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Readonly\n                                smoothing\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LocalStorageService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule]\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  private gamepadService = inject(GamepadService, { optional: true });\n  audioService = inject(AudioService);\n  playerService = inject(PlayerService);\n  visualsService = inject(VisualsService);\n  localStorageService = inject(LocalStorageService);\n\n  readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                analyser\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                mode\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({})\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('bars')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ thickness: 2 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]',\n  standalone: true\n})\nexport class VisualsDirective implements OnDestroy {\n  // private zone = inject(NgZone);\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i  {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                wakelock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        wakelock\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WakeLockSentinel\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  wakelock?: WakeLockSentinel;\n\n  constructor() {}\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\nGenerated by auto-changelog.\nv20.2.21\n\nchore(deps): update dependency angular-eslint to v19.3.0 #550\nfeat: remove init from file loader service. use signal for current dir handle, only show reload entry when dirHandle exists 0e3c35d\nfeat: refactor cover display to use player service for current track and cover URL, show artist and title on toolbar on the right side 9bb71cc\nfeat: enhance equalizer filter settings with dynamic Q values for improved audio quality e38cec9\n\nv20.2.20\n\n23 March 2025\n\n\nfeat: add context menu to remove track from playlist 713322f\nRelease 20.2.20 bfccd74\n\nv20.2.19\n\n23 March 2025\n\n\nfix: update audio service connections to add analyser after eq, get rid of component contents 123835c\nfix: move reload button to menu of load icon button 6655a9c\nRelease 20.2.19 af96dfb\n\nv20.2.18\n\n23 March 2025\n\n\nfix: put metadata progress bar under toolbar 51dfdf7\nRelease 20.2.18 b63676f\nfix: adjust launch handler placement in web manifest faec05d\n\nv20.2.17\n\n23 March 2025\n\n\nRelease 20.2.17 9644dde\nfix: correct formatting of launch handler in web manifest aff4dea\n\nv20.2.16\n\n23 March 2025\n\n\nfix: update launch handler to focus existing client mode and improve file handling 2aee517\nRelease 20.2.16 b6a809a\n\nv20.2.15\n\n23 March 2025\n\n\nRelease 20.2.15 4452ab9\nfeat: add launch handler for existing client mode in web manifest 7579ea9\n\nv20.2.14\n\n23 March 2025\n\n\nfeat: get FileSystemFileHandles for dropped files if possible falling back to File usage, fix launch with app by changing object 93f4474\nRelease 20.2.14 ff39494\nfeat: update font styling in player toolbar and add standard font class 36e8709\n\nv20.2.13\n\n22 March 2025\n\n\nfeat: fix grid lines in library 4aa52ed\nRelease 20.2.13 da978b1\n\nv20.2.12\n\n22 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.35.1 #549\nRelease 20.2.12 0885ef3\nfeat: refactor player component and extract toolbar into a separate component 7e11361\nfeat: enhance layout and styling of player and library components, player toolbar in shell, fixed layouts 9fb859e\n\nv20.2.11\n\n22 March 2025\n\n\nRelease 20.2.11 be7f8fc\nfeat: update track playback method to play by CRC instead of last track in playlist 862a41d\n\nv20.2.10\n\n22 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.35.0 #547\nchore: remove search functionality from playlist and add it to library 99126c0\nfeat: enhance library and playlist components with improved track selection and rendering 7667c50\nRelease 20.2.10 b8a2ac7\n\nv20.2.9\n\n22 March 2025\n\n\nRelease 20.2.9 d933c1e\nchore: update Angular and related dependencies to latest versions 9ea103a\n\nv20.2.8\n\n17 March 2025\n\n\nfeat: refactor progress tracking to use MetadataService and improve track rendering with trackBy functions, use generator for addFilesToLibrary ea0dd16\nfix: fix settings persistence, support etag embedded cover pictures again 5effed4\nfeat: update cover display to use background image for album covers and improve styling 7fa33e8\n\nv20.2.7\n\n16 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.34.0 #541\nfeat: add progress bar for file processing and enhance artist/album display in library, add an add all artist button, show track number and year in library, remove console warns, remember filename in metadata 7353f84\nRelease 20.2.7 dfa400c\n\nv20.2.6\n\n15 March 2025\n\n\nRelease 20.2.6 34663be\nfix: correct formatting in .npmrc for registry configuration f37d715\n\nv20.2.5\n\n15 March 2025\n\n\nRelease 20.2.5 452f074\n\nv20.2.4\n\n15 March 2025\n\n\nRelease 20.2.4 7d3846a\n\nv20.2.3\n\n15 March 2025\n\n\nRelease 20.2.3 0107dc5\nfeat: enhance file handling by introducing FileData interface and updating related services, save file handles in indexed db, fix library and add context menu to tracks c3bb2d1\nfeat: implement virtual scrolling for artists, albums, and tracks; add menus for album and track actions, add (All) option, doubleclick adds and navigates eb5338b\n\nv20.2.2\n\n15 March 2025\n\n\nchore(deps): update Angular and related dependencies to latest versions f0442a7\nRelease 20.2.2 f3f93f6\n\nv20.2.1\n\n11 March 2025\n\n\nfix(deps): update dependency music-metadata to v11.0.2 #540\nchore(deps): update typescript-eslint monorepo to v8.26.1 #529\nRelease 20.2.1 c6dff5e\n\nv20.2.0\n\n11 March 2025\n\n\nfeat: scroll to track when playing starts and its not in view b9445d4\nfeat: remove polyfills from project configuration a0517fe\nfeat: add search functionality to playlist with input field and filtering logic b925747\n\nv20.1.4\n\n11 March 2025\n\n\nrefactor: replace BaseSubscribingClass with DestroyRef 72be3d3\nRelease 20.1.4 5e77b33\nfeat: add view transitions to router configuration b2dcbb8\n\nv20.1.3\n\n9 March 2025\n\n\nfeat: enhance ID3 tags extraction and improve metadata handling, refactorings a11eb42\nRelease 20.1.3 305aec6\n\nv20.1.2\n\n9 March 2025\n\n\nRelease 20.1.2 ba13cfe\nrefactor: change to zoneless change detection 3f668a5\n\nv20.1.1\n\n9 March 2025\n\n\nfeat: update typography settings and optimize font loading in HTML 722901c\nRelease 20.1.1 858ff56\n\nv20.1.0\n\n9 March 2025\n\n\nRelease 20.1.0 d78443f\nfeat: refactor cover and playlist components for improved performance, performance hack für visuals f1580e8\nchore: update dependencies in package.json and package-lock.json 9e95c2d\n\nv20.0.1\n\n9 March 2025\n\n\nfeat: updated to material 3 theme, fixed dark mode handling 9b0ad09\nfeat: implement circular waveform visualization and initialize bark scale mapping 46e627b\nfeat: optimize image loading in cover and playlist components using NgOptimizedImage 79c83aa\n\nv20.0.0\n\n8 March 2025\n\n\nfeat: enhance ESLint configuration with Angular rules and TypeScript support 2b942c4\nRelease 20.0.0 d641392\nfeat: update ESLint configuration with TypeScript and SonarJS support, add custom rule overrides ef11066\n\nv19.5.4\n\n8 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.33.0 #539\nRelease 19.5.4 86a63af\nchore: update dependencies and add eslint packages c9dcf09\nfeat:  nearly complete signal refactoring also fixing long standing bugs f3a3520\n\nv19.5.3\n\n2 March 2025\n\n\nfeat: use @let syntax in templates, better VisualizerOptions types b7bb801\nRelease 19.5.3 eac8dd6\n\nv19.5.1\n\n2 March 2025\n\n\nRelease 19.5.1 8ebff84\nfeat: add circular visualization modes for frequency bars and oscilloscope 4e27dea\nfix: make gamepad and wakelock services optional to improve compatibility bb8466d\n\nv19.5.0\n\n2 March 2025\n\n\nRelease 19.5.0 3f2c562\nfix: fix file drop overlay not working as expected 94b7001\nfix: add postcss-html dependency to package.json and package-lock.json 85d2a14\n\nv19.4.15\n\n2 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.32.0 #532\nchore: update dependencies to latest versions b0d0fe4\nRelease 19.4.15 a2b1db1\nfix: update HTML components to self-closing tags 7785053\n\nv19.4.14\n\n27 February 2025\n\n\nchore: update Angular and related dependencies to version 19.2.x d8a2bf9\nRelease 19.4.14 0c889a3\n\nv19.4.13\n\n24 February 2025\n\n\nchore(deps): update actions/upload-artifact action to v4 #527\nRelease 19.4.13 9fb4192\nfix: eslint unicorn autofixes f154aed\nfeat: enhance visuals worker by optimizing data structures and pre-calculating arrays fee270f\n\nv19.4.12\n\n24 February 2025\n\n\nRelease 19.4.12 6c63788\nrefactor: remove unused dependencies 12a71dd\n\nv19.4.11\n\n23 February 2025\n\n\nRelease 19.4.11 d505863\nfix: update ESLint configuration inputs and production exclusions 6bfb6ba\n\nv19.4.10\n\n23 February 2025\n\n\nRelease 19.4.10 17e4083\n\nv19.4.9\n\n23 February 2025\n\n\nRelease 19.4.9 cf13446\nrefactor: us prive functions instead of modules c31aaa6\n\nv19.4.8\n\n23 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.31.2 #522\nrefactor: update ESLint configuration to use ES module syntax and cleanup deps 4dbf4b8\nRelease 19.4.8 0f45127\nchore: update project configuration and add dotenv-cli dependency 063d395\n\nv19.4.7\n\n23 February 2025\n\n\nRelease 19.4.7 4d9ca69\nchore: update HTML templates and ESLint configuration for consistency 33bb6c8\n\nv19.4.6\n\n23 February 2025\n\n\nchore(deps): update Angular and ESLint dependencies to latest versions 00d5b5e\nRelease 19.4.6 ab5a0f8\n\nv19.4.5\n\n4 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.3 #511\nchore(deps): update @swc/core, @types/node, and @typescript-eslint packages to latest versions 4df45ed\nRelease 19.4.5 f52095f\n\nv19.4.4\n\n2 February 2025\n\n\nchore: deps 76ace70\nRelease 19.4.4 072caca\n\nv19.4.3\n\n27 January 2025\n\n\nchore: deps a04aa39\nRelease 19.4.3 e844d5d\n\nv19.4.2\n\n24 January 2025\n\n\nchore: deps d50fcd7\nRelease 19.4.2 2e2cf66\n\nv19.4.1\n\n21 January 2025\n\n\nchore: deps c3062ed\nRelease 19.4.1 e96ef56\nchore: mise 7b8cdeb\n\nv19.4.0\n\n17 January 2025\n\n\nchore: deps 37fa04d\nRelease 19.4.0 155e1fd\nchore: readme, mise, deps 726da93\n\nv19.3.0\n\n14 January 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.1 #483\nchore: update to latest node-vibrant f306ca1\nRelease 19.3.0 ca87d69\n\nv19.2.10\n\n11 January 2025\n\n\nchore: deps a280f97\nRelease 19.2.10 15dded8\n\nv19.2.9\n\n3 January 2025\n\n\nRelease 19.2.9 bd67275\n\nv19.2.8\n\n14 December 2024\n\n\nRelease 19.2.8 af0ef42\n\nv19.2.7\n\n14 December 2024\n\n\nRelease 19.2.7 7d9d809\n\nv19.2.6\n\n11 December 2024\n\n\nchore: deps c042ae8\nchore: updated config to latest nx defaults 0a9aedc\nchore: updated config to latest nx defaults a555517\n\nv19.2.5\n\n7 December 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.28.0 #473\nRevert \"fix: disable npm caching\" f908dd2\nfix: disable npm caching 1a33b93\nRelease 19.2.5 4a42a18\n\nv19.2.4\n\n7 December 2024\n\n\nchore: deps 1a65661\nRelease 19.2.4 a19a09f\n\nv19.2.3\n\n21 November 2024\n\n\nRelease 19.2.3 dc45fe1\nfeat: migrate to application executor 0325a08\n\nv19.2.2\n\n21 November 2024\n\n\nfix: stylelint fixes 2500235\nRelease 19.2.2 b416bff\n\nv19.2.1\n\n21 November 2024\n\n\nRelease 19.2.1 8cab1e2\nfix: migrate jest and eslint to inferred plugins ee8b31b\n\nv19.2.0\n\n21 November 2024\n\n\nchore: input signal migration f8cbc65\nRelease 19.2.0 c363f4e\nfix: pass sampleRate 56a3899\n\nv19.1.1\n\n21 November 2024\n\n\nchore(deps): update angular monorepo to v19 #466\nchore(deps): update w9jds/firebase-action action to v13.26.0 #465\nchore(deps): update angularmaterial monorepo to v19 #467\nchore(config): migrate config renovate.json #468\nchore: use ng-packgr-lite builds, fix jest-preset-angular config b599685\nfix: revert ng-packgr temporarily bb34f11\nRelease 19.1.1 ada6807\n\nv19.1.0\n\n21 November 2024\n\n\nchore: ng 19 0ba1f5d\nRelease 19.1.0 d2765b8\nchore: remove console time 7b38580\n\nv19.0.10\n\n9 November 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.24.2 #460\nfix(deps): update dependency tslib to v2.8.1 #457\nRelease 19.0.10 1333d05\n\nv19.0.9\n\n9 November 2024\n\n\nchore: updates e42b61f\nRelease 19.0.9 fc998b4\n\nv19.0.8\n\n15 October 2024\n\n\nRelease 19.0.8 e4b565b\nfix: do webpack build again 10bf971\n\nv19.0.7\n\n15 October 2024\n\n\nRelease 19.0.7 308bd9f\nfix: use browser-esbuild executor fe4ebfa\n\nv19.0.6\n\n15 October 2024\n\n\nRelease 19.0.6 953bf76\nfix: use browser-esbuild executor a12f9c3\n\nv19.0.5\n\n15 October 2024\n\n\nfix(deps): update dependency tslib to v2.7.0 #450\nchore(deps): update dependency ubuntu to v24 #455\nchore(deps): update w9jds/firebase-action action to v13.22.0 #448\nRelease 19.0.5 592ac3b\n\nv19.0.4\n\n15 October 2024\n\n\nRelease 19.0.4 27acba5\nchore: eslint update (config todo) 97ccbb6\n\nv19.0.3\n\n15 October 2024\n\n\nchore: migrate to inject() 43a40a4\nfix: removed unused angular imports a0e7ce7\nRelease 19.0.3 972b1ee\n\nv19.0.2\n\n15 October 2024\n\n\nRelease 19.0.2 b8ad144\n\nv19.0.1\n\n15 October 2024\n\n\nRelease 19.0.1 7528cd4\n\nv19.0.0\n\n15 October 2024\n\n\nRelease 19.0.0 2bb5430\n\nv18.2.7\n\n15 October 2024\n\n\nchore(deps): updates ad57b9c\nRelease 18.2.7 8448134\nchange to application executor e2e1eb4\n\nv18.2.6\n\n26 August 2024\n\n\ndeps 0174ddf\nRelease 18.2.6 f0ae911\n\nv18.2.5\n\n15 August 2024\n\n\nsignals for coverdisplay, add item to playlist on by one d489b64\nRelease 18.2.5 4a66bde\n\nv18.2.4\n\n15 August 2024\n\n\nRelease 18.2.4 bbda480\nfix: big layout 8d61f2e\n\nv18.2.3\n\n15 August 2024\n\n\nchore: nx update ec1f94a\nRelease 18.2.3 72fa061\n\nv18.2.2\n\n15 August 2024\n\n\nanalyze and report esbuild bundles d597302\nRelease 18.2.2 681d4cd\nanalyze and report esbuild bundles 8626722\n\nv18.2.0\n\n15 August 2024\n\n\nfix test css class, select first in playlist after load when none selected 7a838a9\nRelease 18.2.0 38d27f1\n\nv18.1.1\n\n15 August 2024\n\n\nfeat: better axis handling for gamepad 4d47689\nmore signalös 019de24\nRelease 18.1.1 0f8e394\n\nv18.1.0\n\n15 August 2024\n\n\nRelease 18.1.0 ff778a5\nfeat: removed mobx, use signals for many things 5824006\n\nv18.0.1\n\n15 August 2024\n\n\nchore(deps): update, import types with import type e252172\nchore(deps): update e7aa58d\nRelease 18.0.1 7560dfa\n\nv18.0.0\n\n10 August 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.15.1 #438\nRelease 18.0.0 0858a77\nfix(eslint): older unused imports plugin cdb5380\n\nv17.0.18\n\n10 August 2024\n\n\nchore(deps): update 6878f22\nRelease 17.0.17 027ad79\nRelease 17.0.18 6756668\n\nv17.0.17\n\n10 August 2024\n\n\nUpdate w9jds/firebase-action action to v13.14.2 #431\nchore(deps): update 592cb7a\nRelease 17.0.17 2db5dc7\n\nv17.0.16\n\n29 July 2024\n\n\nmusic-metadata 10 7f90220\nRelease 17.0.16 80d5e14\nremoved webpack 908f395\n\nv17.0.15\n\n29 July 2024\n\n\ndeps ffe5da9\ndeps 469a890\nRelease 17.0.15 80553e8\n\nv17.0.14\n\n11 July 2024\n\n\ndeps 389407a\nRelease 17.0.14 30fec73\n\nv17.0.13\n\n7 July 2024\n\n\nUpdate dependency @typescript-eslint/utils to v8.0.0-alpha.40 #369\nUpdate w9jds/firebase-action action to v13.13.0 #423\ndeps 2389739\nRelease 17.0.13 4040b59\ndeps a0c15a4\n\nv17.0.12\n\n4 July 2024\n\n\ndeps 892689d\nRelease 17.0.12 af8a6b4\n\nv17.0.11\n\n23 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.4 #419\ndeps babdb9f\nRelease 17.0.11 5273759\n\nv17.0.10\n\n23 June 2024\n\n\ndeps 05a441e\nRelease 17.0.10 3e7b9a4\n\nv17.0.9\n\n12 June 2024\n\n\nRelease 17.0.9 a948ad5\ndeps, webstorage update 0e6195d\n\nv17.0.8\n\n12 June 2024\n\n\ndeps, webstorage update 1e660c9\nRelease 17.0.8 64a34dc\n\nv17.0.7\n\n9 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.2 #409\nUpdate dependency tslib to v2.6.3 #411\nRelease 17.0.7 2bb0e78\n\nv17.0.6\n\n9 June 2024\n\n\nnx + deps a1da736\nRelease 17.0.6 41e632f\n\nv17.0.5\n\n25 May 2024\n\n\nUpdate angularmaterial monorepo to v18 #402\nRelease 17.0.4 549bfa1\nRelease 17.0.5 ea932ef\n\nv17.0.4\n\n25 May 2024\n\n\nUpdate angular monorepo to v18 #401\nUpdate w9jds/firebase-action action to v13.10.1 #395\nRelease 17.0.4 f591692\nswitched to node 22 4f70846\n\nv17.0.3\n\n25 May 2024\n\n\nRelease 17.0.3 cb19d50\nenabled eventCoalescing e6fc6eb\n\nv17.0.2\n\n25 May 2024\n\n\nRelease 17.0.2 96bcdfc\nfixed theme 3ce805f\n\nv17.0.1\n\n25 May 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.5 #390\nng 18 7fcd244\nfixed eslint 2346f13\nnx update 4164d59\n\nv16.0.6\n\n28 April 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.2 #381\ndeps 308b3e5\nRelease 16.0.6 3233ed1\naudit fix 2f67e34\n\nv16.0.5\n\n14 April 2024\n\n\ndeps 84ac04c\nRelease 16.0.5 1a30a33\n\nv16.0.4\n\n7 April 2024\n\n\nRelease 16.0.4 5bab2a7\n\nv16.0.3\n\n16 March 2024\n\n\nRelease 16.0.3 0338bd7\nnew browserlist 013e987\nonly include Buffer in Node Polfills d7b3ea2\n\nv16.0.2\n\n16 March 2024\n\n\nRelease 16.0.2 0629b20\nfixed nx cloud token 870e50b\n\nv16.0.1\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.5.1 #372\nRelease 16.0.1 fe15d24\nfixed nx cloud token 6d2a8fe\n\nv16.0.0\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.3.1 #368\ndeps updated 11ae344\nnx update 0b2a071\nangular update c35bc38\n\nv15.1.17\n\n24 February 2024\n\n\nRelease 15.1.17 f18fa1f\n\nv15.1.16\n\n24 February 2024\n\n\nRelease 15.1.16 d2e1df8\n\nv15.1.14\n\n10 February 2024\n\n\nUpdate nrwl/nx-set-shas action to v4 #362\nUpdate w9jds/firebase-action action to v13.2.1 #358\nRelease 15.1.14 09eba6b\nRevert \"try nx agents\" 90e9f96\ntry nx agents 7362da7\n\nv15.1.13\n\n10 February 2024\n\n\ndeps cace929\nRelease 15.1.13 04dca08\nremoved last modules 0486e25\n\nv15.1.12\n\n4 February 2024\n\n\nnx update ccbf388\nRelease 15.1.12 7a8645a\n\nv15.1.11\n\n28 January 2024\n\n\nUpdate w9jds/firebase-action action to v13.1.0 #338\nUpdate actions/cache action to v4 #343\nRelease 15.1.11 1e340e1\n\nv15.1.10\n\n28 January 2024\n\n\ndeps 64d30e1\nRelease 15.1.10 a9a8e68\n\nv15.1.9\n\n20 January 2024\n\n\nRelease 15.1.9 8596088\n\nv15.1.8\n\n10 January 2024\n\n\nstylelint fixes ac02523\nRelease 15.1.8 4c8c0ad\nlint fixes 764711a\n\nv15.1.7\n\n9 January 2024\n\n\ndeps 362d9db\nRelease 15.1.7 92d89c3\n\nv15.1.6\n\n28 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #312\nRelease 15.1.6 339bd87\n\nv15.1.5\n\n28 December 2023\n\n\ndeps 4ef0700\nRelease 15.1.5 8ee0628\n\nv15.1.4\n\n15 December 2023\n\n\ndeps 998ad7c\nRelease 15.1.4 5c1346d\n\nv15.1.3\n\n10 December 2023\n\n\nRelease 15.1.3 d0b8d34\ndeps 6966d17\nnx update 678aef6\n\nv15.1.2\n\n8 December 2023\n\n\nfix seeking with slider, @switch statt @if 9934470\nRelease 15.1.2 1ebb626\n\nv15.1.1\n\n8 December 2023\n\n\nRelease 15.1.1 586ef29\nfix deploy f36895a\n\nv15.1.0\n\n8 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #310\noptimizations and typing f5c6154\noptimizations 05ddceb\noptimized icon set converter 6bd60c5\n\nv15.0.9\n\n8 December 2023\n\n\ndeps 02d4bfb\ntsconfig refactoring 7445539\nRelease 15.0.9 58fb13b\n\nv15.0.8\n\n30 November 2023\n\n\ntsconfig refactoring 275e54d\nRelease 15.0.8 f3351c2\n\nv15.0.7\n\n30 November 2023\n\n\nUpdate w9jds/firebase-action action to v12.9.0 #301\nRelease 15.0.7 7e45969\n\nv15.0.6\n\n30 November 2023\n\n\nRelease 15.0.6 063950a\ndeps 7522583\n\nv15.0.5\n\n13 November 2023\n\n\ndeps, prettier cbc6e41\nRelease 15.0.5 3bccffb\n\nv15.0.4\n\n10 November 2023\n\n\nRelease 15.0.4 1c4c67e\n\nv15.0.3\n\n10 November 2023\n\n\nRelease 15.0.3 90df676\n\nv15.0.2\n\n10 November 2023\n\n\nRelease 15.0.2 29878bc\neslint flat config 8c297a1\n\nv15.0.1\n\n10 November 2023\n\n\nNEW control flow syntax 84e91e3\nRelease 15.0.1 9dfd762\nstyleUrl instead of urls aefd739\n\nv15.0.0\n\n9 November 2023\n\n\nUpdate angular monorepo to v17 (major) #288\nUpdate angularmaterial monorepo to v17 (major) #289\nUpdate w9jds/firebase-action action to v12.8.0 #286\nUpdate actions/setup-node action to v4 #287\nRelease 15.0.0 7f1e3c1\nUpdate angular monorepo to v17 43d9b1f\nnodejs 20 builds 6f6ac17\n\nv14.1.23\n\n9 November 2023\n\n\nnx update a358906\nRelease 14.1.23 55f3319\nnx update dbc354f\n\nv14.1.20\n\n14 October 2023\n\n\nRelease 14.1.20 8d072f1\n\nv14.1.19\n\n14 October 2023\n\n\nUpdate dependency @types/node to v20.8.6 #242\nUpdate w9jds/firebase-action action to v12.6.2 #272\nRelease 14.1.19 314f02a\nRelease 14.1.18 7cf10f9\n\nv14.1.18\n\n14 October 2023\n\n\nRelease 14.1.18 a8bb04b\n\nv14.1.17\n\n14 October 2023\n\n\nRelease 14.1.17 7a66d5a\n\nv14.1.16\n\n14 October 2023\n\n\nRelease 14.1.16 4ec2e90\n\nv14.1.15\n\n7 October 2023\n\n\nRelease 14.1.15 3f73f6e\n\nv14.1.14\n\n7 October 2023\n\n\nRelease 14.1.14 db2122c\n\nv14.1.13\n\n7 October 2023\n\n\nRelease 14.1.13 a3ae7df\n\nv14.1.12\n\n7 October 2023\n\n\nRelease 14.1.12 0d0dfcb\n\nv14.1.11\n\n7 October 2023\n\n\nRelease 14.1.11 5aecee8\n\nv14.1.10\n\n7 October 2023\n\n\nRelease 14.1.10 d200e57\n\nv14.1.9\n\n23 September 2023\n\n\nRelease 14.1.9 29f1cbe\nupdated from deprecated SwUpdate props bef3e3e\n\nv14.1.8\n\n23 September 2023\n\n\nupdated from deprecated SwUpdate props 2f592f3\nRelease 14.1.8 07d6959\n\nv14.1.7\n\n23 September 2023\n\n\ndeps 1ffd91e\nRelease 14.1.7 6fc1434\n\nv14.1.6\n\n23 September 2023\n\n\nRelease 14.1.6 8b184a4\n\nv14.1.5\n\n21 September 2023\n\n\nRelease 14.1.5 4695772\nfix build fc633d2\n\nv14.1.4\n\n7 September 2023\n\n\nBump protobufjs and google-gax #261\nUpdate dependency tslib to v2.6.2 #262\nUpdate actions/checkout action to v4 #264\nRelease 14.1.4 a6386d2\nfix build b7303ed\n\nv14.1.3\n\n7 September 2023\n\n\nBump word-wrap from 1.2.3 to 1.2.4 #250\nUpdate dependency tslib to v2.6.1 #251\nRelease 14.1.3 9ce5e31\n\nv14.1.2\n\n3 August 2023\n\n\nRelease 14.1.2 8f60273\n\nv14.1.1\n\n7 July 2023\n\n\nUpdate dependency tslib to v2.6.0 #241\nBump @grpc/grpc-js and google-gax #240\nUpdate w9jds/firebase-action action to v12 #235\nRelease 14.1.1 f78467f\nprettier 3ff6d19\n\nv14.1.0\n\n7 July 2023\n\n\nprettier 3 + precommit hooks cd5831f\nRelease 14.1.0 d612735\nprettier 08b1238\n\nv14.0.13\n\n17 June 2023\n\n\nRelease 14.0.13 a10893b\nremoved unused type polyfills af2926f\n\nv14.0.12\n\n17 June 2023\n\n\nRelease 14.0.12 ea688e0\n\nv14.0.11\n\n17 June 2023\n\n\nRelease 14.0.11 32c3f4d\n\nv14.0.10\n\n17 June 2023\n\n\ndeps 8c90a58\nRelease 14.0.10 1d0b823\n\nv14.0.9\n\n8 June 2023\n\n\ndeps fdad632\nRelease 14.0.9 331bb8f\n\nv14.0.8\n\n3 June 2023\n\n\nBump vm2 from 3.9.17 to 3.9.19 #220\nUpdate dependency tslib to v2.5.3 #223\nRelease 14.0.8 8b9fdf5\n\nv14.0.7\n\n3 June 2023\n\n\nuse run-many for tests 97d68d0\nRelease 14.0.7 c82e02b\n\nv14.0.6\n\n3 June 2023\n\n\ndeps 752aa76\nRelease 14.0.6 f038069\n\nv14.0.5\n\n13 May 2023\n\n\ndeps 28cff25\nRelease 14.0.5 20cf16a\n\nv14.0.4\n\n6 May 2023\n\n\nremoved unused js file 5ffbd62\nRelease 14.0.4 7fb56e0\n\nv14.0.3\n\n6 May 2023\n\n\nUpdate dependency jest-preset-angular to v13.1.0 #208\nUpdate dependency @types/node to v18.16.5 #206\nRelease 14.0.3 cdf04e9\ne2e fixed 2708806\n\nv14.0.2\n\n6 May 2023\n\n\nUpdate w9jds/firebase-action action to v11.30.1 #207\ne2e fixed and removed separate project 74e7c83\nRelease 14.0.1 f386a36\nRelease 14.0.2 1081f8e\n\nv14.0.1\n\n6 May 2023\n\n\ne2e fixed and removed separate project d0cd94f\nRelease 14.0.1 bb4e0ce\n\nv14.0.0\n\n6 May 2023\n\n\nnx 16, angular 16, deps 826cbe5\nRelease 14.0.0 ec067ee\nmusic metadata removed 2eb6cae\n\nv13.3.5\n\n13 April 2023\n\n\nBump vm2 #200\nUpdate dependency music-metadata to v7.13.4 #195\nRelease 13.3.5 845189d\n\nv13.3.4\n\n13 April 2023\n\n\nRelease 13.3.4 eab1d35\n\nv13.3.3\n\n10 April 2023\n\n\nRelease 13.3.3 0129566\n\nv13.3.2\n\n25 March 2023\n\n\nRelease 13.3.2 5a92c07\n\nv13.3.1\n\n25 March 2023\n\n\nRelease 13.3.1 42a58d9\n\nv13.3.0\n\n18 March 2023\n\n\nUpdate w9jds/firebase-action action to v11.24.1 #181\ndeps + sidenav fixes e11e3bd\nRelease 13.3.0 3acc7bf\n\nv13.2.6\n\n15 March 2023\n\n\ndeps 0dc096d\nRelease 13.2.6 6d67484\n\nv13.2.5\n\n5 March 2023\n\n\nstandalone bootstrap 6aed158\nRelease 13.2.5 4c272db\n\nv13.2.4\n\n5 March 2023\n\n\nBump http-cache-semantics from 4.1.0 to 4.1.1 #170\nBump cacheable-request from 10.2.5 to 10.2.7 #171\nUpdate dependency tslib to v2.5.0 #164\nRelease 13.2.4 392b41d\ndeps a4b6dab\n\nv13.2.3\n\n5 March 2023\n\n\nRelease 13.2.3 f54702d\n\nv13.2.2\n\n5 March 2023\n\n\nRelease 13.2.2 d9677d0\n\nv13.2.1\n\n22 February 2023\n\n\ndeps 1730f16\nRelease 13.2.1 ba634aa\nuse nx for all 51a51dd\n\nv13.2.0\n\n22 February 2023\n\n\nUpdate w9jds/firebase-action action to v11.22.0 #172\nRelease 13.2.0 4035819\nstandalone migration steps 1 and 2 32e3ad6\nstandalone migration steps 1 and 2 a40c9e8\n\nv13.1.12\n\n22 February 2023\n\n\nRelease 13.1.12 53818e8\n\nv13.1.11\n\n28 January 2023\n\n\ndeps b4d909a\nRelease 13.1.11 d8bf0e7\n\nv13.1.10\n\n22 January 2023\n\n\nRelease 13.1.10 1c7fa4e\n\nv13.1.9\n\n20 January 2023\n\n\ndeps 4781958\nRelease 13.1.9 505e77f\n\nv13.1.8\n\n15 January 2023\n\n\nRelease 13.1.8 580c58d\n\nv13.1.7\n\n15 January 2023\n\n\nUpdate dependency music-metadata to v7.13.3 #150\ndeps 8b6bfeb\nRelease 13.1.7 d516e97\n\nv13.1.6\n\n13 January 2023\n\n\nRelease 13.1.6 166c79d\ndeps 8ec046f\n\nv13.1.5\n\n7 January 2023\n\n\nlayout fixes f3f4ae7\nRelease 13.1.5 eaa27a6\n\nv13.1.4\n\n7 January 2023\n\n\nRelease 13.1.4 49d8293\nfixed e2e 33d73d9\n\nv13.1.3\n\n7 January 2023\n\n\nUpdate dependency firebase-tools to v11.20.0 #147\nUpdate dependency postcss to v8.4.21 #146\nUpdate dependency eslint-config-prettier to v8.6.0 #139\nUpdate angularmaterial monorepo to v15.0.4 #144\nUpdate dependency husky to v8.0.3 #140\nUpdate w9jds/firebase-action action to v11.18.0 #131\nUpdate dependency cypress to v12.3.0 #141\nUpdate nrwl monorepo to v15.4.4 #135\nUpdate dependency eslint to v8.31.0 #138\nUpdate typescript-eslint monorepo to v5.48.0 #58\nUpdate dependency music-metadata to v7.13.1 #142\nRelease 13.1.3 5302fb4\ndeps 801cd46\nmdc migration, vertical sliders, icons size directive removed ffa9bb5\n\nv13.1.2\n\n30 December 2022\n\n\nRelease 13.1.2 c339811\n\nv13.1.1\n\n23 December 2022\n\n\nvisualizers plug their own analyser cea2824\nunsubscribe and disconnect analysers 6a8d3be\nRelease 13.1.1 72575f6\n\nv13.1.0\n\n23 December 2022\n\n\nRelease 13.1.0 1989419\nrenamed song to track, us playState obeservable for better input and CD handling 47b6776\n\nv13.0.20\n\n23 December 2022\n\n\ntransparency control for visuals 7445cc4\nRelease 13.0.20 62cfee7\n\nv13.0.19\n\n23 December 2022\n\n\nstandalone components 620afb8\nno max db slider, mindb range changed, better default f7913c1\nRelease 13.0.19 9280e3a\n\nv13.0.18\n\n22 December 2022\n\n\nRelease 13.0.18 4c16c1e\n\nv13.0.16\n\n22 December 2022\n\n\nRelease 13.0.16 77707fb\n\nv13.0.13\n\n22 December 2022\n\n\nRelease 13.0.13 6f12a37\n\nv13.0.12\n\n19 December 2022\n\n\nremoved d3, use bark scale for bar spectrogram 2bcfefb\nRelease 13.0.12 e336db1\n\nv13.0.11\n\n18 December 2022\n\n\nmerged readme 3f449ec\nRelease 13.0.11 47e3527\nbadges 5f1d097\n\nv13.0.10\n\n17 December 2022\n\n\nRelease 13.0.10 62c64c5\nmoved style to component 006b52c\ntodo 28548eb\n\nv13.0.9\n\n17 December 2022\n\n\nfixed audioContext resume, added gain to eq cb797bc\nRelease 13.0.9 8c56320\n\nv13.0.8\n\n17 December 2022\n\n\nRelease 13.0.8 6f1cdb4\n\nv13.0.7\n\n17 December 2022\n\n\nRelease 13.0.7 d895f0f\n\nv13.0.6\n\n17 December 2022\n\n\nRelease 13.0.6 17266a3\n\nv13.0.5\n\n17 December 2022\n\n\nUpdate angularmaterial monorepo to v15 (major) #108\nRelease 13.0.5 ddab2f3\nremoved uneeded ts-ignores a1a074f\nUpdate angularmaterial monorepo to v15 a4de6d4\n\nv13.0.3\n\n17 December 2022\n\n\nRelease 13.0.3 7f8ad27\nuse config file without .json endings bfd4685\n\nv13.0.2\n\n17 December 2022\n\n\nrefactored type imports and fixed offscreencanvas types 067bbea\nRelease 13.0.2 292ed5a\ncustom typings moved to folders c3208e7\n\nv13.0.1\n\n17 December 2022\n\n\nRelease 13.0.1 667c54e\nfixed debug version bf7b3a9\nfixed debug version 6cee32d\n\nv13.0.0\n\n16 December 2022\n\n\nRelease 13.0.0 b3905a0\nfixed playlist bulk loading 834f706\n\nv12.0.16\n\n16 December 2022\n\n\nRelease 12.0.16 1de2a3c\nfixed playlist bulk loading 8e7ecec\n\nv12.0.15\n\n16 December 2022\n\n\nRelease 12.0.15 5a7054c\nfixed test 9eb089c\n\nv12.0.14\n\n16 December 2022\n\n\nabstacted all audio stuff in audio service 403737f\neq auf mobile funkt auf mobile, flex layout refactoring eccaa4a\nreplaced angular-flex-layout with css 03a0491\n\nv12.0.13\n\n15 December 2022\n\n\nmaterial 15 migration dc55360\nRelease 12.0.13 37f76dc\nsimpler lib 86be7eb\n\nv12.0.12\n\n15 December 2022\n\n\nlibrary ohne filter 8dfc611\nRelease 12.0.12 6d26668\n\nv12.0.11\n\n14 December 2022\n\n\nRelease 12.0.11 635e855\ndeps, eslintrc, vibrant-wasm entfernt 431a9ad\n\nv12.0.10\n\n12 December 2022\n\n\nRelease 12.0.10 f954f07\nappend audioElement to document ce588f9\n\nv12.0.9\n\n12 December 2022\n\n\nseperated audio part into AudioService 0f8326e\nsimplified init of audio 869dddb\nRelease 12.0.9 17a1677\n\nv12.0.8\n\n11 December 2022\n\n\nfixed smaller things, no prdefinded samplerate 986dd30\nRelease 12.0.8 6b9ff38\ntodo 2bdc500\n\nv12.0.7\n\n11 December 2022\n\n\nRelease 12.0.7 a0aa269\nmoved init of seekto handler to constructor 2434ec6\n\nv12.0.6\n\n11 December 2022\n\n\nRelease 12.0.6 14768e6\n\nv12.0.5\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 8738efc\nRelease 12.0.4 fee5161\nRelease 12.0.5 23061dd\n\nv12.0.4\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 81bb449\nRelease 12.0.4 025a430\nUpdate TODO.md 009b48d\n\nv12.0.3\n\n11 December 2022\n\n\nRelease 12.0.3 c398655\n\nv12.0.2\n\n11 December 2022\n\n\nRelease 12.0.2 2bfabd0\n\nv12.0.1\n\n11 December 2022\n\n\nmoved id3tags extraction to worker 9b11a20\nRelease 12.0.1 6c27523\nUpdate devcontainer.json b286be9\n\nv12.0.0\n\n10 December 2022\n\n\nRelease 12.0.0 6ee2324\nadded deps vibrant-wasm and custom webpack config to ttry threads.js 8337321\ncustom webpack config for threads.js workers (still not working, disabled) 55e56b8\n\nv11.5.14\n\n7 December 2022\n\n\nstylelint fixes and config 52d642b\nRelease 11.5.14 b5dfb18\n\nv11.5.13\n\n7 December 2022\n\n\nRelease 11.5.13 a867afe\nstylelint fixes and config 122856c\n\nv11.5.12\n\n7 December 2022\n\n\nRelease 11.5.12 c4668f1\nmusic meatadata, file-drop-overlay as standalone component 2e5b003\nprovide all services in root ca80a43\n\nv11.5.11\n\n7 December 2022\n\n\nRelease 11.5.11 930dc28\n\nv11.5.10\n\n7 December 2022\n\n\ndeps a552ea9\nRelease 11.5.10 d29b113\n\nv11.5.9\n\n6 December 2022\n\n\nRelease 11.5.9 18a45bd\ntags + eslint rule 864d7e1\n\nv11.5.8\n\n6 December 2022\n\n\ndep graph in gh pages, release-it config erweitert um neu generierte dateien mit zu committen 73bd100\nlibs cleanup 59f4ac4\nRelease 11.5.8 24e4c9a\n\nv11.5.7\n\n6 December 2022\n\n\nlibs cleanup 60dbedc\nRelease 11.5.7 2d68f3b\n\nv11.5.6\n\n6 December 2022\n\n\nremoved all dummy tests 7defe9b\nRelease 11.5.6 d1b4f51\nrun tests in github actions 14148e0\n\nv11.5.5\n\n6 December 2022\n\n\nRelease 11.5.5 73b9b59\n\nv11.5.4\n\n6 December 2022\n\n\ncompodoc reenabled 7c00473\nsvgo updated 19bf065\nRelease 11.5.4 8df3910\n\nv11.5.3\n\n6 December 2022\n\n\ncompodoc reenabled 540fdd8\nRelease 11.5.3 7c5bbe5\n\nv11.5.2\n\n5 December 2022\n\n\ncompodoc reenabled 2ce3664\ncompodoc reenabled b7be438\ncompodoc reenabled 29f2b37\n\nv11.5.1\n\n5 December 2022\n\n\nautofix unused imports, removed tslint 71bd586\nautofix unused imports 6d6f310\nRelease 11.5.1 77091b9\n\nv11.5.0\n\n5 December 2022\n\n\nbetter thum quality, bigger coverart in playlist, tooltips, better button color handling bffc736\nRelease 11.5.0 670b3af\n\nv11.4.11\n\n5 December 2022\n\n\nRelease 11.4.11 e615145\n\nv11.4.10\n\n5 December 2022\n\n\nreinstall 418b524\nRelease 11.4.10 eaf46cf\n\nv11.4.9\n\n5 December 2022\n\n\nRelease 11.4.9 3e58c71\n\nv11.4.8\n\n5 December 2022\n\n\nRelease 11.4.8 a409033\nservices in app integriert 1857720\n\nv11.4.7\n\n5 December 2022\n\n\nremoved storybook 9d81efd\nservices in app integriert ce621ee\nmoved visuals lib to app e992cb4\n\nv11.4.6\n\n5 December 2022\n\n\nRelease 11.4.6 f9c93ce\n\nv11.4.5\n\n5 December 2022\n\n\nRelease 11.4.5 839a546\n\nv11.4.3\n\n5 December 2022\n\n\nRelease 11.4.3 50b7005\n\nv11.4.2\n\n5 December 2022\n\n\nRelease 11.4.2 0674adf\n\nv11.4.1\n\n5 December 2022\n\n\nRelease 11.4.1 7ccbc95\n\nv11.4.0\n\n5 December 2022\n\n\nrefactored libs to app, fixed time slider 133059f\nRelease 11.4.0 68d9939\n\nv11.3.1\n\n4 December 2022\n\n\nRelease 11.3.1 7493e98\nprevent lib crossing 3fbfb97\n\nv11.3.0\n\n4 December 2022\n\n\nRelease 11.3.0 ecf45e6\nbetter color usage 965f5d8\nbetter color usage f209ddb\n\nv11.2.0\n\n4 December 2022\n\n\ndeps, better default colors 569161e\nRelease 11.2.0 efc9aad\n\nv11.1.2\n\n4 December 2022\n\n\nRelease 11.1.2 8d47dd4\nfixed visualizer color updating too late e99d4f2\n\nv11.1.1\n\n4 December 2022\n\n\nRelease 11.1.1 287138c\n\nv11.1.0\n\n4 December 2022\n\n\noptimized musicbrainz requests, fixed embedded cover handling 7bebf2d\nRelease 11.1.0 707a0cb\n\nv11.0.0\n\n4 December 2022\n\n\nfixed several metadata related problems, setting for use of embedded tag covers 1745489\nRelease 11.0.0 6c219df\ntodo chromaprint-wasm 2c0f612\n\nv10.3.2\n\n1 December 2022\n\n\nRelease 10.3.2 6fdfa5a\n\nv10.3.1\n\n1 December 2022\n\n\nRelease 10.3.1 05b4ddd\nupdated firebase hosting config and actions for deployment f201082\nupdated firebase hosting config and actions for deployment 0c91659\n\nv10.3.0\n\n1 December 2022\n\n\nRelease 10.3.0 50dbff9\nupdated firebase hosting config and actions for deployment 1455d32\n\nv10.2.0\n\n30 November 2022\n\n\nRelease 10.2.0 7593825\nupdated firebase hosting config and actions for deployment b80e2ea\n\nv10.1.0\n\n30 November 2022\n\n\nupdated firebase hosting config and actions for deployment 02bde5d\nRelease 10.1.0 ffc8723\nupdated github actions 86bda79\n\nv10.0.4\n\n30 November 2022\n\n\ncypress migration to 11 16d8b1b\nRelease 10.0.4 6bf609d\nupdate nodejs to 18 for github actions 16925cf\n\nv10.0.3\n\n30 November 2022\n\n\ngot rid of variables.scss ad7e0f1\nRelease 10.0.3 63f69d0\n\nv10.0.2\n\n30 November 2022\n\n\nRelease 10.0.2 2a99961\n\nv10.0.1\n\n30 November 2022\n\n\nRelease 10.0.1 a9a9c0b\n\nv10.0.0\n\n30 November 2022\n\n\nng15 521e049\nng 15 cleanup, mobx update 0f6c72b\nmaterial 14 1e96bc3\n\nv9.2.4\n\n19 March 2022\n\n\nupdated deps eaeb47a\nRelease 9.2.4 61721ca\njb env 4bdbceb\n\nv9.2.3\n\n19 December 2021\n\n\nupdates 5061051\nRelease 9.2.3 a7f82ab\n\nv9.2.2\n\n9 December 2021\n\n\nupdates 2427749\nRelease 9.2.2 934d323\n\nv9.2.1\n\n20 November 2021\n\n\nRelease 9.2.1 60d5b05\n\nv9.2.0\n\n20 November 2021\n\n\nUpdate dependency @angular/cdk to v12.2.13 #21\nPin dependencies #20\nUpdate dependency ng-packagr to v12.2.5 #17\nUpdate dependency @angular/material to v12.2.13 #15\nUpdate angular monorepo to v12.2.13 #13\nConfigure Renovate #11\nnx 13.2 02e548c\nRelease 9.2.0 22ec300\nmain branch 63600c3\n\nv9.1.3\n\n16 November 2021\n\n\nnx update, nx-stylelint, nx-compodoc f06b116\nRelease 9.1.3 de5bda9\n\nv9.1.2\n\n20 October 2021\n\n\nupdates 8268a8b\nRelease 9.1.2 ab89f63\ntodos e486f52\n\nv9.1.1\n\n4 October 2021\n\n\nprevent duplicates in playlist, drag handle on avatar b6729e6\nRelease 9.1.1 eff95d0\n\nv9.1.0\n\n4 October 2021\n\n\nfile handling api with origin trial d3bca3a\nRelease 9.1.0 6cab435\n\nv9.0.11\n\n2 October 2021\n\n\nupdates 397399b\nRelease 9.0.11 96dbdf6\n\nv9.0.10\n\n5 September 2021\n\n\nRelease 9.0.10 112db1a\n\nv9.0.9\n\n5 September 2021\n\n\nRelease 9.0.9 9458a12\n\nv9.0.8\n\n19 August 2021\n\n\nRelease 9.0.8 cd620b6\n\nv9.0.7\n\n19 August 2021\n\n\nRelease 9.0.7 600f7e6\n\nv9.0.6\n\n19 August 2021\n\n\nRelease 9.0.6 c08196a\ndeps 6b5e613\n\nv9.0.5\n\n19 August 2021\n\n\nRelease 9.0.5 c51af5f\n\nv9.0.4\n\n19 August 2021\n\n\ndeps 43463ab\nRelease 9.0.4 cf00688\n\nv9.0.3\n\n24 July 2021\n\n\ndeps, nx-cloud ada5e83\nRelease 9.0.3 bb4a1a8\n\nv9.0.2\n\n24 July 2021\n\n\ndeps, nx-cloud 5cbeb5b\nRelease 9.0.2 49a76e8\n\nv9.0.1\n\n24 July 2021\n\n\ndeps b99bf0c\nRelease 9.0.1 cbab637\n\nv9.0.0\n\n9 July 2021\n\n\nfixed release-it 8d3ed72\nRelease 9.0.0 5467c6f\n\nv8.1.10\n\n9 July 2021\n\n\nRelease 8.1.10 be90110\n\nv8.1.9\n\n9 July 2021\n\n\nfixed release-it a90639a\nRelease 8.1.9 6d52ad4\n\nv8.1.8\n\n9 July 2021\n\n\nts 4.4, media session types intergrated in ts, deps fd45c70\nRelease 8.1.8 ff7cdad\n\nv8.1.7\n\n8 July 2021\n\n\nRelease 8.1.7 0bde446\n\nv8.1.6\n\n8 July 2021\n\n\ndeps 128a3c3\nRelease 8.1.6 d64a3c3\n\nv8.1.5\n\n2 July 2021\n\n\nRelease 8.1.5 ef22e4a\nlayout fixed dbb788d\n\nv8.1.4\n\n2 July 2021\n\n\nrefactored scss to @use, fixed build 6b0ec83\nRelease 8.1.4 ebab8da\n\nv8.1.3\n\n2 July 2021\n\n\nRelease 8.1.3 0843a41\n\nv8.1.2\n\n2 July 2021\n\n\nfixed types 07de52a\nRelease 8.1.2 00b47ed\n\nv8.1.1\n\n2 July 2021\n\n\nmigrated to eslint and per project config 4feefcd\nRelease 8.1.1 7762874\n\nv8.1.0\n\n26 June 2021\n\n\nupdates e2a0794\nRelease 8.1.0 86a18bb\n\nv8.0.1\n\n26 May 2021\n\n\nRelease 8.0.1 52bf10d\n\nv8.0.0\n\n26 May 2021\n\n\nRelease 7.1.1 c78b2bf\nRelease 8.0.0 2f0d555\n\nv7.2.0\n\n26 May 2021\n\n\nRelease 7.2.0 73ed2ca\nupdates 774ffed\n\nv7.1.1\n\n26 May 2021\n\n\nupdates 2a427ed\nRelease 7.1.1 b73ce66\n\nv7.1.0\n\n9 May 2021\n\n\n30fps visualizer, sortable playlist cd2a934\nRelease 7.1.0 8377116\n\nv7.0.6\n\n9 May 2021\n\n\nRelease 7.0.6 84a2466\nbitrate rounding cbef1c8\n\nv7.0.5\n\n9 May 2021\n\n\nRelease 7.0.5 9c56a21\n\nv7.0.4\n\n9 May 2021\n\n\nbetter title display 51154fe\nRelease 7.0.4 72dafd7\n\nv7.0.3\n\n9 May 2021\n\n\ndeps e36192c\nRelease 7.0.3 7553170\ntodos 51e219a\n\nv7.0.2\n\n9 May 2021\n\n\nfixed navigation 9767ad0\nRelease 7.0.2 59f1df2\n\nv7.0.1\n\n9 May 2021\n\n\nmetadata settings and ui cleanup 3797092\nRelease 6.7.3 6841a21\nRelease 7.0.0 0d76c85\n\nv7.0.0\n\n9 May 2021\n\n\nmetadata settings and ui cleanup b2b5088\nRelease 7.0.0 8c47814\n\nv6.7.4\n\n7 May 2021\n\n\nRelease 6.7.4 2ab7cc1\ncypress studio activated 4eac2a7\ncypress studio activated 6bc0773\n\nv6.7.3\n\n7 May 2021\n\n\nRelease 6.7.3 6841a21\nignore iml e5de213\n\nv6.7.2\n\n5 May 2021\n\n\ngithub actions with node_modules cache 4f91524\nRelease 6.7.2 07ec810\n\nv6.7.1\n\n5 May 2021\n\n\ncypress updated and window.showOpenFilePicker overwritten 32570e0\nRelease 6.7.1 fd18536\n\nv6.7.0\n\n4 May 2021\n\n\ndev deps dc41223\nRelease 6.7.0 f34b7cf\n\nv6.6.7\n\n25 April 2021\n\n\nfixed cypress tests and mobx 00399df\nRelease 6.6.7 bd0ddc3\n\nv6.6.6\n\n25 April 2021\n\n\nRelease 6.6.6 d690072\n\nv6.6.5\n\n25 April 2021\n\n\nRelease 6.6.5 ea63800\n\nv6.6.4\n\n25 April 2021\n\n\ndeps and husky updated 120476b\nRelease 6.6.4 20110c3\n\nv6.6.3\n\n20 April 2021\n\n\nRelease 6.6.3 ee83304\nreadme badges 09ae300\n\nv6.6.2\n\n15 April 2021\n\n\nRelease 6.6.2 e933c61\n\nv6.6.1\n\n15 April 2021\n\n\nRelease 6.6.1 221781e\n\nv6.6.0\n\n14 April 2021\n\n\nRelease 6.6.0 d254989\n\nv6.5.9\n\n11 March 2021\n\n\ndependencies 2119d47\nRelease 6.5.9 c64cd79\n\nv6.5.8\n\n4 March 2021\n\n\nRelease 6.5.8 f401a49\n\nv6.5.7\n\n4 March 2021\n\n\nRelease 6.5.7 49b1735\n\nv6.5.6\n\n4 February 2021\n\n\nRelease 6.5.6 045b043\n\nv6.5.5\n\n1 February 2021\n\n\nRelease 6.5.5 f4324a4\n\nv6.5.4\n\n29 January 2021\n\n\nfixed test 0038838\nRelease 6.5.4 8c75c5f\n\nv6.5.3\n\n28 January 2021\n\n\nRelease 6.5.3 13bf8e2\n\nv6.5.2\n\n21 January 2021\n\n\nRelease 6.5.2 1c876b6\nfixed build d2f46f8\n\nv6.5.1\n\n21 January 2021\n\n\nupdates 120f02a\nRelease 6.5.1 46c60ce\n\nv6.5.0\n\n14 January 2021\n\n\nRelease 6.5.0 e4ec6c1\n\nv6.4.1\n\n14 January 2021\n\n\nchangelog d629a20\nRelease 6.4.1 3d1f63c\n\nv6.4.0\n\n14 January 2021\n\n\nremoved token 51304c2\nRelease 6.4.0 756dc90\n\nv6.3.1\n\n14 January 2021\n\n\nRelease 6.3.1 e727ac0\n\nv6.3.0\n\n14 January 2021\n\n\nrelease-it 5321e86\nRelease 6.3.0 db48fe2\n\nv6.2.6\n\n14 January 2021\n\n\nrelease v6.2.6 ae202ad\n\nv6.2.5\n\n14 January 2021\n\n\nrelease v6.2.5 c20efb2\n\nv6.2.4\n\n14 January 2021\n\n\nci cd 8da74bb\nrelease v6.2.4 f12cad8\n\nv6.2.3\n\n12 January 2021\n\n\nrelease v6.2.3 78fcf7a\n\nv6.2.2\n\n20 December 2020\n\n\nnrwl 11 b2ed530\nrelease v6.2.2 73050ff\n\nv6.2.1\n\n15 December 2020\n\n\nnrwl 11 f1f709b\nrelease v6.2.1 5101ea6\nnrwl 11 8a371a0\n\nv6.2.0\n\n12 December 2020\n\n\nrelease v6.2.0 ef650c5\n\nv6.1.1\n\n8 December 2020\n\n\nrelease v6.1.1 e6660e2\n\nv6.1.0\n\n3 December 2020\n\n\nrelease v6.1.0 f8b7451\n\nv6.0.1\n\n21 November 2020\n\n\nrelease v6.0.1 c0d5ae4\n\nv6.0.0\n\n21 November 2020\n\n\nng11 0960760\nprettier ab98677\nrelease v6.0.0 79d861d\n\nv5.2.12\n\n28 October 2020\n\n\nrelease v5.2.12 40cc765\n\nv5.2.11\n\n28 October 2020\n\n\nrelease v5.2.11 c0c9413\n\nv5.2.10\n\n28 October 2020\n\n\nrelease v5.2.10 f4928f5\n\nv5.2.9\n\n28 October 2020\n\n\nrelease v5.2.9 04b4812\n\nv5.2.8\n\n28 October 2020\n\n\nrelease v5.2.8 4c8f851\n\nv5.2.7\n\n28 October 2020\n\n\nrelease v5.2.7 b65204b\n\nv5.2.6\n\n28 October 2020\n\n\nrelease v5.2.6 f24dcc7\n\nv5.2.5\n\n28 October 2020\n\n\nrelease v5.2.5 6c6f88c\nprettier b20fd36\n\nv5.2.4\n\n28 October 2020\n\n\nMediaSession service 5742e12\nrelease v5.2.4 5059439\n\nv5.2.3\n\n27 October 2020\n\n\nrelease v5.2.3 d4abfdc\n\nv5.2.2\n\n27 October 2020\n\n\nrelease v5.2.2 478c88a\n\nv5.2.1\n\n26 October 2020\n\n\nrelease v5.2.1 e218808\n\nv5.2.0\n\n23 October 2020\n\n\nrelease v5.2.0 62f7474\nreload button be57fa9\n\nv5.1.0\n\n23 October 2020\n\n\nsimplified dir handle save, fixed test f278040\nrelease v5.1.0 9767a1a\n\nv5.0.0\n\n23 October 2020\n\n\nsave latest directory handle to indexeddb 597ee4f\nrelease v5.0.0 5a61397\n\nv4.7.0\n\n23 October 2020\n\n\nrelease v4.7.0 c86decf\n\nv4.6.0\n\n23 October 2020\n\n\ntypes added for mediasession and file-system bfd28ec\nrelease v4.6.0 e4d8e7c\n\nv4.5.0\n\n23 October 2020\n\n\nfix media reporting 220c7f4\nrelease v4.5.0 337a109\n\nv4.4.0\n\n23 October 2020\n\n\nupdates und native file stable changes 939f6b8\nrelease v4.4.0 77c544b\n\nv4.3.1\n\n12 October 2020\n\n\nrelease v4.3.1 3a9067b\n\nv4.3.0\n\n12 October 2020\n\n\nrelease v4.3.0 7def043\nanalyzer report 4a4b1c4\n\nv4.2.0\n\n12 October 2020\n\n\nrelease v4.2.0 866de3e\n\nv4.1.0\n\n6 October 2020\n\n\nrelease v4.1.0 98a793b\n\nv4.0.0\n\n6 October 2020\n\n\nrelease v4.0.0 d38c534\n\nv3.11.0\n\n6 October 2020\n\n\nrelease v3.11.0 2a4184c\n\nv3.10.0\n\n6 October 2020\n\n\nrelease v3.10.0 d562368\n\nv3.9.0\n\n6 October 2020\n\n\ntoggle to disable extraction of color from cover art a84cb97\nrelease v3.9.0 748a302\n\nv3.8.1\n\n6 October 2020\n\n\nrelease v3.8.1 bda90a4\n\nv3.8.0\n\n5 October 2020\n\n\nrelease v3.8.0 c73a2ce\n\nv3.7.0\n\n20 September 2020\n\n\nrelease v3.7.0 61eb69b\n\nv3.6.0\n\n9 September 2020\n\n\nrelease v3.6.0 22da5c7\n\nv3.5.1\n\n2 September 2020\n\n\nrelease v3.5.1 70990de\n\nv3.5.0\n\n2 September 2020\n\n\nrelease v3.5.0 3ccea4c\n\nv3.4.1\n\n30 August 2020\n\n\nrelease v3.4.1 5ed4032\n\nv3.4.0\n\n30 August 2020\n\n\noptimize loading of service worker and caching 5cec62d\nrelease v3.4.0 1385586\n\nv3.3.0\n\n30 August 2020\n\n\noptimize bundles 6cd086c\nrelease v3.3.0 27fdc57\noptimize loading of service worker f1cad4d\n\nv3.2.1\n\n23 August 2020\n\n\nrelease v3.2.1 bb4ded8\nicons compressed c550911\n\nv3.2.0\n\n23 August 2020\n\n\nstart page a7cf166\nrelease v3.2.0 14a5bd3\nlang and description in webmanifest 1e4fd87\n\nv3.1.2\n\n23 August 2020\n\n\nrelease v3.1.2 69ed6f4\n\nv3.1.1\n\n23 August 2020\n\n\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 800fdae\nrelease v3.1.1 7440340\n\nv3.1.0\n\n23 August 2020\n\n\ndeps 3597f8b\nnx 10.1 20050dc\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 0cec276\n\nv3.0.9\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest 8d5f783\nrelease v3.0.9 f3a09c7\n\nv3.0.8\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest b708169\nrelease v3.0.8 7a1bbe5\n\nv3.0.7\n\n21 August 2020\n\n\nrelease v3.0.7 1a92061\n\nv3.0.6\n\n21 August 2020\n\n\nrelease v3.0.6 f31886e\n\nv3.0.5\n\n21 August 2020\n\n\nrelease v3.0.5 e7c9ada\n\nv3.0.4\n\n21 August 2020\n\n\nrelease v3.0.4 20d1b8b\n\nv3.0.3\n\n21 August 2020\n\n\nrelease v3.0.2 ea1fc76\nrelease v3.0.3 f4f50ef\n\nv3.0.2\n\n21 August 2020\n\n\nrelease v3.0.2 bc4e4dc\n\nv3.0.1\n\n21 August 2020\n\n\nrelease v3.0.1 339d07b\n\nv3.0.0\n\n21 August 2020\n\n\nrelease v3.0.0 57f591d\nrelease v2.0.0 6a6ec18\nrelease v1.19.0 d6210df\n\nv2.0.2\n\n21 August 2020\n\n\nrelease v2.0.2 7b491de\n\nv2.0.1\n\n21 August 2020\n\n\nrelease v2.0.1 b820bf4\n\nv2.0.0\n\n21 August 2020\n\n\nreadded polyfills, prefetch, manifest.json, splashscreen e102482\nrelease v2.0.0 c3d7490\n\nv1.18.0\n\n21 August 2020\n\n\nrelease v1.18.0 5aed853\n\nv1.17.0\n\n21 August 2020\n\n\nrelease v1.17.0 901f502\n\nv1.16.0\n\n21 August 2020\n\n\nrelease v1.16.0 5af2ad7\n\nv1.15.0\n\n21 August 2020\n\n\nrelease v1.15.0 abccf03\n\nv1.14.0\n\n21 August 2020\n\n\nrelease v1.14.0 339af30\n\nv1.13.0\n\n21 August 2020\n\n\nrelease v1.13.0 fb05c12\n\nv1.12.0\n\n21 August 2020\n\n\nrelease v1.12.0 67a17ee\n\nv1.11.12\n\n21 August 2020\n\n\nrelease v1.11.12 bba9cb0\n\nv1.11.11\n\n21 August 2020\n\n\nrelease v1.11.11 ba2a28a\n\nv1.11.10\n\n21 August 2020\n\n\nrelease v1.11.10 b7e8f76\n\nv1.11.9\n\n21 August 2020\n\n\nrelease v1.11.9 52afb10\n\nv1.11.8\n\n21 August 2020\n\n\nrelease v1.11.8 e6d7fd2\n\nv1.11.7\n\n21 August 2020\n\n\nrelease v1.11.7 c2c0b8f\n\nv1.11.6\n\n21 August 2020\n\n\nrelease v1.11.6 91d4a54\n\nv1.11.5\n\n21 August 2020\n\n\nrelease v1.11.5 822ff08\n\nv1.11.4\n\n21 August 2020\n\n\nrelease v1.11.4 8c9c5c3\n\nv1.11.3\n\n21 August 2020\n\n\nrelease v1.11.3 8aabc76\n\nv1.11.2\n\n21 August 2020\n\n\nrelease v1.11.2 71e1d6c\n\nv1.11.1\n\n21 August 2020\n\n\nrelease v1.11.1 ed57248\nremove commonjs whitelist entry ad6497d\n\nv1.11.0\n\n19 August 2020\n\n\ndeps and polyfills removed 3e8e5d0\nrelease v1.11.0 289ec3d\ndisable zone for requestAnimationFrame 422fc8e\n\nv1.10.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\nrelease v1.10.0 f9c114e\nrelease v1.9.1 6b2d8b8\n\nv1.9.1\n\n17 August 2020\n\n\nrelease v1.9.0 68e8dc6\nrelease v1.9.1 d5cd7ea\n\nv1.9.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\n\nv1.8.0\n\n17 August 2020\n\n\nrelease v1.8.0 7484f35\nCreate LICENSE f69d368\nRename LICENSE to LICENSE.md 3773370\n\nv1.7.3\n\n30 July 2020\n\n\ndeps a00ccd1\nrelease v1.7.3 47842e1\nnode 14 build f5ee0e6\n\nv1.7.2\n\n24 July 2020\n\n\nrelease v1.7.2 101bbd0\n\nv1.7.1\n\n24 July 2020\n\n\nrelease v1.7.1 28465d6\n\nv1.7.0\n\n24 July 2020\n\n\nrelease v1.7.0 b5f68a1\n\nv1.6.4\n\n24 July 2020\n\n\nrelease v1.6.4 646c494\n\nv1.6.3\n\n24 July 2020\n\n\nrelease v1.6.3 17ed8a6\n\nv1.6.2\n\n18 July 2020\n\n\ndeps 667f875\nRevert \"support for seeking to position on android notification\" f2cfbcc\nrelease v1.6.2 85eb0ba\n\nv1.6.1\n\n10 July 2020\n\n\ndeps 228ee85\nrelease v1.6.1 949055a\n\nv1.6.0\n\n3 July 2020\n\n\nsupport for seeking to position on android notification 9fa1a37\nrelease v1.6.0 4f1794f\n\nv1.5.0\n\n3 July 2020\n\n\ndeps und position reporting to browser 7a6f294\nrelease v1.5.0 f076ced\n\nv1.4.1\n\n26 June 2020\n\n\nangular.json schema und allowedCommonJsDeps 654bac2\nrelease v1.4.1 250d7f9\n\nv1.4.0\n\n26 June 2020\n\n\ndeps fix 4e72fcd\nng 10 update b6bd950\nadded missing decorator 8515368\n\nv1.3.0\n\n4 June 2020\n\n\nnew icons for visualization modes a8073a9\nrelease v1.3.0 b241b46\n\nv1.2.2\n\n28 May 2020\n\n\ndeps 87adc2c\nrelease v1.2.2 abc0b07\n\nv1.2.1\n\n20 May 2020\n\n\ndeps be025cd\nrelease v1.2.1 0b30a9f\n\nv1.2.0\n\n10 May 2020\n\n\nname changes, native file service refactored 170ea47\nrelease v1.2.0 cb01a92\nname changes, native file service refactored 8264f64\n\nv1.1.0\n\n8 May 2020\n\n\nrelease v1.1.0 a2a4811\nopen folders recursive 1c9fedf\n\nv1.0.5\n\n8 May 2020\n\n\nrelease v1.0.5 1604161\n\nv1.0.4\n\n5 May 2020\n\n\nfix: package.json, package-lock.json & .snyk to reduce vulnerabilities #2\nrelease v1.0.4 8e2ff5a\n\nv1.0.3\n\n2 May 2020\n\n\nrelease v1.0.3 8e36da3\n\nv1.0.2\n\n2 May 2020\n\n\nrelease v1.0.2 6926167\n\nv1.0.1\n\n2 May 2020\n\n\nrelease v1.0.1 194199c\n\nv1.0.0\n\n2 May 2020\n\n\nremoved electron, added compodoc 22afab3\nrelease v1.0.0 18cab80\nUpdate README.md 0e060af\n\nv0.29.0\n\n25 April 2020\n\n\nrelease v0.29.0 669facb\n\nv0.28.0\n\n25 April 2020\n\n\ndeps 9d2ef7e\nrelease v0.28.0 eaf70a8\n\nv0.25.0\n\n15 April 2020\n\n\nrelease v0.25.0 0581767\n\nv0.24.0\n\n15 April 2020\n\n\nrelease v0.24.0 a457b9c\ndeps linting formating b04ce8b\nUpdate NOTES.md 0903cd2\n\nv0.23.0\n\n4 April 2020\n\n\nci d954540\nrelease v0.23.0 95902bb\nci 53a8631\n\nv0.22.0\n\n4 April 2020\n\n\nrelease v0.22.0 f0f7618\n\nv0.21.0\n\n31 March 2020\n\n\ndependencies e34b732\nreadme e7032e1\nfile extensions list 53749c8\n\nv0.20.0\n\n30 March 2020\n\n\nrelease v0.20.0 572a9f8\n\nv0.19.0\n\n30 March 2020\n\n\nrelease v0.19.0 72075fe\nscreen wakelock when playing, navigation fixed especially for mobile ae93b7a\norigin trials for native file system and wakelock api a5849e4\n\nv0.18.0\n\n29 March 2020\n\n\nrelease v0.18.0 fefaba0\nprevent browser history 097fe6b\n\nv0.17.0\n\n29 March 2020\n\n\nprevent browser history 80b42ce\nrelease v0.17.0 4e9a327\n\nv0.16.0\n\n29 March 2020\n\n\ndeps f1b02b7\nrelease v0.16.0 5fe0756\n\nv0.15.0\n\n29 March 2020\n\n\ndeps 092dc60\nnx tags 6782ecd\nrelease v0.15.0 0cabcad\n\nv0.14.0\n\n24 March 2020\n\n\nrelease v0.14.0 dd93cb1\n\nv0.13.0\n\n24 March 2020\n\n\nrelease v0.13.0 162acda\n\nv0.12.0\n\n24 March 2020\n\n\nrelease v0.12.0 79fee74\n\nv0.11.0\n\n24 March 2020\n\n\nrelease v0.11.0 828148a\n\nv0.10.0\n\n24 March 2020\n\n\nrelease v0.10.0 35a78e4\n\nv0.9.0\n\n24 March 2020\n\n\nrelease v0.9.0 2011e46\n\nv0.8.0\n\n24 March 2020\n\n\nrelease v0.8.0 02c06cb\n\nv0.7.0\n\n24 March 2020\n\n\nrelease v0.7.0 75fc12c\n\nv0.6.0\n\n24 March 2020\n\n\nrelease v0.6.0 184a834\n\nv0.5.0\n\n24 March 2020\n\n\nrelease v0.5.0 ab311db\n\nv0.4.0\n\n24 March 2020\n\n\nrelease v0.4.0 42f56c1\nfixed visuals cefa1f1\nplay rewrite and project preparations 1098d6a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @allex/crc32 : ^1.0.4\n        \n            @angular/animations : 19.2.3\n        \n            @angular/cdk : 19.2.6\n        \n            @angular/common : 19.2.3\n        \n            @angular/compiler : 19.2.3\n        \n            @angular/core : 19.2.3\n        \n            @angular/forms : 19.2.3\n        \n            @angular/material : 19.2.6\n        \n            @angular/platform-browser : 19.2.3\n        \n            @angular/platform-browser-dynamic : 19.2.3\n        \n            @angular/router : 19.2.3\n        \n            @angular/service-worker : 19.2.3\n        \n            @thebespokepixel/es-tinycolor : ^3.1.0\n        \n            date-fns : ^4.1.0\n        \n            lucene-escape-query : ^1.0.1\n        \n            music-metadata : 11.0.2\n        \n            ngx-date-fns : 12.0.0\n        \n            ngx-indexed-db : 19.4.3\n        \n            ngx-pipes : 3.2.2\n        \n            ngx-webstorage : 19.0.1\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            spark-md5 : ^3.0.2\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../helpers-time.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/helpers-time.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    41 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.2.21\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : MIT\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs:\n\nuse webworker for node-vibrant\nAudio-File explorer + Suche\nPlaylist management (Sorting, Saving)\nVisuals via UserMediaInput from mic or system\nShare target\nWriting Meta-Tags\nFullscreen/Multiwindow Mode\nLocalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \"60\" | \"170\" | \"310\" | \"600\" | \"1000\" | \"3000\" | \"6000\" | \"12000\" | \"14000\" | \"16000\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../app.config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../audio.service.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideExperimentalZonelessChangeDetection(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideAnimations(),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'metadataCache',\n  version: 2,\n  objectStoresMeta: [\n    {\n      store: 'metatags',\n      storeConfig: { keyPath: 'crc', autoIncrement: false },\n      storeSchema: [\n        { name: 'crc', keypath: 'crc', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'dirHandle',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/audio.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FrequencyBand[]\n\n                    \n                \n                \n                    \n                        Default value : [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
