var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.159,1,2.787]],["body/interfaces/ActionCache.html",[0,0.279,1,4.168,2,1.085,3,0.229,4,0.229,5,0.17,6,3.222,7,0.393,8,0.651,9,5.19,10,1.717,11,0.645,12,0.011,13,0.41,14,4.886,15,3.664,16,1.326,17,4.908,18,2.103,19,0.69,20,3.222,21,1.149,22,1.842,23,4.621,24,3.222,25,2.721,26,3.423,27,3.423,28,3.222,29,3.051,30,3.423,31,3.222,32,3.222,33,3.222,34,3.051,35,3.051,36,4.74,37,2.9,38,3.423,39,1.818,40,3.423,41,2.629,42,3.423,43,3.152,44,3.423,45,3.579,46,3.423,47,3.222,48,3.423,49,3.222,50,3.423,51,3.423,52,3.423,53,3.423,54,3.423,55,3.051,56,3.423,57,3.423,58,3.423,59,2.767,60,3.423,61,3.222,62,3.423,63,3.222,64,3.423,65,3.423,66,3.423,67,3.423,68,3.423,69,3.423,70,3.051,71,3.423,72,3.423,73,3.423,74,3.423,75,0.008,76,0.008]],["title/interfaces/Album.html",[0,0.159,77,1.593]],["body/interfaces/Album.html",[0,0.092,2,0.545,3,0.115,4,0.115,5,0.203,7,0.123,8,0.396,10,1.302,11,0.399,12,0.011,13,0.193,16,1.29,19,1.062,21,0.577,39,1.107,75,0.005,76,0.005,77,2.668,78,2.194,79,3.472,80,1.228,81,3.168,82,2.096,83,0.724,84,0.88,85,3.037,86,2.085,87,0.514,88,2.286,89,2.698,90,1.602,91,0.346,92,3.676,93,3.215,94,1.389,95,2.54,96,1.618,97,3.126,98,3.444,99,3.444,100,2.888,101,1.719,102,2.18,103,1.618,104,3.126,105,1.274,106,3.126,107,1.134,108,3.126,109,3.126,110,3.126,111,1.991,112,3.126,113,1.84,114,1.274,115,1.184,116,1.618,117,2.18,118,1.532,119,3.126,120,1.84,121,3.444,122,3.444,123,3.444,124,3.444,125,3.444,126,2.194,127,3.444,128,1.84,129,1.84,130,2.888,131,2.194,132,0.955,133,0.925,134,2.194,135,1.177,136,2.194,137,0.335,138,0.955,139,1.021,140,1.264,141,1.469,142,1.532,143,1.532,144,3.223,145,2.194,146,3.444,147,2.194,148,1.842,149,3.444,150,2.194,151,2.194,152,1.675,153,2.194,154,2.194,155,2.194,156,2.194,157,2.194,158,2.194,159,3.135,160,2.194,161,1.991,162,2.194,163,5.807,164,4.816,165,2.194,166,2.194,167,2.194,168,3.092,169,1.549,170,2.194,171,3.858,172,2.194,173,2.194,174,3.444,175,4.816,176,3.444,177,4.252,178,2.18,179,1.991,180,3.126,181,5.233,182,2.194,183,1.84,184,3.444,185,2.194,186,2.194,187,2.194,188,2.194,189,2.194,190,2.194,191,2.194,192,5.807,193,2.194,194,2.194,195,2.54,196,1.602,197,2.194,198,4.252,199,2.194,200,1.719,201,4.252,202,2.194,203,2.194,204,4.252,205,2.194,206,2.194,207,1.532,208,3.444,209,2.194,210,2.876,211,3.444,212,2.194,213,3.444,214,2.194,215,2.194,216,2.194,217,2.194,218,2.194,219,2.194,220,1.991,221,1.84,222,1.719,223,2.194,224,2.194,225,2.194,226,2.194,227,0.987,228,1.991,229,2.194,230,1.991,231,1.991,232,1.84,233,1.84,234,4.252,235,2.194,236,5.553,237,1.991,238,3.444,239,2.194,240,3.444,241,1.719,242,1.456,243,2.194,244,2.194,245,2.194,246,3.126,247,2.194,248,2.194,249,2.194,250,2.194,251,2.137,252,1.991,253,2.781,254,1.991,255,2.194,256,2.194,257,2.194,258,4.252,259,2.194,260,4.816,261,2.194,262,2.194,263,3.444,264,3.444,265,1.991,266,2.194,267,2.194,268,2.194,269,2.194,270,2.194,271,2.194,272,2.194,273,2.194,274,3.444,275,3.444,276,2.194,277,1.223,278,2.194,279,2.194,280,2.194,281,1.991,282,2.194,283,2.194,284,1.991,285,2.194]],["title/interfaces/AnalyserConfig.html",[0,0.159,286,2.392]],["body/interfaces/AnalyserConfig.html",[0,0.302,2,1.025,3,0.216,4,0.216,5,0.16,7,0.231,8,0.627,10,1.805,11,0.663,12,0.011,13,0.413,18,2.933,19,1.023,22,1.74,25,2.621,75,0.008,76,0.008,286,3.447,287,2.612,288,4.04,289,4.301,290,4.301,291,4.301,292,2.499,293,2.396,294,2.499,295,2.499,296,2.499,297,2.396,298,2.499,299,2.499,300,2.499,301,2.612,302,2.612,303,2.396,304,3.297,305,3.161,306,3.161,307,3.161,308,2.396,309,3.161,310,2.499,311,2.714,312,2.714,313,3.161,314,2.499,315,2.396,316,2.499,317,2.612,318,2.738,319,2.396,320,3.538,321,2.499,322,2.301,323,3.858,324,2.921,325,2.499,326,3.161,327,3.613,328,3.613,329,2.396,330,3.161,331,3.613]],["title/components/AppComponent.html",[84,0.966,332,1.7]],["body/components/AppComponent.html",[3,0.214,4,0.214,5,0.21,12,0.011,13,0.229,16,1.24,75,0.008,76,0.008,80,1.58,83,0.735,84,1.55,87,0.958,91,0.645,105,2.372,115,1.507,132,2.355,133,2.281,137,0.624,138,1.779,140,1.47,141,1.47,227,2.728,332,2.904,333,2.016,334,1.9,335,1.9,336,1.9,337,4.66,338,3.776,339,3.776,340,3.324,341,3.352,342,1.844,343,2.904,344,6.17,345,0.93,346,4.66,347,2.852,348,4.66,349,4.66,350,2.712,351,2.278,352,3.59,353,3.201,354,4.91,355,4.66,356,4.66,357,4.66,358,4.66,359,4.66,360,4.66,361,4.66,362,3.201,363,4.66,364,4.66,365,4.66,366,4.66,367,4.66,368,4.66,369,4.66,370,1.9,371,2.516,372,2.142,373,1.669,374,3.002,375,1.9,376,1.9,377,1.838,378,1.669,379,1.9,380,1.838,381,1.838,382,1.779,383,1.9,384,1.618,385,1.838,386,2.821,387,1.838,388,1.838,389,1.723,390,1.9,391,1.838,392,1.9,393,1.723,394,1.838,395,1.9,396,1.838,397,1.9,398,1.838,399,1.779,400,1.9,401,1.838,402,1.9,403,1.838,404,1.723,405,1.838,406,1.9,407,1.838,408,1.779,409,1.838,410,1.9]],["title/injectables/AudioService.html",[411,0.765,412,2.392]],["body/injectables/AudioService.html",[3,0.104,4,0.104,5,0.193,7,0.111,8,0.365,10,1.519,11,0.576,12,0.011,13,0.177,16,1.967,21,1.678,22,1.673,39,2.26,41,1.474,75,0.005,76,0.005,80,1.322,83,0.483,85,1.839,87,0.463,90,1.845,91,0.312,94,1.251,137,0.302,140,1.361,141,1.676,148,1.63,152,1.16,169,2.042,227,1.785,233,1.656,251,1.621,253,0.889,265,1.793,319,2.635,329,2.303,342,0.673,345,1.637,372,0.782,411,0.641,412,2.006,413,0.86,414,1.976,415,4.525,416,3.601,417,3.327,418,5.305,419,3.601,420,4.525,421,4.525,422,3.968,423,4.525,424,4.54,425,0.787,426,5.178,427,3.614,428,3.614,429,3.806,430,4.54,431,5.178,432,3.614,433,3.614,434,3.614,435,3.614,436,3.614,437,3.614,438,3.614,439,2.876,440,4.525,441,2.253,442,2.253,443,1.585,444,3.614,445,4.51,446,2.253,447,2.098,448,1.401,449,4.12,450,3.614,451,4.373,452,2.253,453,4.525,454,2.253,455,2.253,456,1.311,457,2.253,458,3.614,459,2.253,460,3.614,461,4.97,462,2.253,463,1.961,464,2.482,465,2.885,466,2.253,467,2.253,468,3.614,469,2.253,470,3.614,471,4.97,472,2.253,473,3.614,474,2.253,475,3.614,476,3.614,477,2.253,478,2.253,479,3.614,480,2.253,481,4.54,482,2.253,483,2.253,484,3.614,485,2.336,486,2.336,487,2.336,488,2.336,489,2.336,490,2.006,491,2.336,492,2.336,493,2.336,494,2.336,495,2.253,496,4.448,497,2.253,498,2.253,499,5.178,500,2.253,501,2.253,502,2.253,503,3.614,504,2.253,505,3.614,506,2.876,507,2.253,508,2.253,509,2.253,510,2.006,511,1.06,512,1.196,513,2.212,514,2.876,515,0.919,516,3.327,517,0.693,518,1.251,519,2.253,520,4.448,521,2.253,522,2.253,523,2.253,524,2.253,525,5.178,526,2.253,527,2.253,528,2.253,529,3.614,530,2.253,531,2.253,532,2.253,533,2.253,534,2.876,535,3.169,536,2.253,537,2.253,538,2.482,539,3.614,540,2.253,541,2.253,542,2.253,543,2.253,544,1.793,545,2.253,546,2.253,547,2.253,548,3.614,549,2.253,550,1.976,551,1.379,552,1.976,553,1.547,554,2.253,555,1.656,556,1.976,557,2.253,558,1.976,559,3.614,560,3.614,561,2.253,562,2.876,563,3.614,564,3.614,565,2.253,566,2.253,567,2.253,568,2.253,569,2.253,570,2.253,571,2.253,572,2.253,573,1.547,574,1.379,575,1.793,576,2.253,577,2.253,578,2.253,579,2.253,580,2.253,581,2.253,582,3.614,583,2.253,584,2.253,585,2.253,586,2.253,587,2.253,588,1.294,589,2.253,590,2.876,591,2.253,592,2.253,593,1.793,594,2.253,595,1.656,596,1.101,597,2.253,598,1.547,599,2.253,600,2.253,601,2.253,602,2.253,603,2.253,604,2.253,605,2.253,606,2.253,607,2.253,608,2.253,609,2.253,610,2.253,611,2.253,612,2.253,613,2.253,614,2.253,615,2.253,616,2.253,617,3.614,618,2.253,619,1.976,620,2.253,621,2.253,622,1.976,623,1.547,624,1.976,625,2.253,626,2.253,627,2.253,628,3.614,629,2.253,630,2.253,631,2.253,632,2.253,633,2.253,634,2.253,635,3.614,636,2.253,637,2.253,638,2.253,639,2.253,640,2.253,641,2.253,642,2.253,643,2.253,644,2.253,645,2.253,646,3.614,647,2.253,648,2.253,649,2.253,650,2.253,651,2.253]],["title/interfaces/AxisGamepadAction.html",[0,0.159,24,2.787]],["body/interfaces/AxisGamepadAction.html",[0,0.279,1,3.211,2,1.081,3,0.228,4,0.228,5,0.169,6,3.211,7,0.35,8,0.649,9,3.411,10,1.607,11,0.644,12,0.011,13,0.41,14,5.341,15,3.652,16,1.322,17,5.183,18,2.096,19,0.687,20,3.211,21,1.145,22,1.836,23,4.613,24,4.159,25,3.011,26,5.183,27,5.183,28,3.211,29,3.04,30,3.411,31,3.211,32,3.211,33,3.211,34,3.04,35,3.04,36,4.729,37,2.89,38,3.411,39,1.814,40,3.411,41,2.623,42,3.411,43,3.145,44,3.411,45,3.571,46,3.411,47,3.211,48,3.411,49,3.211,50,3.411,51,3.411,52,3.411,53,3.411,54,3.411,55,3.04,56,3.411,57,3.411,58,3.411,59,2.757,60,3.411,61,3.211,62,3.411,63,3.211,64,3.411,65,3.411,66,3.411,67,3.411,68,3.411,69,3.411,70,3.04,71,3.411,72,3.411,73,3.411,74,3.411,75,0.008,76,0.008]],["title/pipes/BandPipe.html",[114,2.194,652,3.78]],["body/pipes/BandPipe.html",[3,0.266,4,0.266,5,0.197,11,0.477,12,0.011,13,0.284,19,0.981,39,1.632,41,2.36,75,0.009,76,0.009,80,1.484,83,0.661,91,0.801,94,3.213,114,3.606,115,1.413,137,0.775,139,2.36,148,1.297,152,1.587,345,1.156,425,1.26,443,1.225,447,1.781,448,1.19,451,4.882,463,2.062,490,3.932,516,5.208,652,6.212,653,4.256,654,5.788,655,5.637,656,2.704,657,4.256,658,5.637,659,5.788,660,5.637,661,7.084,662,5.788,663,5.788,664,5.788]],["title/interfaces/BarsVisualizerOptions.html",[0,0.159,326,2.194]],["body/interfaces/BarsVisualizerOptions.html",[0,0.299,2,0.978,3,0.207,4,0.207,5,0.153,7,0.22,8,0.608,10,1.813,11,0.682,12,0.011,13,0.41,18,3.286,19,1.004,22,1.661,25,2.866,75,0.008,76,0.008,286,2.494,287,2.494,288,3.889,289,2.614,290,2.614,291,2.614,292,2.385,293,2.287,294,2.385,295,2.385,296,2.385,297,2.287,298,2.385,299,2.385,300,2.385,301,2.494,302,2.494,303,2.287,304,4.017,305,3.851,306,3.851,307,3.851,308,2.287,309,3.065,310,2.385,311,2.632,312,2.632,313,3.065,314,2.385,315,2.287,316,2.385,317,2.494,318,2.614,319,2.287,320,3.457,321,2.385,322,2.196,323,4.027,324,2.832,325,2.385,326,3.457,327,3.952,328,3.807,329,3.693,330,3.065,331,3.547]],["title/interfaces/BaseVisualizerOptions.html",[0,0.159,323,2.392]],["body/interfaces/BaseVisualizerOptions.html",[0,0.301,2,1.013,3,0.214,4,0.214,5,0.158,7,0.228,8,0.622,10,1.797,11,0.671,12,0.011,13,0.412,18,3.319,19,1.128,22,1.72,25,2.601,75,0.008,76,0.008,286,2.583,287,2.583,288,3.597,289,2.707,290,2.707,291,2.707,292,2.47,293,2.368,294,2.47,295,2.47,296,2.47,297,2.368,298,2.47,299,2.47,300,2.47,301,2.583,302,2.583,303,2.368,304,3.272,305,3.137,306,3.137,307,3.137,308,2.368,309,3.137,310,2.47,311,3.345,312,3.345,313,3.896,314,2.47,315,2.368,316,2.47,317,2.583,318,2.707,319,2.368,320,3.518,321,2.47,322,2.275,323,4.084,324,3.461,325,3.907,326,3.137,327,3.597,328,3.597,329,2.368,330,3.137,331,3.597]],["title/pipes/BitratePipe.html",[114,2.194,665,3.43]],["body/pipes/BitratePipe.html",[3,0.273,4,0.273,5,0.202,10,1.592,11,0.49,12,0.011,13,0.292,19,0.997,75,0.009,76,0.009,80,1.502,83,0.555,91,0.823,114,3.665,115,1.451,137,0.796,139,2.424,210,3.158,345,1.187,425,1.294,443,1.257,447,1.829,448,1.222,463,2.002,653,4.37,655,5.729,656,2.748,657,4.37,658,5.729,660,5.729,665,5.729,666,6.313,667,5.944,668,6.313,669,4.926,670,5.944]],["title/interfaces/ButtonGamepadAction.html",[0,0.159,28,2.787]],["body/interfaces/ButtonGamepadAction.html",[0,0.28,1,3.251,2,1.095,3,0.231,4,0.231,5,0.171,6,3.251,7,0.352,8,0.654,9,3.453,10,1.613,11,0.625,12,0.011,13,0.411,14,5.195,15,3.696,16,1.338,17,5.207,18,2.122,19,0.696,20,3.251,21,1.159,22,1.859,23,4.64,24,3.251,25,3.028,26,3.453,27,3.453,28,4.192,29,4.64,30,3.453,31,3.251,32,3.251,33,3.251,34,3.077,35,3.077,36,4.767,37,2.926,38,3.453,39,1.828,40,3.453,41,2.644,42,3.453,43,3.17,44,3.453,45,3.599,46,3.453,47,3.251,48,3.453,49,3.251,50,3.453,51,3.453,52,3.453,53,3.453,54,3.453,55,3.077,56,3.453,57,3.453,58,3.453,59,2.791,60,3.453,61,3.251,62,3.453,63,3.251,64,3.453,65,3.453,66,3.453,67,3.453,68,3.453,69,3.453,70,3.077,71,3.453,72,3.453,73,3.453,74,3.453,75,0.008,76,0.008]],["title/interfaces/Chainable.html",[0,0.159,671,3.78]],["body/interfaces/Chainable.html",[0,0.189,2,1.112,3,0.235,4,0.235,5,0.223,7,0.251,12,0.011,16,1.743,75,0.008,76,0.008,83,0.611,345,1.02,372,1.774,425,1.426,443,1.081,448,1.05,514,5.212,538,3.508,552,5.744,671,5.744,672,5.108,673,6.688,674,5.108,675,5.108,676,4.479,677,4.479,678,5.108,679,4.479,680,5.108,681,5.108,682,5.108,683,6.55,684,7.627,685,5.744,686,5.744,687,5.744,688,5.108,689,5.108,690,5.108,691,5.108,692,4.479,693,5.108,694,5.108,695,5.108,696,5.108,697,7.627,698,5.108,699,5.108,700,3.127,701,5.108,702,5.108,703,5.108,704,5.108,705,6.55,706,5.108,707,6.55,708,6.55,709,5.108,710,5.108,711,4.479,712,5.108,713,6.55,714,4.675,715,5.108,716,5.108,717,5.108,718,5.108,719,2.835]],["title/interfaces/ColorConfig.html",[0,0.159,720,2.288]],["body/interfaces/ColorConfig.html",[0,0.283,2,1.13,3,0.239,4,0.239,5,0.248,7,0.255,8,0.668,11,0.653,12,0.011,13,0.404,19,1.194,25,2.191,75,0.008,76,0.008,77,1.919,79,3.021,81,2.756,82,2.526,83,0.68,92,2.882,93,2.893,115,1.873,116,3.357,148,1.483,168,2.117,196,2.117,277,3.236,311,3.353,312,3.353,448,1.577,451,4.051,485,3.357,486,3.357,487,3.357,488,3.357,489,3.357,490,2.882,491,3.357,492,3.357,493,3.357,494,3.357,513,3.177,573,3.566,720,3.514,721,3.357,722,4.051,723,3.177,724,2.191,725,3.369,726,4.279,727,2.882,728,4.051,729,4.71,730,3.021,731,3.566,732,2.442,733,3.566,734,3.357,735,3.817,736,3.566,737,3.817,738,3.817,739,3.357,740,3.021]],["title/interfaces/ColorVariant.html",[0,0.159,741,3.43]],["body/interfaces/ColorVariant.html",[0,0.127,2,0.751,3,0.159,4,0.159,5,0.117,7,0.169,8,0.505,10,1.472,11,0.486,12,0.011,13,0.169,19,1.048,21,0.796,22,1.275,39,0.973,59,1.915,75,0.006,76,0.006,80,1.143,83,0.69,85,3,86,3.646,87,0.709,90,1.407,91,0.478,137,0.462,140,1.475,141,1.511,148,1.539,152,1.321,227,1.361,342,1.031,350,2.008,351,1.687,352,2.008,404,2.179,411,0.889,448,1.329,510,2.779,511,1.623,512,1.832,517,1.062,518,1.915,623,2.37,720,2.659,741,4.69,742,3.025,743,7.038,744,6.962,745,7.394,746,3.985,747,5.146,748,4.333,749,3.025,750,4.754,751,4.754,752,2.37,753,3.025,754,3.025,755,3.025,756,3.025,757,3.025,758,2.37,759,3.025,760,3.025,761,4.391,762,3.025,763,2.746,764,3.025,765,2.537,766,3.025,767,4.391,768,2.746,769,2.746,770,3.025,771,3.025,772,3.025,773,3.025,774,3.025,775,3.025,776,3.025,777,3.025,778,3.025,779,3.025,780,3.025,781,3.025,782,2.746,783,3.025,784,3.025,785,3.025,786,5.199,787,4.391,788,3.025,789,3.025,790,3.025,791,3.025,792,3.025,793,3.025,794,3.025,795,3.025,796,3.025,797,3.025,798,3.025,799,3.025,800,3.025,801,4.391,802,4.391,803,3.025,804,5.168,805,3.025,806,4.391,807,3.025,808,3.025,809,3.025,810,3.025,811,3.025,812,3.025,813,3.025,814,3.025,815,3.025,816,3.025,817,3.025,818,3.025,819,3.025,820,2.537,821,2.746,822,3.025,823,3.025,824,4.391,825,3.025,826,4.391,827,4.391,828,3.025,829,2.746,830,3.025,831,3.025,832,3.025,833,3.025,834,2.537,835,3.025,836,4.391,837,3.025,838,3.025,839,3.025,840,3.025,841,3.025,842,3.025,843,3.025,844,3.025,845,3.025,846,4.391,847,3.025,848,3.025,849,1.915,850,3.025,851,2.746,852,3.025]],["title/interfaces/CoverColor.html",[0,0.159,853,2.787]],["body/interfaces/CoverColor.html",[0,0.301,2,1.24,3,0.262,4,0.262,5,0.258,7,0.28,8,0.708,11,0.578,12,0.011,13,0.4,19,1.198,75,0.009,76,0.009,82,2.174,83,0.532,448,1.63,588,2.04,724,2.404,725,2.9,849,4.403,853,5.488,854,2.323,855,3.912,856,5.129,857,3.066,858,2.679,859,3.315,860,3.683,861,3.683,862,3.683,863,3.683,864,3.683,865,2.785,866,2.785,867,3.486,868,3.724,869,3.486,870,2.9]],["title/interfaces/CoverColorPalette.html",[0,0.159,725,2.194]],["body/interfaces/CoverColorPalette.html",[0,0.295,2,1.158,3,0.245,4,0.245,5,0.251,7,0.261,8,0.678,11,0.672,12,0.011,13,0.392,19,1.146,75,0.009,76,0.009,82,2.029,83,0.496,448,1.77,588,1.904,724,2.243,725,3.42,849,2.951,853,5.686,854,2.168,855,3.651,856,3.437,857,2.937,858,2.501,859,4.504,860,5.004,861,5.004,862,5.004,863,5.004,864,5.004,865,2.599,866,2.599,867,3.254,868,3.567,869,3.254,870,2.706]],["title/components/CoverDisplayComponent.html",[84,0.966,377,1.7]],["body/components/CoverDisplayComponent.html",[3,0.155,4,0.155,5,0.168,7,0.166,8,0.498,12,0.011,13,0.166,21,1.343,75,0.006,76,0.006,77,1.824,79,3.963,80,1.46,81,2.62,83,0.664,84,1.306,85,3.467,87,0.695,91,0.468,102,3.555,103,2.186,115,1.205,132,1.883,133,1.824,135,2.321,137,0.453,138,1.291,140,0.675,141,1.557,143,3.02,144,3.908,148,1.106,152,1.106,332,1.333,333,1.612,334,1.379,335,1.379,336,1.379,338,3.02,339,3.02,340,3.211,341,3.183,343,1.333,345,1.163,347,2.069,352,2.871,353,2.322,362,2.322,370,1.379,371,2.012,372,1.713,373,1.211,374,2.612,375,1.379,376,1.379,377,2.526,378,2.831,379,1.379,380,1.333,381,1.333,382,1.291,383,1.379,384,1.174,385,1.333,386,2.376,387,1.333,388,1.333,389,1.25,390,1.379,391,1.333,392,1.379,393,1.25,394,1.333,395,1.379,396,1.333,397,1.379,398,1.333,399,1.291,400,1.379,401,1.333,402,1.379,403,1.333,404,1.25,405,2.526,406,1.379,407,1.333,408,1.291,409,1.333,410,1.379,417,3.628,463,1.506,665,4.636,666,5.617,668,5.617,732,2.321,786,3.389,871,5.617,872,3.381,873,3.389,874,4.283,875,4.934,876,4.934,877,5.826,878,6.405,879,4.934,880,4.934,881,4.934,882,4.934,883,3.381,884,4.934,885,3.381,886,3.381,887,3.381,888,3.381,889,2.965,890,5.097,891,2.691,892,4.327,893,4.327,894,4.327,895,6.405,896,6.405,897,4.934,898,6.405,899,3.389,900,6.405,901,6.405,902,6.405,903,6.405,904,4.934,905,4.934,906,4.934,907,4.327,908,3.381]],["title/interfaces/DirHandleEntry.html",[0,0.159,909,3.43]],["body/interfaces/DirHandleEntry.html",[0,0.162,2,0.956,3,0.202,4,0.202,5,0.269,7,0.215,8,0.598,10,1.379,11,0.488,12,0.011,13,0.215,41,1.79,75,0.008,76,0.008,83,0.701,87,0.902,90,1.79,91,0.608,137,0.588,139,1.79,140,0.876,141,1.183,148,1.733,152,1.772,159,2.838,227,1.731,251,2.574,253,3.051,277,2.146,342,1.312,351,2.146,411,1.052,465,3.017,511,2.065,515,1.79,517,1.351,551,2.687,588,2.123,656,2.263,700,2.687,868,3.985,909,4.717,910,2.687,911,2.234,912,3.493,913,3.227,914,5.269,915,5.973,916,2.838,917,2.838,918,2.436,919,2.331,920,2.687,921,3.989,922,2.687,923,3.449,924,3.015,925,3.493,926,3.015,927,3.015,928,3.227,929,3.849,930,3.849,931,5.886,932,3.849,933,5.198,934,3.849,935,3.227,936,2.647,937,1.989,938,3.849,939,3.849,940,3.849,941,3.849,942,1.989,943,3.849,944,3.227,945,3.849,946,3.849,947,3.628,948,3.493,949,3.849,950,3.849,951,3.849,952,3.493,953,3.493,954,3.849,955,3.849,956,3.849,957,3.493,958,3.849,959,3.015,960,3.493,961,3.849,962,3.849,963,3.849,964,3.493,965,3.227,966,5.886,967,4.717,968,3.493,969,3.849,970,3.849,971,3.849]],["title/components/EqualizerComponent.html",[84,0.966,380,1.7]],["body/components/EqualizerComponent.html",[3,0.141,4,0.141,5,0.156,7,0.15,8,0.463,10,1.344,11,0.252,12,0.011,13,0.15,16,1.221,19,0.635,21,1.268,39,1.55,41,2.49,43,2.688,45,1.7,49,1.981,59,1.7,63,3.947,75,0.006,76,0.006,80,1.451,83,0.61,84,1.232,86,2.435,87,0.63,90,1.249,91,0.424,93,2.668,94,1.7,115,1.12,132,1.751,133,1.696,135,2.158,137,0.41,138,1.169,140,0.916,141,1.461,144,3.493,148,1.676,152,1.368,227,2.169,315,2.335,332,1.208,333,1.499,334,1.249,335,1.249,336,1.249,338,2.808,339,2.808,340,3.139,341,3.051,343,1.208,345,1.305,347,1.875,352,2.669,353,2.104,362,2.104,370,1.249,371,1.871,372,1.593,373,1.097,374,2.49,375,1.249,376,1.249,377,1.208,378,1.097,379,1.249,380,2.408,381,1.208,382,1.169,383,1.249,384,1.064,385,1.208,386,2.242,387,1.208,388,1.208,389,1.132,390,1.249,391,1.208,392,1.249,393,1.132,394,1.208,395,1.249,396,1.208,397,1.249,398,1.208,399,1.169,400,1.249,401,1.208,402,1.249,403,1.208,404,1.132,405,1.208,406,1.249,407,1.208,408,1.169,409,1.208,410,1.249,412,3.389,425,0.999,443,0.97,447,0.943,448,0.63,463,1.579,471,4.822,490,1.7,513,3.366,516,5.5,562,5.662,758,2.104,765,2.252,873,2.104,918,3.052,972,3.064,973,4.376,974,4.587,975,4.587,976,6.538,977,4.587,978,6.106,979,4.587,980,4.587,981,3.064,982,3.064,983,2.808,984,3.064,985,2.438,986,2.438,987,1.981,988,2.252,989,3.064,990,3.064,991,3.064,992,4.022,993,2.438,994,3.064,995,3.064,996,3.064,997,3.064,998,4.587,999,3.064,1000,3.064,1001,3.064,1002,4.587,1003,3.064,1004,4.491,1005,3.064,1006,5.5,1007,3.064,1008,2.438,1009,3.064,1010,5.354,1011,4.587,1012,4.587,1013,4.587,1014,3.064,1015,4.587,1016,3.064,1017,3.064,1018,3.064,1019,4.587,1020,3.064,1021,6.106,1022,3.064,1023,5.499,1024,4.022,1025,3.064,1026,3.064,1027,6.863,1028,6.538,1029,3.064,1030,3.064,1031,5.499,1032,3.064,1033,4.376,1034,4.587,1035,2.252,1036,6.538,1037,3.064,1038,3.064,1039,2.686,1040,3.064,1041,3.064,1042,3.064,1043,3.064,1044,3.064,1045,2.438,1046,3.064,1047,3.064,1048,3.064,1049,3.064,1050,3.064,1051,3.064,1052,3.064,1053,3.064,1054,3.064,1055,3.064,1056,3.064,1057,3.064,1058,3.064,1059,2.438,1060,3.064,1061,3.064]],["title/interfaces/FileData.html",[0,0.159,921,2.392]],["body/interfaces/FileData.html",[0,0.221,2,1.302,3,0.275,4,0.275,5,0.291,7,0.294,8,0.729,11,0.595,12,0.011,13,0.381,75,0.009,76,0.009,148,1.619,277,3.944,448,1.485,728,4.753,910,3.661,911,3.045,920,3.661,921,4.011,1062,3.48,1063,5.245,1064,5.245,1065,5.245,1066,5.245,1067,6.337,1068,5.245,1069,5.245,1070,5.245,1071,5.245,1072,5.245,1073,5.245,1074,5.245,1075,5.245,1076,5.245,1077,5.245,1078,5.245,1079,5.245,1080,5.245,1081,5.245]],["title/components/FileDropOverlayComponent.html",[84,0.966,381,1.7]],["body/components/FileDropOverlayComponent.html",[3,0.132,4,0.132,5,0.279,7,0.215,11,0.552,12,0.011,13,0.141,16,1.409,19,0.399,21,0.664,39,1.234,75,0.006,76,0.006,80,1.478,83,0.269,84,1.187,87,0.592,88,3.082,91,0.399,115,1.069,133,1.618,137,0.386,138,1.099,139,1.785,140,1.468,141,1.057,148,1.502,152,0.645,200,1.977,221,3.893,222,3.006,242,1.675,332,1.136,333,1.43,334,1.174,335,1.174,336,1.174,340,3.143,341,3.085,343,1.136,345,1.338,370,1.174,371,1.785,372,1.52,373,1.031,374,2.595,375,1.174,376,1.174,377,1.136,378,1.031,379,1.174,380,1.136,381,2.334,382,3.275,383,1.174,384,1,385,1.136,386,2.16,387,1.136,388,1.136,389,1.064,390,1.174,391,1.136,392,1.174,393,1.064,394,1.136,395,1.174,396,1.136,397,1.174,398,1.136,399,1.099,400,1.174,401,1.136,402,1.174,403,1.136,404,1.618,405,1.136,406,1.174,407,1.136,408,1.099,409,1.136,410,1.174,425,0.953,443,1.12,447,1.63,448,1.088,463,0.744,464,1.977,544,2.291,588,1.897,596,2.589,622,2.525,624,2.525,692,3.838,700,4.102,727,2.43,728,2.679,758,1.977,768,2.291,786,3.006,829,2.291,834,2.117,873,1.977,914,1.861,936,1.726,937,1.983,942,1.983,959,1.977,985,2.291,1045,2.291,1082,2.879,1083,5.122,1084,6.109,1085,6.967,1086,6.967,1087,2.879,1088,5.296,1089,3.006,1090,4.377,1091,5.296,1092,4.377,1093,4.377,1094,4.377,1095,3.483,1096,5.296,1097,4.377,1098,5.296,1099,5.296,1100,2.879,1101,2.879,1102,2.879,1103,4.377,1104,7.499,1105,2.879,1106,4.377,1107,2.879,1108,4.377,1109,2.879,1110,3.006,1111,5.296,1112,2.879,1113,2.879,1114,2.879,1115,2.879,1116,2.879,1117,2.879,1118,2.879,1119,2.879,1120,2.879,1121,2.879,1122,2.879,1123,4.377,1124,6.364,1125,2.879,1126,4.377,1127,4.377,1128,2.879,1129,4.377,1130,2.879,1131,4.377,1132,4.377,1133,2.879,1134,4.377,1135,2.879,1136,4.644,1137,4.644,1138,4.377,1139,2.879,1140,2.879,1141,4.377,1142,5.296,1143,2.525,1144,4.377,1145,2.879,1146,5.917,1147,2.879,1148,2.879,1149,2.879,1150,2.879,1151,3.838,1152,3.483,1153,2.879,1154,2.879,1155,2.879,1156,2.879,1157,2.879,1158,2.879,1159,2.879,1160,2.879,1161,2.879,1162,2.879,1163,5.296,1164,2.879,1165,5.296,1166,2.879,1167,2.525,1168,2.879,1169,3.483,1170,2.879,1171,2.879,1172,2.525,1173,2.879,1174,2.879,1175,2.879,1176,2.879,1177,2.879,1178,2.879,1179,2.879,1180,2.879,1181,2.879,1182,2.879,1183,2.879,1184,2.879,1185,2.879,1186,4.377,1187,2.879,1188,4.377,1189,2.879,1190,2.879,1191,2.879,1192,2.879,1193,2.879,1194,2.879,1195,2.525,1196,3.838,1197,2.879,1198,2.879,1199,2.879,1200,2.879,1201,4.377]],["title/classes/FileLoaderService.html",[137,0.577,923,2.508]],["body/classes/FileLoaderService.html",[3,0.268,4,0.268,5,0.242,7,0.286,8,0.718,11,0.48,12,0.011,13,0.286,75,0.009,76,0.009,83,0.664,91,0.806,137,0.78,345,1.532,425,1.548,443,1.504,910,4.892,911,4.069,921,3.232,922,3.564,923,4.137,928,5.643,935,5.876,936,3.152,944,5.876,1062,4.651,1202,5.824,1203,5.824,1204,8.637,1205,7.676,1206,5.824,1207,5.824,1208,5.824]],["title/interfaces/FrequencyBarsConfig.html",[0,0.159,303,2.194]],["body/interfaces/FrequencyBarsConfig.html",[0,0.302,2,1.025,3,0.216,4,0.216,5,0.16,7,0.231,8,0.627,10,1.81,11,0.663,12,0.011,13,0.413,18,2.933,19,1.023,22,1.74,25,2.621,75,0.008,76,0.008,286,2.612,287,2.612,288,3.613,289,2.738,290,2.738,291,2.738,292,2.499,293,2.396,294,2.499,295,2.499,296,2.499,297,2.396,298,2.499,299,2.499,300,2.499,301,2.612,302,2.612,303,3.161,304,4.079,305,3.911,306,3.911,307,3.911,308,2.396,309,3.161,310,2.499,311,2.714,312,2.714,313,3.161,314,2.499,315,2.396,316,2.499,317,2.612,318,2.738,319,2.396,320,3.538,321,2.499,322,2.301,323,3.858,324,2.921,325,2.499,326,3.161,327,3.613,328,3.613,329,2.396,330,3.161,331,3.613]],["title/interfaces/GamepadAction.html",[0,0.159,17,2.96]],["body/interfaces/GamepadAction.html",[0,0.275,1,3.088,2,1.04,3,0.22,4,0.22,5,0.162,6,3.088,7,0.389,8,0.633,9,3.281,10,1.703,11,0.675,12,0.011,13,0.407,14,4.806,15,3.512,16,1.271,17,5.106,18,3.137,19,0.969,20,4.806,21,1.714,22,2.588,23,5.298,24,3.088,25,2.646,26,3.281,27,3.281,28,3.088,29,2.924,30,3.281,31,3.088,32,3.088,33,3.088,34,2.924,35,2.924,36,4.61,37,2.779,38,3.281,39,1.768,40,3.281,41,2.557,42,3.281,43,3.066,44,3.281,45,3.481,46,3.281,47,3.088,48,3.281,49,3.088,50,3.281,51,3.281,52,3.281,53,3.281,54,3.281,55,2.924,56,3.281,57,3.281,58,3.281,59,2.651,60,3.281,61,3.088,62,3.281,63,3.088,64,3.281,65,3.281,66,3.281,67,3.281,68,3.281,69,3.281,70,2.924,71,3.281,72,3.281,73,3.281,74,3.281,75,0.008,76,0.008,448,1.528]],["title/injectables/GamepadService.html",[411,0.765,1209,2.787]],["body/injectables/GamepadService.html",[1,3.271,3,0.123,4,0.123,5,0.091,7,0.353,8,0.418,9,2.842,10,1.69,11,0.507,12,0.011,13,0.131,14,5.034,16,1.638,18,3.207,20,4.913,21,1.42,22,0.989,23,1.73,24,3.681,26,4.471,27,4.471,28,3.271,29,3.485,31,1.73,32,4.389,33,3.681,34,3.097,35,2.532,37,2.944,39,1.736,70,3.097,75,0.005,76,0.005,80,1.104,83,0.386,88,2.407,91,0.37,137,0.358,139,1.091,140,1.554,141,1.3,148,1.762,152,1.459,227,1.995,230,2.129,237,2.129,242,1.557,342,0.799,345,1.3,411,0.734,413,1.021,425,0.901,443,1.204,447,1.752,448,1.17,463,1.901,517,0.823,596,2.023,656,1.579,669,1.637,1209,2.675,1210,2.675,1211,5.059,1212,4.138,1213,4.138,1214,5.059,1215,4.138,1216,4.138,1217,4.138,1218,2.675,1219,7.353,1220,4.138,1221,2.675,1222,7.353,1223,2.675,1224,5.694,1225,2.675,1226,7.013,1227,4.138,1228,2.675,1229,2.675,1230,2.675,1231,2.675,1232,2.675,1233,2.675,1234,2.675,1235,2.675,1236,2.675,1237,2.675,1238,5.059,1239,2.675,1240,5.059,1241,2.675,1242,2.675,1243,5.694,1244,2.675,1245,2.675,1246,2.675,1247,2.675,1248,4.138,1249,5.059,1250,5.399,1251,4.138,1252,2.346,1253,4.138,1254,2.675,1255,2.675,1256,2.675,1257,2.675,1258,4.138,1259,2.675,1260,2.675,1261,2.675,1262,2.675,1263,2.675,1264,2.675,1265,3.72,1266,6.157,1267,2.675,1268,2.675,1269,5.059,1270,2.675,1271,2.675,1272,2.675,1273,2.675,1274,2.675,1275,2.675,1276,2.675,1277,4.138,1278,2.675,1279,2.675,1280,2.675,1281,2.675,1282,2.675,1283,2.675,1284,5.059,1285,4.138,1286,3.042,1287,4.138,1288,4.138,1289,2.675,1290,2.675,1291,2.675,1292,4.138,1293,2.675,1294,2.675,1295,2.675,1296,4.138,1297,4.138,1298,5.059,1299,5.059,1300,5.694,1301,4.526,1302,5.059,1303,2.675,1304,5.694,1305,2.675,1306,5.708,1307,4.138,1308,4.138,1309,4.138,1310,2.675,1311,5.694,1312,2.675,1313,2.675,1314,4.138,1315,2.675,1316,2.675,1317,4.138,1318,4.138,1319,2.675,1320,2.675,1321,2.675]],["title/interfaces/Hotkey.html",[0,0.159,1322,2.96]],["body/interfaces/Hotkey.html",[0,0.202,2,0.85,3,0.18,4,0.18,5,0.133,7,0.192,8,0.552,11,0.564,12,0.011,13,0.31,19,1.1,75,0.007,76,0.007,83,0.672,87,0.803,91,0.541,137,0.523,140,1.561,141,1.438,148,1.781,152,1.614,169,2.157,178,3.036,210,1.593,342,1.167,350,2.273,351,1.909,372,2.5,384,1.356,411,0.971,429,2.871,465,3.901,515,1.593,517,1.202,555,2.871,596,2.674,656,2.088,714,2.525,947,3.348,1004,2.682,1265,2.871,1286,2.871,1322,3.757,1323,3.108,1324,5.294,1325,5.263,1326,5.634,1327,4.022,1328,2.871,1329,3.348,1330,2.273,1331,4.353,1332,3.757,1333,5.443,1334,3.757,1335,2.682,1336,3.108,1337,2.525,1338,2.39,1339,3.108,1340,3.108,1341,3.537,1342,2.871,1343,3.108,1344,4.022,1345,3.108,1346,3.108,1347,2.39,1348,3.108,1349,3.108,1350,3.108,1351,3.108,1352,3.108,1353,3.108,1354,3.108,1355,3.108,1356,4.353,1357,3.108,1358,4.353,1359,4.353,1360,4.353,1361,3.108,1362,3.108,1363,3.108,1364,3.108,1365,3.108,1366,4.022,1367,3.108,1368,3.108,1369,3.108,1370,3.108,1371,5.024,1372,3.108,1373,4.353,1374,3.108,1375,3.108,1376,4.353,1377,3.108,1378,3.108,1379,3.108,1380,3.108,1381,3.108,1382,3.108,1383,3.108,1384,4.353,1385,3.108,1386,3.108,1387,3.108,1388,3.108,1389,5.443,1390,3.108,1391,4.353,1392,3.108,1393,3.108,1394,3.108,1395,1.491,1396,2.682,1397,3.108,1398,3.108,1399,3.108]],["title/interfaces/HotkeyInfo.html",[0,0.159,1337,2.787]],["body/interfaces/HotkeyInfo.html",[0,0.204,2,0.864,3,0.183,4,0.183,5,0.135,7,0.195,8,0.559,11,0.456,12,0.011,13,0.313,19,1.066,75,0.007,76,0.007,83,0.676,87,0.816,91,0.55,137,0.532,140,1.568,141,1.446,148,1.787,152,1.623,169,2.182,178,3.071,210,1.619,342,1.187,350,2.31,351,1.941,372,1.921,384,1.379,411,0.982,429,2.919,465,3.918,515,1.619,517,1.222,555,2.919,596,2.705,656,2.112,714,2.567,1004,2.727,1265,2.919,1286,2.919,1322,2.727,1323,3.16,1324,4.068,1325,5.287,1326,5.065,1327,4.068,1328,2.919,1329,3.387,1330,2.31,1331,4.403,1332,3.801,1333,6.347,1334,3.801,1335,2.727,1336,3.16,1337,3.578,1338,2.43,1339,3.16,1340,3.16,1341,3.578,1342,2.919,1343,3.16,1344,4.068,1345,3.16,1346,3.16,1347,2.43,1348,3.16,1349,3.16,1350,3.16,1351,3.16,1352,3.16,1353,3.16,1354,3.16,1355,3.16,1356,4.403,1357,3.16,1358,4.403,1359,4.403,1360,4.403,1361,3.16,1362,3.16,1363,3.16,1364,3.16,1365,3.16,1366,4.068,1367,3.16,1368,3.16,1369,3.16,1370,3.16,1371,5.069,1372,3.16,1373,4.403,1374,3.16,1375,3.16,1376,4.403,1377,3.16,1378,3.16,1379,3.16,1380,3.16,1381,3.16,1382,3.16,1383,3.16,1384,4.403,1385,3.16,1386,3.16,1387,3.16,1388,3.16,1389,5.483,1390,3.16,1391,4.403,1392,3.16,1393,3.16,1394,3.16,1395,1.516,1396,2.727,1397,3.16,1398,3.16,1399,3.16]],["title/interfaces/HotkeysData.html",[0,0.159,1400,3.43]],["body/interfaces/HotkeysData.html",[0,0.209,2,1.231,3,0.26,4,0.26,5,0.192,7,0.277,8,0.705,11,0.466,12,0.011,13,0.343,75,0.009,76,0.009,83,0.773,84,1.564,87,1.162,91,0.782,95,4.513,96,3.654,105,2.877,107,2.561,132,2.157,133,2.089,135,2.658,137,0.757,152,1.266,178,4.204,384,1.962,1329,3.459,1330,3.289,1334,4.794,1335,5.202,1337,3.654,1347,3.459,1395,2.157,1396,5.433,1400,5.555,1401,4.956,1402,4.155,1403,4.155,1404,5.132,1405,4.956,1406,4.272,1407,3.553,1408,4.155,1409,4.956,1410,4.155,1411,4.155,1412,4.956,1413,4.956,1414,4.497,1415,4.956]],["title/components/HotkeysHelpDialogComponent.html",[84,0.966,384,1.497]],["body/components/HotkeysHelpDialogComponent.html",[0,0.146,3,0.182,4,0.182,5,0.187,7,0.194,8,0.556,12,0.011,13,0.271,16,1.051,21,1.271,41,2.803,43,2.695,75,0.007,76,0.007,80,1.52,83,0.699,84,1.423,87,0.812,91,0.547,93,2.409,95,4.106,96,2.553,105,2.01,107,1.789,115,1.346,132,2.104,133,2.038,135,2.593,137,0.529,138,1.507,152,0.885,178,2.192,332,1.557,333,1.801,334,1.61,335,1.61,336,1.61,340,3.247,341,3.216,343,1.557,345,1.372,370,1.61,371,2.248,372,1.914,373,1.414,374,2.803,375,1.61,376,1.61,377,1.557,378,1.414,379,1.61,380,1.557,381,1.557,382,1.507,383,1.61,384,2.386,385,1.557,386,2.59,387,1.557,388,1.557,389,1.46,390,1.61,391,1.557,392,1.61,393,1.46,394,1.557,395,1.61,396,1.557,397,1.61,398,1.557,399,1.507,400,1.61,401,1.557,402,1.61,403,1.557,404,1.46,405,1.557,406,1.61,407,1.557,408,1.507,409,1.557,410,1.61,425,1.2,439,4.387,443,0.835,463,1.425,1322,3.786,1329,2.417,1330,2.298,1334,4.721,1335,5.471,1337,2.553,1347,3.887,1395,2.424,1396,2.712,1400,3.142,1401,6.34,1402,2.903,1403,2.903,1404,4.669,1405,3.462,1406,3.887,1407,3.232,1408,4.053,1409,4.834,1410,4.053,1411,4.053,1412,6.34,1413,3.462,1414,5.469,1415,3.462,1416,3.949,1417,3.949,1418,3.462,1419,3.949,1420,3.949,1421,6.873,1422,7.49,1423,6.873,1424,5.512,1425,5.512,1426,6.873,1427,5.512,1428,5.512,1429,4.834,1430,5.512,1431,5.512,1432,5.512,1433,5.512]],["title/injectables/HotkeysService.html",[411,0.765,1338,2.638]],["body/injectables/HotkeysService.html",[0,0.195,3,0.17,4,0.17,5,0.126,7,0.182,11,0.434,12,0.011,13,0.301,16,1.879,19,1.068,75,0.007,76,0.007,80,1.022,83,0.659,87,0.761,91,0.513,137,0.496,140,1.54,141,1.409,148,1.759,152,1.582,169,2.078,178,2.925,210,2.149,342,1.107,345,1.465,350,2.155,351,1.811,372,1.83,384,1.286,411,0.935,413,1.414,425,1.147,429,4.912,443,1.552,447,1.622,448,1.083,465,3.842,515,1.51,517,1.14,555,4.912,596,2.576,656,2.011,714,3.407,1004,2.544,1265,2.723,1286,2.723,1322,2.544,1323,2.948,1324,3.874,1325,4.589,1326,5.19,1327,3.874,1328,2.723,1329,3.225,1330,2.155,1331,4.193,1332,3.619,1333,5.317,1334,3.619,1335,2.544,1336,2.948,1337,2.395,1338,3.225,1339,2.948,1340,2.948,1341,3.407,1342,2.723,1343,2.948,1344,4.912,1345,2.948,1346,2.948,1347,2.267,1348,2.948,1349,2.948,1350,2.948,1351,2.948,1352,2.948,1353,2.948,1354,2.948,1355,4.193,1356,4.193,1357,2.948,1358,4.193,1359,4.193,1360,4.193,1361,2.948,1362,2.948,1363,2.948,1364,2.948,1365,2.948,1366,3.874,1367,2.948,1368,2.948,1369,2.948,1370,2.948,1371,4.881,1372,2.948,1373,4.193,1374,2.948,1375,2.948,1376,4.193,1377,2.948,1378,2.948,1379,2.948,1380,2.948,1381,4.193,1382,2.948,1383,2.948,1384,4.193,1385,2.948,1386,2.948,1387,5.317,1388,5.317,1389,5.317,1390,2.948,1391,4.193,1392,2.948,1393,2.948,1394,2.948,1395,1.414,1396,2.544,1397,2.948,1398,2.948,1399,2.948,1434,5.269,1435,5.269,1436,3.704,1437,3.704,1438,3.704,1439,3.704,1440,3.704,1441,3.704]],["title/interfaces/Id3CoverPicture.html",[0,0.159,722,2.638]],["body/interfaces/Id3CoverPicture.html",[0,0.267,2,1.3,3,0.275,4,0.275,5,0.203,7,0.293,8,0.728,10,1.483,11,0.595,12,0.011,13,0.354,19,1.174,75,0.009,76,0.009,77,2.206,81,3.169,83,0.557,93,2.609,115,1.457,168,2.434,196,2.434,322,3.793,669,4.417,722,4.748,723,3.653,726,4.666,727,3.313,732,3.882,854,2.434,857,2.609,1395,3.077,1442,5.234,1443,4.75]],["title/interfaces/Id3Tags.html",[0,0.159,857,1.884]],["body/interfaces/Id3Tags.html",[0,0.251,2,1.179,3,0.249,4,0.249,5,0.184,7,0.266,8,0.686,10,1.397,11,0.699,12,0.011,13,0.334,19,1.2,75,0.009,76,0.009,77,2.88,81,4.137,83,0.506,93,3.406,115,1.323,168,3.178,196,3.178,322,2.648,448,1.774,669,4.161,722,4.769,723,3.315,726,5.038,727,3.007,732,3.776,854,2.209,857,2.971,1395,2.068,1442,4.75,1443,6.201,1444,6.799]],["title/injectables/Id3TagsService.html",[411,0.765,1445,3.43]],["body/injectables/Id3TagsService.html",[3,0.193,4,0.193,5,0.26,7,0.206,10,1.182,11,0.474,12,0.011,13,0.206,16,1.967,20,2.713,21,0.968,39,1.183,75,0.007,76,0.007,80,0.814,83,0.612,88,3.346,91,0.581,137,0.562,139,1.711,140,1.475,141,1.148,148,1.71,152,1.288,169,2.587,178,2.33,195,2.713,227,2.587,242,2.442,342,1.254,345,1.148,411,1.02,413,1.602,425,1.252,443,0.888,447,1.292,448,0.863,456,2.442,463,1.085,517,1.292,534,3.34,588,2.85,596,3.207,723,4.014,724,1.771,854,2.675,857,1.834,858,1.974,867,3.519,868,3.924,869,2.569,870,2.927,936,2.268,965,5.187,1151,3.68,1445,4.575,1446,4.197,1447,5.042,1448,4.197,1449,5.042,1450,7.055,1451,4.197,1452,5.75,1453,2.442,1454,5.433,1455,4.197,1456,4.197,1457,7.39,1458,6.559,1459,3.68,1460,4.197,1461,3.68,1462,3.34,1463,4.197,1464,5.75,1465,4.197,1466,5.75,1467,4.197,1468,5.75,1469,4.197,1470,3.68,1471,4.197,1472,4.197,1473,4.197,1474,3.68,1475,6.559,1476,4.197,1477,3.34,1478,4.197,1479,3.68,1480,4.197,1481,3.68,1482,5.75,1483,4.197,1484,4.197,1485,4.197,1486,4.197,1487,4.197,1488,4.197,1489,4.197,1490,6.559,1491,4.197,1492,4.197,1493,4.197,1494,4.197,1495,4.197,1496,5.75,1497,5.75,1498,4.197,1499,4.197,1500,4.197,1501,4.197,1502,4.197,1503,4.197,1504,4.197,1505,4.197,1506,4.197,1507,4.197]],["title/interfaces/IndexedDbTrackMetadata.html",[0,0.159,92,2.392]],["body/interfaces/IndexedDbTrackMetadata.html",[0,0.285,2,1.145,3,0.242,4,0.242,5,0.249,7,0.258,8,0.673,11,0.635,12,0.011,13,0.405,19,1.168,25,2.815,75,0.008,76,0.008,77,1.944,79,3.06,81,2.792,82,2.547,83,0.684,92,3.703,93,2.916,115,1.882,116,3.4,148,1.495,168,2.144,196,2.144,277,3.89,311,2.298,312,2.298,448,1.371,451,4.084,485,3.4,486,3.4,487,3.4,488,3.4,489,3.4,490,2.919,491,3.4,492,3.4,493,3.4,494,3.4,513,3.218,573,3.611,720,2.792,721,3.4,722,4.084,723,3.218,724,2.219,725,3.396,726,4.314,727,2.919,728,4.718,729,4.984,730,3.06,731,3.611,732,2.473,733,3.611,734,3.4,735,3.866,736,3.611,737,3.866,738,3.866,739,3.4,740,3.06]],["title/interfaces/LastfmAlbum.html",[0,0.159,1508,2.787]],["body/interfaces/LastfmAlbum.html",[0,0.257,2,0.884,3,0.187,4,0.187,5,0.138,7,0.199,8,0.567,10,0.834,11,0.573,12,0.011,13,0.199,19,1.153,39,1.145,75,0.007,76,0.007,77,2.572,80,1.349,82,2.145,83,0.705,87,0.834,91,0.562,137,0.544,140,1.508,141,1.287,148,1.693,152,1.796,168,2.978,169,1.601,210,3.081,251,2.013,253,1.601,342,1.213,411,0.997,515,1.656,517,1.25,588,2.309,719,2.254,724,1.713,732,1.91,854,1.656,857,2.456,858,1.91,865,1.985,866,1.985,919,2.156,936,2.217,937,1.84,942,1.84,1395,2.46,1453,2.363,1508,4.167,1509,2.625,1510,2.625,1511,4.258,1512,4.498,1513,2.789,1514,2.625,1515,2.485,1516,2.625,1517,2.254,1518,3.44,1519,3.44,1520,3.44,1521,2.625,1522,3.634,1523,2.485,1524,2.789,1525,2.789,1526,2.789,1527,2.789,1528,2.789,1529,2.789,1530,2.625,1531,2.485,1532,3.44,1533,2.789,1534,2.789,1535,2.625,1536,2.625,1537,2.625,1538,2.789,1539,2.789,1540,2.789,1541,2.789,1542,2.625,1543,2.789,1544,3.634,1545,2.789,1546,2.789,1547,2.789,1548,2.789,1549,2.789,1550,2.789,1551,2.789,1552,2.789,1553,2.789,1554,4.427,1555,2.789,1556,2.789,1557,2.625,1558,4.427,1559,5.016,1560,5.016,1561,2.789,1562,2.789,1563,2.789,1564,3.86,1565,2.789,1566,2.789,1567,2.789,1568,2.789,1569,2.789,1570,2.789,1571,2.789]],["title/interfaces/LastfmErrorResponse.html",[0,0.159,1520,2.638]],["body/interfaces/LastfmErrorResponse.html",[0,0.258,2,0.893,3,0.189,4,0.189,5,0.139,7,0.201,8,0.571,10,1.332,11,0.534,12,0.011,13,0.201,19,1.137,39,1.156,75,0.007,76,0.007,77,2.582,80,0.795,82,2.16,83,0.707,87,0.843,91,0.568,137,0.549,140,1.513,141,1.294,148,1.698,152,1.8,168,2.308,169,1.617,210,3.091,251,2.027,253,1.617,342,1.226,411,1.004,515,1.672,517,1.262,588,2.714,719,2.276,724,1.731,732,1.929,854,1.672,857,2.473,858,1.929,865,2.005,866,2.005,919,2.177,936,2.232,937,1.858,942,1.858,1395,2.473,1453,2.386,1508,3.659,1509,2.651,1510,2.651,1511,2.51,1512,3.659,1513,2.817,1514,2.651,1515,2.51,1516,2.651,1517,2.276,1518,3.464,1519,3.464,1520,3.966,1521,4.517,1522,3.659,1523,2.51,1524,2.817,1525,2.817,1526,2.817,1527,2.817,1528,2.817,1529,2.817,1530,2.651,1531,2.51,1532,3.464,1533,2.817,1534,2.817,1535,2.651,1536,2.651,1537,2.651,1538,2.817,1539,2.817,1540,2.817,1541,2.817,1542,2.651,1543,2.817,1544,3.659,1545,2.817,1546,2.817,1547,2.817,1548,2.817,1549,2.817,1550,2.817,1551,2.817,1552,2.817,1553,2.817,1554,4.45,1555,2.817,1556,2.817,1557,2.651,1558,4.45,1559,5.034,1560,5.034,1561,2.817,1562,2.817,1563,2.817,1564,3.887,1565,2.817,1566,2.817,1567,2.817,1568,2.817,1569,2.817,1570,2.817,1571,2.817]],["title/interfaces/LastfmImage.html",[0,0.159,1512,2.787]],["body/interfaces/LastfmImage.html",[0,0.258,2,0.893,3,0.189,4,0.189,5,0.139,7,0.201,8,0.571,10,0.843,11,0.534,12,0.011,13,0.201,19,1.154,39,1.156,75,0.007,76,0.007,77,2.582,80,0.795,82,2.16,83,0.707,87,0.843,91,0.568,137,0.549,140,1.513,141,1.294,148,1.698,152,1.8,168,2.308,169,1.617,210,3.091,251,2.027,253,1.617,342,1.226,411,1.004,515,1.672,517,1.262,588,2.321,719,2.276,724,1.731,732,1.929,854,1.672,857,2.473,858,1.929,865,2.005,866,2.005,919,2.177,936,2.232,937,1.858,942,1.858,1395,2.473,1453,2.386,1508,3.659,1509,2.651,1510,2.651,1511,2.51,1512,4.189,1513,2.817,1514,2.651,1515,2.51,1516,2.651,1517,3.878,1518,4.486,1519,3.464,1520,3.464,1521,2.651,1522,3.659,1523,2.51,1524,2.817,1525,2.817,1526,2.817,1527,2.817,1528,2.817,1529,2.817,1530,2.651,1531,2.51,1532,3.464,1533,2.817,1534,2.817,1535,2.651,1536,2.651,1537,2.651,1538,2.817,1539,2.817,1540,2.817,1541,2.817,1542,2.651,1543,2.817,1544,3.659,1545,2.817,1546,2.817,1547,2.817,1548,2.817,1549,2.817,1550,2.817,1551,2.817,1552,2.817,1553,2.817,1554,4.45,1555,2.817,1556,2.817,1557,2.651,1558,4.45,1559,5.034,1560,5.034,1561,2.817,1562,2.817,1563,2.817,1564,3.887,1565,2.817,1566,2.817,1567,2.817,1568,2.817,1569,2.817,1570,2.817,1571,2.817]],["title/injectables/LastfmMetadataService.html",[411,0.765,1523,2.638]],["body/injectables/LastfmMetadataService.html",[0,0.257,3,0.187,4,0.187,5,0.138,7,0.2,10,0.836,11,0.463,12,0.011,13,0.2,19,1.11,39,1.146,75,0.007,76,0.007,77,2.573,80,1.091,82,2.147,83,0.706,87,0.836,91,0.563,137,0.545,140,1.509,141,1.288,148,1.694,152,1.797,168,2.294,169,1.604,210,3.082,251,2.493,253,1.604,342,1.215,345,0.812,411,0.998,413,1.552,425,1.225,443,0.86,447,1.251,448,0.836,515,1.658,517,1.251,588,2.31,719,2.257,724,1.716,732,1.913,854,2.294,857,3.042,858,1.913,865,1.988,866,1.988,870,2.07,919,2.159,936,2.544,937,1.842,942,1.842,1395,2.462,1453,2.366,1508,3.637,1509,3.637,1510,2.629,1511,2.489,1512,3.637,1513,2.793,1514,2.629,1515,2.489,1516,2.629,1517,2.257,1518,3.443,1519,3.443,1520,3.443,1521,2.629,1522,3.637,1523,3.443,1524,2.793,1525,2.793,1526,2.793,1527,2.793,1528,2.793,1529,2.793,1530,3.637,1531,2.489,1532,3.443,1533,2.793,1534,2.793,1535,2.629,1536,2.629,1537,2.629,1538,2.793,1539,2.793,1540,2.793,1541,2.793,1542,2.629,1543,2.793,1544,3.637,1545,2.793,1546,2.793,1547,2.793,1548,2.793,1549,2.793,1550,2.793,1551,2.793,1552,2.793,1553,2.793,1554,4.43,1555,2.793,1556,2.793,1557,2.629,1558,4.43,1559,5.019,1560,5.019,1561,2.793,1562,2.793,1563,2.793,1564,3.864,1565,2.793,1566,2.793,1567,2.793,1568,2.793,1569,2.793,1570,2.793,1571,2.793,1572,4.933,1573,4.066]],["title/interfaces/LastfmSuccessResponse.html",[0,0.159,1519,2.638]],["body/interfaces/LastfmSuccessResponse.html",[0,0.259,2,0.902,3,0.191,4,0.191,5,0.141,7,0.203,8,0.575,10,0.851,11,0.469,12,0.011,13,0.203,19,1.114,39,1.168,75,0.007,76,0.007,77,2.879,80,0.803,82,2.175,83,0.71,87,0.851,91,0.573,137,0.555,140,1.518,141,1.3,148,1.703,152,1.804,168,2.324,169,1.634,210,3.1,251,2.041,253,1.634,342,1.238,411,1.011,515,1.689,517,1.275,588,2.333,719,2.299,724,1.748,732,1.948,854,1.689,857,2.49,858,1.948,865,2.025,866,2.025,919,2.199,936,2.247,937,1.877,942,1.877,1395,2.486,1453,2.41,1508,4.536,1509,2.678,1510,2.678,1511,2.535,1512,3.684,1513,2.845,1514,2.678,1515,2.535,1516,2.678,1517,2.299,1518,3.488,1519,3.987,1520,3.488,1521,2.678,1522,3.684,1523,2.535,1524,2.845,1525,2.845,1526,2.845,1527,2.845,1528,2.845,1529,2.845,1530,2.678,1531,2.535,1532,3.488,1533,2.845,1534,2.845,1535,2.678,1536,2.678,1537,2.678,1538,2.845,1539,2.845,1540,2.845,1541,2.845,1542,2.678,1543,2.845,1544,3.684,1545,2.845,1546,2.845,1547,2.845,1548,2.845,1549,2.845,1550,2.845,1551,2.845,1552,2.845,1553,2.845,1554,4.474,1555,2.845,1556,2.845,1557,2.678,1558,4.474,1559,5.052,1560,5.052,1561,2.845,1562,2.845,1563,2.845,1564,3.914,1565,2.845,1566,2.845,1567,2.845,1568,2.845,1569,2.845,1570,2.845,1571,2.845]],["title/injectables/LegacyFileLoaderService.html",[411,0.765,1574,3.78]],["body/injectables/LegacyFileLoaderService.html",[3,0.222,4,0.222,5,0.292,7,0.345,8,0.637,12,0.011,13,0.237,21,1.113,39,1.36,75,0.008,76,0.008,83,0.657,90,1.968,91,0.668,137,0.646,139,1.968,140,1.405,141,1.49,148,1.414,152,1.081,159,4.081,169,1.903,227,2.775,251,2.774,253,1.903,342,1.442,345,1.49,411,1.12,413,1.842,425,1.374,443,1.335,463,1.248,517,1.485,544,3.84,596,2.359,656,1.842,700,4.568,910,4.741,911,3.942,913,3.547,920,2.953,921,2.678,922,2.953,923,3.673,924,3.314,928,5.172,935,5.172,936,2.775,944,5.487,1110,3.314,1470,4.231,1481,4.231,1574,5.535,1575,7.745,1576,4.825,1577,4.825,1578,4.825,1579,4.825,1580,4.825,1581,4.825,1582,4.825,1583,4.825,1584,4.825,1585,4.825,1586,4.825,1587,4.825,1588,4.825,1589,4.825,1590,4.825,1591,4.825,1592,4.825,1593,4.825,1594,4.825,1595,4.825,1596,4.825,1597,4.825,1598,4.825]],["title/components/LibraryComponent.html",[84,0.966,138,1.645]],["body/components/LibraryComponent.html",[0,0.055,3,0.069,4,0.069,5,0.168,7,0.197,8,0.26,10,1.375,11,0.514,12,0.011,13,0.126,16,1.314,19,1.026,21,1.218,39,1.132,75,0.003,76,0.003,77,2.762,78,1.314,79,1.969,80,1.46,81,1.796,82,0.982,83,0.636,84,0.758,85,2.839,86,1.366,87,0.308,88,1.969,89,2.324,90,1.38,91,0.207,92,3.898,93,3.21,94,0.831,95,2.187,96,0.969,97,2.692,98,2.967,99,2.967,100,2.487,101,1.029,102,1.428,103,0.969,104,2.692,105,0.762,106,2.692,107,0.679,108,2.692,109,2.692,110,2.692,111,1.192,112,2.692,113,1.101,114,0.762,115,1.104,116,0.969,117,1.428,118,0.917,119,2.692,120,1.101,121,2.967,122,2.967,123,2.967,124,2.967,125,2.967,126,1.314,127,2.967,128,1.101,129,1.101,130,2.952,131,1.314,132,0.982,133,0.951,134,2.257,135,1.21,136,2.257,137,0.201,138,1.533,139,1.049,140,0.986,141,1.492,142,0.917,143,0.917,144,3.621,145,2.257,146,4.329,147,1.314,148,1.785,149,2.967,150,1.314,151,1.314,152,1.613,153,1.314,154,1.314,155,1.314,156,1.314,157,1.314,158,1.314,159,2.596,160,3.965,161,1.192,162,2.967,163,5.868,164,4.633,165,2.257,166,2.257,167,2.257,168,3.149,169,1.583,170,2.257,171,3.928,172,2.257,173,2.967,174,3.521,175,4.89,176,3.521,177,4.329,178,2.229,179,2.048,180,2.692,181,4.633,182,2.257,183,1.892,184,3.521,185,2.257,186,2.257,187,2.257,188,2.257,189,2.257,190,2.257,191,2.257,192,5.47,193,2.257,194,2.257,195,2.596,196,1.637,197,2.257,198,4.329,199,2.257,200,1.768,201,4.329,202,2.257,203,2.257,204,4.329,205,2.257,206,2.257,207,1.575,208,3.521,209,2.257,210,2.935,211,3.521,212,2.257,213,3.521,214,2.257,215,2.257,216,2.257,217,2.257,218,2.257,219,2.257,220,2.048,221,1.892,222,1.768,223,2.257,224,2.257,225,2.257,226,1.314,227,1.334,228,1.192,229,1.314,230,1.192,231,1.192,232,1.101,233,1.101,234,2.967,235,1.314,236,4.329,237,1.192,238,2.257,239,1.314,240,2.257,241,1.029,242,0.872,243,2.257,244,1.314,245,1.314,246,2.048,247,2.257,248,1.314,249,2.257,250,1.314,251,2.44,252,2.048,253,2.299,254,1.192,255,1.314,256,1.314,257,2.257,258,2.967,259,1.314,260,3.521,261,1.314,262,2.257,263,2.257,264,3.521,265,1.192,266,1.314,267,1.314,268,1.314,269,1.314,270,1.314,271,2.257,272,1.314,273,2.257,274,2.257,275,2.967,276,1.314,277,0.732,278,1.314,279,1.314,280,1.314,281,1.192,282,2.257,283,2.257,284,2.048,285,1.314,332,0.591,333,0.841,334,0.611,335,0.611,336,0.611,340,2.715,341,2.46,343,0.591,345,1.42,370,0.611,371,1.049,372,0.894,373,0.537,374,1.637,375,0.611,376,0.611,377,0.591,378,0.537,379,0.611,380,0.591,381,0.591,382,0.572,383,0.611,384,0.52,385,0.591,386,1.38,387,0.591,388,0.591,389,0.554,390,0.611,391,0.591,392,0.611,393,0.554,394,0.591,395,0.611,396,0.591,397,0.611,398,0.591,399,0.572,400,0.611,401,0.591,402,0.611,403,0.591,404,0.554,405,0.591,406,0.611,407,0.591,408,0.572,409,0.591,410,0.611,425,0.56,443,1.32,447,1.92,448,1.282,463,1.276,595,3.629,1599,2.574,1600,2.574,1601,2.574,1602,2.257,1603,2.574,1604,2.574,1605,2.574,1606,2.574,1607,2.574,1608,2.574,1609,2.257,1610,1.498,1611,1.498,1612,1.498,1613,1.498,1614,1.498,1615,1.498,1616,1.498,1617,1.498,1618,1.498,1619,1.498,1620,1.498,1621,1.498,1622,1.498,1623,1.498,1624,1.498,1625,1.498,1626,1.498,1627,1.498,1628,4.937,1629,2.574,1630,3.928,1631,2.574,1632,2.574,1633,4.015,1634,4.015,1635,2.574,1636,4.015,1637,4.015,1638,4.015,1639,2.574]],["title/injectables/LibraryService.html",[130,3.169,411,0.765]],["body/injectables/LibraryService.html",[3,0.234,4,0.234,5,0.173,7,0.25,8,0.66,12,0.011,13,0.25,21,1.507,75,0.008,76,0.008,83,0.735,87,1.046,90,2.944,91,0.705,92,2.825,94,2.825,115,1.243,117,3.628,118,3.115,130,4.805,137,0.682,140,1.305,141,1.658,142,3.115,148,1.464,152,1.141,251,2.585,253,2.578,342,1.521,345,1.441,411,1.16,413,1.943,419,5.744,425,1.423,443,1.077,463,1.69,496,4.805,511,2.394,515,2.076,517,1.567,588,2.585,590,4.051,593,4.051,916,3.291,917,3.291,918,2.825,919,2.703,926,3.496,927,3.496,936,2.578,937,2.307,942,2.307,1395,1.943,1640,5.09,1641,7.219,1642,7.617,1643,5.09,1644,5.09,1645,5.09,1646,5.09,1647,5.09,1648,5.09,1649,5.09,1650,6.535,1651,5.09,1652,5.09,1653,6.535,1654,5.09,1655,5.09,1656,5.09,1657,4.051,1658,5.09,1659,2.962,1660,5.09,1661,6.535,1662,5.09,1663,5.09,1664,5.09]],["title/interceptors/LoaderInterceptor.html",[1665,4.31,1666,3.43]],["body/interceptors/LoaderInterceptor.html",[3,0.265,4,0.265,5,0.196,7,0.283,11,0.475,12,0.011,13,0.283,75,0.009,76,0.009,80,1.118,83,0.763,87,1.185,91,0.798,137,0.772,139,2.351,140,1.151,141,1.151,152,1.292,345,1.151,411,1.254,425,1.539,443,1.22,447,1.774,448,1.185,515,2.351,965,4.238,1332,5.248,1514,3.727,1666,5.623,1667,5.765,1668,5.765,1669,7.067,1670,7.067,1671,7.965,1672,6.7,1673,7.965,1674,5.765,1675,5.765,1676,7.067,1677,5.765,1678,5.055,1679,5.195,1680,5.765,1681,5.055,1682,5.765,1683,5.765,1684,5.765]],["title/injectables/LoaderService.html",[411,0.765,1679,3.169]],["body/injectables/LoaderService.html",[3,0.257,4,0.257,5,0.19,7,0.275,8,0.7,12,0.011,13,0.275,16,1.846,21,1.29,39,2.222,41,2.829,75,0.009,76,0.01,83,0.522,90,2.282,91,0.775,137,0.75,140,1.117,141,1.505,342,1.672,345,1.505,411,1.231,413,2.136,419,6.001,425,1.511,443,1.468,463,1.447,496,5.101,517,1.722,590,4.453,593,4.453,619,4.907,1679,5.101,1685,5.597,1686,8.104,1687,8.104,1688,5.597,1689,5.597,1690,5.597,1691,5.597,1692,8.104,1693,5.597,1694,5.597,1695,4.907]],["title/injectables/MediaSessionService.html",[411,0.765,1696,2.96]],["body/injectables/MediaSessionService.html",[3,0.199,4,0.199,5,0.147,7,0.212,10,1.583,11,0.588,12,0.011,13,0.212,16,2.096,29,4.57,75,0.007,76,0.007,80,1.385,83,0.548,86,3.536,87,0.889,91,0.598,115,1.056,137,0.579,140,1.171,148,1.492,169,1.705,227,2.627,233,3.178,342,1.292,345,1.491,411,1.041,412,3.257,413,1.65,416,6.128,417,5.251,425,1.277,443,1.511,447,2.198,448,1.468,464,2.969,517,1.331,588,2.102,937,2.659,942,2.659,947,3.591,983,2.646,1366,5.251,1696,4.03,1697,6.752,1698,6.128,1699,4.323,1700,5.867,1701,5.867,1702,5.867,1703,5.867,1704,4.323,1705,5.867,1706,6.66,1707,7.467,1708,6.263,1709,4.323,1710,5.867,1711,6.66,1712,4.323,1713,5.867,1714,4.323,1715,5.867,1716,4.323,1717,4.323,1718,5.145,1719,5.145,1720,4.323,1721,3.791,1722,4.323,1723,4.323,1724,4.323,1725,4.323,1726,3.791,1727,4.323,1728,4.323,1729,5.867,1730,5.145,1731,5.867,1732,5.867,1733,4.323,1734,4.323,1735,4.323,1736,4.323,1737,4.323,1738,4.323,1739,4.323,1740,4.323,1741,4.323,1742,4.323]],["title/injectables/MetadataService.html",[117,2.392,411,0.765]],["body/injectables/MetadataService.html",[3,0.094,4,0.094,5,0.166,7,0.1,8,0.338,11,0.525,12,0.011,13,0.1,19,0.283,21,1.469,39,1.38,41,0.835,43,1.635,55,1.253,75,0.004,76,0.004,77,0.757,79,2.467,80,0.949,81,1.087,82,1.277,83,0.661,85,3.109,87,0.421,90,1.729,91,0.283,92,1.856,93,2.53,94,1.136,115,1.556,117,1.856,137,0.274,140,1.272,141,1.644,148,1.787,152,1.699,168,0.835,169,0.807,183,2.459,196,0.835,210,2.2,232,3.966,251,2.487,253,2.96,277,1.635,297,2.492,342,0.612,345,1.414,378,1.519,411,0.593,413,0.781,425,0.728,443,1.036,447,1.507,448,1.006,463,1.648,481,2.933,510,1.856,511,1.573,512,1.087,515,0.835,517,0.63,518,1.136,520,1.505,551,1.253,588,1.198,595,1.505,656,2.432,685,2.933,700,2.996,719,3.537,725,1.702,729,3.95,730,3.555,731,1.406,732,0.963,733,1.406,734,1.324,736,1.406,740,1.191,746,3.374,752,2.297,763,1.629,782,3.895,834,1.505,849,3.214,854,2.94,856,3.743,858,0.963,859,2.467,860,1.324,861,1.324,862,1.324,863,1.324,864,1.324,865,2.073,866,2.073,870,2.158,907,4.731,911,1.042,916,1.324,917,1.324,918,1.136,919,1.087,921,4.001,922,1.253,926,1.406,927,1.406,936,2.283,937,0.928,942,0.928,947,2.047,1035,1.505,1062,1.191,1445,2.661,1453,1.191,1517,3.214,1523,2.047,1531,2.047,1532,2.047,1657,1.629,1743,1.795,1744,4.24,1745,4.24,1746,4.24,1747,4.24,1748,4.24,1749,4.24,1750,4.24,1751,3.344,1752,3.344,1753,3.344,1754,3.344,1755,2.047,1756,2.047,1757,1.795,1758,3.344,1759,3.344,1760,2.047,1761,3.344,1762,2.047,1763,3.344,1764,2.047,1765,3.344,1766,2.047,1767,5.79,1768,2.047,1769,2.047,1770,4.895,1771,2.047,1772,6.109,1773,3.344,1774,3.344,1775,2.933,1776,2.047,1777,3.344,1778,2.047,1779,3.344,1780,2.047,1781,3.344,1782,2.047,1783,2.047,1784,1.795,1785,2.047,1786,2.661,1787,2.047,1788,1.629,1789,2.047,1790,2.047,1791,1.795,1792,2.047,1793,2.047,1794,2.047,1795,2.047,1796,2.047,1797,2.047,1798,2.047,1799,2.047,1800,2.047,1801,2.047,1802,2.047,1803,5.395,1804,2.047,1805,3.344,1806,2.047,1807,1.795,1808,1.795,1809,2.047,1810,2.047,1811,2.047,1812,2.047,1813,2.047,1814,2.047,1815,3.344,1816,2.047,1817,2.047,1818,3.344,1819,4.24,1820,2.047,1821,2.047,1822,3.344,1823,2.047,1824,4.895,1825,3.344,1826,3.344,1827,2.661,1828,2.933,1829,3.344,1830,4.24,1831,2.047,1832,2.047,1833,3.344,1834,4.24,1835,2.933,1836,2.047,1837,3.344,1838,2.047,1839,5.395,1840,2.047,1841,1.795,1842,2.047,1843,2.047,1844,2.047,1845,2.047,1846,2.047,1847,3.344,1848,2.047,1849,2.047,1850,2.047,1851,2.047,1852,2.047,1853,2.047,1854,2.047,1855,2.047,1856,2.047,1857,2.047,1858,2.047,1859,2.047,1860,2.047,1861,2.047,1862,2.047,1863,2.047,1864,2.047,1865,2.047,1866,2.047,1867,2.047,1868,2.047,1869,2.047,1870,2.047,1871,2.047,1872,1.795,1873,4.895,1874,2.047,1875,1.795,1876,1.795,1877,2.047,1878,3.344,1879,4.24,1880,2.047,1881,2.047,1882,2.047,1883,4.24,1884,4.895,1885,2.047,1886,2.047,1887,2.047,1888,3.344,1889,2.047,1890,2.047,1891,3.344,1892,2.047,1893,2.047,1894,2.047,1895,3.344,1896,1.795,1897,2.047,1898,2.047,1899,2.047,1900,1.795,1901,4.24,1902,2.047,1903,2.047,1904,2.047,1905,2.047,1906,2.047,1907,2.047,1908,2.047,1909,2.047,1910,3.344,1911,2.047,1912,2.047,1913,2.047,1914,3.344,1915,2.047,1916,2.047,1917,3.718,1918,2.047,1919,2.047,1920,1.795,1921,2.047,1922,2.047,1923,2.047,1924,2.047,1925,2.047,1926,2.047,1927,2.047,1928,2.047,1929,2.047,1930,2.047,1931,2.047,1932,2.047,1933,2.047,1934,2.047]],["title/components/MetadataSettingsComponent.html",[84,0.966,385,1.7]],["body/components/MetadataSettingsComponent.html",[3,0.167,4,0.167,5,0.248,7,0.178,8,0.525,11,0.546,12,0.011,13,0.178,16,1.763,21,0.838,75,0.007,76,0.007,80,1.572,83,0.701,84,1.36,87,0.747,91,0.503,107,1.647,115,1.936,117,3.676,118,2.224,132,1.984,133,1.921,137,0.487,138,1.387,140,1.038,141,1.399,142,3.181,144,3.089,207,3.181,251,2.174,253,1.433,332,1.433,333,1.698,334,1.482,335,1.482,336,1.482,340,3.239,341,3.224,343,1.433,345,1.455,370,1.482,371,2.12,372,1.805,373,1.301,374,2.701,375,1.482,376,1.482,377,1.433,378,1.301,379,1.482,380,1.433,381,1.433,382,1.387,383,1.482,384,1.262,385,2.612,386,2.475,387,1.433,388,1.433,389,1.343,390,1.482,391,1.433,392,1.482,393,1.343,394,1.433,395,1.482,396,1.433,397,1.482,398,1.433,399,1.387,400,1.482,401,1.433,402,1.482,403,1.433,404,1.343,405,1.433,406,1.482,407,1.433,408,1.387,409,1.433,410,1.482,425,1.132,443,1.482,447,2.038,448,1.361,463,0.94,510,2.885,511,2.445,512,1.929,518,2.017,574,4.054,596,3.238,870,3.907,916,2.349,917,3.924,918,3.89,926,2.496,927,2.496,1008,4.136,1301,3.821,1407,3.089,1537,3.361,1935,7.506,1936,6.581,1937,2.892,1938,4.829,1939,6.069,1940,3.821,1941,6.623,1942,5.198,1943,5.198,1944,5.198,1945,5.198,1946,3.634,1947,5.198,1948,8.176,1949,3.634,1950,5.198,1951,3.634,1952,5.198,1953,3.634,1954,5.198,1955,3.634,1956,3.634,1957,3.634,1958,3.634,1959,3.186,1960,2.892,1961,3.634,1962,3.634,1963,6.623,1964,3.634,1965,3.634,1966,3.634,1967,3.634,1968,3.634,1969,3.634,1970,3.634,1971,5.198,1972,3.821,1973,6.623,1974,5.198]],["title/injectables/MusicbrainzService.html",[411,0.765,1786,3.43]],["body/injectables/MusicbrainzService.html",[3,0.188,4,0.188,5,0.139,7,0.2,11,0.336,12,0.011,13,0.2,19,0.895,39,1.151,75,0.007,76,0.007,77,1.509,80,0.792,82,1.559,83,0.706,91,0.565,137,0.547,140,1.392,141,1.126,148,1.772,152,1.839,169,2.225,195,2.64,200,2.805,207,3.453,210,3.224,221,3.002,222,2.805,251,2.621,253,2.886,281,3.249,342,1.22,345,0.815,378,2.316,411,1.001,413,1.559,425,1.229,443,0.864,447,1.257,448,0.839,517,1.257,538,2.805,588,2.316,719,2.267,724,1.723,854,2.301,857,3.048,858,1.921,865,1.996,866,1.996,868,2.168,870,2.079,936,2.75,937,3.16,942,2.929,959,2.805,1169,3.249,1395,1.559,1453,2.376,1511,3.453,1515,2.499,1516,2.64,1530,3.648,1531,2.499,1532,3.453,1535,3.648,1536,4.18,1542,2.64,1557,2.64,1572,4.948,1786,4.49,1972,4.148,1975,4.084,1976,4.084,1977,6.465,1978,6.465,1979,3.581,1980,3.249,1981,4.084,1982,3.249,1983,4.084,1984,4.084,1985,4.084,1986,4.084,1987,5.642,1988,4.084,1989,4.084,1990,4.084,1991,4.084,1992,4.084,1993,4.084,1994,4.084,1995,4.084,1996,5.642,1997,4.084,1998,4.084,1999,4.084,2000,4.084,2001,4.084,2002,4.084,2003,4.084,2004,4.084,2005,5.642,2006,4.084,2007,4.084,2008,5.642,2009,6.974,2010,4.084,2011,4.084,2012,4.084,2013,4.084,2014,4.084,2015,4.084,2016,4.084,2017,4.084,2018,5.642,2019,4.084,2020,5.642,2021,3.581,2022,4.084,2023,3.581,2024,3.581,2025,4.084,2026,4.084,2027,4.084]],["title/injectables/NativeBrowserFileLoaderService.html",[411,0.765,925,3.43]],["body/injectables/NativeBrowserFileLoaderService.html",[0,0.152,3,0.19,4,0.19,5,0.28,7,0.202,8,0.573,10,0.848,12,0.011,13,0.202,21,0.951,41,1.682,75,0.007,76,0.007,83,0.686,87,0.848,90,1.682,91,0.571,137,0.552,139,1.682,140,0.823,141,1.398,148,1.701,152,1.743,159,3.673,227,2.563,251,2.839,253,2.994,277,2.017,342,1.233,345,1.398,351,3.591,411,1.008,413,1.574,425,1.237,443,1.202,463,1.066,465,2.892,511,1.94,515,1.682,517,1.269,551,2.524,588,2.035,656,2.169,700,2.524,868,3.016,909,3.282,910,4.495,911,3.739,912,5.845,913,3.032,914,4.908,915,5.172,916,2.667,917,2.667,918,2.289,919,2.19,920,2.524,921,3.887,922,2.524,923,3.306,924,2.833,925,4.521,926,2.833,927,2.833,928,4.778,929,3.617,930,3.617,931,5.699,932,3.617,933,4.982,934,3.617,935,5.149,936,2.897,937,1.869,938,3.617,939,3.617,940,3.617,941,3.617,942,1.869,943,3.617,944,5.149,945,3.617,946,3.617,947,3.477,948,3.282,949,3.617,950,3.617,951,3.617,952,3.282,953,3.282,954,3.617,955,3.617,956,3.617,957,3.282,958,3.617,959,2.833,960,3.282,961,3.617,962,3.617,963,3.617,964,3.282,965,3.032,966,5.699,967,4.521,968,3.282,969,3.617,970,3.617,971,3.617,2028,5.682,2029,4.125,2030,4.125]],["title/interfaces/OscVisualizerOptions.html",[0,0.159,330,2.194]],["body/interfaces/OscVisualizerOptions.html",[0,0.302,2,1.035,3,0.219,4,0.219,5,0.162,7,0.233,8,0.631,10,1.793,11,0.635,12,0.011,13,0.413,18,3.339,19,1.027,22,1.757,25,2.947,75,0.008,76,0.008,286,2.638,287,2.638,288,3.627,289,2.766,290,2.766,291,2.766,292,2.524,293,2.419,294,2.524,295,2.524,296,2.524,297,2.419,298,2.524,299,2.524,300,2.524,301,2.638,302,2.638,303,2.419,304,3.319,305,3.182,306,3.182,307,3.182,308,2.419,309,3.923,310,2.524,311,2.732,312,2.732,313,3.182,314,2.524,315,2.419,316,2.524,317,2.638,318,2.766,319,2.419,320,3.555,321,2.524,322,2.324,323,4.118,324,2.94,325,2.524,326,3.182,327,3.627,328,3.869,329,2.419,330,3.555,331,4.002]],["title/interfaces/OsciloscopeConfig.html",[0,0.159,308,2.194]],["body/interfaces/OsciloscopeConfig.html",[0,0.304,2,1.061,3,0.224,4,0.224,5,0.166,7,0.239,8,0.641,10,1.797,11,0.617,12,0.011,13,0.415,18,2.984,19,1.037,22,1.802,25,2.681,75,0.008,76,0.008,286,2.705,287,2.705,288,3.663,289,2.836,290,2.836,291,2.836,292,2.588,293,2.481,294,2.588,295,2.588,296,2.588,297,2.481,298,2.588,299,2.588,300,2.588,301,2.705,302,2.705,303,2.481,304,3.374,305,3.234,306,3.234,307,3.234,308,3.234,309,3.955,310,2.588,311,2.777,312,2.777,313,3.234,314,2.588,315,2.481,316,2.588,317,2.705,318,2.836,319,2.481,320,3.599,321,2.588,322,2.383,323,3.924,324,2.989,325,2.588,326,3.234,327,3.663,328,3.663,329,2.481,330,3.234,331,3.663]],["title/components/PlayerComponent.html",[84,0.966,387,1.7]],["body/components/PlayerComponent.html",[3,0.21,4,0.21,5,0.207,12,0.011,13,0.224,21,1.052,75,0.008,76,0.008,80,1.573,83,0.774,84,1.534,87,0.938,89,4.702,91,0.632,101,3.135,105,2.323,107,2.068,115,1.486,132,2.323,133,2.249,135,2.862,137,0.611,138,1.742,139,2.481,140,0.911,141,0.911,241,3.135,332,1.8,333,1.988,334,1.861,335,1.861,336,1.861,338,3.724,339,3.724,340,3.3,341,3.3,343,1.8,347,2.793,370,1.861,371,2.481,372,2.113,373,1.635,374,2.978,375,1.861,376,1.861,377,2.88,378,2.179,379,1.861,380,1.8,381,1.8,382,1.742,383,1.861,384,1.585,385,1.8,386,2.792,387,2.88,388,1.8,389,1.687,390,1.861,391,2.88,392,1.861,393,1.687,394,1.8,395,1.861,396,1.8,397,1.861,398,1.8,399,1.742,400,1.861,401,1.8,402,1.861,403,1.8,404,1.687,405,1.8,406,1.861,407,1.8,408,1.742,409,1.8,410,1.861,871,4.002,973,5.447,988,3.355,1406,4.19,1407,3.484,2031,4.564,2032,6.003,2033,5.447,2034,5.447,2035,6.085,2036,6.085,2037,4.474,2038,4.002,2039,3.355,2040,3.632,2041,4.564,2042,4.564,2043,4.002,2044,4.564]],["title/injectables/PlayerService.html",[102,2.392,411,0.765]],["body/injectables/PlayerService.html",[3,0.088,4,0.088,5,0.201,7,0.094,8,0.319,10,1.396,11,0.546,12,0.011,13,0.094,16,1.762,19,0.559,21,1.482,39,1.747,41,1.913,43,0.933,75,0.004,76,0.004,77,0.705,80,1.246,83,0.634,85,3.016,86,1.676,87,0.392,90,1.646,91,0.264,93,3.446,94,1.059,102,1.752,115,0.466,117,1.752,118,1.168,137,0.256,140,1.385,141,1.629,142,1.168,148,1.745,152,1.705,159,3.033,161,4.135,168,0.778,196,0.778,200,2.168,210,2.283,227,1.592,232,1.403,246,1.519,251,2.839,252,1.519,253,2.444,254,1.519,277,1.543,311,2.446,312,2.446,319,2.388,342,0.57,345,1.598,352,1.837,353,1.311,362,1.311,411,0.56,412,1.752,413,0.728,416,3.212,425,0.687,430,1.673,443,1.595,447,1.978,448,1.396,456,2.349,461,3.54,463,1.828,465,2.388,510,1.752,511,0.898,512,1.013,517,0.587,518,1.059,551,1.932,558,1.673,588,1.446,598,1.311,656,1.541,673,4.113,720,2.491,730,1.837,734,2.041,739,1.234,740,1.11,911,1.607,920,1.168,921,3.107,922,1.168,923,1.837,924,1.311,936,1.592,937,0.865,942,0.865,947,1.168,952,1.519,983,1.168,987,1.234,1062,1.837,1167,1.673,1429,1.673,1479,1.673,1544,1.234,1602,2.768,1630,3.733,1657,1.519,1659,1.11,1672,4.113,1696,2.168,1698,1.519,1708,1.673,1726,2.768,1757,2.768,2045,1.673,2046,4.037,2047,4.037,2048,4.037,2049,4.037,2050,4.037,2051,3.157,2052,4.037,2053,3.157,2054,3.157,2055,4.037,2056,3.157,2057,2.768,2058,2.768,2059,4.691,2060,4.037,2061,3.157,2062,3.157,2063,4.113,2064,4.113,2065,1.908,2066,1.908,2067,1.908,2068,3.157,2069,1.908,2070,3.54,2071,1.908,2072,1.908,2073,1.908,2074,1.908,2075,1.908,2076,3.157,2077,1.908,2078,1.908,2079,3.157,2080,1.908,2081,3.157,2082,1.908,2083,4.691,2084,3.157,2085,1.908,2086,1.908,2087,1.908,2088,1.908,2089,1.908,2090,3.157,2091,1.908,2092,1.908,2093,1.908,2094,1.908,2095,3.157,2096,3.157,2097,3.157,2098,1.908,2099,1.908,2100,1.908,2101,5.598,2102,4.691,2103,3.157,2104,3.157,2105,1.908,2106,3.157,2107,1.908,2108,3.157,2109,1.908,2110,1.908,2111,3.157,2112,1.908,2113,1.519,2114,2.168,2115,1.908,2116,1.908,2117,1.908,2118,1.519,2119,1.403,2120,1.403,2121,1.673,2122,1.908,2123,1.908,2124,1.519,2125,1.519,2126,3.157,2127,1.908,2128,3.157,2129,1.908,2130,1.908,2131,3.157,2132,1.908,2133,3.157,2134,1.908,2135,1.908,2136,1.908,2137,1.908,2138,1.908,2139,1.908,2140,1.908,2141,1.908,2142,1.908,2143,3.157,2144,1.908,2145,3.157,2146,1.908,2147,1.908,2148,1.908,2149,3.157,2150,1.908,2151,1.908,2152,1.908,2153,3.157,2154,1.673,2155,1.908,2156,1.908,2157,1.908,2158,1.908,2159,1.908,2160,1.908,2161,1.908,2162,1.673,2163,1.908,2164,4.037,2165,1.908,2166,1.908,2167,1.908,2168,1.908,2169,1.908,2170,1.908,2171,1.908,2172,1.908,2173,1.908,2174,1.908,2175,1.908,2176,1.908,2177,1.908,2178,1.908,2179,1.908,2180,1.908,2181,1.908,2182,1.908,2183,1.908,2184,1.908,2185,1.908,2186,1.908,2187,1.908,2188,1.908,2189,1.908,2190,1.908,2191,1.908,2192,1.908,2193,1.908,2194,1.908,2195,1.908,2196,1.908,2197,1.908,2198,1.673,2199,3.157,2200,3.157,2201,2.768,2202,1.908,2203,1.908,2204,1.908,2205,4.037,2206,1.908,2207,1.908,2208,1.908,2209,1.908,2210,1.908,2211,1.908,2212,1.908,2213,3.157,2214,1.908,2215,3.157,2216,1.908,2217,1.908,2218,1.908,2219,1.673,2220,1.908,2221,4.691,2222,1.908,2223,1.908,2224,1.908,2225,1.908,2226,1.908,2227,1.908,2228,1.908,2229,1.908,2230,3.157,2231,1.908,2232,1.908,2233,1.908,2234,3.157,2235,1.168,2236,1.908,2237,2.349,2238,1.908,2239,2.773,2240,1.908,2241,1.908,2242,1.908,2243,1.908,2244,1.908,2245,1.673,2246,3.54,2247,3.212,2248,1.908,2249,1.908,2250,1.673,2251,1.908,2252,1.908,2253,1.908,2254,1.908,2255,1.908]],["title/components/PlayerToolbarComponent.html",[84,0.966,388,1.7]],["body/components/PlayerToolbarComponent.html",[3,0.108,4,0.108,5,0.158,7,0.115,8,0.378,10,1.604,11,0.533,12,0.011,13,0.115,16,1.886,19,0.518,21,1.335,34,1.44,35,3.775,37,1.369,39,1.313,70,1.44,75,0.005,76,0.005,80,1.485,83,0.722,84,1.044,85,2.37,87,0.484,88,2.71,89,3.199,91,0.326,97,3.706,100,3.424,101,1.616,102,2.946,103,1.521,104,3.706,105,1.198,106,3.706,107,1.066,115,1.137,117,2.946,118,1.44,132,1.428,133,1.383,135,1.76,137,0.315,138,0.898,139,1.526,140,0.93,141,1.558,142,2.29,143,2.29,144,3.897,152,0.527,241,1.616,242,1.369,251,1.901,293,1.198,332,0.928,333,1.222,334,0.959,335,0.959,336,0.959,338,2.29,339,2.29,340,3.045,341,2.853,343,0.928,345,1.558,347,1.44,370,0.959,371,1.526,372,1.299,373,0.843,374,2.164,375,0.959,376,0.959,377,0.928,378,0.843,379,0.959,380,0.928,381,0.928,382,0.898,383,0.959,384,0.817,385,0.928,386,1.899,387,0.928,388,2.093,389,2.39,390,0.959,391,0.928,392,0.959,393,0.87,394,0.928,395,0.959,396,0.928,397,0.959,398,0.928,399,0.898,400,0.959,401,0.928,402,0.959,403,0.928,404,0.87,405,0.928,406,0.959,407,0.928,408,0.898,409,0.928,410,0.959,412,2.946,424,2.063,425,0.815,443,1.557,447,1.99,448,1.421,456,2.177,463,2.034,656,1.428,740,2.177,765,1.73,874,3.424,889,2.063,891,2.977,899,3.645,911,1.198,923,3.088,924,1.616,983,2.29,987,1.521,988,1.73,1062,1.369,1209,2.419,1324,1.73,1325,1.616,1326,1.73,1338,2.29,1900,3.28,1980,1.872,2034,3.706,2039,1.73,2040,1.872,2057,3.28,2058,3.28,2063,4.084,2064,4.084,2121,3.28,2235,2.29,2237,3.588,2256,7.868,2257,6.899,2258,2.353,2259,3.741,2260,4.657,2261,4.657,2262,4.657,2263,4.657,2264,3.741,2265,3.741,2266,4.657,2267,3.741,2268,3.741,2269,3.741,2270,4.657,2271,3.741,2272,3.741,2273,4.657,2274,4.657,2275,2.353,2276,2.353,2277,2.353,2278,2.353,2279,2.353,2280,2.353,2281,2.353,2282,3.741,2283,2.353,2284,3.741,2285,2.353,2286,2.353,2287,2.353,2288,2.353,2289,2.353,2290,2.353,2291,2.353,2292,2.353,2293,2.353,2294,2.353,2295,2.353,2296,2.353,2297,2.353,2298,3.741,2299,2.353,2300,1.872,2301,2.063,2302,2.063,2303,2.353,2304,2.063,2305,2.353,2306,2.353,2307,2.353,2308,2.353,2309,2.353,2310,2.353,2311,3.741,2312,3.741,2313,2.353,2314,2.353,2315,2.353,2316,2.353,2317,2.353,2318,2.353,2319,2.353,2320,2.353,2321,3.741,2322,2.353,2323,3.741,2324,4.657,2325,2.353,2326,2.353,2327,2.353,2328,2.353,2329,2.353,2330,2.353,2331,2.353,2332,3.741,2333,2.353,2334,3.741,2335,2.353,2336,2.353,2337,2.353,2338,2.353,2339,2.353,2340,2.353,2341,2.353,2342,2.353,2343,2.353,2344,2.353,2345,2.353,2346,2.353,2347,2.353,2348,2.353,2349,2.353,2350,2.353,2351,2.353,2352,2.353,2353,2.353,2354,2.353,2355,2.353,2356,2.353,2357,2.353,2358,2.353,2359,2.353,2360,5.307,2361,2.353,2362,3.28,2363,5.307,2364,3.741,2365,3.741,2366,3.741,2367,3.741,2368,3.741,2369,3.741]],["title/components/PlaylistComponent.html",[84,0.966,391,1.7]],["body/components/PlaylistComponent.html",[3,0.105,4,0.105,5,0.124,7,0.179,8,0.367,10,0.935,11,0.469,12,0.011,13,0.112,16,1.211,19,0.504,21,0.524,39,1.026,41,1.484,43,2.225,45,1.261,75,0.005,76,0.005,80,1.436,83,0.717,84,1.02,85,2.317,86,2.763,87,0.467,90,2.477,91,0.315,93,3.442,94,1.261,95,2.943,96,1.469,100,1.671,101,1.561,102,2.888,103,1.469,105,1.157,107,1.03,108,3.622,109,3.622,110,3.622,111,1.808,112,3.622,113,1.671,114,1.157,115,0.889,119,3.622,120,1.671,128,1.671,129,1.671,132,1.389,133,1.345,135,1.712,137,0.304,138,0.867,140,1.273,141,1.323,143,2.227,144,2.317,148,1.788,152,1.485,207,1.391,227,1.795,251,1.63,284,2.896,332,0.896,333,1.189,334,0.927,335,0.927,336,0.927,338,2.227,339,2.227,340,3.027,341,2.922,343,0.896,345,1.273,347,1.391,370,0.927,371,1.484,372,1.264,373,0.814,374,2.122,375,0.927,376,0.927,377,0.896,378,0.814,379,0.927,380,0.896,381,0.896,382,0.867,383,0.927,384,0.789,385,0.896,386,1.856,387,0.896,388,0.896,389,0.84,390,0.927,391,2.052,392,0.927,393,0.84,394,0.896,395,0.927,396,0.896,397,0.927,398,0.896,399,0.867,400,0.927,401,0.896,402,0.927,403,0.896,404,0.84,405,0.896,406,0.927,407,0.896,408,1.986,409,0.896,410,0.927,412,2.02,422,4.563,425,0.792,443,1.204,447,1.752,448,1.17,463,0.588,464,3.126,496,1.671,534,1.808,550,1.993,596,2.783,711,1.993,758,1.561,890,4.141,936,1.435,953,2.896,967,2.896,983,1.391,986,1.808,987,1.469,992,3.191,1006,1.671,1035,1.671,1089,1.561,1136,1.993,1137,1.993,1143,3.191,1152,3.622,1195,3.191,1196,3.191,1406,2.786,1407,2.317,1414,1.808,1474,3.991,1609,3.191,1630,5.58,1718,1.993,1719,3.991,1721,1.993,1807,1.993,1875,1.993,1876,1.993,1917,3.191,2034,3.622,2070,6.663,2113,1.808,2118,1.808,2119,1.671,2120,1.671,2124,1.808,2125,1.808,2154,1.993,2198,3.191,2219,3.191,2370,2.273,2371,3.991,2372,3.991,2373,4.551,2374,3.639,2375,3.639,2376,3.639,2377,3.639,2378,3.639,2379,2.273,2380,5.203,2381,2.273,2382,5.203,2383,2.273,2384,3.639,2385,4.551,2386,2.273,2387,3.639,2388,2.273,2389,2.273,2390,2.273,2391,2.273,2392,1.808,2393,2.273,2394,2.273,2395,2.273,2396,2.273,2397,2.273,2398,2.273,2399,2.273,2400,2.273,2401,6.074,2402,2.273,2403,3.991,2404,6.836,2405,4.551,2406,2.273,2407,2.273,2408,2.273,2409,3.639,2410,2.273,2411,3.639,2412,2.273,2413,2.273,2414,3.639,2415,2.273,2416,2.273,2417,1.993,2418,4.551,2419,2.273,2420,2.273,2421,2.273,2422,2.273,2423,2.273,2424,1.993,2425,3.639,2426,2.273,2427,1.391,2428,2.273,2429,2.273,2430,2.273,2431,2.273,2432,4.551,2433,2.273,2434,5.203,2435,2.273,2436,2.273,2437,2.273,2438,3.639,2439,2.273,2440,2.273,2441,2.273,2442,3.639,2443,3.639,2444,4.551,2445,2.273,2446,2.273,2447,3.639,2448,2.273,2449,2.273,2450,3.639,2451,2.273,2452,4.551,2453,2.273,2454,2.273,2455,3.639,2456,3.639,2457,2.273,2458,4.551,2459,2.273,2460,1.993,2461,2.273,2462,2.273,2463,3.639,2464,2.273,2465,2.273,2466,3.639,2467,2.273,2468,2.273,2469,1.993,2470,2.273,2471,2.273,2472,2.273,2473,2.273,2474,2.273,2475,2.273,2476,3.639,2477,2.273,2478,2.273,2479,2.273,2480,2.273,2481,2.273,2482,2.273,2483,2.273,2484,2.273,2485,2.273,2486,3.639,2487,3.639,2488,5.203,2489,3.639,2490,3.639,2491,3.639]],["title/components/PromptDialogComponent.html",[84,0.966,393,1.593]],["body/components/PromptDialogComponent.html",[0,0.161,3,0.2,4,0.2,5,0.2,7,0.213,8,0.595,12,0.011,13,0.289,16,1.568,19,0.925,21,1.358,75,0.007,76,0.007,80,1.556,83,0.624,84,1.497,87,0.894,91,0.602,107,1.971,115,1.439,132,2.249,133,2.178,137,0.583,138,1.66,196,1.774,332,1.715,333,1.925,334,1.774,335,1.774,336,1.774,340,3.302,341,3.319,343,1.715,345,1.43,370,1.774,371,2.402,372,2.046,373,1.558,374,2.92,375,1.774,376,1.774,377,1.715,378,1.558,379,1.774,380,1.715,381,1.715,382,1.66,383,1.774,384,1.51,385,1.715,386,2.724,387,1.715,388,1.715,389,1.608,390,1.774,391,1.715,392,1.774,393,2.647,394,2.951,395,1.774,396,1.715,397,1.774,398,1.715,399,1.66,400,1.774,401,1.715,402,1.774,403,1.715,404,1.608,405,1.715,406,1.774,407,1.715,408,1.66,409,1.715,410,1.774,425,1.283,443,1.246,463,1.523,598,5.298,1083,5.501,1329,2.662,1330,2.531,1341,3.809,1347,4.089,1395,2.55,1402,3.198,1403,3.198,1404,4.912,1407,3.401,1408,4.331,1410,4.331,1411,4.331,1418,3.814,1517,2.414,2492,6.562,2493,6.562,2494,6.279,2495,4.35,2496,4.35,2497,4.35,2498,3.198,2499,3.461,2500,3.814,2501,3.814,2502,5.891,2503,5.891,2504,5.891]],["title/interfaces/PromptDialogData.html",[0,0.159,2498,3.169]],["body/interfaces/PromptDialogData.html",[0,0.209,2,1.231,3,0.26,4,0.26,5,0.192,7,0.277,8,0.705,11,0.624,12,0.011,13,0.343,19,1.182,75,0.009,76,0.009,83,0.707,84,1.564,87,1.162,91,0.782,107,2.561,132,2.157,133,2.089,137,0.757,196,3.226,340,2.157,341,2.229,393,2.089,394,2.753,598,3.882,1083,4.155,1329,3.459,1330,3.289,1341,3.654,1347,3.459,1395,2.157,1402,4.155,1403,4.155,1404,5.132,1407,3.553,1408,4.155,1410,4.155,1411,4.155,1517,4.391,2492,4.956,2493,4.956,2494,4.956,2498,5.132,2499,6.295,2500,4.956,2501,4.956]],["title/interfaces/RemoteCoverArtUrls.html",[0,0.159,82,1.645]],["body/interfaces/RemoteCoverArtUrls.html",[0,0.302,2,1.25,3,0.264,4,0.264,5,0.259,7,0.282,8,0.711,11,0.581,12,0.011,13,0.401,19,1.199,75,0.009,76,0.009,82,2.691,83,0.536,588,2.057,724,2.423,725,2.923,849,3.187,853,5.442,854,2.342,855,3.944,856,3.712,857,3.081,858,2.701,859,3.341,860,3.712,861,3.712,862,3.712,863,3.712,864,3.712,865,3.889,866,3.889,867,3.514,868,3.743,869,3.514,870,2.923]],["title/components/SettingsComponent.html",[84,0.966,396,1.7]],["body/components/SettingsComponent.html",[3,0.231,4,0.231,5,0.22,12,0.011,13,0.246,21,1.157,75,0.008,76,0.008,80,1.605,83,0.707,84,1.607,91,0.695,115,1.751,132,2.472,133,2.394,135,3.046,137,0.672,138,1.916,332,1.979,333,2.116,334,2.047,335,2.047,336,2.047,340,3.332,341,3.35,343,1.979,370,2.047,371,2.641,372,2.249,373,1.798,374,3.09,375,2.047,376,2.047,377,1.979,378,1.798,379,2.047,380,1.979,381,1.979,382,1.916,383,2.047,384,1.743,385,2.988,386,2.924,387,1.979,388,1.979,389,1.855,390,2.047,391,1.979,392,2.047,393,1.855,394,1.979,395,2.047,396,2.988,397,2.047,398,1.979,399,1.916,400,2.047,401,2.988,402,2.641,403,2.988,404,2.394,405,1.979,406,2.047,407,1.979,408,1.916,409,1.979,410,2.047,1936,4.401,1940,4.761,2505,5.019,2506,6.476,2507,4.401,2508,7.171,2509,4.401]],["title/components/ShellComponent.html",[84,0.966,343,1.7]],["body/components/ShellComponent.html",[3,0.13,4,0.13,5,0.243,7,0.139,8,0.436,11,0.431,12,0.011,13,0.139,16,0.752,19,0.725,21,1.596,75,0.005,76,0.005,80,1.471,83,0.766,84,1.173,87,0.581,91,0.391,95,3.384,96,1.827,102,3.252,105,1.438,107,1.28,114,1.438,115,1.054,117,3.252,118,1.729,128,3.172,129,2.077,132,1.647,133,1.595,135,2.029,137,0.378,138,1.078,140,1.17,141,1.654,142,2.641,143,2.641,144,4.133,148,1.173,152,0.967,178,1.568,251,2.383,253,1.114,277,2.11,332,1.114,333,1.41,334,1.152,335,1.152,336,1.152,340,3.134,341,3.072,343,2.311,345,1.46,370,1.152,371,1.76,372,1.498,373,1.012,374,2.389,375,1.152,376,1.152,377,1.114,378,1.012,379,1.152,380,1.114,381,2.311,382,1.647,383,1.152,384,0.981,385,1.114,386,2.135,387,1.114,388,2.311,389,1.935,390,1.152,391,1.114,392,1.152,393,1.044,394,1.114,395,1.152,396,1.114,397,1.152,398,1.114,399,1.078,400,1.152,401,1.114,402,1.152,403,1.114,404,1.044,405,1.114,406,1.152,407,1.114,408,1.078,409,1.114,410,1.152,425,0.939,443,1.107,447,1.611,448,1.076,456,2.511,463,1.79,465,2.982,515,1.152,574,2.641,700,3.204,728,3.204,890,3.434,891,3.434,892,3.783,893,3.783,894,5.138,911,1.438,920,3.204,921,2.906,922,1.729,960,2.248,986,2.248,993,3.434,1062,1.644,1084,2.477,1089,1.94,1332,2.963,1406,3.204,1407,2.664,1659,2.511,1678,2.477,1679,4.308,1681,3.783,1959,2.477,2032,4.59,2037,4.308,2038,2.477,2040,2.248,2043,3.783,2119,2.077,2120,2.077,2162,2.477,2257,2.477,2372,4.59,2510,2.825,2511,4.315,2512,5.235,2513,5.235,2514,5.235,2515,4.315,2516,4.315,2517,5.235,2518,6.653,2519,4.315,2520,4.315,2521,4.315,2522,4.315,2523,6.311,2524,2.825,2525,2.477,2526,4.315,2527,2.825,2528,4.315,2529,2.825,2530,2.825,2531,4.315,2532,4.315,2533,2.825,2534,2.825,2535,2.825,2536,2.825,2537,2.825,2538,4.315,2539,2.825,2540,2.825,2541,2.825,2542,2.825,2543,4.315,2544,2.477,2545,4.315,2546,2.825,2547,2.825,2548,2.248,2549,2.825,2550,2.825,2551,2.825,2552,2.825,2553,2.825,2554,2.825,2555,2.825,2556,2.825,2557,2.825,2558,2.825,2559,2.825,2560,2.825,2561,2.825,2562,2.825,2563,2.825,2564,2.825,2565,2.825,2566,2.825,2567,2.825,2568,2.825,2569,2.825,2570,5.859,2571,4.315,2572,4.315,2573,4.315]],["title/components/SlidePanelComponent.html",[84,0.966,398,1.7]],["body/components/SlidePanelComponent.html",[3,0.129,4,0.129,5,0.146,7,0.138,8,0.434,11,0.614,12,0.011,13,0.138,16,1.388,19,1.011,21,1.684,22,1.928,75,0.005,76,0.005,80,1.381,83,0.588,84,1.169,91,0.389,105,1.43,107,1.273,115,1.049,132,1.64,133,1.588,135,2.02,137,0.376,138,1.072,139,1.752,141,0.561,210,1.145,332,1.108,333,1.403,334,1.145,335,1.145,336,1.145,340,3.131,341,3.068,343,1.108,345,1.57,370,1.145,371,1.752,372,1.491,373,1.006,374,2.382,375,1.145,376,1.145,377,1.108,378,1.006,379,1.145,380,1.108,381,1.108,382,1.072,383,1.145,384,0.975,385,1.108,386,2.127,387,1.108,388,1.108,389,1.038,390,1.145,391,1.108,392,1.145,393,1.038,394,1.108,395,1.145,396,1.108,397,1.145,398,2.304,399,3.029,400,1.145,401,1.108,402,1.145,403,1.108,404,1.038,405,1.108,406,1.145,407,1.108,408,1.072,409,1.108,410,1.145,425,0.935,443,0.909,463,1.888,465,3.626,551,4.227,656,2.844,657,2.065,1004,3.582,1006,3.834,1059,4.648,1083,5.835,1095,3.418,1110,5.536,1406,3.192,1407,2.655,2033,4.15,2039,2.065,2201,2.463,2235,2.629,2237,3.399,2239,4.559,2371,4.573,2392,2.235,2403,4.573,2469,4.573,2574,6.959,2575,7.936,2576,2.809,2577,5.216,2578,5.477,2579,4.295,2580,4.295,2581,5.216,2582,5.842,2583,5.842,2584,5.216,2585,6.295,2586,6.907,2587,5.216,2588,5.216,2589,4.295,2590,4.295,2591,4.295,2592,2.809,2593,5.842,2594,2.809,2595,2.809,2596,6.638,2597,2.809,2598,2.809,2599,2.809,2600,2.809,2601,2.809,2602,4.295,2603,4.295,2604,2.809,2605,2.809,2606,4.295,2607,4.295,2608,4.295,2609,4.295,2610,6.638,2611,6.907,2612,7.124,2613,2.809,2614,2.463,2615,2.809,2616,2.809,2617,6.638,2618,6.295,2619,6.638,2620,2.809,2621,2.809,2622,2.809,2623,2.809,2624,2.809,2625,2.809,2626,2.809,2627,2.809,2628,2.809,2629,2.809,2630,2.809,2631,2.809,2632,5.216,2633,5.842,2634,5.842]],["title/components/StorageSettingsComponent.html",[84,0.966,401,1.7]],["body/components/StorageSettingsComponent.html",[3,0.217,4,0.217,5,0.211,7,0.231,12,0.011,13,0.231,16,1.254,75,0.008,76,0.008,80,1.584,83,0.69,84,1.559,87,0.969,91,0.652,107,2.136,115,1.518,132,2.373,133,2.298,137,0.631,138,1.799,140,0.941,141,0.941,332,1.859,333,2.031,334,1.922,335,1.922,336,1.922,340,3.328,341,3.358,343,1.859,345,0.941,370,1.922,371,2.535,372,2.159,373,1.688,374,3.016,375,1.922,376,1.922,377,1.859,378,1.688,379,1.922,380,1.859,381,1.859,382,1.799,383,1.922,384,1.637,385,1.859,386,2.837,387,1.859,388,1.859,389,1.743,390,1.922,391,1.859,392,1.922,393,1.743,394,1.859,395,1.922,396,1.859,397,1.922,398,1.859,399,1.799,400,1.922,401,2.917,402,3.283,403,1.859,404,1.743,405,1.859,406,1.922,407,1.859,408,1.799,409,1.859,410,1.922,425,1.354,443,0.997,510,2.617,511,2.217,512,2.503,518,2.617,574,4.832,575,3.751,1008,4.947,1301,4.571,1407,3.541,1827,4.947,1937,3.751,1938,5.535,1940,4.571,1960,3.751,2507,5.451,2635,6.217,2636,7.396,2637,4.134,2638,4.714]],["title/interfaces/TagsWorkerRequest.html",[0,0.159,867,2.638]],["body/interfaces/TagsWorkerRequest.html",[0,0.302,2,1.25,3,0.264,4,0.264,5,0.289,7,0.282,8,0.711,11,0.581,12,0.011,13,0.401,19,1.186,75,0.009,76,0.009,82,2.192,83,0.536,588,2.057,724,2.423,725,2.923,849,3.187,853,5.442,854,2.342,855,3.944,856,3.712,857,3.081,858,2.701,859,3.341,860,3.712,861,3.712,862,3.712,863,3.712,864,3.712,865,2.807,866,2.807,867,4.314,868,4.335,869,3.514,870,2.923]],["title/interfaces/TagsWorkerResponse.html",[0,0.159,869,2.638]],["body/interfaces/TagsWorkerResponse.html",[0,0.3,2,1.223,3,0.258,4,0.258,5,0.257,7,0.276,8,0.702,11,0.622,12,0.011,13,0.398,19,1.195,75,0.009,76,0.009,82,2.145,83,0.524,448,1.622,588,2.827,724,2.371,725,2.86,849,3.119,853,5.417,854,2.291,855,3.859,856,3.633,857,3.45,858,2.643,859,3.269,860,3.633,861,3.633,862,3.633,863,3.633,864,3.633,865,2.747,866,2.747,867,3.439,868,4.308,869,4.257,870,4.018]],["title/interfaces/ThemeColor.html",[0,0.159,748,3.169]],["body/interfaces/ThemeColor.html",[0,0.233,2,1.371,3,0.29,4,0.29,5,0.214,7,0.309,8,0.752,11,0.654,12,0.011,13,0.309,19,1.175,22,2.934,75,0.009,76,0.009,80,1.591,748,5.478,849,4.554,851,6.529,2639,6.296]],["title/injectables/ThemeService.html",[352,2.508,411,0.765]],["body/injectables/ThemeService.html",[0,0.112,3,0.139,4,0.139,5,0.103,7,0.149,8,0.459,10,0.935,11,0.5,12,0.011,13,0.149,16,1.731,19,1.051,21,1.576,22,2.018,39,0.854,59,1.681,75,0.006,76,0.006,80,1.374,83,0.662,85,3.311,86,3.454,87,0.622,90,1.235,91,0.419,137,0.406,140,1.415,141,1.639,148,1.458,152,1.224,227,2.154,342,0.905,345,1.54,350,1.762,351,1.48,352,2.646,404,2.018,411,0.807,413,1.156,425,0.99,443,1.376,447,1.868,448,1.248,463,1.682,510,2.524,511,1.424,512,1.608,517,0.932,518,1.681,623,2.08,720,3.223,741,3.618,742,2.655,743,6.539,744,6.393,745,7.155,746,3.618,747,4.83,748,4.014,749,2.655,750,4.783,751,4.783,752,3.123,753,2.655,754,2.655,755,2.655,756,2.655,757,2.655,758,2.08,759,2.655,760,2.655,761,3.987,762,2.655,763,2.41,764,2.655,765,2.226,766,2.655,767,3.987,768,2.41,769,2.41,770,2.655,771,2.655,772,2.655,773,2.655,774,2.655,775,2.655,776,2.655,777,2.655,778,2.655,779,2.655,780,2.655,781,2.655,782,2.41,783,5.323,784,3.987,785,3.987,786,5.298,787,4.788,788,3.987,789,4.788,790,3.987,791,4.788,792,3.987,793,4.788,794,3.987,795,4.788,796,3.987,797,2.655,798,2.655,799,2.655,800,2.655,801,3.987,802,3.987,803,2.655,804,4.788,805,2.655,806,3.987,807,2.655,808,2.655,809,5.323,810,3.987,811,2.655,812,3.987,813,2.655,814,2.655,815,3.987,816,2.655,817,3.987,818,2.655,819,2.655,820,2.226,821,2.41,822,2.655,823,2.655,824,3.987,825,2.655,826,3.987,827,3.987,828,2.655,829,2.41,830,2.655,831,2.655,832,2.655,833,2.655,834,2.226,835,2.655,836,3.987,837,2.655,838,2.655,839,2.655,840,2.655,841,2.655,842,2.655,843,2.655,844,2.655,845,2.655,846,3.987,847,2.655,848,2.655,849,1.681,850,2.655,851,2.41,852,2.655,2640,4.547,2641,4.547,2642,4.547,2643,4.547,2644,4.547,2645,3.028,2646,3.028,2647,3.028,2648,3.028,2649,3.028,2650,3.028,2651,3.028,2652,3.028,2653,3.028]],["title/components/ThemeSettingsComponent.html",[84,0.966,403,1.7]],["body/components/ThemeSettingsComponent.html",[3,0.21,4,0.21,5,0.207,7,0.224,8,0.614,11,0.375,12,0.011,13,0.224,16,1.213,18,2.565,21,1.051,75,0.008,76,0.008,80,1.592,83,0.681,84,1.533,87,0.937,91,0.631,115,1.484,132,2.32,133,2.247,137,0.61,138,1.739,141,1.366,144,3.482,332,1.797,333,1.986,334,1.858,335,1.858,336,1.858,340,3.317,341,3.342,343,1.797,345,1.214,352,4.246,353,3.13,362,4.175,370,1.858,371,2.479,372,2.111,373,1.632,374,2.976,375,1.858,376,1.858,377,1.797,378,1.632,379,1.858,380,1.797,381,1.797,382,1.739,383,1.858,384,1.582,385,1.797,386,2.789,387,1.797,388,1.797,389,1.684,390,1.858,391,1.797,392,1.858,393,1.684,394,1.797,395,1.858,396,1.797,397,1.858,398,1.797,399,1.739,400,1.858,401,1.797,402,1.858,403,2.878,404,2.951,405,1.797,406,1.858,407,1.797,408,1.739,409,1.797,410,1.858,425,1.323,443,0.964,447,1.402,448,0.937,463,1.178,574,3.72,596,2.228,752,4.175,821,4.837,1937,3.626,1938,5.443,1940,4.469,1960,3.626,2509,5.998,2637,3.996,2654,6.84,2655,6.84,2656,6.079,2657,6.079,2658,7.297,2659,4.557,2660,4.557,2661,4.557]],["title/pipes/TimePipe.html",[114,2.194,874,3.169]],["body/pipes/TimePipe.html",[3,0.272,4,0.272,5,0.201,10,1.589,11,0.488,12,0.011,13,0.291,19,0.994,75,0.009,76,0.009,80,1.499,83,0.67,91,0.819,114,3.655,115,1.445,137,0.793,139,2.414,152,1.326,210,3.152,345,1.182,425,1.289,443,1.252,447,1.822,448,1.217,456,3.445,463,1.531,653,4.352,655,5.715,656,2.741,657,4.352,658,5.715,660,5.715,874,5.28,899,4.932,1980,4.711,2300,4.711,2662,5.92,2663,7.731,2664,5.92,2665,5.191]],["title/injectables/TitleService.html",[411,0.765,2037,3.169]],["body/injectables/TitleService.html",[3,0.27,4,0.27,5,0.2,7,0.288,8,0.721,11,0.484,12,0.011,13,0.288,16,1.562,19,1.066,21,1.354,75,0.009,76,0.009,80,1.138,83,0.667,87,1.207,90,3.141,91,0.813,137,0.786,140,1.172,141,1.6,196,3.35,342,1.755,345,1.427,350,3.416,351,2.87,411,1.268,413,2.241,425,1.556,443,1.242,447,1.807,448,1.207,463,1.518,517,1.807,2037,5.253,2666,5.871,2667,7.146,2668,7.146,2669,5.871,2670,5.871,2671,5.871,2672,5.871,2673,5.871,2674,5.871]],["title/interfaces/Track.html",[0,0.159,93,1.884]],["body/interfaces/Track.html",[0,0.283,2,1.12,3,0.237,4,0.237,5,0.283,7,0.253,8,0.664,11,0.666,12,0.011,13,0.403,19,1.163,25,2.171,75,0.008,76,0.008,77,1.902,79,2.994,81,2.732,82,2.512,83,0.677,92,2.856,93,3.171,115,2.007,116,3.326,148,1.474,168,2.098,196,2.098,277,3.864,311,2.249,312,2.249,448,1.352,451,4.027,485,3.326,486,3.326,487,3.326,488,3.326,489,3.326,490,2.856,491,3.326,492,3.326,493,3.326,494,3.326,513,3.149,573,3.534,720,2.732,721,3.326,722,4.027,723,3.149,724,2.171,725,3.349,726,4.254,727,2.856,728,4.68,729,5.11,730,2.994,731,3.534,732,2.42,733,3.534,734,3.326,735,3.783,736,3.534,737,3.783,738,3.783,739,3.326,740,2.994]],["title/interfaces/TrackMetadata.html",[0,0.159,729,2.787]],["body/interfaces/TrackMetadata.html",[0,0.271,2,1.002,3,0.212,4,0.212,5,0.234,7,0.226,8,0.617,11,0.702,12,0.011,13,0.393,19,1.211,25,1.941,75,0.008,76,0.008,77,2.708,79,4.262,81,3.889,82,2.796,83,0.642,92,2.554,93,3.333,115,1.789,116,2.974,148,1.371,168,2.987,196,2.987,277,2.991,311,2.011,312,2.011,448,1.734,451,3.744,485,2.974,486,2.974,487,2.974,488,2.974,489,2.974,490,2.554,491,2.974,492,2.974,493,2.974,494,2.974,513,2.816,573,3.16,720,2.443,721,2.974,722,4.483,723,2.816,724,1.941,725,3.728,726,4.736,727,2.554,728,3.744,729,4.736,730,4.262,731,5.031,732,3.445,733,5.031,734,4.736,735,3.382,736,3.16,737,3.382,738,3.382,739,2.974,740,2.677]],["title/injectables/UpdateService.html",[354,3.43,411,0.765]],["body/injectables/UpdateService.html",[3,0.213,4,0.213,5,0.157,7,0.227,12,0.011,13,0.227,75,0.008,76,0.008,83,0.733,87,0.95,91,0.64,137,0.619,140,1.375,141,1.375,148,1.544,152,1.544,169,1.823,196,1.885,207,2.829,227,2.717,251,2.812,342,1.381,345,1.375,354,4.884,393,1.709,411,1.089,413,1.765,425,1.336,443,1.298,465,2.353,515,1.885,517,1.423,598,5.04,623,5.04,656,1.765,919,2.454,936,2.894,1252,4.054,1328,3.399,1330,2.69,1341,2.989,1342,3.399,1395,2.63,1454,3.399,1517,2.566,1808,4.054,2113,3.679,2118,3.679,2119,3.399,2120,3.399,2124,3.679,2125,3.679,2235,2.829,2237,4.009,2239,4.732,2498,4.512,2499,3.679,2548,3.679,2675,4.623,2676,7.339,2677,7.339,2678,4.623,2679,4.623,2680,4.623,2681,6.137,2682,6.889,2683,4.054,2684,4.623,2685,4.623,2686,4.623,2687,4.623,2688,4.623,2689,4.623,2690,4.623,2691,4.623,2692,5.396,2693,6.137,2694,4.623,2695,4.623,2696,4.623,2697,4.623,2698,4.623,2699,4.623,2700,4.623,2701,4.623,2702,4.623,2703,4.623,2704,4.623,2705,4.623,2706,4.623,2707,4.623,2708,4.623,2709,4.623,2710,4.623,2711,4.623,2712,4.623,2713,4.623,2714,4.623,2715,4.623,2716,4.623]],["title/components/VisualizerComponent.html",[84,0.966,405,1.7]],["body/components/VisualizerComponent.html",[3,0.082,4,0.082,5,0.102,7,0.088,8,0.302,10,1.602,11,0.56,12,0.011,13,0.088,16,1.769,21,1.696,37,1.042,43,1.464,47,1.936,55,1.832,75,0.004,76,0.004,80,1.426,83,0.678,84,0.864,85,3.192,87,0.368,88,2.245,89,2.65,90,0.73,91,0.248,93,1.308,102,1.662,103,1.158,105,0.911,107,0.811,115,0.731,132,1.143,133,1.107,135,1.408,137,0.24,138,0.683,139,1.221,140,0.77,141,1.694,143,1.096,144,4.204,152,1.352,227,1.522,241,1.23,242,1.042,288,3.066,292,1.589,293,1.524,294,1.589,295,1.589,296,1.589,297,1.524,298,2.394,299,1.589,300,1.589,301,1.662,302,1.662,303,0.911,304,2.663,305,2.553,306,2.93,307,2.553,308,0.911,309,2.295,313,2.553,324,3.321,327,3.165,328,2.951,331,2.951,332,0.706,333,0.978,334,0.73,335,0.73,336,0.73,338,1.832,339,1.832,340,2.891,341,2.737,343,0.706,345,1.582,347,1.096,370,0.73,371,1.221,372,1.039,373,0.641,374,1.839,375,0.73,376,0.73,377,0.706,378,0.641,379,0.73,380,0.706,381,0.706,382,0.683,383,0.73,384,0.622,385,0.706,386,1.573,387,0.706,388,0.706,389,0.662,390,0.73,391,0.706,392,0.73,393,0.662,394,0.706,395,0.73,396,0.706,397,0.73,398,1.778,399,0.683,400,0.73,401,0.706,402,0.73,403,0.706,404,0.662,405,1.778,406,2.046,407,0.706,408,1.721,409,0.706,410,0.73,412,2.502,425,0.652,443,1.327,445,2.382,447,1.93,448,1.331,449,3.07,463,2.167,506,2.382,510,1.662,511,0.842,512,0.951,518,0.994,656,0.683,669,4.952,720,2.048,918,1.662,973,3.07,983,1.832,987,1.158,988,1.316,1006,2.201,1033,2.382,1209,1.936,1406,2.361,1407,1.964,1518,1.832,1896,2.625,2033,3.07,2039,1.316,2235,1.832,2237,3.767,2247,2.382,2301,1.57,2302,1.57,2304,1.57,2362,2.625,2548,1.425,2574,1.57,2578,1.316,2717,1.791,2718,3.858,2719,3.858,2720,2.994,2721,2.994,2722,3.383,2723,5.016,2724,3.858,2725,3.858,2726,3.383,2727,5.016,2728,5.016,2729,3.588,2730,2.994,2731,2.994,2732,2.994,2733,2.994,2734,2.994,2735,2.994,2736,2.994,2737,2.994,2738,2.994,2739,2.994,2740,2.994,2741,1.791,2742,2.994,2743,1.791,2744,2.994,2745,1.791,2746,2.994,2747,1.791,2748,2.994,2749,1.791,2750,2.994,2751,1.791,2752,2.994,2753,1.791,2754,2.994,2755,1.791,2756,2.994,2757,1.791,2758,2.994,2759,1.791,2760,2.625,2761,1.791,2762,2.994,2763,1.791,2764,2.994,2765,2.994,2766,2.994,2767,2.994,2768,1.791,2769,2.994,2770,1.791,2771,2.994,2772,1.791,2773,2.994,2774,2.994,2775,1.791,2776,1.791,2777,2.994,2778,1.791,2779,2.994,2780,1.791,2781,2.994,2782,1.791,2783,2.994,2784,2.994,2785,1.791,2786,2.994,2787,1.791,2788,2.994,2789,1.791,2790,2.994,2791,2.994,2792,1.791,2793,2.994,2794,1.791,2795,1.791,2796,1.791,2797,1.791,2798,1.791,2799,1.791,2800,2.994,2801,1.791,2802,2.994,2803,1.791,2804,2.994,2805,1.791,2806,1.791,2807,1.791,2808,1.791,2809,1.791,2810,1.791,2811,1.791,2812,1.791,2813,1.791,2814,1.791,2815,1.791,2816,1.791,2817,1.791,2818,1.791,2819,1.791,2820,1.791,2821,1.791,2822,1.791,2823,1.791,2824,1.791,2825,1.791,2826,1.791,2827,1.791,2828,1.791,2829,1.791,2830,2.994,2831,2.994,2832,5.423,2833,2.994,2834,4.509,2835,2.994]],["title/interfaces/VisualsColorConfig.html",[0,0.159,310,2.288]],["body/interfaces/VisualsColorConfig.html",[0,0.302,2,1.026,3,0.217,4,0.217,5,0.16,7,0.231,8,0.627,10,1.792,11,0.65,12,0.011,13,0.413,18,2.935,19,1.131,22,1.743,25,2.623,75,0.008,76,0.008,286,2.617,287,2.617,288,3.616,289,2.743,290,2.743,291,2.743,292,2.503,293,2.399,294,2.503,295,2.503,296,2.503,297,2.399,298,2.503,299,2.503,300,2.503,301,2.617,302,2.617,303,2.399,304,3.301,305,3.164,306,3.164,307,3.164,308,2.399,309,3.164,310,3.301,311,3.36,312,3.36,313,3.913,314,2.503,315,2.399,316,2.503,317,2.617,318,2.743,319,2.399,320,3.541,321,2.503,322,2.305,323,3.861,324,2.924,325,2.503,326,3.164,327,3.616,328,3.616,329,2.399,330,3.164,331,3.616,448,1.623]],["title/directives/VisualsDirective.html",[373,1.544,408,1.645]],["body/directives/VisualsDirective.html",[3,0.125,4,0.125,5,0.092,7,0.133,10,0.557,11,0.595,12,0.011,13,0.133,16,1.357,18,2.613,21,1.321,22,2.418,39,1.745,41,2.337,43,2.042,75,0.005,76,0.005,80,0.81,83,0.476,86,2.217,87,0.557,88,2.967,91,0.375,115,0.661,137,0.363,139,1.703,140,1.406,141,1.236,148,1.846,152,1.142,169,1.647,195,3.296,210,1.703,222,1.86,227,2.011,242,1.576,288,1.324,303,2.126,304,2.707,305,2.595,306,2.595,307,2.595,308,2.126,309,2.595,310,2.217,311,1.825,312,1.825,313,2.126,314,3.62,315,2.595,316,3.043,317,2.318,319,1.378,320,2.126,321,1.438,322,1.324,324,1.964,325,2.217,327,3.027,328,3.442,329,1.378,331,2.802,340,1.594,345,1.473,373,1.496,407,1.068,408,1.594,409,1.647,412,2.318,425,0.909,439,3.324,443,1.079,445,5.206,447,1.285,448,0.858,449,4.057,463,1.482,490,1.503,506,3.324,535,2.375,538,1.86,595,1.991,596,1.324,656,1.034,687,2.375,720,3.287,750,3.748,751,3.748,769,2.155,899,1.86,914,1.751,983,1.657,985,2.155,987,1.751,1010,3.662,1033,3.324,1095,3.324,1110,4.252,1172,2.375,1306,2.375,1395,1.946,1454,4.213,1459,2.375,1461,2.375,1462,2.155,1518,1.657,1521,1.751,1775,2.375,2235,1.657,2237,3.334,2239,3.936,2722,4.471,2726,4.471,2760,2.375,2836,2.375,2837,5.731,2838,4.177,2839,4.177,2840,2.708,2841,2.708,2842,2.708,2843,2.708,2844,2.708,2845,2.708,2846,2.708,2847,4.177,2848,2.708,2849,4.177,2850,2.708,2851,2.708,2852,2.708,2853,2.375,2854,2.375,2855,2.375,2856,2.708,2857,2.708,2858,2.708,2859,2.708,2860,2.708,2861,4.177,2862,2.708,2863,2.708,2864,2.708,2865,2.708,2866,2.708,2867,2.708,2868,2.708,2869,2.708,2870,2.708,2871,6.818,2872,2.708,2873,2.708,2874,2.708,2875,1.991,2876,4.177,2877,2.708,2878,2.708,2879,2.708,2880,2.708,2881,2.708,2882,2.708,2883,5.098,2884,2.708,2885,4.177,2886,4.177,2887,2.708,2888,2.708,2889,2.708,2890,5.731,2891,2.708,2892,2.708,2893,2.708,2894,2.708,2895,2.708,2896,2.708,2897,4.177,2898,2.708,2899,2.708,2900,2.708,2901,5.098,2902,5.731,2903,2.708,2904,2.708,2905,2.708,2906,2.708,2907,4.177,2908,4.177,2909,4.177,2910,5.098,2911,2.708,2912,2.708,2913,2.708,2914,2.708,2915,2.708,2916,2.708,2917,2.708,2918,2.708,2919,2.708,2920,6.818,2921,4.177,2922,4.177,2923,2.708,2924,2.375,2925,4.177,2926,5.098,2927,4.177,2928,2.708,2929,2.708,2930,2.708,2931,2.708,2932,2.708,2933,2.708,2934,2.708,2935,4.471,2936,4.177,2937,2.708,2938,2.708,2939,2.708,2940,2.708,2941,2.708,2942,2.708,2943,2.708,2944,2.708,2945,2.708,2946,2.708,2947,2.708,2948,4.177,2949,2.708,2950,2.708,2951,2.708,2952,2.708,2953,2.708,2954,2.708,2955,2.708,2956,2.708,2957,2.708]],["title/injectables/VisualsService.html",[411,0.765,2729,3.43]],["body/injectables/VisualsService.html",[3,0.246,4,0.246,5,0.182,7,0.262,8,0.681,11,0.44,12,0.011,13,0.262,16,1.423,21,1.233,75,0.009,76,0.009,83,0.689,87,1.099,90,2.18,91,0.74,137,0.716,140,1.067,141,1.548,324,3.171,327,3.792,328,3.792,331,3.792,342,1.598,345,1.346,411,1.197,413,2.041,425,1.468,443,1.131,463,1.382,510,3.743,511,2.515,512,2.839,517,1.645,518,2.968,2235,3.272,2237,4.652,2239,5.492,2729,5.366,2853,4.688,2958,5.346,2959,7.386,2960,7.756,2961,5.346,2962,6.743,2963,5.346,2964,8.289,2965,5.346,2966,5.346,2967,5.346]],["title/interfaces/VisualsWorkerMessage.html",[0,0.159,314,2.288]],["body/interfaces/VisualsWorkerMessage.html",[0,0.3,2,1,3,0.211,4,0.211,5,0.156,7,0.225,8,0.617,10,1.778,11,0.669,12,0.011,13,0.411,18,2.898,19,1.013,22,2.539,25,2.579,75,0.008,76,0.008,286,2.55,287,2.55,288,3.579,289,2.673,290,2.673,291,2.673,292,2.439,293,2.338,294,2.439,295,2.439,296,2.439,297,2.338,298,2.439,299,2.439,300,2.439,301,2.55,302,2.55,303,2.338,304,3.245,305,3.11,306,3.11,307,3.11,308,2.338,309,3.11,310,2.439,311,2.671,312,2.671,313,3.11,314,3.245,315,3.726,316,3.646,317,4.063,318,3.996,319,3.726,320,4.135,321,3.887,322,3.357,323,3.812,324,2.874,325,2.439,326,3.11,327,3.579,328,3.579,329,2.338,330,3.11,331,3.579,448,1.67]],["title/injectables/WakelockService.html",[411,0.765,2114,2.96]],["body/injectables/WakelockService.html",[3,0.262,4,0.262,5,0.194,7,0.28,12,0.011,13,0.28,75,0.009,76,0.009,83,0.532,91,0.788,137,0.763,140,1.4,152,1.572,251,3.01,253,2.247,342,1.702,345,1.4,411,1.245,413,2.174,425,1.527,443,1.484,456,4.082,517,1.753,588,2.04,937,2.581,942,2.581,2114,4.818,2968,5.697,2969,7.932,2970,7.932,2971,5.697,2972,5.697,2973,4.995,2974,5.697,2975,7.601,2976,5.697,2977,5.697,2978,5.697,2979,5.697,2980,5.697,2981,5.697,2982,5.697,2983,5.697]],["title/dependencies.html",[2875,3.806,2984,3.168]],["body/dependencies.html",[12,0.011,75,0.009,76,0.009,91,0.808,113,4.29,114,2.97,115,1.425,120,4.29,350,3.395,351,2.853,511,3.613,512,3.098,515,2.38,727,3.239,730,3.395,747,4.644,859,3.395,917,3.773,918,3.239,959,4.008,1454,4.29,1788,4.644,1791,5.117,1972,4.29,2392,4.644,2544,5.117,2683,5.117,2875,4.29,2985,5.836,2986,7.119,2987,8.446,2988,5.836,2989,5.836,2990,5.836,2991,6.242,2992,7.119,2993,5.836,2994,5.836,2995,5.836,2996,5.836,2997,5.836,2998,5.836,2999,5.836,3000,5.836,3001,5.836,3002,5.836,3003,5.836,3004,5.836]],["title/miscellaneous/enumerations.html",[3005,2.102,3006,4.539]],["body/miscellaneous/enumerations.html",[6,3.72,7,0.282,12,0.011,37,4.107,38,3.952,40,3.952,41,2.878,42,3.952,43,3.451,44,3.952,45,3.917,46,3.952,47,3.72,48,3.952,49,3.72,50,3.952,51,3.952,52,3.952,53,3.952,54,3.952,55,3.521,56,3.952,57,3.952,58,3.952,59,3.194,60,3.952,61,3.72,62,3.952,63,3.72,64,3.952,65,3.952,66,3.952,67,3.952,68,3.952,69,3.952,70,4.32,71,3.952,72,3.952,73,3.952,74,3.952,75,0.009,76,0.009,463,2.285,3005,3.348,3006,5.045,3007,6.189]],["title/miscellaneous/functions.html",[3005,2.102,3008,4.539]],["body/miscellaneous/functions.html",[5,0.269,7,0.189,10,1.527,11,0.675,12,0.011,19,1.111,21,0.887,22,2.746,75,0.007,76,0.007,80,1.601,320,3.781,326,1.959,330,1.959,351,3.062,443,1.801,447,2.541,448,1.697,463,1.619,656,1.469,669,4.159,714,4.049,719,3.005,854,2.554,910,3.313,911,2.756,912,3.062,913,4.604,914,2.488,915,5.408,936,2.68,948,3.062,964,3.062,1062,2.239,1209,2.488,1338,2.355,1447,4.747,1449,3.374,1515,3.313,1696,2.643,1697,3.374,1698,3.062,1743,3.374,1872,3.374,1920,3.374,1979,4.747,2045,3.374,2114,2.643,2245,3.374,2246,4.747,2247,3.062,2300,4.308,2665,3.374,3005,2.239,3008,3.374,3009,6.263,3010,6.944,3011,6.263,3012,6.263,3013,6.263,3014,6.263,3015,3.848,3016,3.848,3017,5.414,3018,5.414,3019,5.414,3020,3.848,3021,5.492,3022,3.374,3023,5.414,3024,5.414,3025,5.414,3026,5.492,3027,5.414,3028,5.414,3029,5.414,3030,5.414,3031,5.414,3032,3.848,3033,5.492,3034,5.414,3035,6.263,3036,5.414,3037,6.263,3038,6.263,3039,6.263,3040,5.414,3041,6.263,3042,5.414,3043,6.263,3044,5.414,3045,5.492,3046,5.414,3047,5.414,3048,5.492,3049,3.374,3050,3.374,3051,3.848,3052,3.848,3053,3.848,3054,3.848,3055,3.848,3056,3.848,3057,3.848,3058,3.848,3059,3.848,3060,3.848,3061,5.414,3062,3.848,3063,5.414,3064,3.848,3065,3.848,3066,3.848,3067,3.848]],["title/index.html",[7,0.212,3068,4.31]],["body/index.html",[5,0.233,12,0.011,59,3.035,75,0.009,76,0.009,77,2.021,115,1.909,168,2.23,183,4.02,196,2.23,351,2.674,378,2.45,389,2.021,404,2.021,516,5.028,520,5.028,574,3.347,575,4.352,623,3.756,727,3.035,752,4.697,786,3.756,859,3.182,870,2.784,993,4.352,1110,4.697,1250,4.795,1301,4.02,1443,4.352,1477,4.352,1730,4.795,1784,4.795,1788,4.352,1827,4.352,1835,5.997,1841,4.795,1972,4.02,1982,4.352,2875,4.02,2973,4.795,3069,5.997,3070,4.795,3071,5.469,3072,5.469,3073,5.469,3074,5.469,3075,5.469,3076,5.469,3077,5.469,3078,6.839,3079,6.839,3080,5.469,3081,5.469,3082,5.469,3083,5.469,3084,5.469,3085,5.469,3086,5.469,3087,5.469,3088,5.469,3089,5.469,3090,5.469,3091,5.469,3092,5.469,3093,5.469,3094,5.469,3095,5.469,3096,5.469,3097,5.469,3098,5.469,3099,5.469,3100,5.469,3101,5.469,3102,6.839,3103,3.756,3104,5.469,3105,7.463,3106,5.469,3107,6.839,3108,5.469,3109,5.469,3110,5.469]],["title/license.html",[3111,4.659]],["body/license.html",[10,0.87,12,0.005,29,3.541,61,1.783,75,0.005,76,0.005,86,1.464,144,1.404,171,2.194,195,1.783,196,1.124,207,4.2,220,3.37,228,2.194,231,2.194,345,0.55,373,1.517,417,3.114,456,1.604,514,3.37,538,1.894,562,2.194,679,2.418,686,2.418,873,1.894,899,2.909,957,4.968,968,2.194,1024,2.418,1035,4.253,1039,3.714,1045,2.194,1059,2.194,1169,2.194,1327,4.589,1344,2.027,1395,1.053,1477,2.194,1511,1.688,1695,6.017,2021,2.418,2024,3.714,2237,2.464,2424,3.714,2614,2.418,2692,2.027,2935,2.418,2991,2.418,3111,5.244,3112,6.862,3113,7.082,3114,6.243,3115,6.017,3116,2.418,3117,2.757,3118,2.757,3119,7.082,3120,2.757,3121,2.418,3122,2.757,3123,4.235,3124,2.757,3125,2.757,3126,2.757,3127,2.757,3128,5.156,3129,2.757,3130,5.156,3131,5.156,3132,2.757,3133,5.786,3134,2.757,3135,5.156,3136,2.757,3137,2.757,3138,2.757,3139,2.757,3140,7.082,3141,2.757,3142,2.757,3143,4.235,3144,4.235,3145,2.757,3146,4.235,3147,7.543,3148,7.543,3149,8.259,3150,4.235,3151,4.235,3152,2.757,3153,2.757,3154,2.757,3155,4.235,3156,8.382,3157,2.757,3158,5.156,3159,4.235,3160,2.757,3161,4.235,3162,2.757,3163,4.235,3164,2.757,3165,5.156,3166,2.757,3167,4.235,3168,4.235,3169,5.786,3170,2.757,3171,2.757,3172,2.757,3173,5.786,3174,4.235,3175,2.757,3176,2.757,3177,2.757,3178,4.235,3179,2.757,3180,2.757,3181,2.757,3182,2.757,3183,5.156,3184,6.243,3185,7.263,3186,6.243,3187,5.156,3188,2.757,3189,2.757,3190,2.757,3191,4.235,3192,2.757,3193,4.235,3194,2.418,3195,2.757,3196,2.757,3197,5.156,3198,2.757,3199,2.757,3200,2.757,3201,2.757,3202,1.894,3203,2.757,3204,2.757,3205,4.235,3206,2.757,3207,7.543,3208,6.243,3209,2.757,3210,2.757,3211,2.757,3212,4.235,3213,6.862,3214,2.757,3215,2.757,3216,2.757,3217,2.757,3218,2.757,3219,2.757,3220,2.757,3221,2.757,3222,2.757,3223,2.757,3224,2.757,3225,2.757,3226,2.757,3227,2.757,3228,5.786,3229,2.757,3230,2.757,3231,2.757,3232,2.757,3233,5.156,3234,2.757,3235,2.757,3236,2.757,3237,4.235,3238,2.757,3239,2.757,3240,5.156,3241,4.235,3242,2.757,3243,2.757,3244,2.757,3245,2.757,3246,4.235,3247,2.757,3248,2.757,3249,2.757,3250,2.757,3251,2.757,3252,6.243,3253,2.757,3254,2.757,3255,2.757,3256,2.757,3257,2.757,3258,2.757,3259,2.757,3260,2.757,3261,2.757,3262,4.235,3263,2.757,3264,5.156,3265,2.757,3266,2.757,3267,2.757,3268,2.757,3269,2.757,3270,2.757,3271,6.862,3272,5.156,3273,2.757,3274,6.862,3275,4.235,3276,4.235,3277,2.757,3278,5.156,3279,2.757,3280,4.235,3281,2.757,3282,2.757,3283,2.757,3284,2.757,3285,2.757,3286,6.59,3287,4.235,3288,5.156,3289,4.235,3290,2.757,3291,2.757,3292,6.243,3293,4.235,3294,4.235,3295,5.156,3296,4.235,3297,4.235,3298,4.235,3299,4.235,3300,4.235,3301,2.757,3302,2.757,3303,2.757,3304,2.757,3305,2.757,3306,2.757,3307,5.786,3308,2.757,3309,2.757,3310,2.757,3311,2.757,3312,2.757,3313,2.757,3314,2.757,3315,2.757,3316,2.757,3317,5.786,3318,5.156,3319,4.235,3320,5.156,3321,4.235,3322,4.235,3323,4.235,3324,2.757,3325,2.757,3326,2.757,3327,2.757,3328,4.235,3329,2.757,3330,5.786,3331,2.757,3332,2.757,3333,2.757,3334,2.757,3335,4.235,3336,2.757,3337,2.757,3338,2.757,3339,2.757,3340,2.757,3341,2.757,3342,2.757,3343,2.757,3344,2.757,3345,4.235,3346,2.757,3347,2.757,3348,2.757,3349,2.757,3350,2.757,3351,2.757,3352,2.757,3353,2.757,3354,2.757,3355,2.757,3356,2.757,3357,2.757,3358,2.757,3359,2.757,3360,2.757,3361,2.757,3362,2.757,3363,2.757,3364,4.235,3365,2.757,3366,2.757,3367,2.757,3368,2.757,3369,2.757,3370,2.757,3371,2.757,3372,2.757,3373,4.235,3374,2.757,3375,2.757,3376,2.757,3377,2.757,3378,2.757,3379,2.757,3380,2.757,3381,2.757,3382,2.757,3383,2.757,3384,2.757,3385,2.757,3386,2.757]],["title/modules.html",[3387,5.134]],["body/modules.html",[12,0.01,75,0.01,76,0.01,3387,6.052]],["title/overview.html",[3388,5.134]],["body/overview.html",[2,1.457,12,0.01,39,1.887,41,3.149,45,3.715,75,0.01,76,0.01,137,0.897,333,2.186,373,2.397,413,2.555,653,4.92,3388,5.869,3389,6.693,3390,6.693,3391,6.693]],["title/properties.html",[8,0.522,2984,3.168]],["body/properties.html",[8,0.665,12,0.011,75,0.01,76,0.01,389,2.434,520,4.841,1325,4.523,2692,4.841,3069,5.775,3070,5.775,3111,5.24,3115,5.775,3116,5.775,3392,6.585,3393,6.585,3394,6.585,3395,6.585,3396,6.585,3397,6.585]],["title/routes.html",[3398,4.659]],["body/routes.html",[12,0.01,75,0.01,76,0.01,3398,5.492]],["title/todo.html",[551,3.584]],["body/todo.html",[12,0.01,75,0.01,76,0.01]],["title/miscellaneous/typealiases.html",[3005,2.102,3399,5.177]],["body/miscellaneous/typealiases.html",[6,3.668,7,0.278,11,0.467,12,0.011,14,4.524,23,4.524,30,3.897,31,3.668,32,4.524,33,3.668,34,3.473,35,3.473,75,0.009,76,0.009,287,3.149,288,3.421,292,3.012,293,2.888,294,3.012,295,3.012,296,3.012,297,2.888,298,3.012,299,3.012,300,3.012,320,3.562,324,3.291,326,2.888,327,3.421,328,3.421,330,2.888,331,3.421,414,4.975,418,6.136,451,4.283,721,3.668,739,4.524,740,3.302,854,2.314,947,3.473,1509,3.668,1510,4.524,1519,3.473,1520,3.473,1522,4.524,3005,3.302,3007,6.653,3400,5.674,3401,5.674,3402,7.588,3403,6.136,3404,5.674,3405,5.674,3406,5.674]],["title/miscellaneous/variables.html",[820,3.806,3005,2.102]],["body/miscellaneous/variables.html",[7,0.131,10,1.614,11,0.706,12,0.011,18,1.74,19,0.938,21,1.911,39,0.751,45,1.478,75,0.005,76,0.005,77,1.524,80,1.26,148,0.597,168,1.681,179,3.281,180,4.889,196,2.057,288,2.016,305,2.098,306,2.098,307,2.098,309,2.098,311,1.802,312,1.802,313,2.098,315,2.098,316,1.414,321,2.189,322,1.302,324,1.252,325,2.189,329,2.098,378,0.954,389,1.524,463,2.143,464,1.829,465,3.307,485,1.722,486,1.722,487,1.722,488,1.722,489,1.722,490,1.478,491,1.722,492,1.722,493,1.722,494,1.722,513,2.523,556,3.615,574,1.63,656,2.48,669,1.63,676,3.615,677,3.615,714,3.972,721,1.722,730,2.935,750,4.176,751,4.176,820,1.958,868,1.414,873,1.829,910,1.63,911,1.355,914,2.665,916,1.722,918,2.288,920,2.523,923,1.549,1062,1.549,1063,4.423,1064,2.335,1065,2.335,1066,2.335,1067,3.615,1068,2.335,1069,2.335,1070,2.335,1071,2.335,1072,2.335,1073,2.335,1074,2.335,1075,3.615,1076,2.335,1077,2.335,1078,2.335,1079,2.335,1080,2.335,1081,2.335,1152,2.119,1209,1.722,1338,1.63,1462,2.119,1659,1.549,1666,2.119,1696,1.829,1828,3.615,1982,2.119,2023,2.335,2114,1.829,2417,2.335,2460,3.615,2525,2.335,2692,1.958,2836,2.335,2854,3.615,2855,3.615,2924,3.615,3005,1.549,3010,7.294,3021,2.335,3022,3.615,3026,2.335,3033,2.335,3045,2.335,3048,2.335,3049,2.335,3050,4.423,3121,5.942,3194,3.615,3398,3.281,3403,2.335,3407,4.123,3408,2.663,3409,4.123,3410,4.123,3411,4.123,3412,4.123,3413,4.123,3414,4.123,3415,2.663,3416,4.123,3417,5.68,3418,2.663,3419,2.663,3420,4.123,3421,5.045,3422,4.123,3423,4.123,3424,4.123,3425,2.663,3426,4.123,3427,6.498,3428,4.123,3429,4.123,3430,5.045,3431,4.123,3432,4.123,3433,4.123,3434,4.123,3435,4.123,3436,4.123,3437,4.123,3438,2.663,3439,4.123,3440,2.663,3441,2.663,3442,2.663,3443,2.663,3444,2.663,3445,2.663,3446,2.663,3447,2.663,3448,2.663,3449,2.663,3450,2.663,3451,2.663,3452,2.663,3453,2.663,3454,2.663,3455,2.663,3456,2.663,3457,2.663,3458,2.663,3459,2.663,3460,2.663,3461,2.663,3462,2.663,3463,2.663,3464,6.144,3465,2.663,3466,2.663,3467,2.663,3468,2.663,3469,2.663,3470,2.663,3471,2.663,3472,2.663,3473,2.663,3474,2.663,3475,2.663,3476,2.663,3477,2.663,3478,2.663,3479,4.123,3480,6.777,3481,4.123,3482,4.123,3483,2.663,3484,2.663,3485,2.663,3486,2.663,3487,2.663,3488,2.663,3489,2.663,3490,2.663,3491,2.663,3492,2.663,3493,2.663,3494,2.663,3495,2.663,3496,2.663,3497,2.663,3498,2.663,3499,2.663,3500,2.663,3501,2.663,3502,2.663,3503,2.663,3504,2.663,3505,2.663,3506,2.663,3507,2.663,3508,6.498,3509,4.123,3510,2.663,3511,5.68,3512,2.663,3513,2.663,3514,2.663,3515,2.663,3516,2.663,3517,2.663]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.075,333,0.717,382,0.837,1089,1.506,2427,1.342,3202,1.506,3518,1.613]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.26,12,0.01,75,0.01,76,0.01,333,2.496,382,2.916,553,4.513,1089,5.247,1659,3.823,2427,4.676,3103,4.513,3519,5.617,3520,4.83,3521,5.617,3522,5.617,3523,4.83,3524,4.83]],["title/additional-documentation/ui-components-slide-panel.html",[333,0.795,399,0.928,2427,1.489,2578,1.788,3202,1.671,3518,1.788]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.01,75,0.01,76,0.01,333,2.503,399,2.924,553,4.533,1659,3.841,2427,4.689,2578,5.632,3103,4.533,3519,5.632,3520,4.853,3521,5.632,3522,5.632,3523,4.853,3524,4.853]],["title/additional-documentation/ui-components-dialogs.html",[333,0.892,2427,1.671,3202,1.875,3518,2.007,3525,2.394]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,333,2.509,553,4.554,1659,3.858,2427,4.701,3103,4.554,3519,5.647,3520,4.875,3521,5.647,3522,5.647,3523,4.875,3524,4.875,3525,6.735]],["title/additional-documentation/helpers.html",[3202,2.481,3518,2.656,3526,3.168]],["body/additional-documentation/helpers.html",[12,0.01,75,0.01,76,0.01,553,4.472,1659,3.788,2250,5.709,3103,4.472,3519,5.917,3520,5.587,3521,5.587,3522,5.587,3523,5.587,3524,5.587,3526,7.058,3527,7.6,3528,6.511,3529,8.049]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0.05",{"_index":770,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.07",{"_index":1233,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.1",{"_index":772,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.15",{"_index":767,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.18",{"_index":775,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.2",{"_index":765,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/PlayerToolbarComponent.html":{},"injectables/ThemeService.html":{}}}],["0.21",{"_index":777,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.24",{"_index":779,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.25",{"_index":763,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["0.25.1",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["0.27",{"_index":781,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.3",{"_index":761,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.35",{"_index":759,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.45",{"_index":757,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.5",{"_index":506,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.55",{"_index":756,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["0.7",{"_index":2791,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":1896,"title":{},"body":{"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)).then((entry",{"_index":930,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["1)?.['#text",{"_index":1569,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["1.0",{"_index":3116,"title":{},"body":{"license.html":{},"properties.html":{}}}],["1.0.0",{"_index":1984,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["100",{"_index":782,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":490,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["1000}k",{"_index":1050,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["1024",{"_index":297,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"injectables/MetadataService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.9.0",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.1",{"_index":2997,"title":{},"body":{"dependencies.html":{}}}],["125",{"_index":487,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["128",{"_index":294,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["12px",{"_index":1056,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["140",{"_index":2412,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["150",{"_index":847,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["16",{"_index":1262,"title":{},"body":{"injectables/GamepadService.html":{}}}],["16384",{"_index":3405,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["16_000",{"_index":494,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":301,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["17",{"_index":3389,"title":{},"body":{"overview.html":{}}}],["18",{"_index":3390,"title":{},"body":{"overview.html":{}}}],["199",{"_index":1193,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":3259,"title":{},"body":{"license.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/enumerations.html":{}}}],["2.8.1",{"_index":3004,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":758,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{}}}],["20.0.0",{"_index":2999,"title":{},"body":{"dependencies.html":{}}}],["20.2.4",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["20.3.1",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["20.3.44",{"_index":3392,"title":{},"body":{"properties.html":{}}}],["200",{"_index":848,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["2000",{"_index":491,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["2048",{"_index":298,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["20rem",{"_index":2593,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21.0.0",{"_index":2998,"title":{},"body":{"dependencies.html":{}}}],["220",{"_index":2807,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["24",{"_index":1033,"title":{},"body":{"components/EqualizerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["25",{"_index":760,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["250",{"_index":488,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["255",{"_index":1201,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":295,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.4",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":762,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["300",{"_index":1231,"title":{},"body":{"injectables/GamepadService.html":{}}}],["30_000",{"_index":1452,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["31",{"_index":485,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["32",{"_index":292,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["32768",{"_index":3406,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":302,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["35",{"_index":764,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["360px",{"_index":1393,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["37",{"_index":3391,"title":{},"body":{"overview.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1527,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3db",{"_index":1017,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":3248,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":3000,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":2993,"title":{},"body":{"dependencies.html":{}}}],["4.12.0",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":766,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["4000",{"_index":492,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["4096",{"_index":299,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["424242",{"_index":2854,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["440hz",{"_index":709,"title":{},"body":{"interfaces/Chainable.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/EqualizerComponent.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":768,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":489,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":239,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["512",{"_index":296,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":2190,"title":{},"body":{"injectables/PlayerService.html":{}}}],["5sec.mp3",{"_index":710,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["60",{"_index":769,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{}}}],["60fps",{"_index":2929,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["63",{"_index":486,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["64",{"_index":293,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["6px",{"_index":1189,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["7.8.2",{"_index":3001,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":771,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["72",{"_index":2459,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["73",{"_index":2784,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/MetadataService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["80",{"_index":773,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["800",{"_index":3469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8000",{"_index":493,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["8192",{"_index":300,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["8mb",{"_index":1887,"title":{},"body":{"injectables/MetadataService.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["90",{"_index":774,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["95",{"_index":776,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["96/9/ec",{"_index":3254,"title":{},"body":{"license.html":{}}}],["98",{"_index":778,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["99",{"_index":780,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["_audiocontext",{"_index":524,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audioelement",{"_index":522,"title":{},"body":{"injectables/AudioService.html":{}}}],["_audiosourcenode",{"_index":526,"title":{},"body":{"injectables/AudioService.html":{}}}],["_connectedanalyzers",{"_index":533,"title":{},"body":{"injectables/AudioService.html":{}}}],["_eqgainnode",{"_index":530,"title":{},"body":{"injectables/AudioService.html":{}}}],["_frequencyfilters",{"_index":531,"title":{},"body":{"injectables/AudioService.html":{}}}],["_gainnode",{"_index":528,"title":{},"body":{"injectables/AudioService.html":{}}}],["_hasended",{"_index":536,"title":{},"body":{"injectables/AudioService.html":{}}}],["_internalanalyzer",{"_index":2857,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":1348,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a.album",{"_index":205,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.artist",{"_index":202,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.localecompare(b",{"_index":172,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":191,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.title",{"_index":224,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.track",{"_index":209,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["abandoned",{"_index":3352,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":3284,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2504,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["above",{"_index":3470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":3364,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2481,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["abstract",{"_index":1204,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":1304,"title":{},"body":{"injectables/GamepadService.html":{}}}],["accent",{"_index":829,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":791,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":795,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["accepts",{"_index":956,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":1172,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["accessors",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":3326,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":3367,"title":{},"body":{"license.html":{}}}],["achse",{"_index":1269,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":3383,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["action(details",{"_index":1734,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["activatewakelock",{"_index":2969,"title":{},"body":{"injectables/WakelockService.html":{}}}],["active",{"_index":2155,"title":{},"body":{"injectables/PlayerService.html":{}}}],["activeaxescaches",{"_index":1236,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["adapt",{"_index":3224,"title":{},"body":{"license.html":{}}}],["add",{"_index":595,"title":{},"body":{"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{}}}],["addalbumtoplaylist",{"_index":1599,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addalbumtoplaylist(album",{"_index":262,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addartisttoplaylist",{"_index":1600,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addartisttoplaylist(artist",{"_index":257,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addeventlistener('gamepadconnected",{"_index":1242,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":1245,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestolibrary",{"_index":1751,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(...filedatas",{"_index":1798,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestolibrary(filedatas",{"_index":1755,"title":{},"body":{"injectables/MetadataService.html":{}}}],["addfilestoplaylist",{"_index":2051,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...filedatas",{"_index":2211,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(filedatas",{"_index":2066,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":3327,"title":{},"body":{"license.html":{}}}],["additional",{"_index":3202,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["addtrackstoplaylist",{"_index":1601,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addtrackstoplaylist(...dbtracks",{"_index":273,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addtracktoplaylist",{"_index":1602,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["addtracktoplaylist(song",{"_index":2068,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addtracktoplaylist(track",{"_index":271,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["adjust",{"_index":3081,"title":{},"body":{"index.html":{}}}],["advertising",{"_index":3299,"title":{},"body":{"license.html":{}}}],["affected",{"_index":3328,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":3207,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":3286,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3342,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":2176,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":2174,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":1088,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["against",{"_index":3242,"title":{},"body":{"license.html":{}}}],["aiff",{"_index":1067,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":77,"title":{"interfaces/Album.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["album.coverurl",{"_index":1632,"title":{},"body":{"components/LibraryComponent.html":{}}}],["album.name",{"_index":264,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["album.year",{"_index":1633,"title":{},"body":{"components/LibraryComponent.html":{}}}],["albumcompare",{"_index":204,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap",{"_index":182,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.has(albumname",{"_index":186,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.set(albumname",{"_index":187,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.values()].sort((a",{"_index":190,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumname",{"_index":184,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albums",{"_index":181,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumtracks",{"_index":268,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["aliases",{"_index":3400,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1194,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allowed_extensions",{"_index":1075,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":920,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":952,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1589,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":2517,"title":{},"body":{"components/ShellComponent.html":{}}}],["allowedtypes",{"_index":1096,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":313,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["amended",{"_index":3265,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analyserconfig",{"_index":286,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":321,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analyservalue",{"_index":2901,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyzer",{"_index":2954,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["and/or",{"_index":3158,"title":{},"body":{"license.html":{}}}],["angular/cdk",{"_index":2985,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2540,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":111,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":2392,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1514,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{}}}],["angular/compiler",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":91,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":2119,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":120,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":107,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1960,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2660,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2797,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":1330,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":2393,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":105,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":126,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["angular/material/list",{"_index":96,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":101,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/material/progress",{"_index":128,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2798,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2542,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1957,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":988,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":2040,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":2039,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":2544,"title":{},"body":{"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2683,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angulartitleservice",{"_index":2671,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2859,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["any).getasfilesystemhandle().then((handle",{"_index":1154,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["api",{"_index":959,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["api_key",{"_index":1549,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":1528,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["apis",{"_index":3073,"title":{},"body":{"index.html":{}}}],["app",{"_index":623,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"index.html":{}}}],["app.component.html",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":332,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":3407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontactinfo",{"_index":1985,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["applicable",{"_index":3271,"title":{},"body":{"license.html":{}}}],["application",{"_index":2613,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["applicationconfig",{"_index":3444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":1024,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["apply",{"_index":1039,"title":{},"body":{"components/EqualizerComponent.html":{},"license.html":{}}}],["appname",{"_index":1981,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["apps",{"_index":3082,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":3408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":3430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":3438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":3401,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../default",{"_index":3420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":3418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":3419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":3022,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":3027,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":3007,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":3034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../idexed",{"_index":3415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../lastfm",{"_index":3404,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":3040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":3015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":3019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":3020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":3030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":3427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":3032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":3403,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../settings.po.ts",{"_index":3425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":3422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":3402,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":3010,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":3044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":3499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":672,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":674,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":3491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":3487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:18",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":3443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":3507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/idexed",{"_index":3475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":414,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:135",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:142",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:150",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:157",{"_index":469,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:163",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:171",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:177",{"_index":478,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:185",{"_index":474,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:190",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:198",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:202",{"_index":472,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:212",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:216",{"_index":477,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:224",{"_index":467,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:24",{"_index":497,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:25",{"_index":501,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":500,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":502,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":498,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":482,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":483,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":507,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":480,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":504,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":495,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:42",{"_index":509,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:44",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":666,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":654,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:9",{"_index":659,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":972,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14",{"_index":984,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18",{"_index":979,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:29",{"_index":981,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:34",{"_index":982,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":910,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":78,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:102",{"_index":1625,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:141",{"_index":1610,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:170",{"_index":1617,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:176",{"_index":1616,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:181",{"_index":1618,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:187",{"_index":1615,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:195",{"_index":1612,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:204",{"_index":1611,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:221",{"_index":1614,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:230",{"_index":1613,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:247",{"_index":1620,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:251",{"_index":1619,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:255",{"_index":1621,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:50",{"_index":1622,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:52",{"_index":1623,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:68",{"_index":1624,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:71",{"_index":1627,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:79",{"_index":1626,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts",{"_index":1640,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:14",{"_index":1645,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:15",{"_index":1644,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/library/library.service.ts:17",{"_index":1643,"title":{},"body":{"injectables/LibraryService.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":854,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player",{"_index":2256,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":2031,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":2045,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:136",{"_index":2071,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:141",{"_index":2069,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:147",{"_index":2080,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:162",{"_index":2067,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:168",{"_index":2091,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:174",{"_index":2089,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:178",{"_index":2075,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:190",{"_index":2073,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:206",{"_index":2092,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:215",{"_index":2072,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:236",{"_index":2078,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:24",{"_index":2100,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:254",{"_index":2077,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:26",{"_index":2110,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:263",{"_index":2086,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:28",{"_index":2099,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:281",{"_index":2087,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:298",{"_index":2082,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:30",{"_index":2109,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:302",{"_index":2085,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":2112,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:316",{"_index":2093,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:33",{"_index":2098,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:335",{"_index":2094,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:40",{"_index":2107,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:44",{"_index":2105,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:50",{"_index":2065,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":721,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":2370,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:142",{"_index":2381,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:150",{"_index":2383,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:156",{"_index":2388,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:161",{"_index":2389,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:165",{"_index":2386,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:42",{"_index":2390,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:48",{"_index":2379,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2662,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:9",{"_index":2664,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2717,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2749,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2743,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2747,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2745,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2753,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2751,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2794,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2761,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2776,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2792,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2785,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2759,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2763,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2778,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2772,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2780,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2770,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2782,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2739,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2789,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2775,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2768,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2787,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2757,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2755,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2741,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2836,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:103",{"_index":2848,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:124",{"_index":2850,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:13",{"_index":2844,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2842,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2845,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:186",{"_index":2846,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2843,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2841,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:31",{"_index":2840,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:91",{"_index":2852,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2958,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2963,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2961,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":287,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":3049,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":3064,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":1210,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":1228,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":1221,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":1225,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":1218,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":1216,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1401,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":3066,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":1323,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:103",{"_index":1440,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:37",{"_index":1436,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:47",{"_index":1438,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:84",{"_index":1441,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:95",{"_index":1437,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:99",{"_index":1439,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1668,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1674,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1685,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1689,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1688,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1690,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1697,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2666,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2670,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2669,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":3067,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2968,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:26",{"_index":2972,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:9",{"_index":2971,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1935,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2505,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2635,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2654,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2510,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:42",{"_index":2537,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:43",{"_index":2534,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:44",{"_index":2536,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:45",{"_index":2535,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:47",{"_index":2530,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:56",{"_index":2533,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:60",{"_index":2524,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:65",{"_index":2529,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:69",{"_index":2527,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":3486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":742,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:41",{"_index":2651,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:43",{"_index":2652,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:45",{"_index":2650,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:47",{"_index":2653,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:48",{"_index":2644,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:70",{"_index":2645,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:75",{"_index":2648,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:79",{"_index":2647,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:84",{"_index":2649,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:88",{"_index":2646,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":2639,"title":{},"body":{"interfaces/ThemeColor.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2675,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2678,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:45",{"_index":2680,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:52",{"_index":2679,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":3484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":3485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appversion",{"_index":1983,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["arguments_",{"_index":2663,"title":{},"body":{"pipes/TimePipe.html":{}}}],["arial",{"_index":1057,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["arising",{"_index":3253,"title":{},"body":{"license.html":{}}}],["array",{"_index":736,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["array.from(droppedfiles",{"_index":1178,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["array.from(event.datatransfer.items",{"_index":1153,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["art",{"_index":1835,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["artist",{"_index":168,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist:${escapelucenequerystring(artist",{"_index":1992,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["artistcompare",{"_index":201,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artists",{"_index":199,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artwork",{"_index":2185,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2676,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":3344,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1796,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":3287,"title":{},"body":{"license.html":{}}}],["associating",{"_index":3206,"title":{},"body":{"license.html":{}}}],["async",{"_index":251,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["asyncgenerator",{"_index":1758,"title":{},"body":{"injectables/MetadataService.html":{}}}],["atrack",{"_index":208,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["attorney",{"_index":3124,"title":{},"body":{"license.html":{}}}],["audio",{"_index":520,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{},"index.html":{},"properties.html":{}}}],["audio.service",{"_index":987,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":1071,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":1064,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":1073,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":1065,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":1068,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":1074,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":1070,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":1069,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":1072,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/x",{"_index":1066,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":525,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.creategain",{"_index":563,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":561,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement",{"_index":539,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.autoplay",{"_index":545,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.controls",{"_index":546,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.id",{"_index":541,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.loop",{"_index":540,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.preload",{"_index":549,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.style.display",{"_index":543,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioelement.volume",{"_index":547,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioservice",{"_index":412,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audioservice.isplaying",{"_index":2362,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":560,"title":{},"body":{"injectables/AudioService.html":{}}}],["audiosource.connect(eqgain",{"_index":569,"title":{},"body":{"injectables/AudioService.html":{}}}],["author",{"_index":3396,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":3231,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":3157,"title":{},"body":{"license.html":{}}}],["auto",{"_index":550,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["autoincrement",{"_index":3481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":228,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["automatische",{"_index":797,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["autoscroll",{"_index":2416,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":195,"title":{},"body":{"interfaces/Album.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2940,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2934,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2941,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avoid",{"_index":1471,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["await",{"_index":253,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":2454,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis.valueof",{"_index":1311,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":1316,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":1315,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":1211,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":1314,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":1317,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":1219,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":171,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["b.track",{"_index":214,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["back",{"_index":222,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{}}}],["background",{"_index":1199,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["backgroundcolor",{"_index":877,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["band",{"_index":516,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"index.html":{}}}],["bandfrequency",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":646,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains[bandfrequency",{"_index":648,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandpipe",{"_index":652,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{}}}],["bands",{"_index":976,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bar",{"_index":2553,"title":{},"body":{"components/ShellComponent.html":{}}}],["barcount",{"_index":304,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["barkscalebandenergy",{"_index":3409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":327,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2722,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":326,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":3410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":708,"title":{},"body":{"interfaces/Chainable.html":{}}}],["basecolor",{"_index":836,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["basecolor.darken(variant.darkenfactor",{"_index":842,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["basecolor.lighten(variant.lightenfactor",{"_index":840,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["based",{"_index":231,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["basegain",{"_index":415,"title":{},"body":{"injectables/AudioService.html":{}}}],["basevisualizeroptions",{"_index":323,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":3129,"title":{},"body":{"license.html":{}}}],["bcbcbc",{"_index":2855,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["behavior",{"_index":2446,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["bei",{"_index":799,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["below",{"_index":3150,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":3301,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":2142,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":1286,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["bessere",{"_index":1651,"title":{},"body":{"injectables/LibraryService.html":{}}}],["better",{"_index":2923,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["biquadfilternode",{"_index":532,"title":{},"body":{"injectables/AudioService.html":{}}}],["bitrate",{"_index":668,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["bitrate.pipe",{"_index":887,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":665,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1870,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1831,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1848,"title":{},"body":{"injectables/MetadataService.html":{}}}],["bold",{"_index":1055,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2609,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["border",{"_index":1188,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["both",{"_index":216,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["bottom",{"_index":2403,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":1186,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["break",{"_index":2239,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2538,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2539,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2560,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2559,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2558,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2561,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["btrack",{"_index":213,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["buffer",{"_index":2920,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffer.buffer",{"_index":2947,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":325,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2925,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2922,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2919,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["build",{"_index":3175,"title":{},"body":{"license.html":{}}}],["buildapiurl(method",{"_index":1543,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["button",{"_index":1284,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.pressed",{"_index":1297,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":1299,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":1237,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":1302,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":1307,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":1222,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2499,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2588,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":3372,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1301,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":1309,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":1303,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":1308,"title":{},"body":{"injectables/GamepadService.html":{}}}],["calculate",{"_index":2443,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["call",{"_index":619,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":1324,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["called",{"_index":1694,"title":{},"body":{"injectables/LoaderService.html":{}}}],["caller",{"_index":1663,"title":{},"body":{"injectables/LibraryService.html":{}}}],["cancel",{"_index":2494,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2950,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":3310,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":315,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["canvas.getcontext('2d",{"_index":1003,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.height",{"_index":1007,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvas.width",{"_index":1005,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvasgradient",{"_index":3441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":3411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasref",{"_index":989,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["canvaswidth",{"_index":3412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2834,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":307,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":305,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":3413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":3489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2237,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":3456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1498,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":942,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":3288,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":3115,"title":{},"body":{"license.html":{},"properties.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":108,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":109,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":110,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["center",{"_index":1196,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":3160,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2014,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["chainable",{"_index":671,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2420,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["changedarkmode",{"_index":2656,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2657,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changes",{"_index":992,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{}}}],["check",{"_index":955,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":1294,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":1234,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":711,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlaylistComponent.html":{}}}],["child(${link",{"_index":3502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chrome",{"_index":3077,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":1901,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunk.length",{"_index":1914,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks",{"_index":1910,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks.push(new",{"_index":1884,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunks.reduce((sum",{"_index":1912,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize",{"_index":1906,"title":{},"body":{"injectables/MetadataService.html":{}}}],["chunksize).arraybuffer",{"_index":1883,"title":{},"body":{"injectables/MetadataService.html":{}}}],["circular",{"_index":328,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":3173,"title":{},"body":{"license.html":{}}}],["class",{"_index":137,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["class.closed",{"_index":2590,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2591,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":1202,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":621,"title":{},"body":{"injectables/AudioService.html":{}}}],["clear",{"_index":1008,"title":{},"body":{"components/EqualizerComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":3374,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":1321,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":1274,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.processinginterval",{"_index":240,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["clearmetadatacache",{"_index":1941,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2636,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1482,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":3125,"title":{},"body":{"license.html":{}}}],["close",{"_index":1414,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2581,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2714,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2582,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["code",{"_index":2614,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":786,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["color.brightness",{"_index":852,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.hex",{"_index":827,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.name",{"_index":826,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color.tohex",{"_index":850,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["color_variants",{"_index":755,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":720,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2909,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2907,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2908,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colord",{"_index":747,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["colord(hex",{"_index":837,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["colorful",{"_index":3393,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":752,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"index.html":{}}}],["colors.ts",{"_index":3421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorvariant",{"_index":741,"title":{"interfaces/ColorVariant.html":{}},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["combination",{"_index":2618,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["combine",{"_index":1909,"title":{},"body":{"injectables/MetadataService.html":{}}}],["combined",{"_index":1915,"title":{},"body":{"injectables/MetadataService.html":{}}}],["combined.set(chunk",{"_index":1918,"title":{},"body":{"injectables/MetadataService.html":{}}}],["command",{"_index":697,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":684,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":680,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":3187,"title":{},"body":{"license.html":{}}}],["commons",{"_index":3113,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":3226,"title":{},"body":{"license.html":{}}}],["compare",{"_index":198,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["comparison",{"_index":223,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["compensation",{"_index":3204,"title":{},"body":{"license.html":{}}}],["competition",{"_index":3244,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2422,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["component",{"_index":84,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["component_template",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":333,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2684,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2492,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":1084,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/ShellComponent.html":{}}}],["components/slide",{"_index":2574,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":688,"title":{},"body":{"interfaces/Chainable.html":{}}}],["computecolors(hex",{"_index":835,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["computed",{"_index":85,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":3358,"title":{},"body":{"license.html":{}}}],["confer",{"_index":3145,"title":{},"body":{"license.html":{}}}],["config",{"_index":2712,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config).afterclosed",{"_index":2716,"title":{},"body":{"injectables/UpdateService.html":{}}}],["config.ts",{"_index":3416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":568,"title":{},"body":{"injectables/AudioService.html":{}}}],["connected",{"_index":1254,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":1247,"title":{},"body":{"injectables/GamepadService.html":{}}}],["consents",{"_index":3378,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":3203,"title":{},"body":{"license.html":{}}}],["console.error('error",{"_index":1657,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["console.error('file",{"_index":280,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('worker",{"_index":1495,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":589,"title":{},"body":{"injectables/AudioService.html":{}}}],["console.log('button",{"_index":1264,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":2150,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":1270,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":943,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":1268,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":1280,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":1276,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2695,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2691,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2702,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":1272,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":1252,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2869,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":1255,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1811,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1813,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":1283,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":1291,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":1535,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('file",{"_index":1170,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["console.warn('loaderservice",{"_index":1693,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('no",{"_index":2027,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":2981,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":1358,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1729,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":148,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":227,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["contains",{"_index":1902,"title":{},"body":{"injectables/MetadataService.html":{}}}],["contemplated",{"_index":3316,"title":{},"body":{"license.html":{}}}],["content",{"_index":834,"title":{},"body":{"interfaces/ColorVariant.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["context",{"_index":556,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/variables.html":{}}}],["contrary",{"_index":3346,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":3277,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":3188,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":3166,"title":{},"body":{"license.html":{}}}],["control",{"_index":2625,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["controls",{"_index":3085,"title":{},"body":{"index.html":{}}}],["converttobarkscale",{"_index":3009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":3298,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1140,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":3147,"title":{},"body":{"license.html":{}}}],["core",{"_index":519,"title":{},"body":{"injectables/AudioService.html":{}}}],["corporation",{"_index":3118,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2888,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["corresponding",{"_index":3270,"title":{},"body":{"license.html":{}}}],["council",{"_index":3257,"title":{},"body":{"license.html":{}}}],["cover",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["coverart",{"_index":1973,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["coverartarchiveapi",{"_index":1977,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":878,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":853,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":725,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":734,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":2096,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":2097,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":2005,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":2010,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images.length",{"_index":2012,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images?.length",{"_index":2007,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdata.images[0",{"_index":2013,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverdisplaycomponent",{"_index":377,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":2009,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.image",{"_index":2020,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.large",{"_index":2018,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":2019,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails['500",{"_index":2017,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["coverurl",{"_index":79,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1839,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.originalurl",{"_index":1845,"title":{},"body":{"injectables/MetadataService.html":{}}}],["create",{"_index":538,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"injectables/MusicbrainzService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":1267,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":1263,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture",{"_index":1752,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1759,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile",{"_index":1753,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(filedata",{"_index":1761,"title":{},"body":{"injectables/MetadataService.html":{}}}],["creative",{"_index":3112,"title":{},"body":{"license.html":{}}}],["creator",{"_index":3152,"title":{},"body":{"license.html":{}}}],["ctx",{"_index":1002,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.beginpath",{"_index":1046,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.clearrect(0",{"_index":1009,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.fillstyle",{"_index":1052,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(`gain",{"_index":1060,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.filltext(label",{"_index":1051,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.font",{"_index":1054,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.linewidth",{"_index":1015,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.moveto(freqpoints[0].x",{"_index":1047,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.strokestyle",{"_index":1013,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["ctx.textalign",{"_index":1058,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["cultural",{"_index":3167,"title":{},"body":{"license.html":{}}}],["culture",{"_index":3192,"title":{},"body":{"license.html":{}}}],["current",{"_index":2424,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["currentalbum",{"_index":267,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentalbum.name",{"_index":269,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["currentanalyser",{"_index":2884,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2878,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2882,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":928,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":2447,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":2201,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":2046,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2876,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2880,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":2047,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentposition",{"_index":2221,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":416,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":890,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack.metadata?.hash",{"_index":2437,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":893,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":895,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":894,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.covercolors",{"_index":906,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":902,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":901,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":900,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":898,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":903,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":892,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/ShellComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":896,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["curve",{"_index":1023,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["custom",{"_index":683,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":704,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":3493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#load_files_menu",{"_index":3494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":3505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":3497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":3498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":3495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":3506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":3488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":3492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":3501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":699,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.wait(300",{"_index":702,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":552,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":716,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":712,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":698,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":717,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":3381,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3137,"title":{},"body":{"license.html":{}}}],["dark",{"_index":821,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["dark)').matches",{"_index":788,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":851,"title":{},"body":{"interfaces/ColorVariant.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["darkenfactor",{"_index":743,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":783,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":862,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":861,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2709,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":1190,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":1395,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["data.album.image",{"_index":1555,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2503,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2502,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":1996,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["database",{"_index":3159,"title":{},"body":{"license.html":{}}}],["databaseconfig",{"_index":3414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":3261,"title":{},"body":{"license.html":{}}}],["date",{"_index":2991,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["db",{"_index":918,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dbconfig",{"_index":3476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbtrack",{"_index":274,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle",{"_index":278,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle?.getfile",{"_index":276,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtracks",{"_index":275,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dddddd",{"_index":1014,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["declare",{"_index":694,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorators",{"_index":2606,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":2267,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["decreasevolume(value",{"_index":2275,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["deemed",{"_index":3336,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":1232,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":1230,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":1343,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["defects",{"_index":3366,"title":{},"body":{"license.html":{}}}],["defined",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1433,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":2426,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dependencies",{"_index":2875,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"dependencies.html":{},"index.html":{}}}],["depicted",{"_index":3239,"title":{},"body":{"license.html":{}}}],["deps",{"_index":3465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":1212,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":1217,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":1213,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":1220,"title":{},"body":{"injectables/GamepadService.html":{}}}],["derive",{"_index":735,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["description",{"_index":1325,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"properties.html":{}}}],["deselect",{"_index":2204,"title":{},"body":{"injectables/PlayerService.html":{}}}],["desktop",{"_index":3095,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":2124,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1506,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":2113,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["details",{"_index":1707,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":2233,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":2232,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":2421,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["determine",{"_index":2445,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":3303,"title":{},"body":{"license.html":{}}}],["dialog",{"_index":1341,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":1336,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1408,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1409,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1402,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2497,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1418,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1417,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":2496,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1420,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2495,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1416,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2493,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":1347,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1391,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1398,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":3525,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["didn't",{"_index":970,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["diesen",{"_index":1352,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["directive",{"_index":373,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":958,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":2366,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["directoryhandles",{"_index":3483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirhandle",{"_index":3065,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dirhandle.values",{"_index":949,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry",{"_index":909,"title":{"interfaces/DirHandleEntry.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry).topromise",{"_index":941,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":2251,"title":{},"body":{"injectables/PlayerService.html":{}}}],["disableclose",{"_index":2713,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabletooltipinteractivity",{"_index":3471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":3347,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":3135,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2952,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["disconnectallanalyzers",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnected",{"_index":1273,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":1271,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":3370,"title":{},"body":{"license.html":{}}}],["display",{"_index":873,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":2041,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":875,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":876,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":872,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":886,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:19",{"_index":885,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":883,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":667,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:8",{"_index":670,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":871,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayfunction",{"_index":977,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":980,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":1373,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":3313,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":3250,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2444,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":3212,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3123,"title":{},"body":{"license.html":{}}}],["document",{"_index":1327,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":554,"title":{},"body":{"injectables/AudioService.html":{}}}],["document.body.append(this.fileinput",{"_index":1591,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1583,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style.csstext",{"_index":830,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2700,"title":{},"body":{"injectables/UpdateService.html":{}}}],["document.queryselector('.cdk",{"_index":2477,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dom",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":318,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["double",{"_index":954,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["download",{"_index":1971,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2889,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["dragend",{"_index":1133,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":1120,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":1125,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":1117,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":1104,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":1130,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":1119,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":1128,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":1118,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":1010,"title":{},"body":{"components/EqualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":3011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":3012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":3013,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawequalizerresponse",{"_index":978,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["drawosc",{"_index":3014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":382,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":1103,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":1121,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dual",{"_index":715,"title":{},"body":{"interfaces/Chainable.html":{}}}],["duration",{"_index":417,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":2048,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2710,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":3385,"title":{},"body":{"license.html":{}}}],["e",{"_index":1367,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2628,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":1369,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":1370,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["each",{"_index":1035,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{},"license.html":{}}}],["early",{"_index":1166,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["effect",{"_index":86,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorVariant.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":3337,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":3198,"title":{},"body":{"license.html":{}}}],["eine",{"_index":1287,"title":{},"body":{"injectables/GamepadService.html":{}}}],["elects",{"_index":3210,"title":{},"body":{"license.html":{}}}],["element",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":985,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":521,"title":{},"body":{"injectables/AudioService.html":{}}}],["elementscrolled",{"_index":2406,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2862,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2865,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embeddedpicture",{"_index":733,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["emit",{"_index":1159,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["empty",{"_index":1429,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":2400,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":2417,"title":{},"body":{"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1541,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1540,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":707,"title":{},"body":{"interfaces/Chainable.html":{}}}],["end",{"_index":1042,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["endchunk",{"_index":1904,"title":{},"body":{"injectables/MetadataService.html":{}}}],["enjoyment",{"_index":3315,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2938,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":2154,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":1515,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(largeimage",{"_index":1571,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(original",{"_index":2026,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ensurehttps(smallimage",{"_index":1570,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(thumb",{"_index":2025,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ensurehttps(url",{"_index":3055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entire",{"_index":1877,"title":{},"body":{"injectables/MetadataService.html":{}}}],["entries",{"_index":1639,"title":{},"body":{"components/LibraryComponent.html":{}}}],["entries[0].contentrect",{"_index":2899,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":931,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.getfile",{"_index":951,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":950,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":3006,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":3417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":3451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":573,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["eqgain",{"_index":564,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.connect(eqinput",{"_index":570,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqgain.gain.value",{"_index":579,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqinput",{"_index":565,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput",{"_index":566,"title":{},"body":{"injectables/AudioService.html":{}}}],["eqoutput.connect(gain",{"_index":571,"title":{},"body":{"injectables/AudioService.html":{}}}],["equalizer",{"_index":993,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"index.html":{}}}],["equalizer.component.html",{"_index":974,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":975,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":380,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":418,"title":{},"body":{"injectables/AudioService.html":{},"miscellaneous/typealiases.html":{}}}],["equitable",{"_index":3312,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":3269,"title":{},"body":{"license.html":{}}}],["eqvalues[freq",{"_index":1041,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands.at",{"_index":1044,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["eqvalues[this.bands[0",{"_index":1032,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["error",{"_index":588,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/WakelockService.html":{}}}],["error('metadata",{"_index":1468,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1505,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1491,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1500,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error.message",{"_index":2982,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errorevent",{"_index":1494,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":3369,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1866,"title":{},"body":{"injectables/MetadataService.html":{}}}],["es",{"_index":1430,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["escape.helper.ts",{"_index":3017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escapelucenequerystring",{"_index":1979,"title":{},"body":{"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["escapelucenequerystring(querystring",{"_index":3057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslint",{"_index":2250,"title":{},"body":{"injectables/PlayerService.html":{},"additional-documentation/helpers.html":{}}}],["establish",{"_index":2874,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["european",{"_index":3255,"title":{},"body":{"license.html":{}}}],["event",{"_index":596,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{},"directives/VisualsDirective.html":{}}}],["event.checked",{"_index":1963,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["event.clientx}px",{"_index":2483,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.clienty}px",{"_index":2485,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["event.currentversion.hash",{"_index":2696,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1488,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2932,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2933,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":1139,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer.items[0",{"_index":1149,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":1138,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.items",{"_index":1147,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2704,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":1253,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2697,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":1136,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.stoppropagation",{"_index":1137,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2689,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2693,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventmanager",{"_index":1331,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":622,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":679,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":689,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusive",{"_index":3146,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3524,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["exercise",{"_index":3335,"title":{},"body":{"license.html":{}}}],["existing",{"_index":686,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["exists",{"_index":2955,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["exit",{"_index":624,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{}}}],["expect",{"_index":2146,"title":{},"body":{"injectables/PlayerService.html":{}}}],["expectation",{"_index":3201,"title":{},"body":{"license.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":3317,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2627,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":3296,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3208,"title":{},"body":{"license.html":{}}}],["extractcolorswithnodevibrant",{"_index":3018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurls.originalurl",{"_index":1846,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(objecturl",{"_index":1850,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1920,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1553,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extracting",{"_index":1934,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extraction",{"_index":1477,"title":{},"body":{"injectables/Id3TagsService.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":3080,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1447,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1449,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extralarge')?.['#text",{"_index":1566,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["failed",{"_index":1173,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fall",{"_index":221,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{}}}],["fallback",{"_index":1169,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["fallback_accent_color",{"_index":750,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":751,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2835,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["false",{"_index":465,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2453,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["fear",{"_index":3171,"title":{},"body":{"license.html":{}}}],["features",{"_index":3074,"title":{},"body":{"index.html":{}}}],["fetchalbuminfo(artist",{"_index":1538,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":2002,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["ffnet",{"_index":1351,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2831,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2723,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":288,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2394,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.size",{"_index":1874,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(math.max(0",{"_index":1905,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(middlepos",{"_index":1882,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(quarterpos",{"_index":1893,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.slice(threequarterpos",{"_index":1898,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata",{"_index":921,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filedata.file",{"_index":1814,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.file.name",{"_index":1852,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.filehandle",{"_index":1815,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata.push",{"_index":960,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["filedata.push(...subfiles",{"_index":963,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedatas",{"_index":1757,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["filedatas.values",{"_index":1802,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedatas?.length",{"_index":1799,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedropoverlaycomponent",{"_index":381,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":277,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filehandle.getfile",{"_index":2162,"title":{},"body":{"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["filehandles",{"_index":1150,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.length",{"_index":1161,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandles.push(handle",{"_index":1156,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filehandlesdropped",{"_index":1098,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileinput",{"_index":1580,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":1177,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":923,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice.currentfolderhandle",{"_index":2365,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["fileloaderservicefactory",{"_index":3021,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":731,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filepath",{"_index":705,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":700,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{}}}],["files.push(file",{"_index":1180,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesdroped",{"_index":1099,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesize",{"_index":1873,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesize).arraybuffer",{"_index":1907,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filestoprocess",{"_index":1797,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filesystemdirectoryhandle",{"_index":915,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filesystemfilehandle",{"_index":728,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/ShellComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["fill",{"_index":2942,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":265,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/LibraryComponent.html":{}}}],["filter((artist",{"_index":167,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filter.gain.value",{"_index":577,"title":{},"body":{"injectables/AudioService.html":{}}}],["filtered",{"_index":163,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.filter((item",{"_index":175,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.sort((a",{"_index":197,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filteredbyserchterm",{"_index":147,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtering",{"_index":2206,"title":{},"body":{"injectables/PlayerService.html":{}}}],["finalize",{"_index":1677,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["finally",{"_index":1664,"title":{},"body":{"injectables/LibraryService.html":{}}}],["find",{"_index":1557,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["findreleasegroupid(artist",{"_index":1990,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":1775,"title":{},"body":{"injectables/MetadataService.html":{},"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":1279,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebuttonaction(index",{"_index":1275,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":3120,"title":{},"body":{"license.html":{}}}],["first",{"_index":200,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{}}}],["firstvaluefrom",{"_index":919,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2715,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":1542,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getall('library",{"_index":1647,"title":{},"body":{"injectables/LibraryService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('directoryhandles",{"_index":929,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('library",{"_index":1820,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":3362,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1185,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["flac",{"_index":1077,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":1184,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["float32array",{"_index":3050,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2626,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["fns",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["focus",{"_index":2152,"title":{},"body":{"injectables/PlayerService.html":{}}}],["folder/files",{"_index":2364,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["following",{"_index":3222,"title":{},"body":{"license.html":{}}}],["forcefully",{"_index":2472,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["form",{"_index":3182,"title":{},"body":{"license.html":{}}}],["format",{"_index":732,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formatlabel",{"_index":2268,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formatlabel(value",{"_index":2277,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["formats",{"_index":3076,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":2300,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":2665,"title":{},"body":{"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatwithleadingzero",{"_index":3025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatwithleadingzero(value",{"_index":3062,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":119,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["found",{"_index":281,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":3191,"title":{},"body":{"license.html":{}}}],["freely",{"_index":3180,"title":{},"body":{"license.html":{}}}],["freq",{"_index":1036,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints",{"_index":1026,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints.push",{"_index":1031,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["freqpoints[0].y",{"_index":1048,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency",{"_index":1021,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["frequency_bands",{"_index":513,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["frequency_bands)[number",{"_index":738,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["frequencyband",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["frequencybarsconfig",{"_index":303,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":3423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":2008,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["full",{"_index":2023,"title":{},"body":{"injectables/MusicbrainzService.html":{},"miscellaneous/variables.html":{}}}],["fully",{"_index":3280,"title":{},"body":{"license.html":{}}}],["function",{"_index":947,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":3008,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":3193,"title":{},"body":{"license.html":{}}}],["future",{"_index":3292,"title":{},"body":{"license.html":{}}}],["für",{"_index":1650,"title":{},"body":{"injectables/LibraryService.html":{}}}],["gain",{"_index":562,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":572,"title":{},"body":{"injectables/AudioService.html":{}}}],["gain.gain.value",{"_index":581,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainnode",{"_index":529,"title":{},"body":{"injectables/AudioService.html":{}}}],["gainvalue",{"_index":471,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{}}}],["gainvalue.tofixed(1)}x",{"_index":1061,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["gamepad",{"_index":1250,"title":{},"body":{"injectables/GamepadService.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":1295,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":1229,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":2325,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":2335,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":2326,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":1243,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":1248,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":1251,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":1209,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":3026,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":306,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gblaster",{"_index":1982,"title":{},"body":{"injectables/MusicbrainzService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["gblasterdb",{"_index":3477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1869,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":3103,"title":{},"body":{"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":3028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1872,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehash(filedata.file",{"_index":1817,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generating",{"_index":1816,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator.bitdroid.de/#section",{"_index":3106,"title":{},"body":{"index.html":{}}}],["getanalysernode",{"_index":2851,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getasfilesystemhandle",{"_index":1148,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["getaudiofilesfromdirhandle",{"_index":3029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":948,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":962,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(handle",{"_index":946,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2917,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2918,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":3424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverdisplay",{"_index":3426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1572,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":1530,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1593,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethasended",{"_index":508,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1419,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":676,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":701,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getloadfilesmenuentry",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesmenuentry().click",{"_index":703,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1754,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(filedata",{"_index":1763,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":3428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":3031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":2218,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":2245,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":3429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":3431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getthemecolor(color",{"_index":845,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["getting",{"_index":1841,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["gettoolbartitle",{"_index":3432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":3433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":2359,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["getvolumeslider",{"_index":3434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getxpos(freq",{"_index":1038,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["give",{"_index":2887,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":2144,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":2148,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":785,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":237,"title":{},"body":{"interfaces/Album.html":{},"injectables/GamepadService.html":{},"components/LibraryComponent.html":{}}}],["gp",{"_index":1258,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":1257,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":1259,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":3435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":971,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":933,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":968,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":3101,"title":{},"body":{"index.html":{}}}],["greater",{"_index":3196,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3275,"title":{},"body":{"license.html":{}}}],["grid",{"_index":1011,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["group",{"_index":1995,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["group/${releasegroupid",{"_index":2004,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":2001,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":1997,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":1998,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["handle",{"_index":914,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.kind",{"_index":1155,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handle.requestpermission",{"_index":969,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":1176,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1493,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlefilefallback(event",{"_index":1174,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handlemessage",{"_index":1486,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":1366,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{}}}],["handles",{"_index":1146,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handling",{"_index":1168,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hanging",{"_index":1472,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1394,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{}}}],["hash",{"_index":730,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1006,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":3304,"title":{},"body":{"license.html":{}}}],["held",{"_index":3350,"title":{},"body":{"license.html":{}}}],["help",{"_index":1335,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["helpers",{"_index":3526,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":1346,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":692,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":3278,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":3134,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":3139,"title":{},"body":{"license.html":{}}}],["hex",{"_index":849,"title":{},"body":{"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":1144,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1586,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1686,"title":{},"body":{"injectables/LoaderService.html":{}}}],["highest",{"_index":1043,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["hilfe",{"_index":1353,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk",{"_index":1384,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":1386,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["horizontal",{"_index":1016,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["host",{"_index":1182,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2610,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2624,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2607,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2608,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2620,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2623,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2621,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2622,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2589,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":1113,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hotkey",{"_index":1322,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1422,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1425,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1428,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":1337,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1412,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":1334,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeys.service",{"_index":1405,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1400,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":384,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":1338,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":3033,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["htmlaudioelement",{"_index":523,"title":{},"body":{"injectables/AudioService.html":{}}}],["htmlcanvaselement",{"_index":2858,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlelement",{"_index":2479,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["htmlinputelement",{"_index":1581,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":1524,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["http_interceptors",{"_index":3472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1513,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["httpevent",{"_index":1675,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1673,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1676,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1671,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":3104,"title":{},"body":{"index.html":{}}}],["https://github.com/motabass/gblaster",{"_index":3395,"title":{},"body":{"properties.html":{}}}],["https://on.cypress.io/custom",{"_index":693,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":3108,"title":{},"body":{"index.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1529,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["icon",{"_index":3102,"title":{},"body":{"index.html":{}}}],["iconregistry",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":3107,"title":{},"body":{"index.html":{}}}],["id",{"_index":868,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":858,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["id3coverpicture",{"_index":722,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":857,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["id3tagsservice",{"_index":1445,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":3190,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":726,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ii",{"_index":3228,"title":{},"body":{"license.html":{}}}],["iii",{"_index":3233,"title":{},"body":{"license.html":{}}}],["image",{"_index":1511,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["image.front",{"_index":2011,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["images",{"_index":1554,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.at",{"_index":1568,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.find((img",{"_index":1559,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images.length",{"_index":1556,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["images[0]?.['#text",{"_index":1563,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["img.size",{"_index":1560,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["immediately",{"_index":2167,"title":{},"body":{"injectables/PlayerService.html":{}}}],["implementation",{"_index":3263,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":3273,"title":{},"body":{"license.html":{}}}],["implements",{"_index":139,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":3359,"title":{},"body":{"license.html":{}}}],["import",{"_index":83,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":3514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":3516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":3512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":3517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1461,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["important",{"_index":1903,"title":{},"body":{"injectables/MetadataService.html":{}}}],["imports",{"_index":132,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["include",{"_index":3220,"title":{},"body":{"license.html":{}}}],["including",{"_index":3185,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":3177,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":2269,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["increasevolume(value",{"_index":2279,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":917,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":3091,"title":{},"body":{"index.html":{}}}],["indexeddbservice",{"_index":926,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["indexeddbtrackmetadata",{"_index":92,"title":{"interfaces/IndexedDbTrackMetadata.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["indexeddbtracks",{"_index":1641,"title":{},"body":{"injectables/LibraryService.html":{}}}],["ineffective",{"_index":3323,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":3339,"title":{},"body":{"license.html":{}}}],["influence",{"_index":1040,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":3128,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3174,"title":{},"body":{"license.html":{}}}],["init",{"_index":2677,"title":{},"body":{"injectables/UpdateService.html":{}}}],["initbarkscale",{"_index":3035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":555,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["initializetheme",{"_index":809,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2532,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":87,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["inject(audioservice",{"_index":983,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2554,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":2125,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":1340,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":1114,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":1339,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":2121,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["inject(gamepadservice",{"_index":2304,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":2305,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["inject(httpclient",{"_index":1525,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["inject(id3tagsservice",{"_index":1792,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1793,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(libraryservice",{"_index":145,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["inject(loaderservice",{"_index":1681,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":518,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1411,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":1342,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":2123,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":754,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":142,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["inject(musicbrainzservice",{"_index":1794,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":927,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(playerservice",{"_index":143,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":1116,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":2555,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2685,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2672,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":2043,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":2793,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":2122,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2863,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1410,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":411,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":413,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":1110,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"index.html":{}}}],["input('bars",{"_index":2856,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":1095,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{}}}],["inset",{"_index":1191,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2703,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":3099,"title":{},"body":{"index.html":{}}}],["instant",{"_index":2452,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["intended",{"_index":3217,"title":{},"body":{"license.html":{}}}],["intending",{"_index":3306,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1669,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1670,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1665,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1667,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["internal",{"_index":2953,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":2120,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":230,"title":{},"body":{"interfaces/Album.html":{},"injectables/GamepadService.html":{},"components/LibraryComponent.html":{}}}],["invalid",{"_index":3322,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":3340,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":3338,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":3333,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":3281,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":2376,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":2380,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":2399,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":1310,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":3036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":3051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":3037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2518,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":3038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":419,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{}}}],["ismediasessionsupported",{"_index":3039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions",{"_index":3042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":3052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{}}}],["isplaying",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":2382,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isprocessing",{"_index":234,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["isstopped",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{}}}],["ist",{"_index":1359,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":3043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":1807,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["item",{"_index":1152,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["item.album",{"_index":177,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item.artist",{"_index":176,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item__content",{"_index":3504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1195,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["itemsize",{"_index":2458,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":3240,"title":{},"body":{"license.html":{}}}],["jest",{"_index":3528,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["json",{"_index":1551,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["judged",{"_index":3320,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":3142,"title":{},"body":{"license.html":{}}}],["justify",{"_index":1197,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["keine",{"_index":1432,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":3083,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1368,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":1364,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":3480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":1326,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerToolbarComponent.html":{}}}],["keys.replaceall",{"_index":1383,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":3357,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3215,"title":{},"body":{"license.html":{}}}],["known",{"_index":3290,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1867,"title":{},"body":{"injectables/MetadataService.html":{}}}],["kvalue",{"_index":661,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kvalue.tofixed(1)}k",{"_index":663,"title":{},"body":{"pipes/BandPipe.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["large",{"_index":2021,"title":{},"body":{"injectables/MusicbrainzService.html":{},"license.html":{}}}],["large')?.['#text",{"_index":1567,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["largeimage",{"_index":1564,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["larger",{"_index":1886,"title":{},"body":{"injectables/MetadataService.html":{}}}],["last",{"_index":1900,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlayerToolbarComponent.html":{}}}],["last.fm",{"_index":1537,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1784,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1526,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1508,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1520,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1512,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1523,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1522,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1519,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2926,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["latencyhint",{"_index":557,"title":{},"body":{"injectables/AudioService.html":{}}}],["latent",{"_index":3365,"title":{},"body":{"license.html":{}}}],["later",{"_index":3172,"title":{},"body":{"license.html":{}}}],["latest",{"_index":3072,"title":{},"body":{"index.html":{}}}],["launch",{"_index":2151,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters",{"_index":2149,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":2161,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":2159,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":2143,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":3119,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3141,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3094,"title":{},"body":{"index.html":{}}}],["leadingminutezero",{"_index":3061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":1093,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":1106,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2596,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1574,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":3114,"title":{},"body":{"license.html":{}}}],["legally",{"_index":3321,"title":{},"body":{"license.html":{}}}],["legend",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":3136,"title":{},"body":{"license.html":{}}}],["library",{"_index":1659,"title":{},"body":{"injectables/LibraryService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":134,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":136,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.service",{"_index":131,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":138,"title":{"components/LibraryComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libraryservice",{"_index":130,"title":{"injectables/LibraryService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{}}}],["libraryservice.isloading",{"_index":1628,"title":{},"body":{"components/LibraryComponent.html":{}}}],["libs/.../lucene",{"_index":3016,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../time.helper.ts",{"_index":3024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/lucene",{"_index":3056,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/time.helper.ts",{"_index":3060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":1083,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":3111,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":3354,"title":{},"body":{"license.html":{}}}],["light",{"_index":822,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightenfactor",{"_index":744,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":864,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":846,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":863,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":3238,"title":{},"body":{"license.html":{}}}],["limit",{"_index":2928,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["limitation",{"_index":3186,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":3246,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3221,"title":{},"body":{"license.html":{}}}],["line",{"_index":2252,"title":{},"body":{"injectables/PlayerService.html":{}}}],["lines",{"_index":1012,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["linethickness",{"_index":2724,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":3500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3529,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["list",{"_index":2460,"title":{},"body":{"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":597,"title":{},"body":{"injectables/AudioService.html":{}}}],["literal",{"_index":1444,"title":{},"body":{"interfaces/Id3Tags.html":{}}}],["load",{"_index":2363,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["loadcomponent",{"_index":3511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":2202,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loadedtrack",{"_index":2213,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":911,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":922,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["loader.helpers.ts",{"_index":1063,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1680,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":924,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["loader.service.abstract.ts",{"_index":1203,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":1206,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:6",{"_index":1207,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:7",{"_index":1208,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":3023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":913,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:11",{"_index":1576,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:18",{"_index":2028,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:24",{"_index":1579,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:26",{"_index":1577,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loader.service.ts:32",{"_index":2030,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:42",{"_index":2029,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["loader.service.ts:43",{"_index":1578,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1666,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1679,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2571,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":673,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":1658,"title":{},"body":{"injectables/LibraryService.html":{}}}],["loadingcounter",{"_index":1691,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadlastdirectory",{"_index":2270,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["loadlibraryfromdb",{"_index":1642,"title":{},"body":{"injectables/LibraryService.html":{}}}],["local",{"_index":1827,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localecompare(b.album",{"_index":206,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.artist",{"_index":203,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.title",{"_index":225,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localstorage",{"_index":575,"title":{},"body":{"injectables/AudioService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":510,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["locking",{"_index":3087,"title":{},"body":{"index.html":{}}}],["loop",{"_index":475,"title":{},"body":{"injectables/AudioService.html":{}}}],["lowersearchterm",{"_index":150,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["lowest",{"_index":1030,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["made",{"_index":3218,"title":{},"body":{"license.html":{}}}],["main_audio",{"_index":542,"title":{},"body":{"injectables/AudioService.html":{}}}],["maincolor",{"_index":311,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":620,"title":{},"body":{"injectables/AudioService.html":{}}}],["makes",{"_index":3130,"title":{},"body":{"license.html":{}}}],["manage",{"_index":229,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["map",{"_index":178,"title":{},"body":{"interfaces/Album.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2562,"title":{},"body":{"components/ShellComponent.html":{}}}],["map((tag",{"_index":165,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["march",{"_index":3258,"title":{},"body":{"license.html":{}}}],["markus.mohoritsch@gmx.at",{"_index":1986,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["mat",{"_index":3496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1403,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":3466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1407,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1938,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2658,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2655,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":1328,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2681,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1404,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":1329,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":3105,"title":{},"body":{"index.html":{}}}],["matformfield",{"_index":121,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matformfieldmodule",{"_index":2373,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":2449,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":2248,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":2448,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(chunksize",{"_index":1880,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(filesize",{"_index":1879,"title":{},"body":{"injectables/MetadataService.html":{}}}],["math.floor(kvalue)}k",{"_index":662,"title":{},"body":{"pipes/BandPipe.html":{}}}],["math.floor(math.random",{"_index":2255,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":2249,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":2104,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.log10(freq",{"_index":1018,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(maxfreq",{"_index":1020,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.log10(minfreq",{"_index":1019,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["math.max(0",{"_index":2461,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":2106,"title":{},"body":{"injectables/PlayerService.html":{}}}],["mathint",{"_index":122,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticon",{"_index":104,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonbutton",{"_index":106,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["maticonmodule",{"_index":1406,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":123,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matlistmodule",{"_index":95,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenu",{"_index":97,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["matmenucontent",{"_index":98,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenuitem",{"_index":99,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenumodule",{"_index":2034,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matmenutrigger",{"_index":100,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{}}}],["matoptionmodule",{"_index":2719,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprefix",{"_index":124,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressbar",{"_index":2514,"title":{},"body":{"components/ShellComponent.html":{}}}],["matprogressspinner",{"_index":127,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matprogressspinnermodule",{"_index":2372,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2718,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2541,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2512,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslider",{"_index":2260,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidermodule",{"_index":973,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matsliderthumb",{"_index":2261,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["matslidetogglechange",{"_index":1948,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1939,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matsuffix",{"_index":125,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mattoolbar",{"_index":2262,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattoolbarmodule",{"_index":2032,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltip",{"_index":2263,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["mattooltipmodule",{"_index":2033,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":2246,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":289,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":3295,"title":{},"body":{"license.html":{}}}],["md5",{"_index":1790,"title":{},"body":{"injectables/MetadataService.html":{}}}],["md5(combined",{"_index":1919,"title":{},"body":{"injectables/MetadataService.html":{}}}],["mdc",{"_index":3503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaning",{"_index":3216,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":2411,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["media",{"_index":1730,"title":{},"body":{"injectables/MediaSessionService.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":527,"title":{},"body":{"injectables/AudioService.html":{}}}],["mediametadata(metadata",{"_index":1739,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1711,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionaction",{"_index":1706,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1708,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1741,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1696,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":3045,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":3297,"title":{},"body":{"license.html":{}}}],["medium')?.['#text",{"_index":1562,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["mega')?.['#text",{"_index":1565,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["member",{"_index":3302,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2474,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["menutrigger",{"_index":2395,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["merchantability",{"_index":3361,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1361,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.description",{"_index":1379,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":1380,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1521,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1487,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["messages",{"_index":2930,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["meta",{"_index":746,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"injectables/ThemeService.html":{}}}],["meta.coverurl.originalurl",{"_index":1861,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl?.originalurl?.startswith('blob",{"_index":1862,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.coverurl?.thumburl?.startswith('blob",{"_index":1864,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1860,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1871,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":115,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1858,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":1516,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1785,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1510,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:37",{"_index":1573,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":1453,"title":{},"body":{"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1819,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.coverurl.thumburl",{"_index":1823,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1821,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1832,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":117,"title":{"injectables/MetadataService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["metadataservice.processing",{"_index":2572,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadataservice.statustext",{"_index":2573,"title":{},"body":{"components/ShellComponent.html":{}}}],["metadatasettingscomponent",{"_index":385,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["meter",{"_index":3088,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":3436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1548,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["methods",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["middlechunk",{"_index":1881,"title":{},"body":{"injectables/MetadataService.html":{}}}],["middlepos",{"_index":1878,"title":{},"body":{"injectables/MetadataService.html":{}}}],["migrating",{"_index":2619,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2612,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["min",{"_index":2247,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2725,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["mindecibels",{"_index":290,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["minfreq",{"_index":1049,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["miscellaneous",{"_index":3005,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":3096,"title":{},"body":{"index.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":3176,"title":{},"body":{"license.html":{}}}],["module",{"_index":1462,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":3387,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monochrome.svg",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["moral",{"_index":3229,"title":{},"body":{"license.html":{}}}],["more",{"_index":687,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{}}}],["motabass",{"_index":3397,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":1980,"title":{},"body":{"injectables/MusicbrainzService.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":2548,"title":{},"body":{"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":3200,"title":{},"body":{"license.html":{}}}],["mouseevent",{"_index":2385,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["mp3",{"_index":1076,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":1081,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mtb",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":3474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":727,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":1972,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1787,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzapi",{"_index":1978,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":1786,"title":{"injectables/MusicbrainzService.html":{}},"body":{"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":860,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":695,"title":{},"body":{"interfaces/Chainable.html":{}}}],["narrowing",{"_index":2630,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":3262,"title":{},"body":{"license.html":{}}}],["nativebrowserfileloaderservice",{"_index":925,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigateto",{"_index":2519,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2522,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigator.getgamepads",{"_index":1249,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1738,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1742,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1733,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1728,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1737,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1736,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2978,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2979,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":897,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nderungen",{"_index":800,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["nearby",{"_index":2451,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["necessary",{"_index":3377,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":3219,"title":{},"body":{"license.html":{}}}],["new",{"_index":169,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["newsize",{"_index":317,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["newtrack",{"_index":2169,"title":{},"body":{"injectables/PlayerService.html":{}}}],["next",{"_index":1672,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1683,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1455,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2964,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ngafterviewinit",{"_index":1122,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngclass",{"_index":2371,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2629,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2631,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":242,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":241,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngx",{"_index":511,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":916,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1265,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":1788,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{},"index.html":{}}}],["nodes",{"_index":559,"title":{},"body":{"injectables/AudioService.html":{}}}],["non",{"_index":3330,"title":{},"body":{"license.html":{}}}],["none",{"_index":544,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["nothing",{"_index":2157,"title":{},"body":{"injectables/PlayerService.html":{}}}],["now",{"_index":2935,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["null",{"_index":669,"title":{},"body":{"pipes/BitratePipe.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(a.track",{"_index":212,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(axisindex",{"_index":1240,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(b.track",{"_index":215,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(buttonindex",{"_index":1238,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(atrack",{"_index":218,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(btrack",{"_index":219,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number.isnan(duration",{"_index":1725,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number.nan",{"_index":211,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbers",{"_index":217,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["numbervalue",{"_index":998,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["nx",{"_index":3519,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["object",{"_index":1828,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":3478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1834,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":3386,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1332,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":1365,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":1377,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2557,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2897,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":1372,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2900,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtained",{"_index":1164,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["obtaining",{"_index":3376,"title":{},"body":{"license.html":{}}}],["offers",{"_index":3355,"title":{},"body":{"license.html":{}}}],["offline",{"_index":3098,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":316,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":3440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":1917,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["ogg",{"_index":1078,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["oldsource",{"_index":627,"title":{},"body":{"injectables/AudioService.html":{}}}],["onchanges",{"_index":2577,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["oncontextmenu",{"_index":2377,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["oncontextmenu(event",{"_index":2384,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ondestroy",{"_index":88,"title":{},"body":{"interfaces/Album.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":740,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["onfilehandlesdropped",{"_index":2520,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilehandlesdropped(files",{"_index":2526,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped",{"_index":2521,"title":{},"body":{"components/ShellComponent.html":{}}}],["onfilesdropped(files",{"_index":2528,"title":{},"body":{"components/ShellComponent.html":{}}}],["oninit",{"_index":89,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1942,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1947,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onsliderpositionchanged",{"_index":2271,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":2282,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1943,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1950,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1944,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1952,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1945,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1954,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":2272,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["onvolumechange(value",{"_index":2284,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["open",{"_index":2469,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["opened",{"_index":2475,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["openedstate",{"_index":2584,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":944,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2583,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["option",{"_index":2832,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["optional",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":714,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":1356,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":1363,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":1080,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":2024,"title":{},"body":{"injectables/MusicbrainzService.html":{},"license.html":{}}}],["originalfn",{"_index":718,"title":{},"body":{"interfaces/Chainable.html":{}}}],["originalurl",{"_index":866,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["os",{"_index":3084,"title":{},"body":{"index.html":{}}}],["osc",{"_index":331,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2726,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":3089,"title":{},"body":{"index.html":{}}}],["oscilloscopepath",{"_index":3437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":308,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":330,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":3100,"title":{},"body":{"index.html":{}}}],["others",{"_index":3199,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":220,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["out",{"_index":1479,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{}}}],["output",{"_index":1111,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outputs",{"_index":1097,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":2441,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":1094,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":1108,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":1089,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":1092,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":1091,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":1087,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":1100,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":1102,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:15",{"_index":1101,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:39",{"_index":1109,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:49",{"_index":1107,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:55",{"_index":1105,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":1086,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":1085,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlayref",{"_index":2476,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.left",{"_index":2482,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.position",{"_index":2480,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overlayref.style.top",{"_index":2484,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["overtly",{"_index":3279,"title":{},"body":{"license.html":{}}}],["overview",{"_index":3388,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":685,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["owner",{"_index":3155,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":3154,"title":{},"body":{"license.html":{}}}],["owners",{"_index":3161,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2946,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":2984,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":3518,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{}}],["palette",{"_index":907,"title":{},"body":{"components/CoverDisplayComponent.html":{},"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1930,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1931,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1924,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1925,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1932,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1933,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1926,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1927,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1928,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1929,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1922,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1923,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pane:last",{"_index":2478,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["panel",{"_index":2578,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2579,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2580,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2576,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2595,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2592,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2599,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2600,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2594,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2597,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2598,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2601,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2602,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2603,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2605,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2604,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2575,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":3247,"title":{},"body":{"license.html":{}}}],["parallele",{"_index":1648,"title":{},"body":{"injectables/LibraryService.html":{}}}],["parameters",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1544,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":696,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":3256,"title":{},"body":{"license.html":{}}}],["part",{"_index":3197,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1344,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":3363,"title":{},"body":{"license.html":{}}}],["party",{"_index":3384,"title":{},"body":{"license.html":{}}}],["passed",{"_index":2939,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":3349,"title":{},"body":{"license.html":{}}}],["path",{"_index":3508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":3442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":3510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":312,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1496,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1456,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["perform",{"_index":3225,"title":{},"body":{"license.html":{}}}],["performance",{"_index":1652,"title":{},"body":{"injectables/LibraryService.html":{}}}],["performance.now",{"_index":1306,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":3232,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3163,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":3371,"title":{},"body":{"license.html":{}}}],["permission",{"_index":966,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":3379,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3276,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":3092,"title":{},"body":{"index.html":{}}}],["person",{"_index":3205,"title":{},"body":{"license.html":{}}}],["person's",{"_index":3237,"title":{},"body":{"license.html":{}}}],["persons",{"_index":3375,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":3236,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1443,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pictures",{"_index":1842,"title":{},"body":{"injectables/MetadataService.html":{}}}],["pipe",{"_index":114,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":2407,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":653,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":660,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1795,"title":{},"body":{"injectables/MetadataService.html":{}}}],["play",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["play/pause",{"_index":2310,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playback",{"_index":558,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{}}}],["player",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player.component.html",{"_index":2035,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":2036,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":678,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":103,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":94,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1717,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":3513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/file",{"_index":2550,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/library",{"_index":3515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1959,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/ShellComponent.html":{}}}],["player/player",{"_index":2551,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.service",{"_index":2549,"title":{},"body":{"components/ShellComponent.html":{}}}],["player/player.types",{"_index":753,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":387,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":102,"title":{"injectables/PlayerService.html":{}},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":891,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["playerservice.currentlyloadedtrack();@let",{"_index":908,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["playerservice.currenttime",{"_index":2367,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playerservice.repeat",{"_index":2369,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["playertoolbarcomponent",{"_index":388,"title":{"components/PlayerToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playing",{"_index":1718,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["playlist",{"_index":1630,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist'},{'name",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":2374,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":2375,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.filter((t",{"_index":2208,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.find((playlisttrack",{"_index":2224,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.findindex((track",{"_index":2435,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":2222,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":2219,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":2042,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":391,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.hash",{"_index":2197,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlisttrack.metadata?.hash",{"_index":2225,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":2052,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":2378,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":2387,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":2053,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":2074,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":3075,"title":{},"body":{"index.html":{}}}],["playtrack",{"_index":1603,"title":{},"body":{"components/LibraryComponent.html":{}}}],["playtrack(track",{"_index":252,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["playtrackbyhash",{"_index":2054,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playtrackbyhash(hash",{"_index":2076,"title":{},"body":{"injectables/PlayerService.html":{}}}],["please",{"_index":690,"title":{},"body":{"interfaces/Chainable.html":{}}}],["pluginnewanalysernode",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{}}}],["pointer",{"_index":1183,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["points",{"_index":1034,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["pool",{"_index":2921,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":2103,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":464,"title":{},"body":{"injectables/AudioService.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":3181,"title":{},"body":{"license.html":{}}}],["prefertagembeddedpicture",{"_index":1744,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefix",{"_index":3457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["present",{"_index":3368,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":3324,"title":{},"body":{"license.html":{}}}],["pressedbuttonscaches",{"_index":1235,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prevents",{"_index":2616,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":2055,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":713,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":825,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":789,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":793,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":1993,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1974,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":3235,"title":{},"body":{"license.html":{}}}],["private",{"_index":140,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["process",{"_index":2937,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["processing",{"_index":232,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["processingfile",{"_index":1745,"title":{},"body":{"injectables/MetadataService.html":{}}}],["processinginterval",{"_index":226,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["processionpercent",{"_index":1746,"title":{},"body":{"injectables/MetadataService.html":{}}}],["production",{"_index":3194,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":936,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1470,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promise.all(promises",{"_index":1160,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promise.all(result.map((track",{"_index":1654,"title":{},"body":{"injectables/LibraryService.html":{}}}],["promise.reject(new",{"_index":1467,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1151,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/Id3TagsService.html":{}}}],["promises.push(promise",{"_index":1157,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["promote",{"_index":3189,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":3300,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":393,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2498,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"properties.html":{}}}],["protected",{"_index":144,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"license.html":{}}}],["protecting",{"_index":3241,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3260,"title":{},"body":{"license.html":{}}}],["provide",{"_index":3121,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":3447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":3133,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":517,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":3459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":3448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":3454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":3461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":3445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":3127,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":3449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonelesschangedetection",{"_index":3446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":3169,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":3234,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3211,"title":{},"body":{"license.html":{}}}],["pure",{"_index":655,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":3140,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3184,"title":{},"body":{"license.html":{}}}],["pwa",{"_index":3070,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quarter",{"_index":1888,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterchunk",{"_index":1892,"title":{},"body":{"injectables/MetadataService.html":{}}}],["quarterpos",{"_index":1891,"title":{},"body":{"injectables/MetadataService.html":{}}}],["query",{"_index":1536,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["queryparams",{"_index":1546,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["querystring",{"_index":3058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["queue",{"_index":2158,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":3314,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["random",{"_index":2254,"title":{},"body":{"injectables/PlayerService.html":{}}}],["randomposition",{"_index":2217,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":2438,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["rate",{"_index":905,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["re",{"_index":1662,"title":{},"body":{"injectables/LibraryService.html":{}}}],["react",{"_index":991,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["read",{"_index":691,"title":{},"body":{"interfaces/Chainable.html":{}}}],["reader",{"_index":3110,"title":{},"body":{"index.html":{}}}],["reading",{"_index":1837,"title":{},"body":{"injectables/MetadataService.html":{}}}],["readme",{"_index":3068,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":141,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":1808,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/UpdateService.html":{}}}],["realkeys",{"_index":1382,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":3319,"title":{},"body":{"license.html":{}}}],["record",{"_index":1545,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2890,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["redirectto",{"_index":3509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":3179,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":3132,"title":{},"body":{"license.html":{}}}],["regards",{"_index":3245,"title":{},"body":{"license.html":{}}}],["register",{"_index":1434,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":1355,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":1214,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":1223,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":1215,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":1227,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1396,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":3453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":3452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":1360,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["regular",{"_index":1163,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["reject",{"_index":1457,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1484,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1476,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":3148,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":3126,"title":{},"body":{"license.html":{}}}],["release",{"_index":2000,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["release:${escapelucenequerystring(album",{"_index":1991,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":1987,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2970,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":3170,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":3164,"title":{},"body":{"license.html":{}}}],["remainder",{"_index":3341,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":3343,"title":{},"body":{"license.html":{}}}],["remote",{"_index":1833,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverarturls",{"_index":82,"title":{"interfaces/RemoteCoverArtUrls.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":953,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["removed",{"_index":2200,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist",{"_index":2056,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removetrackfromplaylist(track",{"_index":2079,"title":{},"body":{"injectables/PlayerService.html":{}}}],["renderer",{"_index":1115,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":1112,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renew",{"_index":1826,"title":{},"body":{"injectables/MetadataService.html":{}}}],["repeat",{"_index":2049,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":739,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["replace",{"_index":2210,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repository",{"_index":3394,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":3356,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":3223,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":3195,"title":{},"body":{"license.html":{}}}],["request",{"_index":965,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["request.reject(new",{"_index":1490,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1492,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe(draw",{"_index":2949,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1497,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestwakelock",{"_index":2977,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":3380,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":3309,"title":{},"body":{"license.html":{}}}],["reset",{"_index":2473,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["resetfrequencybandgain",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{}}}],["resetfrequencybandgain(bandfrequency",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{}}}],["resizeobserver",{"_index":2861,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2898,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1481,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(tags",{"_index":1483,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1597,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["resolved",{"_index":1158,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["respect",{"_index":3345,"title":{},"body":{"license.html":{}}}],["response",{"_index":1022,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["responsibility",{"_index":3373,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":3093,"title":{},"body":{"index.html":{}}}],["result",{"_index":1646,"title":{},"body":{"injectables/LibraryService.html":{}}}],["result.matches",{"_index":2563,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":3138,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":1387,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["retained",{"_index":3230,"title":{},"body":{"license.html":{}}}],["return",{"_index":152,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":3178,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":3308,"title":{},"body":{"license.html":{}}}],["rgb(255",{"_index":1200,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0,0",{"_index":882,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["right",{"_index":1059,"title":{},"body":{"components/EqualizerComponent.html":{},"components/SlidePanelComponent.html":{},"license.html":{}}}],["rights",{"_index":3149,"title":{},"body":{"license.html":{}}}],["root",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["root'},{'name",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotation",{"_index":2924,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":2525,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":2543,"title":{},"body":{"components/ShellComponent.html":{}}}],["routeroutlet",{"_index":2513,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":3398,"title":{"routes.html":{}},"body":{"routes.html":{},"miscellaneous/variables.html":{}}}],["royalty",{"_index":3329,"title":{},"body":{"license.html":{}}}],["run",{"_index":3523,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":3520,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":515,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1678,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":113,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":112,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["sample",{"_index":904,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":329,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["samples",{"_index":1890,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sandbox",{"_index":3109,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["scheme",{"_index":787,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["scientific",{"_index":3168,"title":{},"body":{"license.html":{}}}],["screen",{"_index":3086,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":2401,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollbehavior",{"_index":2455,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":2413,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":2450,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollposition",{"_index":2409,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":2402,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":2430,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":2433,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":2397,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["search",{"_index":1999,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["searchterm",{"_index":146,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["searchterm.tolowercase",{"_index":151,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["seconds",{"_index":2083,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft",{"_index":2057,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekleft(seconds",{"_index":2081,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":2286,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekright",{"_index":2058,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["seekright(seconds",{"_index":2084,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":2288,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["seekto",{"_index":1735,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["seektohandler(details",{"_index":2231,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1604,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":247,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1605,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":243,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selected",{"_index":2203,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectedalbum",{"_index":160,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":158,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":161,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selectnext",{"_index":2059,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":2060,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":2061,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":2088,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1606,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":249,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["send",{"_index":2944,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":1277,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separator",{"_index":3455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service/file",{"_index":1062,"title":{},"body":{"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":723,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1509,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1575,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":3054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":118,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["service/metadata.service.ts",{"_index":1743,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:151",{"_index":1760,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:24",{"_index":1782,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:25",{"_index":1780,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:26",{"_index":1778,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1766,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:31",{"_index":1771,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:35",{"_index":1768,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:39",{"_index":1769,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:41",{"_index":1776,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:48",{"_index":1756,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:64",{"_index":1762,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:79",{"_index":1764,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":116,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":855,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":3059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":1975,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:18",{"_index":1976,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":912,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":3122,"title":{},"body":{"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":2302,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":2301,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":2303,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["services/loader/loader.service",{"_index":2546,"title":{},"body":{"components/ShellComponent.html":{}}}],["services/media",{"_index":2116,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":2038,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":2115,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1731,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service",{"_index":2117,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":3041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1699,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1709,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1714,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1716,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1712,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1704,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1698,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":534,"title":{},"body":{"injectables/AudioService.html":{},"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["set(filtered.tosorted((a",{"_index":170,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["set.svg",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor",{"_index":2640,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setaccentcolor(color",{"_index":817,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1700,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1705,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2730,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2740,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2731,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2742,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":466,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1701,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1710,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2732,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2744,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2733,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2746,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2641,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":812,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2642,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":810,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2734,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2748,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":468,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":470,"title":{},"body":{"injectables/AudioService.html":{}}}],["setgap",{"_index":2735,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2750,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2736,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2752,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":473,"title":{},"body":{"injectables/AudioService.html":{}}}],["setmindb",{"_index":2737,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2754,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setplaybackstate(state",{"_index":1740,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor",{"_index":2643,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setprimarycolor(color",{"_index":815,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":2062,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":2090,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1702,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1713,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2738,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2756,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1474,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["settings",{"_index":574,"title":{},"body":{"injectables/AudioService.html":{},"components/MetadataSettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2508,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1940,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":2506,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1937,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2659,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":2637,"title":{},"body":{"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:15",{"_index":1956,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":1955,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":1953,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1951,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:34",{"_index":1949,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":1946,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1936,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2507,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2509,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":396,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2667,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2668,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2896,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupvisualsworkerwithoptions",{"_index":3046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":3053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":476,"title":{},"body":{"injectables/AudioService.html":{}}}],["shall",{"_index":3307,"title":{},"body":{"license.html":{}}}],["sharereplay",{"_index":2545,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell",{"_index":2511,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell'},{'name",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2515,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2516,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":343,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":1350,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":2309,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["show",{"_index":1687,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showdelay",{"_index":3468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":938,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["showfilepickerandloadfiles",{"_index":2273,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["showpicker",{"_index":935,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["shows",{"_index":681,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2727,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":2050,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2585,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["sidenav",{"_index":2564,"title":{},"body":{"components/ShellComponent.html":{}}}],["signal",{"_index":90,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["signal(0",{"_index":481,"title":{},"body":{"injectables/AudioService.html":{},"injectables/MetadataService.html":{}}}],["signal(44_100",{"_index":503,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(false",{"_index":496,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('accentcolor",{"_index":792,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2758,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2762,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('basegain",{"_index":479,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2769,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2771,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":784,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2777,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2779,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2781,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2783,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1765,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('primarycolor",{"_index":790,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":2108,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":2111,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2790,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1777,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1779,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1781,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2962,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.localstorageservice.retrieve('volume",{"_index":505,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(true",{"_index":499,"title":{},"body":{"injectables/AudioService.html":{}}}],["signal(undefined",{"_index":159,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["signals",{"_index":535,"title":{},"body":{"injectables/AudioService.html":{},"directives/VisualsDirective.html":{}}}],["similar",{"_index":3268,"title":{},"body":{"license.html":{}}}],["sind",{"_index":1431,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1518,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["sizes",{"_index":2189,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":1187,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2523,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2611,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":3439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":399,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":398,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["small",{"_index":1876,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["small')?.['#text",{"_index":1561,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smallimage",{"_index":1558,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["smooth",{"_index":2432,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2728,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":291,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["soll",{"_index":2708,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs/pseudo",{"_index":2253,"title":{},"body":{"injectables/PlayerService.html":{}}}],["song",{"_index":2070,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song.file.name",{"_index":2490,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":2486,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":2487,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.hash",{"_index":2465,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.hash",{"_index":2198,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":2491,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":2489,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":2488,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["soon",{"_index":1806,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sort",{"_index":194,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["specified",{"_index":2207,"title":{},"body":{"injectables/PlayerService.html":{}}}],["spinner",{"_index":129,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["src",{"_index":2187,"title":{},"body":{"injectables/PlayerService.html":{}}}],["start",{"_index":1029,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["startvisualization(getdatamethod",{"_index":2916,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":233,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":3318,"title":{},"body":{"license.html":{}}}],["statustext",{"_index":1747,"title":{},"body":{"injectables/MetadataService.html":{}}}],["statutory",{"_index":3360,"title":{},"body":{"license.html":{}}}],["stop",{"_index":319,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2837,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storagesettingscomponent",{"_index":401,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":179,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":3479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":3482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(this.equalizergainvalues",{"_index":647,"title":{},"body":{"injectables/AudioService.html":{}}}],["styles",{"_index":1082,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":135,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["styleurls",{"_index":1090,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["sub",{"_index":1376,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":961,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":514,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"license.html":{}}}],["sublicensable",{"_index":3332,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2408,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":1333,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":3153,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1424,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1427,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":3266,"title":{},"body":{"license.html":{}}}],["successors",{"_index":3305,"title":{},"body":{"license.html":{}}}],["such",{"_index":3252,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":745,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["sum",{"_index":1913,"title":{},"body":{"injectables/MetadataService.html":{}}}],["supported",{"_index":1732,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":3078,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":3353,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":3285,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":632,"title":{},"body":{"injectables/AudioService.html":{}}}],["switch",{"_index":2235,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["swupdate",{"_index":2682,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.activateupdate().then",{"_index":2699,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2687,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntildestroyed(this.destroref)).subscribe((event",{"_index":2688,"title":{},"body":{"injectables/UpdateService.html":{}}}],["system",{"_index":1171,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["t",{"_index":2209,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tag",{"_index":183,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"index.html":{}}}],["tag.album",{"_index":185,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.album?.tolowercase().includes(lowersearchterm",{"_index":157,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist",{"_index":166,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist?.tolowercase().includes(lowersearchterm",{"_index":155,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.coverurl",{"_index":189,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.filename?.tolowercase().includes(lowersearchterm",{"_index":156,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.title?.tolowercase().includes(lowersearchterm",{"_index":154,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.year",{"_index":188,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tags",{"_index":870,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"index.html":{}}}],["tags.album",{"_index":1532,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":1531,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1856,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1847,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1849,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1783,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1446,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1451,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1448,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1853,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1854,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":724,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1442,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1855,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagsworkerrequest",{"_index":867,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":869,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":2118,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":3325,"title":{},"body":{"license.html":{}}}],["targetindex",{"_index":2434,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1421,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":706,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templateurl",{"_index":133,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["termination",{"_index":3311,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3214,"title":{},"body":{"license.html":{}}}],["territories",{"_index":3293,"title":{},"body":{"license.html":{}}}],["test",{"_index":553,"title":{},"body":{"injectables/AudioService.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":3522,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1517,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":856,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["theme",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"index.html":{}}}],["theme.types",{"_index":749,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themecolor",{"_index":748,"title":{"interfaces/ThemeColor.html":{}},"body":{"interfaces/ColorVariant.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{}}}],["themeservice",{"_index":352,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ColorVariant.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themesettingscomponent",{"_index":403,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":3264,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":309,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["this._audiocontext",{"_index":584,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.createanalyser",{"_index":613,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.resume",{"_index":633,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiocontext.state",{"_index":631,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement",{"_index":582,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":594,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":601,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":611,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":587,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":591,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":592,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":608,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":603,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":599,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.currenttime",{"_index":643,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.fastseek(position",{"_index":642,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.loop",{"_index":640,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.pause",{"_index":636,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.play",{"_index":634,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audioelement.src",{"_index":628,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._audiosourcenode",{"_index":583,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers",{"_index":625,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":615,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.clear",{"_index":626,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":618,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":616,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode",{"_index":585,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.connect(analyser",{"_index":614,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._eqgainnode.disconnect(analyser",{"_index":617,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[band",{"_index":576,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":645,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._gainnode",{"_index":586,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.asobservable",{"_index":537,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._hasended.next(true",{"_index":612,"title":{},"body":{"injectables/AudioService.html":{}}}],["this._internalanalyzer",{"_index":2902,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":1371,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":808,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolor.set(color",{"_index":818,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolor.set(colors.peakcolor",{"_index":814,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.accentcolorpalette",{"_index":828,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":1319,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...filedatas",{"_index":2195,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(...validfiles",{"_index":2165,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addtrackstoplaylist(...this.filteredbyserchterm",{"_index":261,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(...tracks",{"_index":260,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(track",{"_index":272,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtracktoplaylist(track",{"_index":254,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":2193,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.allowedtypes().includes(file.type",{"_index":1179,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.alpha",{"_index":2774,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2816,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2885,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2800,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2806,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2804,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2802,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2911,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2910,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2943,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2673,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2948,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1552,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.askuserforupdate().then((update",{"_index":2698,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.basegain",{"_index":996,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.currenttime",{"_index":1726,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2956,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2811,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1724,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.equalizergainvalues",{"_index":995,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":2172,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":2214,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1721,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1719,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":2102,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":2191,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2760,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2912,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":2179,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":2242,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":2240,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(value",{"_index":2358,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":1241,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":1292,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":1290,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":1281,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.bands",{"_index":1037,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.barcount",{"_index":2764,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2820,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2879,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2903,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2906,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2905,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2904,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":580,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.breakpointobserver",{"_index":2556,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1539,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":1239,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":1288,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":1282,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":1296,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":1305,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":1278,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.canvas",{"_index":2864,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2891,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2870,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvasref",{"_index":1000,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.canvasref()!.nativeelement",{"_index":1001,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.capfalldown",{"_index":2767,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2824,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2765,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2822,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":1261,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":1260,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":1320,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":1256,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2634,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.color_variants.map((variant",{"_index":838,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.colorconfig",{"_index":2883,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":796,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":794,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":1244,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":2003,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.coverartarchiveapi.getreleasegroupcovers(releasegroupid",{"_index":2006,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":1293,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":1289,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":567,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1859,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1836,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(filedata",{"_index":1804,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.currentfolderhandle",{"_index":945,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(entry.handle",{"_index":934,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentfolderhandle.set(handle",{"_index":939,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":2101,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":2095,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":2192,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":2215,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":2228,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().length",{"_index":2168,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":2196,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist()[this.currentplaylist().length",{"_index":2170,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":2199,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":600,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.darkmode",{"_index":804,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":811,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1413,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.decreasevolume(value",{"_index":2327,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.default_deadspace",{"_index":1312,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":1226,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":1362,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1392,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1399,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1415,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2501,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2500,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1390,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":1246,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":1345,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":1132,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":1123,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":1129,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":1127,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drawequalizerresponse",{"_index":997,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.drop.bind(this",{"_index":1135,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":1134,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":602,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[band",{"_index":578,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":644,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":650,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":1374,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1534,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1533,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":1989,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2801,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2818,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.filehandlesdropped.emit(filehandles",{"_index":1162,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.fileinput",{"_index":1582,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1588,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1596,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1595,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1594,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1585,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1590,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1587,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1584,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.openfiles",{"_index":2194,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.files",{"_index":1598,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.files.map((file",{"_index":1592,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filesdroped.emit(files",{"_index":1181,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.filestoprocess",{"_index":1767,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.set(filedatas.length",{"_index":1801,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filestoprocess.update((files",{"_index":1809,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.filteredbyserchterm",{"_index":164,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.filteredbyserchterm().filter((track",{"_index":258,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":1988,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":1318,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":1298,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":2312,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":2354,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":2356,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":2355,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":2342,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":2343,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":2350,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":2349,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":2352,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":2346,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":2351,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":2347,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":2348,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":2353,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":2344,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":2345,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":2324,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":2313,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":2314,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":2333,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":2331,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":2338,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":2320,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":2336,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":2322,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":2329,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":2340,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":2316,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":2318,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2810,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2808,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2766,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2828,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getmetadata(filedata",{"_index":1812,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.getthemecolor(color",{"_index":843,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":2298,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer.files",{"_index":1175,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1466,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlefilefallback(event",{"_index":1165,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handlemessage",{"_index":1464,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.helpopen",{"_index":1389,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1397,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":1375,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":1357,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":1385,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":1378,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":2306,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":2307,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.hotkeysservice.register",{"_index":2308,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.iconregistry.addsvgicon('logo",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["this.iconregistry.addsvgiconset(this.sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["this.id3tagsservice.extracttags(filedata.file",{"_index":1838,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":2328,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.indexeddbservice.add('library",{"_index":1857,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('library').topromise",{"_index":1970,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.update('directoryhandles",{"_index":940,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.indexeddbtracks.set",{"_index":1660,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.indexeddbtracks.set(trackswithbloburls",{"_index":1656,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.isautoscrollenabled",{"_index":2414,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":2415,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":1313,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":590,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":593,"title":{},"body":{"injectables/AudioService.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":641,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(false",{"_index":607,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.ispaused.set(true",{"_index":610,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying",{"_index":635,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(false",{"_index":609,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isplaying.set(true",{"_index":606,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(false",{"_index":605,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.isstopped.set(true",{"_index":639,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.lastfm_api_key",{"_index":1550,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1843,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":1145,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":1131,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.libraryservice.indexeddbtracks().filter((tag",{"_index":153,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.libraryservice.loadlibraryfromdb",{"_index":238,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.linethickness",{"_index":2786,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2826,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1684,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loaderservice.show",{"_index":1682,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["this.loadingcounter",{"_index":1692,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2638,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.retrieve('equalizergainvalues",{"_index":484,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('accentcolor",{"_index":807,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2817,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2821,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2825,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2823,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":803,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('equalizergainvalues",{"_index":649,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2819,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2829,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2827,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2815,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('prefertagembeddedpicture",{"_index":1969,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('primarycolor",{"_index":805,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2813,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('usetagembeddedpicture",{"_index":1967,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usetagscache",{"_index":1965,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('usewebmetainfos",{"_index":1962,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2967,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mediasessionservice",{"_index":2126,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":2132,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":2129,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":2127,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":2134,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":2136,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":2138,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":2130,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":2181,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":2140,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.menutrigger",{"_index":2467,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.meta.updatetag",{"_index":833,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.metadataservice.addfilestolibrary(...filedatas",{"_index":2212,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.createobjecturlforembeddedpicture(track",{"_index":1655,"title":{},"body":{"injectables/LibraryService.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1968,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.processing",{"_index":235,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1966,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1964,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1961,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2805,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2814,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2877,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzapi.search('release",{"_index":1994,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1844,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":2133,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1469,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2633,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2632,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2881,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2914,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":1126,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":637,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.pendingrequests.clear",{"_index":1507,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1475,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1499,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1489,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1480,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1504,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1824,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice.addfilestoplaylist(...filedata",{"_index":2569,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addfilestoplaylist(...files.map((file",{"_index":2568,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.playerservice.addtracktoplaylist(track",{"_index":279,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2773,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":2425,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.darkmuted?.hex",{"_index":880,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.covercolors?.lightmuted?.hex",{"_index":881,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.coverurl?.originalurl",{"_index":884,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.hash",{"_index":2463,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":2418,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":2368,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.next",{"_index":2337,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpause",{"_index":2311,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":2464,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.playtrackbyhash(track.hash",{"_index":255,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.previous",{"_index":2339,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectnext",{"_index":2334,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":2332,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":2357,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playerservice.stop",{"_index":2315,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.playpause",{"_index":2128,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(newtrack",{"_index":2171,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":2220,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":2227,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":2223,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":2226,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1825,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":1300,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":2135,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":806,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolor.set(color",{"_index":816,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolor.set(colors.maincolor",{"_index":813,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.primarycolorpalette",{"_index":823,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.processing",{"_index":1773,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile",{"_index":1774,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processingfile.set(filedata.file.name",{"_index":1803,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.processinginterval",{"_index":236,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.register",{"_index":1349,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":1124,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":1141,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":2236,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":2238,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":2243,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":2241,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2976,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2872,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2951,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate(['/player",{"_index":256,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.router.navigate([route",{"_index":2567,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":604,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["this.scrolltobottom",{"_index":2423,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":2429,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":2405,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":149,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.seekleft(10",{"_index":2137,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":2321,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seekright(10",{"_index":2139,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":2323,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.seektohandler(details",{"_index":2141,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":638,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.selectedalbum",{"_index":193,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(album",{"_index":248,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(undefined",{"_index":245,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":174,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist.set(artist",{"_index":244,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":2205,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":2229,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(track",{"_index":250,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack.set(undefined",{"_index":246,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["this.selectsong(track",{"_index":2178,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setfrequencybandgain(bandfrequency",{"_index":651,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.setplaybackstate('none",{"_index":1723,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1722,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1720,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setseekposition(details.seektime",{"_index":2234,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":2230,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2873,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.showfilepickerandloadfiles",{"_index":2341,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.shuffle",{"_index":2216,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":2244,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":2566,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2803,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2812,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2913,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2915,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":2131,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2886,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.swupdate",{"_index":2686,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2706,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2705,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.accentcolor",{"_index":1053,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.darkmode",{"_index":879,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.initializetheme",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["this.themeservice.primarycolor",{"_index":1025,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":2173,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2661,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2674,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":2044,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":1354,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":2330,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.togglerepeat",{"_index":2319,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.toggleshuffle",{"_index":2317,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["this.totalfilestoprocess",{"_index":1770,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(0",{"_index":1810,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.totalfilestoprocess.set(filedatas.length",{"_index":1800,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.uniquealbums",{"_index":266,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.updatecssproperties",{"_index":801,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1727,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.updatemetathemecolor",{"_index":802,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["this.updateservice.init",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usetagembeddedpicture",{"_index":1822,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1818,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1840,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2892,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2895,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2893,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2894,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2866,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.addeventlistener('message",{"_index":2931,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2871,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2957,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2965,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2966,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2809,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2788,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":548,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.wakelock",{"_index":2975,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2980,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":2983,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":2175,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":2177,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1458,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1465,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1463,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2868,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1485,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1502,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1501,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1503,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":3165,"title":{},"body":{"license.html":{}}}],["three",{"_index":1889,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterchunk",{"_index":1897,"title":{},"body":{"injectables/MetadataService.html":{}}}],["threequarterpos",{"_index":1895,"title":{},"body":{"injectables/MetadataService.html":{}}}],["through",{"_index":1045,"title":{},"body":{"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"license.html":{}}}],["throughout",{"_index":3143,"title":{},"body":{"license.html":{}}}],["throw",{"_index":1661,"title":{},"body":{"injectables/LibraryService.html":{}}}],["thumb",{"_index":2016,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumbnail",{"_index":2022,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumbnails",{"_index":2015,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["thumburl",{"_index":865,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["time",{"_index":899,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["time.pipe",{"_index":889,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{}}}],["timed",{"_index":1478,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1473,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1450,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":874,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerToolbarComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2936,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["title",{"_index":196,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":3490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":2037,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2570,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":551,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{}}}],["toggle",{"_index":1958,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["togglehelpdialog",{"_index":1388,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2586,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":2274,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["togglerepeat",{"_index":2063,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["toggleshuffle",{"_index":2064,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{}}}],["togglevisualmode",{"_index":2960,"title":{},"body":{"injectables/VisualsService.html":{}}}],["toolbar",{"_index":2259,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["toolbar.component",{"_index":2552,"title":{},"body":{"components/ShellComponent.html":{}}}],["toolbar.component.html",{"_index":2264,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2265,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":2258,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:106",{"_index":2283,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:110",{"_index":2285,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:121",{"_index":2278,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:125",{"_index":2292,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:129",{"_index":2293,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:133",{"_index":2290,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:138",{"_index":2281,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:142",{"_index":2287,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:146",{"_index":2289,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:150",{"_index":2280,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:154",{"_index":2276,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:158",{"_index":2291,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:29",{"_index":2295,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:30",{"_index":2297,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":2294,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:32",{"_index":2296,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar.component.ts:34",{"_index":2299,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["toolbar/player",{"_index":2257,"title":{},"body":{"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{}}}],["top",{"_index":2587,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["tosignal",{"_index":2547,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2531,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1423,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["totalfilestoprocess",{"_index":1772,"title":{},"body":{"injectables/MetadataService.html":{}}}],["totallength",{"_index":1911,"title":{},"body":{"injectables/MetadataService.html":{}}}],["touppercase",{"_index":1426,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":93,"title":{"interfaces/Track.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{}}}],["track.album",{"_index":263,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.artist",{"_index":259,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.coverurl",{"_index":1635,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.filename",{"_index":1638,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.hash",{"_index":285,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.metadata",{"_index":2180,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":2184,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":2183,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.originalurl",{"_index":2188,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.originalurl",{"_index":2186,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":2182,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.hash",{"_index":2436,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["track.title",{"_index":1637,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.track",{"_index":1636,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum",{"_index":1607,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyalbum(index",{"_index":283,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyartist",{"_index":1608,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbyartist(index",{"_index":282,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackbyhash",{"_index":1609,"title":{},"body":{"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackbyhash(index",{"_index":284,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["trackmetadata",{"_index":729,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":192,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tracks().length",{"_index":1634,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tracks.push(...albumtracks",{"_index":270,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["trackswithbloburls",{"_index":1653,"title":{},"body":{"injectables/LibraryService.html":{}}}],["trademark",{"_index":3348,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":3331,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2945,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":657,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":658,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["translate",{"_index":3227,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2833,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["treaty",{"_index":3272,"title":{},"body":{"license.html":{}}}],["tree",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trigger",{"_index":2466,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menu",{"_index":2471,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.menudata",{"_index":2468,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trigger.openmenu",{"_index":2470,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["true",{"_index":656,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":937,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LibraryService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["ts",{"_index":2145,"title":{},"body":{"injectables/PlayerService.html":{}}}],["tslib",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":1224,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/ColorVariant.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverArtUrls.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/ThemeColor.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3399,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":737,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["types",{"_index":2147,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ui",{"_index":2427,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":322,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["uint8array(endchunk",{"_index":1908,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(middlechunk",{"_index":1885,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(quarterchunk",{"_index":1894,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(threequarterchunk",{"_index":1899,"title":{},"body":{"injectables/MetadataService.html":{}}}],["uint8array(totallength",{"_index":1916,"title":{},"body":{"injectables/MetadataService.html":{}}}],["unconditional",{"_index":3334,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":3282,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":210,"title":{},"body":{"interfaces/Album.html":{},"pipes/BitratePipe.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":3213,"title":{},"body":{"license.html":{}}}],["understands",{"_index":3382,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":3243,"title":{},"body":{"license.html":{}}}],["unique",{"_index":180,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["uniquealbums",{"_index":173,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniquealbums().length",{"_index":1631,"title":{},"body":{"components/LibraryComponent.html":{}}}],["uniqueartists",{"_index":162,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniqueartists().length",{"_index":1629,"title":{},"body":{"components/LibraryComponent.html":{}}}],["unit",{"_index":3521,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":3117,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{},"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1435,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":1381,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["update",{"_index":598,"title":{},"body":{"injectables/AudioService.html":{},"injectables/PlayerService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["update.service",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["updatecssproperties",{"_index":819,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updated",{"_index":2428,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["updateinterval",{"_index":2927,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1703,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1715,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemetathemecolor",{"_index":832,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updates",{"_index":798,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["updateservice",{"_index":354,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["upload",{"_index":675,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":3151,"title":{},"body":{"license.html":{}}}],["url",{"_index":719,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1460,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2867,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":629,"title":{},"body":{"injectables/AudioService.html":{}}}],["url.createobjecturl(new",{"_index":1830,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.originalurl",{"_index":1863,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(meta.coverurl.thumburl",{"_index":1865,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1851,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":630,"title":{},"body":{"injectables/AudioService.html":{}}}],["urls",{"_index":1829,"title":{},"body":{"injectables/MetadataService.html":{}}}],["urlsearchparams",{"_index":1547,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["use",{"_index":207,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"license.html":{}}}],["useclass",{"_index":3473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2617,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":3464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useleadingzero",{"_index":3063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["user",{"_index":967,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["uses",{"_index":3079,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1748,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1749,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":3467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1750,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":3071,"title":{},"body":{"index.html":{}}}],["v",{"_index":3249,"title":{},"body":{"license.html":{}}}],["validfiles",{"_index":2160,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.length",{"_index":2164,"title":{},"body":{"injectables/PlayerService.html":{}}}],["validfiles.push",{"_index":2163,"title":{},"body":{"injectables/PlayerService.html":{}}}],["value",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LibraryService.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":999,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":664,"title":{},"body":{"pipes/BandPipe.html":{}}}],["values",{"_index":994,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["var",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":820,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["variables.join",{"_index":831,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variables.push",{"_index":824,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variant",{"_index":2361,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["variant.darkenfactor",{"_index":841,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variant.lightenfactor",{"_index":839,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["variant.suffix",{"_index":844,"title":{},"body":{"interfaces/ColorVariant.html":{},"injectables/ThemeService.html":{}}}],["various",{"_index":682,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verarbeitung",{"_index":1649,"title":{},"body":{"injectables/LibraryService.html":{}}}],["verfügbar",{"_index":2707,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":3047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle).then((granted",{"_index":932,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":964,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2692,"title":{},"body":{"injectables/UpdateService.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2690,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2701,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2694,"title":{},"body":{"injectables/UpdateService.html":{}}}],["very",{"_index":1875,"title":{},"body":{"injectables/MetadataService.html":{},"components/PlaylistComponent.html":{}}}],["vi",{"_index":3251,"title":{},"body":{"license.html":{}}}],["via",{"_index":3527,"title":{},"body":{"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":859,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverArtUrls.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"dependencies.html":{},"index.html":{}}}],["vibrant.from(url).getpalette",{"_index":1921,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1789,"title":{},"body":{"injectables/MetadataService.html":{}}}],["viewchild",{"_index":986,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":2565,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('menutrigger",{"_index":2396,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild('scrollviewport",{"_index":2398,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewchild>('eqcanvas",{"_index":990,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["viewport",{"_index":2404,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":2440,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":2457,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":2410,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":2431,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":2462,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":2456,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":3267,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":1142,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visible",{"_index":1143,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":2439,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":2442,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":3090,"title":{},"body":{"index.html":{}}}],["visualizefrequencybars",{"_index":2838,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2847,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2839,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2849,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizer.component.html",{"_index":2720,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2721,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":888,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":2391,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":405,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":324,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":320,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizerworker",{"_index":2860,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2959,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals.types",{"_index":2853,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2799,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2796,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2795,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":310,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":408,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":2729,"title":{"injectables/VisualsService.html":{}},"body":{"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":2830,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":314,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/PlayerToolbarComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":2360,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["volume",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{},"components/PlayerToolbarComponent.html":{}}}],["volumeicon",{"_index":2266,"title":{},"body":{"components/PlayerToolbarComponent.html":{}}}],["voluntarily",{"_index":3209,"title":{},"body":{"license.html":{}}}],["wait",{"_index":2419,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":3351,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3274,"title":{},"body":{"license.html":{}}}],["waives",{"_index":3283,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2973,"title":{},"body":{"injectables/WakelockService.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2974,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":2114,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":3048,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":2166,"title":{},"body":{"injectables/PlayerService.html":{}}}],["warranties",{"_index":3131,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":1791,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["wav",{"_index":1079,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["we're",{"_index":1167,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/PlayerService.html":{}}}],["web",{"_index":3069,"title":{},"body":{"index.html":{},"properties.html":{}}}],["webstorage",{"_index":512,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorVariant.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["well",{"_index":3291,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1868,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2711,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":3183,"title":{},"body":{"license.html":{}}}],["whether",{"_index":3289,"title":{},"body":{"license.html":{}}}],["white",{"_index":1198,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["width",{"_index":1004,"title":{},"body":{"components/EqualizerComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window",{"_index":2153,"title":{},"body":{"injectables/PlayerService.html":{}}}],["window.focus",{"_index":2156,"title":{},"body":{"injectables/PlayerService.html":{}}}],["wish",{"_index":3162,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":3462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":3460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":3458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1695,"title":{},"body":{"injectables/LoaderService.html":{},"license.html":{}}}],["withviewtransitions",{"_index":3463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":3156,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1454,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1459,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":3450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":3097,"title":{},"body":{"index.html":{}}}],["works",{"_index":957,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":3144,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":3294,"title":{},"body":{"license.html":{}}}],["writablesignal",{"_index":1205,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["writes",{"_index":2615,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["wurde",{"_index":1285,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x",{"_index":1027,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y",{"_index":1028,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":81,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["yield",{"_index":1805,"title":{},"body":{"injectables/MetadataService.html":{}}}],["z",{"_index":1192,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zugewiesen",{"_index":1266,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Album.html":{"url":"interfaces/Album.html","title":"interface - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverArtUrls\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverArtUrls\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, computed, effect, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverArtUrls } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { LibraryService } from './library.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverArtUrls;\n}\n\n@Component({\n  imports: [\n    MatListModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix,\n    MatProgressSpinner\n  ],\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss'\n})\nexport default class LibraryComponent implements OnInit, OnDestroy {\n  private readonly metadataService = inject(MetadataService);\n  private readonly playerService = inject(PlayerService);\n  protected readonly libraryService = inject(LibraryService);\n\n  protected readonly searchTerm = signal('');\n\n  private readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  private readonly selectedArtist = signal(undefined);\n  protected readonly selectedAlbum = signal(undefined);\n  private readonly selectedTrack = signal(undefined);\n\n  protected readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  protected readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  protected readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  private processingInterval: number | undefined;\n\n  constructor() {\n    // Automatically manage the interval based on processing state\n    effect(() => {\n      const isProcessing = this.metadataService.processing();\n\n      if (isProcessing && !this.processingInterval) {\n        this.processingInterval = globalThis.setInterval(() => {\n          void this.libraryService.loadLibraryFromDb();\n        }, 5000);\n      } else if (!isProcessing && this.processingInterval) {\n        clearInterval(this.processingInterval);\n        this.processingInterval = undefined;\n      }\n    });\n  }\n\n  ngOnInit() {\n    void this.libraryService.loadLibraryFromDb();\n  }\n\n  ngOnDestroy() {\n    if (this.processingInterval) {\n      clearInterval(this.processingInterval);\n      this.processingInterval = undefined;\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:18\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  imports: [ShellComponent],\n  templateUrl: './app.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  private readonly updateService = inject(UpdateService);\n  private readonly iconRegistry = inject(MatIconRegistry);\n  private readonly sanitizer = inject(DomSanitizer);\n  private readonly themeService = inject(ThemeService);\n\n  constructor() {\n    void this.updateService.init();\n\n    this.themeService.initializeTheme();\n\n    this.iconRegistry.addSvgIconSet(this.sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    this.iconRegistry.addSvgIcon('logo', this.sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                resetFrequencyBandGain\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nresetFrequencyBandGain(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FREQUENCY_BANDS, FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport type EqualizerGainValues = {\n  [Band in FrequencyBand]: number;\n};\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private readonly localStorageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.localStorageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.localStorageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.localStorageService.retrieve('equalizerGainValues') ??\n      ({ 31: 0, 63: 0, 125: 0, 250: 0, 500: 0, 1000: 0, 2000: 0, 4000: 0, 8000: 0, 16_000: 0 } as EqualizerGainValues)\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._eqGainNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      this._eqGainNode.disconnect(analyser);\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    for (const analyser of this._connectedAnalyzers) {\n      this._eqGainNode.disconnect(analyser);\n    }\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = structuredClone(this.equalizerGainValues());\n    bandGains[bandFrequency] = gainValue;\n\n    this.localStorageService.store('equalizerGainValues', bandGains);\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  resetFrequencyBandGain(bandFrequency: FrequencyBand) {\n    this.setFrequencyBandGain(bandFrequency, 0);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand): string {\n    if (!value || value = 1000) {\n      const kValue = value / 1000;\n      return kValue % 1 === 0 ? `${Math.floor(kValue)}K` : `${kValue.toFixed(1)}K`;\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate',\n  pure: true\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | null | undefined): string {\n    if (value == null || value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton, getLoadFilesMenuEntry } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.wait(300);\n  getLoadFilesMenuEntry().click();\n\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorVariant.html":{"url":"interfaces/ColorVariant.html","title":"interface - ColorVariant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorVariant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkenFactor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightenFactor\n                                        \n                                \n                                \n                                        \n                                            suffix\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkenFactor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkenFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightenFactor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightenFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suffix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { computed, effect, inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { Colord, colord } from 'colord';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { ThemeColor } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\ninterface ColorVariant {\n  suffix: string;\n  lightenFactor?: number;\n  darkenFactor?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private readonly meta = inject(Meta);\n  private readonly localStorageService = inject(LocalStorageService);\n\n  private readonly COLOR_VARIANTS: ColorVariant[] = [\n    { suffix: '0', lightenFactor: 0.55 },\n    { suffix: '10', lightenFactor: 0.45 },\n    { suffix: '20', lightenFactor: 0.35 },\n    { suffix: '25', lightenFactor: 0.3 },\n    { suffix: '30', lightenFactor: 0.25 },\n    { suffix: '35', lightenFactor: 0.2 },\n    { suffix: '40', lightenFactor: 0.15 },\n    { suffix: '50' },\n    { suffix: '60', darkenFactor: 0.05 },\n    { suffix: '70', darkenFactor: 0.1 },\n    { suffix: '80', darkenFactor: 0.15 },\n    { suffix: '90', darkenFactor: 0.18 },\n    { suffix: '95', darkenFactor: 0.21 },\n    { suffix: '98', darkenFactor: 0.24 },\n    { suffix: '99', darkenFactor: 0.27 },\n    { suffix: '100', darkenFactor: 0.3 }\n  ];\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  readonly primaryColor = signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR);\n\n  readonly accentColor = signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR);\n\n  readonly primaryColorPalette = computed(() => this.computeColors(this.primaryColor()));\n  readonly accentColorPalette = computed(() => this.computeColors(this.accentColor()));\n\n  constructor() {\n    // Automatische Updates bei Änderungen\n    effect(() => {\n      this.updateCSSProperties();\n      this.updateMetaThemeColor();\n    });\n\n    effect(() => {\n      this.localStorageService.store('darkMode', this.darkMode());\n    });\n\n    effect(() => {\n      this.localStorageService.store('primaryColor', this.primaryColor());\n    });\n\n    effect(() => {\n      this.localStorageService.store('accentColor', this.accentColor());\n    });\n  }\n\n  initializeTheme() {\n    this.updateCSSProperties();\n    this.updateMetaThemeColor();\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n  }\n\n  setColors(colors: ColorConfig) {\n    this.primaryColor.set(colors.mainColor || FALLBACK_PRIMARY_COLOR);\n    this.accentColor.set(colors.peakColor || FALLBACK_ACCENT_COLOR);\n  }\n\n  setPrimaryColor(color: string) {\n    this.primaryColor.set(color || FALLBACK_PRIMARY_COLOR);\n  }\n\n  setAccentColor(color: string) {\n    this.accentColor.set(color || FALLBACK_ACCENT_COLOR);\n  }\n\n  private updateCSSProperties() {\n    const variables: string[] = [`--app-color-scheme: ${this.darkMode() ? 'dark' : 'light'}`];\n\n    for (const color of this.primaryColorPalette()) {\n      variables.push(`--theme-primary-${color.name}: ${color.hex}`);\n    }\n\n    for (const color of this.accentColorPalette()) {\n      variables.push(`--theme-accent-${color.name}: ${color.hex}`);\n    }\n\n    document.documentElement.style.cssText += variables.join(';');\n  }\n\n  private updateMetaThemeColor() {\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor() });\n  }\n\n  private computeColors(hex: string): ThemeColor[] {\n    const baseColor = colord(hex);\n\n    return this.COLOR_VARIANTS.map((variant) => {\n      let color = baseColor;\n\n      if (variant.lightenFactor) {\n        color = baseColor.lighten(variant.lightenFactor);\n      } else if (variant.darkenFactor) {\n        color = baseColor.darken(variant.darkenFactor);\n      }\n\n      return this.getThemeColor(color, variant.suffix);\n    });\n  }\n\n  private getThemeColor(color: Colord, name: string): ThemeColor {\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name,\n      hex: color.toHex(),\n      darkContrast: color.brightness() > lightnessLimit\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            TimePipe\n                            BitratePipe\n                                VisualizerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Protected\n                                    Readonly\n                                coverUrl\n                            \n                            \n                                    Protected\n                                    Readonly\n                                playerService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.originalUrl)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BitratePipe } from './bitrate.pipe';\nimport { VisualizerComponent } from '../visualizer/visualizer.component';\nimport { PlayerService } from '../player.service';\nimport { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  imports: [TimePipe, BitratePipe, VisualizerComponent],\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CoverDisplayComponent {\n  private readonly themeService = inject(ThemeService);\n  protected readonly playerService = inject(PlayerService);\n\n  protected readonly coverUrl = computed(() => this.playerService.currentlyLoadedTrack()?.metadata?.coverUrl?.originalUrl);\n\n  protected readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.darkMuted?.hex\n      : this.playerService.currentlyLoadedTrack()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = playerService.currentlyLoadedTrack();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n\n    @if (currentTrack?.metadata?.coverColors) {\n      &nbsp;\n      Color Palette:\n      \n        \n        \n        \n        \n        \n        \n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = playerService.currentlyLoadedTrack();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }    @if (currentTrack?.metadata?.coverColors) {             Color Palette:                                                                }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirHandleEntry.html":{"url":"interfaces/DirHandleEntry.html","title":"interface - DirHandleEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirHandleEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:     FileSystemDirectoryHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemDirectoryHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private readonly indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatSliderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                audioService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                BANDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                            \n                                drawEqualizerResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawEqualizerResponse\n                        \n                    \n                \n            \n            \n                \ndrawEqualizerResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, effect, ElementRef, inject, viewChild } from '@angular/core';\nimport { AudioService } from '../audio.service';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FREQUENCY_BANDS } from '../player.types';\nimport { ThemeService } from '../../theme/theme.service';\n\n@Component({\n  imports: [MatSliderModule],\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  protected readonly audioService = inject(AudioService);\n  private readonly themeService = inject(ThemeService);\n  private readonly canvasRef = viewChild>('eqCanvas');\n\n  protected readonly BANDS = FREQUENCY_BANDS;\n\n  constructor() {\n    // React to changes in equalizer values\n    effect(() => {\n      this.audioService.equalizerGainValues(); // Track the signal\n      this.audioService.baseGain(); // Track gain changes\n      this.drawEqualizerResponse();\n    });\n  }\n\n  displayFunction(value: number): string {\n    const numberValue = value.toFixed(1);\n    return numberValue + ' dB';\n  }\n\n  drawEqualizerResponse(): void {\n    if (!this.canvasRef()) return;\n\n    const canvas = this.canvasRef()!.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw grid lines\n    ctx.strokeStyle = '#dddddd';\n    ctx.lineWidth = 0.2;\n\n    // Horizontal grid lines (every 3dB)\n    for (let db = -12; db  {\n      return ((Math.log10(freq) - Math.log10(minFreq)) / (Math.log10(maxFreq) - Math.log10(minFreq))) * width;\n    };\n\n    // Draw frequency response curve with gain applied\n    ctx.strokeStyle = this.themeService.primaryColor();\n    ctx.lineWidth = 3;\n\n    const freqPoints: { x: number; y: number }[] = [];\n\n    // Start with the lowest frequency\n    freqPoints.push({\n      x: 0,\n      y: height / 2 - ((eqValues[this.BANDS[0]] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw points for each frequency band with gain applied\n    for (const freq of this.BANDS) {\n      const x = getXPos(freq);\n      // Apply gain influence to the curve\n      const y = height / 2 - ((eqValues[freq] + (gainValue - 1) * 12) * height) / 24;\n      freqPoints.push({ x, y });\n    }\n\n    // End with the highest frequency\n    freqPoints.push({\n      x: width,\n      y: height / 2 - ((eqValues[this.BANDS.at(-1)!] + (gainValue - 1) * 12) * height) / 24\n    });\n\n    // Draw curve through points\n    ctx.beginPath();\n    ctx.moveTo(freqPoints[0].x, freqPoints[0].y);\n\n    for (let i = 0; i  freq >= minFreq && freq = 1000 ? `${freq / 1000}k` : `${freq}`;\n      ctx.fillText(label, x, height - 5);\n    }\n\n    // Display gain value\n    ctx.fillStyle = this.themeService.accentColor();\n    ctx.font = 'bold 12px Arial';\n    ctx.textAlign = 'right';\n    ctx.fillText(`Gain: ${gainValue.toFixed(1)}x`, width - 10, 20);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  @for (band of BANDS; track band) {\n    \n      \n        {{ band | band }}-->\n        \n      \n    \n  }\n\n  \n    \n      GAIN-->\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          @for (band of BANDS; track band) {                  {{ band | band }}-->                    }            GAIN-->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ALLOWED_MIMETYPES = [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n];\n\nexport const ALLOWED_EXTENSIONS = ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4'];\n\nexport interface FileData {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowedTypes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fileHandlesDropped\n                            \n                            \n                                filesDroped\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowedTypes\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['*/*']\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        fileHandlesDropped\n                    \n                \n                \n                    \n                        Type :     FileSystemFileHandle[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filesDroped\n                    \n                \n                \n                    \n                        Type :     File[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n  readonly fileHandlesDropped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n\n    // Try to get file handles first\n    if (event.dataTransfer?.items && 'getAsFileSystemHandle' in event.dataTransfer.items[0]) {\n      try {\n        const fileHandles: FileSystemFileHandle[] = [];\n        const promises: Promise[] = [];\n\n        for (const item of Array.from(event.dataTransfer.items)) {\n          const promise = (item as any).getAsFileSystemHandle().then((handle: any) => {\n            if (handle && handle.kind === 'file') {\n              fileHandles.push(handle);\n            }\n          });\n          promises.push(promise);\n        }\n\n        // When all promises are resolved, emit the file handles\n        Promise.all(promises)\n          .then(() => {\n            if (fileHandles.length > 0) {\n              this.fileHandlesDropped.emit(fileHandles);\n            } else {\n              // Fall back to regular files if no file handles were obtained\n              this.handleFileFallback(event);\n            }\n          })\n          .catch(() => {\n            // Fall back to regular files on error\n            this.handleFileFallback(event);\n          });\n\n        return; // Exit early - we're handling with file handles\n      } catch (error) {\n        // Fall through to file fallback\n        console.warn('File System Access API failed:', error);\n      }\n    }\n\n    // Fallback to regular files\n    this.handleFileFallback(event);\n  }\n\n  private handleFileFallback(event: DragEvent) {\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (const file of Array.from(droppedFiles)) {\n      if (file && this.allowedTypes().includes(file.type)) {\n        files.push(file);\n      }\n    }\n    this.filesDroped.emit(files);\n  }\n}\n\n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileData } from './file-loader.helpers';\nimport { WritableSignal } from '@angular/core';\n\nexport abstract class FileLoaderService {\n  abstract currentFolderHandle: WritableSignal;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private readonly checkIntervals: number[] = [];\n  private readonly pressedButtonsCaches: ActionCache[][] = [];\n  private readonly activeAxesCaches: ActionCache[][] = [];\n\n  private readonly buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private readonly eventManager = inject(EventManager);\n  private readonly document = inject(DOCUMENT);\n  private readonly dialog = inject(MatDialog);\n\n  private readonly defaults: Partial = {\n    element: this.document\n  };\n\n  private readonly hotkeys: Map = new Map();\n\n  private helpOpen = false;\n\n  private dialogRef?: MatDialogRef;\n\n  private _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private readonly eventManager = inject(EventManager);\n  private readonly document = inject(DOCUMENT);\n  private readonly dialog = inject(MatDialog);\n\n  private readonly defaults: Partial = {\n    element: this.document\n  };\n\n  private readonly hotkeys: Map = new Map();\n\n  private helpOpen = false;\n\n  private dialogRef?: MatDialogRef;\n\n  private _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule],\n  templateUrl: './hotkeys-help-dialog.component.html',\n  styleUrl: './hotkeys-help-dialog.component.scss'\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:21\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule],\n  templateUrl: './hotkeys-help-dialog.component.html',\n  styleUrl: './hotkeys-help-dialog.component.scss'\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private readonly eventManager = inject(EventManager);\n  private readonly document = inject(DOCUMENT);\n  private readonly dialog = inject(MatDialog);\n\n  private readonly defaults: Partial = {\n    element: this.document\n  };\n\n  private readonly hotkeys: Map = new Map();\n\n  private helpOpen = false;\n\n  private dialogRef?: MatDialogRef;\n\n  private _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private readonly worker: Worker;\n  private nextId = 0;\n  private readonly pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexedDbTrackMetadata.html":{"url":"interfaces/IndexedDbTrackMetadata.html","title":"interface - IndexedDbTrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IndexedDbTrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TrackMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private readonly http = inject(HttpClient);\n\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private readonly http = inject(HttpClient);\n\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private readonly http = inject(HttpClient);\n\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private readonly http = inject(HttpClient);\n\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private readonly http = inject(HttpClient);\n\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch {\n      // console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverArtUrls | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || images.length === 0) {\n      return undefined;\n    }\n\n    // Find images by size\n    const smallImage = images.find((img) => img.size === 'small')?.['#text'] || images.find((img) => img.size === 'medium')?.['#text'] || images[0]?.['#text'];\n\n    const largeImage =\n      images.find((img) => img.size === 'mega')?.['#text'] ||\n      images.find((img) => img.size === 'extralarge')?.['#text'] ||\n      images.find((img) => img.size === 'large')?.['#text'] ||\n      images.at(-1)?.['#text'] ||\n      smallImage;\n\n    if (!smallImage || !largeImage) {\n      return undefined;\n    }\n\n    return {\n      thumbUrl: ensureHttps(smallImage),\n      originalUrl: ensureHttps(largeImage)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService implements FileLoaderService {\n  private readonly fileInput!: HTMLInputElement;\n\n  private files: File[] = [];\n\n  constructor() {\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  readonly currentFolderHandle = signal(undefined);\n\n  async openFiles(): Promise {\n    return this.files.map((file) => ({ file }));\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            MatMenu\n                            MatMenuContent\n                            MatMenuItem\n                            MatMenuTrigger\n                            MatIcon\n                            MatIconButton\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            SafePipe\n                            MatHint\n                            FormsModule\n                            MatFormField\n                            MatInput\n                            MatPrefix\n                            MatSuffix\n                            MatProgressSpinner\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                libraryService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                searchTerm\n                            \n                            \n                                    Protected\n                                    Readonly\n                                selectedAlbum\n                            \n                            \n                                    Protected\n                                    Readonly\n                                tracks\n                            \n                            \n                                    Protected\n                                    Readonly\n                                uniqueAlbums\n                            \n                            \n                                    Protected\n                                    Readonly\n                                uniqueArtists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAlbumToPlaylist\n                            \n                            \n                                    Async\n                                addArtistToPlaylist\n                            \n                            \n                                    Async\n                                addTracksToPlaylist\n                            \n                            \n                                    Async\n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                playTrack\n                            \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                            \n                                trackByAlbum\n                            \n                            \n                                trackByArtist\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:141\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAlbumToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAlbumToPlaylist(album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addArtistToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addArtistToPlaylist(artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTracksToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:230\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbTracks\n                                            \n                                                        IndexedDbTrackMetadata[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTrackToPlaylist(track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByAlbum\n                        \n                    \n                \n            \n            \n                \ntrackByAlbum(index: number, album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:251\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByArtist\n                        \n                    \n                \n            \n            \n                \ntrackByArtist(index: number, artist: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:247\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                artist\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:255\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        libraryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LibraryService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        selectedAlbum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        uniqueAlbums\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        uniqueArtists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, effect, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { SafePipe } from 'safe-pipe';\nimport { RemoteCoverArtUrls } from '../metadata-service/metadata.types';\nimport { MetadataService } from '../metadata-service/metadata.service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormField, MatHint, MatInput, MatPrefix, MatSuffix } from '@angular/material/input';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { LibraryService } from './library.service';\n\nexport interface Album {\n  name: string;\n  year: string;\n  coverUrl: RemoteCoverArtUrls;\n}\n\n@Component({\n  imports: [\n    MatListModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    SafePipe,\n    MatHint,\n    FormsModule,\n    MatFormField,\n    MatInput,\n    MatPrefix,\n    MatSuffix,\n    MatProgressSpinner\n  ],\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss'\n})\nexport default class LibraryComponent implements OnInit, OnDestroy {\n  private readonly metadataService = inject(MetadataService);\n  private readonly playerService = inject(PlayerService);\n  protected readonly libraryService = inject(LibraryService);\n\n  protected readonly searchTerm = signal('');\n\n  private readonly filteredBySerchterm = computed(() => {\n    const searchTerm = this.searchTerm();\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return this.libraryService.indexedDbTracks().filter((tag) => {\n      return (\n        tag.title?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.artist?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.fileName?.toLowerCase().includes(lowerSearchTerm) ||\n        tag.album?.toLowerCase().includes(lowerSearchTerm)\n      );\n    });\n  });\n\n  private readonly selectedArtist = signal(undefined);\n  protected readonly selectedAlbum = signal(undefined);\n  private readonly selectedTrack = signal(undefined);\n\n  protected readonly uniqueArtists = computed(() => {\n    const filtered = this.filteredBySerchterm()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered.toSorted((a, b) => a.localeCompare(b)))];\n  });\n\n  protected readonly uniqueAlbums = computed(() => {\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n\n    filtered = artist ? filtered.filter((item) => item.artist === artist && !!item.album) : filtered.filter((item) => !!item.album);\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          year: tag.year || '',\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  protected readonly tracks = computed(() => {\n    this.searchTerm();\n\n    let filtered = this.filteredBySerchterm();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track === undefined ? Number.NaN : Number(a.track);\n      const bTrack = b.track === undefined ? Number.NaN : Number(b.track);\n\n      // If both tracks have track numbers, compare them\n      if (!Number.isNaN(aTrack) && !Number.isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  private processingInterval: number | undefined;\n\n  constructor() {\n    // Automatically manage the interval based on processing state\n    effect(() => {\n      const isProcessing = this.metadataService.processing();\n\n      if (isProcessing && !this.processingInterval) {\n        this.processingInterval = globalThis.setInterval(() => {\n          void this.libraryService.loadLibraryFromDb();\n        }, 5000);\n      } else if (!isProcessing && this.processingInterval) {\n        clearInterval(this.processingInterval);\n        this.processingInterval = undefined;\n      }\n    });\n  }\n\n  ngOnInit() {\n    void this.libraryService.loadLibraryFromDb();\n  }\n\n  ngOnDestroy() {\n    if (this.processingInterval) {\n      clearInterval(this.processingInterval);\n      this.processingInterval = undefined;\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      await this.playerService.playTrackByHash(track.hash);\n      // void this.router.navigate(['/player']);\n    }\n  }\n\n  async addArtistToPlaylist(artist: string) {\n    if (artist) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.artist === artist);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      await this.addTracksToPlaylist(...this.filteredBySerchterm());\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    if (album) {\n      const tracks = this.filteredBySerchterm().filter((track) => track.album === album.name);\n      await this.addTracksToPlaylist(...tracks);\n    } else {\n      // filter by all unique albums\n      const albums = this.uniqueAlbums();\n\n      const tracks: IndexedDbTrackMetadata[] = [];\n      for (const currentAlbum of albums) {\n        const albumTracks = this.filteredBySerchterm().filter((track) => track.album === currentAlbum.name);\n        tracks.push(...albumTracks);\n      }\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    if (track) {\n      await this.addTracksToPlaylist(track);\n    } else {\n      const tracks = this.filteredBySerchterm();\n      await this.addTracksToPlaylist(...tracks);\n    }\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n\n  trackByArtist(index: number, artist: string): string {\n    return artist;\n  }\n\n  trackByAlbum(index: number, album: Album): string {\n    return album.name;\n  }\n\n  trackByHash(index: number, track: IndexedDbTrackMetadata): string {\n    return track.hash;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ uniqueArtists().length }}) \n        \n          \n            \n           \n      \n        {{ artist }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ uniqueAlbums().length }})\n        \n          \n            \n           \n      \n        \n          @if (album && album.coverUrl) {\n            \n          }\n        \n        {{ album.name }}{{ album.year ? ` | ${album.year}` : '' }}\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n    \n      \n        @if (libraryService.isLoading()) {\n          \n            \n          \n        }\n        ALL ({{ tracks().length }})\n        \n          \n            \n          \n        \n      \n      \n        \n          @if (track && track.coverUrl) {\n            \n          }\n        \n        @if (selectedAlbum()) {\n          {{ track.track ? `${track.track}. ` : '' }}{{ track.title || track.fileName }}\n        } @else {\n          {{ track.title || track.fileName }}\n        }\n        \n          \n            \n          \n        \n      \n    \n  \n  \n  \n    \n      Add to Playlist\n    \n  \n\n\n\n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ tracks().length }} entries\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (libraryService.isLoading()) {                                        }        ALL ({{ uniqueArtists().length }})                                                        {{ artist }}                                                                          Add to Playlist                          @if (libraryService.isLoading()) {                                        }        ALL ({{ uniqueAlbums().length }})                                                                 @if (album && album.coverUrl) {                      }                {{ album.name }}{{ album.year ? ` | ${album.year}` : \\'\\' }}                                                                          Add to Playlist                          @if (libraryService.isLoading()) {                                        }        ALL ({{ tracks().length }})                                                                              @if (track && track.coverUrl) {                      }                @if (selectedAlbum()) {          {{ track.track ? `${track.track}. ` : \\'\\' }}{{ track.title || track.fileName }}        } @else {          {{ track.title || track.fileName }}        }                                                                          Add to Playlist            @if (searchTerm()) {                }  {{ tracks().length }} entries'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LibraryService.html":{"url":"injectables/LibraryService.html","title":"injectable - LibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                indexedDbTracks\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadLibraryFromDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLibraryFromDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLibraryFromDb()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        indexedDbTracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata } from '../player.types';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibraryService {\n  private readonly indexedDbService = inject(NgxIndexedDBService);\n  private readonly metadataService = inject(MetadataService);\n\n  readonly isLoading = signal(false);\n  readonly indexedDbTracks = signal([]);\n\n  async loadLibraryFromDb(): Promise {\n    try {\n      this.isLoading.set(true);\n\n      const result = await firstValueFrom(this.indexedDbService.getAll('library'));\n\n      // Parallele Verarbeitung für bessere Performance\n      const tracksWithBlobUrls = await Promise.all(result.map((track) => this.metadataService.createObjectUrlForEmbeddedPicture(track)));\n\n      this.indexedDbTracks.set(tracksWithBlobUrls);\n      return tracksWithBlobUrls;\n    } catch (error) {\n      console.error('Error loading library data:', error);\n      this.indexedDbTracks.set([]);\n      throw error; // Re-throw für Caller\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private readonly loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => void) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                processing\n                            \n                            \n                                    Readonly\n                                processingFile\n                            \n                            \n                                    Readonly\n                                processionPercent\n                            \n                            \n                                    Readonly\n                                statusText\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToLibrary\n                            \n                            \n                                createObjectUrlForEmbeddedPicture\n                            \n                            \n                                    Async\n                                createTrackFromFile\n                            \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToLibrary\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToLibrary(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AsyncGenerator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createObjectUrlForEmbeddedPicture\n                        \n                    \n                \n            \n            \n                \ncreateObjectUrlForEmbeddedPicture(meta: TrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meta\n                                            \n                                                            TrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TrackMetadata\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTrackFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTrackFromFile(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.filesToProcess() > 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processingFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        processionPercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        statusText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata, type Track, TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\nimport { FileData } from '../file-loader-service/file-loader.helpers';\nimport { md5 } from 'hash-wasm';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private readonly id3TagsService = inject(Id3TagsService);\n  private readonly lastfmMetadataService = inject(LastfmMetadataService);\n  private readonly musicbrainzService = inject(MusicbrainzService);\n  private readonly indexedDBService = inject(NgxIndexedDBService);\n  private readonly localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  private readonly totalFilesToProcess = signal(0);\n  private readonly filesToProcess = signal(0);\n  readonly processionPercent = computed(() => {\n    return 100 - (this.filesToProcess() / this.totalFilesToProcess()) * 100;\n  });\n\n  readonly processing = computed(() => {\n    return this.filesToProcess() > 0;\n  });\n\n  readonly processingFile = signal('');\n\n  readonly statusText = computed(() => {\n    const totalFilesToProcess = this.totalFilesToProcess();\n    let text = `Processing (${totalFilesToProcess - this.filesToProcess()} / ${totalFilesToProcess}): `;\n    text += this.processing() ? this.processingFile() : 'Finished';\n    return text;\n  });\n\n  async *addFilesToLibrary(...fileDatas: FileData[]): AsyncGenerator {\n    if (fileDatas?.length) {\n      this.totalFilesToProcess.set(fileDatas.length);\n      this.filesToProcess.set(fileDatas.length);\n      for (const fileData of fileDatas.values()) {\n        this.processingFile.set(fileData.file.name);\n        const track = await this.createTrackFromFile(fileData);\n        if (track) {\n          yield track; // Yield each track as soon as it's ready\n        }\n        this.filesToProcess.update((files) => files - 1);\n      }\n      this.totalFilesToProcess.set(0);\n    }\n  }\n\n  async createTrackFromFile(fileData: FileData): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.getMetadata(fileData);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: fileData.file,\n      fileHandle: fileData.fileHandle,\n      metadata: metadata\n    };\n  }\n\n  async getMetadata(fileData: FileData): Promise {\n    this.processingFile.set(fileData.file.name + ' - Generating hash...');\n    const hash = await generateFileHash(fileData.file);\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('library', hash));\n\n      if (metadataCache) {\n        if (\n          metadataCache.embeddedPicture &&\n          this.useTagEmbeddedPicture() &&\n          (metadataCache.coverUrl.thumbUrl === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())\n        ) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumbUrl: url, originalUrl: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    this.processingFile.set(fileData.file.name + ' - Reading tags...');\n    const tags = await this.id3TagsService.extractTags(fileData.file);\n\n    if (!tags) {\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverArtUrls | undefined;\n\n    if (this.useWebMetainfos() && tags.artist && tags.album) {\n      this.processingFile.set(fileData.file.name + ' - Getting cover pictures...');\n      coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n      if (!coverUrls) {\n        coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n    this.processingFile.set(fileData.file.name + ' - Reading colors...');\n    if (coverUrls?.originalUrl) {\n      palette = await extractColorsWithNodeVibrant(coverUrls.originalUrl);\n    } else if (tags.picture) {\n      const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n      palette = await extractColorsWithNodeVibrant(objectUrl);\n      URL.revokeObjectURL(objectUrl);\n    }\n\n    const metadata: IndexedDbTrackMetadata = {\n      hash: hash,\n      fileName: fileData.file.name,\n      fileHandle: fileData.fileHandle,\n      coverUrl: coverUrls ?? { thumbUrl: this.PLACEHOLDER_URL, originalUrl: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await this.indexedDBService.add('library', metadata).toPromise();\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (meta.coverUrl.originalUrl === this.PLACEHOLDER_URL || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      if (meta.coverUrl?.originalUrl?.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.originalUrl);\n      }\n      if (meta.coverUrl?.thumbUrl?.startsWith('blob:')) {\n        URL.revokeObjectURL(meta.coverUrl.thumbUrl);\n      }\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumbUrl: url, originalUrl: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nasync function generateFileHash(file: File): Promise {\n  const fileSize = file.size;\n\n  // For very small files, hash the entire content\n  if (fileSize  1024 * 1024) {\n    const middlePos = Math.floor(fileSize / 2) - Math.floor(chunkSize / 2);\n    const middleChunk = await file.slice(middlePos, middlePos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(middleChunk));\n  }\n\n  // For files larger than 8MB, add quarter and three-quarter samples\n  if (fileSize > 8 * 1024 * 1024) {\n    const quarterPos = Math.floor(fileSize * 0.25);\n    const quarterChunk = await file.slice(quarterPos, quarterPos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(quarterChunk));\n\n    const threeQuarterPos = Math.floor(fileSize * 0.75);\n    const threeQuarterChunk = await file.slice(threeQuarterPos, threeQuarterPos + chunkSize).arrayBuffer();\n    chunks.push(new Uint8Array(threeQuarterChunk));\n  }\n\n  // Last chunk - often contains important metadata in audio files\n  const endChunk = await file.slice(Math.max(0, fileSize - chunkSize), fileSize).arrayBuffer();\n  chunks.push(new Uint8Array(endChunk));\n\n  // Combine all chunks into one array\n  const totalLength = chunks.reduce((sum, chunk) => sum + chunk.length, 0);\n  const combined = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const chunk of chunks) {\n    combined.set(chunk, offset);\n    offset += chunk.length;\n  }\n\n  return await md5(combined);\n}\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  try {\n    const palette = await Vibrant.from(url).getPalette();\n    return {\n      vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n      darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n      lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n      muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n      darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n      lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n    };\n  } catch (error) {\n    console.error('Error extracting colors with Vibrant:', error);\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule],\n  templateUrl: './metadata-settings.component.html'\n})\nexport class MetadataSettingsComponent {\n  protected readonly metadataService = inject(MetadataService);\n  private readonly indexedDBService = inject(NgxIndexedDBService);\n  private readonly localStorageService = inject(LocalStorageService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n    this.localStorageService.store('useWebMetainfos', event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n    this.localStorageService.store('useTagsCache', event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('useTagEmbeddedPicture', event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n    this.localStorageService.store('preferTagEmbeddedPicture', event.checked);\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('library').toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverArtUrls } from './metadata.types';\nimport { CoverArtArchiveApi, MusicBrainzApi } from 'musicbrainz-api';\nimport { ensureHttps } from './metadata.helper';\nimport { escapeLuceneQueryString } from '@motabass/helpers';\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private readonly musicBrainzApi = new MusicBrainzApi({\n    appName: 'gblaster',\n    appVersion: '1.0.0',\n    appContactInfo: 'markus.mohoritsch@gmx.at'\n  });\n\n  private readonly coverArtArchiveApi = new CoverArtArchiveApi();\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch {\n      // console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${escapeLuceneQueryString(album)} AND artist:${escapeLuceneQueryString(artist)} AND primarytype:Album`;\n\n    try {\n      const data = await this.musicBrainzApi.search('release-group', { query });\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch {\n      // console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      // const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      // const coverData = await firstValueFrom(this.http.get(url));\n      const coverData = await this.coverArtArchiveApi.getReleaseGroupCovers(releaseGroupId);\n\n      if (!coverData.images?.length) {\n        return undefined;\n      }\n\n      // First try to find a front cover\n      let coverImage = coverData.images.find((image) => image.front);\n\n      // If no front cover is available, use any image\n      if (!coverImage && coverData.images.length > 0) {\n        coverImage = coverData.images[0];\n      }\n\n      if (!coverImage) {\n        return undefined;\n      }\n\n      // Create a fallback chain for thumbnails\n      const thumb = coverImage.thumbnails['500'] || coverImage.thumbnails.large || coverImage.thumbnails.small || coverImage.image;\n\n      // Use large thumbnail or fall back to the full image\n      const original = coverImage.thumbnails.large || coverImage.image;\n\n      return { thumbUrl: ensureHttps(thumb), originalUrl: ensureHttps(original) };\n    } catch {\n      // console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService implements FileLoaderService {\n  private readonly indexedDbService = inject(NgxIndexedDBService);\n\n  readonly currentFolderHandle = signal(undefined);\n\n  constructor() {\n    firstValueFrom(this.indexedDbService.getByID('directoryHandles', 1)).then((entry) => {\n      if (entry) {\n        verifyPermission(entry.handle).then((granted) => {\n          if (granted) {\n            this.currentFolderHandle.set(entry.handle);\n          }\n        });\n      }\n    });\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle.set(handle);\n      await this.indexedDbService.update('directoryHandles', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    const handle = this.currentFolderHandle();\n    if (handle) {\n      return getAudioFilesFromDirHandle(handle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { TitleService } from '../services/title.service';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  imports: [PlaylistComponent, MatButtonModule, MatIconModule, CoverDisplayComponent, MatToolbarModule, MatTooltipModule, MatSliderModule, MatMenuModule],\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class PlayerComponent implements OnInit {\n  private readonly titleService = inject(TitleService);\n\n  ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                playTrackByHash\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                removeTrackFromPlaylist\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \naddTrackToPlaylist(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:215\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrackByHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrackByHash(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:254\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:236\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTrackFromPlaylist\n                        \n                    \n                \n            \n            \n                \nremoveTrackFromPlaylist(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:298\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:302\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:281\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:316\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:335\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n  private readonly audioService = inject(AudioService);\n  private readonly localStorageService = inject(LocalStorageService);\n  private readonly fileLoaderService = inject(FileLoaderService);\n  private readonly metadataService = inject(MetadataService);\n  private readonly themeService = inject(ThemeService);\n  private readonly wakelockService = inject(WakelockService, { optional: true });\n  private readonly mediaSessionService = inject(MediaSessionService, { optional: true });\n  private readonly destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  readonly durationSeconds = computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Focus the window first to ensure we're the active window\n        window.focus();\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n\n        const validFiles: FileData[] = [];\n\n        for (const fileHandle of launchParameters.files) {\n          try {\n            const file = await fileHandle.getFile();\n            if (ALLOWED_MIMETYPES.includes(file.type)) {\n              validFiles.push({ file, fileHandle });\n            }\n          } catch (error) {\n            console.error('Error processing file:', error);\n          }\n        }\n\n        if (validFiles.length > 0) {\n          await this.addFilesToPlaylist(...validFiles);\n          // If you want to play the first file immediately\n          // if (validFiles.length && this.currentPlaylist().length) {\n          //   const newTrack = this.currentPlaylist()[this.currentPlaylist().length - validFiles.length];\n          //   await this.playTrack(newTrack);\n          // }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.originalUrl ? [{ src: track.metadata.coverUrl.originalUrl, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const fileDatas: FileData[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...fileDatas);\n  }\n\n  addTrackToPlaylist(song: Track) {\n    if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.hash === song.metadata?.hash)) {\n      this.currentPlaylist.update((playlist) => [...playlist, song]);\n    }\n  }\n\n  removeTrackFromPlaylist(track: Track) {\n    // If the removed track is currently loaded, stop playback\n    if (this.currentlyLoadedTrack() === track) {\n      void this.stop();\n    }\n\n    // If the removed track is currently selected, deselect it\n    if (this.selectedTrack() === track) {\n      this.selectedTrack.set(undefined);\n    }\n    // Update the playlist by filtering out the specified track\n    this.currentPlaylist.update((playlist) => playlist.filter((t) => t !== track));\n  }\n\n  //  TODO: replace this with library\n  async addFilesToPlaylist(...fileDatas: FileData[]) {\n    for await (const track of this.metadataService.addFilesToLibrary(...fileDatas)) {\n      this.addTrackToPlaylist(track);\n    }\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async playTrackByHash(hash: string) {\n    const playlist = this.currentPlaylist();\n\n    const track = playlist.find((playlistTrack) => playlistTrack.metadata?.hash === hash);\n    if (track) {\n      await this.playTrack(track);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // eslint-disable-next-line sonarjs/pseudo-random\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerToolbarComponent.html":{"url":"components/PlayerToolbarComponent.html","title":"component - PlayerToolbarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PlayerToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-toolbar\n            \n\n\n            \n                imports\n                \n                            MatIcon\n                            MatIconButton\n                            MatMenu\n                            MatSlider\n                            MatSliderThumb\n                            MatToolbar\n                            MatTooltip\n                            TimePipe\n                            MatMenuTrigger\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-toolbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player-toolbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                audioService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                fileLoaderService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                metadataService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                playerService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadLastDirectory\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showFilePickerAndLoadFiles\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadLastDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLastDirectory()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showFilePickerAndLoadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    showFilePickerAndLoadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        fileLoaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FileLoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player-toolbar/player-toolbar.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\n\nimport { MatMenu, MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { TimePipe } from '../time.pipe';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { PlayerService } from '../player.service';\nimport { AudioService } from '../audio.service';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { GamepadAxes, GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { HotkeysService } from '../../services/hotkeys/hotkeys.service';\nimport { FileLoaderService } from '../file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from '../metadata-service/metadata.service';\n\n@Component({\n  selector: 'player-toolbar',\n  imports: [MatIcon, MatIconButton, MatMenu, MatSlider, MatSliderThumb, MatToolbar, MatTooltip, TimePipe, MatMenuTrigger, MatMenuModule],\n  templateUrl: './player-toolbar.component.html',\n  styleUrl: './player-toolbar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayerToolbarComponent implements OnInit, OnDestroy {\n  private readonly gamepadService = inject(GamepadService, { optional: true });\n  private readonly hotkeysService = inject(HotkeysService, { optional: true });\n  protected readonly fileLoaderService = inject(FileLoaderService);\n  protected readonly playerService = inject(PlayerService);\n  protected readonly audioService = inject(AudioService);\n  protected readonly metadataService = inject(MetadataService);\n\n  protected readonly volumeIcon = computed(() => this.getVolumeIconForLevel(this.audioService.volume()));\n\n  ngOnInit() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showFilePickerAndLoadFiles());\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n\n  onSliderPositionChanged(value: number) {\n    this.playerService.setSeekPosition(value);\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol \n    \n\n    \n        \n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n    \n      \n      Load folder/files...\n    \n    @if (fileLoaderService.currentFolderHandle()) {\n      \n        \n        Load last directory\n      \n    }\n  \n\n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (audioService.isPlaying()) {          } @else {          }                                                    Load folder/files...        @if (fileLoaderService.currentFolderHandle()) {                      Load last directory          }      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            FormsModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                playerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                onContextMenu\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:48\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContextMenu\n                        \n                    \n                \n            \n            \n                \nonContextMenu(event: MouseEvent, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByHash\n                        \n                    \n                \n            \n            \n                \ntrackByHash(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'mtb-playlist',\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    FormsModule,\n    MatMenuModule\n  ],\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaylistComponent {\n  private readonly audioService = inject(AudioService);\n  private readonly destroRef = inject(DestroyRef);\n  protected readonly playerService = inject(PlayerService);\n\n  private readonly menuTrigger = viewChild('menuTrigger');\n\n  private readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 140;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled()) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.playerService.currentPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.playerService.currentPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.playerService.currentPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.hash === currentTrack.metadata?.hash);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (\n        (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash\n      );\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.hash === song.metadata?.hash;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByHash(index: number, song: Track): string {\n    return song.metadata.hash;\n  }\n\n  onContextMenu(event: MouseEvent, song: Track): void {\n    event.preventDefault();\n    const trigger = this.menuTrigger();\n    if (!trigger) return;\n    trigger.menuData = { song: song };\n\n    // Open with position\n    trigger.openMenu();\n\n    // set position\n    if (trigger.menu) {\n      // Forcefully reset the menu position after it's opened\n      setTimeout(() => {\n        const overlayRef = document.querySelector('.cdk-overlay-pane:last-child') as HTMLElement;\n        if (overlayRef) {\n          overlayRef.style.position = 'absolute';\n          overlayRef.style.left = `${event.clientX}px`;\n          overlayRef.style.top = `${event.clientY}px`;\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying) {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n\n\n\n  \n\n\n\n\n  \n    \n      \n      Remove from playlist\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (song && song.metadata && song.metadata.coverUrl) {                  }        @let songPlaying = isPlaying(song)();        @if (songPlaying) {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }                          Remove from playlist      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverArtUrls.html":{"url":"interfaces/RemoteCoverArtUrls.html","title":"interface - RemoteCoverArtUrls","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverArtUrls\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            originalUrl\n                                        \n                                \n                                \n                                        \n                                            thumbUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent],\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss'\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                                FileDropOverlayComponent\n                                PlayerToolbarComponent\n                            MatProgressBar\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                    Protected\n                                    Readonly\n                                isHandset\n                            \n                            \n                                    Protected\n                                    Readonly\n                                loaderService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                metadataService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                playerService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                    Async\n                                onFileHandlesDropped\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFileHandlesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFileHandlesDropped(files: FileSystemFileHandle[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        FileSystemFileHandle[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { PlayerService } from '../player/player.service';\nimport { ALLOWED_MIMETYPES, FileData } from '../player/file-loader-service/file-loader.helpers';\nimport { PlayerToolbarComponent } from '../player/player-toolbar/player-toolbar.component';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MetadataService } from '../player/metadata-service/metadata.service';\n\n@Component({\n  selector: 'mtb-shell',\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    RouterOutlet,\n    FileDropOverlayComponent,\n    PlayerToolbarComponent,\n    MatProgressBar\n  ],\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss'\n})\nexport class ShellComponent {\n  private readonly breakpointObserver = inject(BreakpointObserver);\n  private readonly router = inject(Router);\n  protected readonly titleService = inject(TitleService);\n  protected readonly loaderService = inject(LoaderService);\n  protected readonly playerService = inject(PlayerService);\n  protected readonly metadataService = inject(MetadataService);\n\n  protected readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  private readonly isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  protected readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  private readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files.map((file) => ({ file })));\n  }\n\n  async onFileHandlesDropped(files: FileSystemFileHandle[]) {\n    const fileData: FileData[] = [];\n    for (const fileHandle of files) {\n      const file = await fileHandle.getFile();\n      fileData.push({ file, fileHandle });\n    }\n\n    return this.playerService.addFilesToPlaylist(...fileData);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n\n      @if (loaderService.isLoading()) {\n        \n      }\n\n      \n\n      @let currentTrack = playerService.currentlyLoadedTrack();\n      {{ currentTrack?.metadata?.artist ? `${currentTrack?.metadata?.artist} - ` : '' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n    \n\n    @if (metadataService.processing()) {\n      \n      {{ metadataService.statusText() }}\n    }\n    \n\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }            @let currentTrack = playerService.currentlyLoadedTrack();      {{ currentTrack?.metadata?.artist ? `${currentTrack?.metadata?.artist} - ` : \\'\\' }}{{ currentTrack?.metadata?.title || currentTrack?.file?.name }}        @if (metadataService.processing()) {            {{ metadataService.statusText() }}    }              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                            \n                                buttonTooltip\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonTooltip\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  imports: [MatCardModule, MatButtonModule],\n  templateUrl: './storage-settings.component.html'\n})\nexport class StorageSettingsComponent {\n  private readonly localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverArtUrls {\n  thumbUrl: string;\n  originalUrl: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThemeColor.html":{"url":"interfaces/ThemeColor.html","title":"interface - ThemeColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ThemeColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ThemeColor {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                accentColor\n                            \n                            \n                                    Readonly\n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                    Readonly\n                                primaryColor\n                            \n                            \n                                    Readonly\n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setAccentColor\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                            \n                                setPrimaryColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:48\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAccentColor\n                        \n                    \n                \n            \n            \n                \nsetAccentColor(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPrimaryColor\n                        \n                    \n                \n            \n            \n                \nsetPrimaryColor(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        accentColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.computeColors(this.accentColor()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.computeColors(this.primaryColor()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:47\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, effect, inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { Colord, colord } from 'colord';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { ThemeColor } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\ninterface ColorVariant {\n  suffix: string;\n  lightenFactor?: number;\n  darkenFactor?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private readonly meta = inject(Meta);\n  private readonly localStorageService = inject(LocalStorageService);\n\n  private readonly COLOR_VARIANTS: ColorVariant[] = [\n    { suffix: '0', lightenFactor: 0.55 },\n    { suffix: '10', lightenFactor: 0.45 },\n    { suffix: '20', lightenFactor: 0.35 },\n    { suffix: '25', lightenFactor: 0.3 },\n    { suffix: '30', lightenFactor: 0.25 },\n    { suffix: '35', lightenFactor: 0.2 },\n    { suffix: '40', lightenFactor: 0.15 },\n    { suffix: '50' },\n    { suffix: '60', darkenFactor: 0.05 },\n    { suffix: '70', darkenFactor: 0.1 },\n    { suffix: '80', darkenFactor: 0.15 },\n    { suffix: '90', darkenFactor: 0.18 },\n    { suffix: '95', darkenFactor: 0.21 },\n    { suffix: '98', darkenFactor: 0.24 },\n    { suffix: '99', darkenFactor: 0.27 },\n    { suffix: '100', darkenFactor: 0.3 }\n  ];\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  readonly primaryColor = signal(this.localStorageService.retrieve('primaryColor') ?? FALLBACK_PRIMARY_COLOR);\n\n  readonly accentColor = signal(this.localStorageService.retrieve('accentColor') ?? FALLBACK_ACCENT_COLOR);\n\n  readonly primaryColorPalette = computed(() => this.computeColors(this.primaryColor()));\n  readonly accentColorPalette = computed(() => this.computeColors(this.accentColor()));\n\n  constructor() {\n    // Automatische Updates bei Änderungen\n    effect(() => {\n      this.updateCSSProperties();\n      this.updateMetaThemeColor();\n    });\n\n    effect(() => {\n      this.localStorageService.store('darkMode', this.darkMode());\n    });\n\n    effect(() => {\n      this.localStorageService.store('primaryColor', this.primaryColor());\n    });\n\n    effect(() => {\n      this.localStorageService.store('accentColor', this.accentColor());\n    });\n  }\n\n  initializeTheme() {\n    this.updateCSSProperties();\n    this.updateMetaThemeColor();\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n  }\n\n  setColors(colors: ColorConfig) {\n    this.primaryColor.set(colors.mainColor || FALLBACK_PRIMARY_COLOR);\n    this.accentColor.set(colors.peakColor || FALLBACK_ACCENT_COLOR);\n  }\n\n  setPrimaryColor(color: string) {\n    this.primaryColor.set(color || FALLBACK_PRIMARY_COLOR);\n  }\n\n  setAccentColor(color: string) {\n    this.accentColor.set(color || FALLBACK_ACCENT_COLOR);\n  }\n\n  private updateCSSProperties() {\n    const variables: string[] = [`--app-color-scheme: ${this.darkMode() ? 'dark' : 'light'}`];\n\n    for (const color of this.primaryColorPalette()) {\n      variables.push(`--theme-primary-${color.name}: ${color.hex}`);\n    }\n\n    for (const color of this.accentColorPalette()) {\n      variables.push(`--theme-accent-${color.name}: ${color.hex}`);\n    }\n\n    document.documentElement.style.cssText += variables.join(';');\n  }\n\n  private updateMetaThemeColor() {\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor() });\n  }\n\n  private computeColors(hex: string): ThemeColor[] {\n    const baseColor = colord(hex);\n\n    return this.COLOR_VARIANTS.map((variant) => {\n      let color = baseColor;\n\n      if (variant.lightenFactor) {\n        color = baseColor.lighten(variant.lightenFactor);\n      } else if (variant.darkenFactor) {\n        color = baseColor.darken(variant.darkenFactor);\n      }\n\n      return this.getThemeColor(color, variant.suffix);\n    });\n  }\n\n  private getThemeColor(color: Colord, name: string): ThemeColor {\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name,\n      hex: color.toHex(),\n      darkContrast: color.brightness() > lightnessLimit\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  imports: [MatCardModule, MatCheckboxModule],\n  templateUrl: './theme-settings.component.html'\n})\nexport class ThemeSettingsComponent {\n  protected readonly themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private readonly angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverArtUrls\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverArtUrls\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverArtUrls } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  hash: string;\n  fileName: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverArtUrls;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\nexport const FREQUENCY_BANDS = [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const;\n\n// Derive FrequencyBand type from the array\nexport type FrequencyBand = (typeof FREQUENCY_BANDS)[number];\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private readonly swUpdate = inject(SwUpdate);\n  private readonly dialog = inject(MatDialog);\n  private readonly destroRef = inject(DestroyRef);\n\n  constructor() {\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroRef)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                alpha\n                            \n                            \n                                    Protected\n                                    Readonly\n                                analyser\n                            \n                            \n                                    Protected\n                                    Readonly\n                                audioService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Protected\n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Protected\n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Protected\n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Protected\n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Protected\n                                    Readonly\n                                gap\n                            \n                            \n                                    Protected\n                                    Readonly\n                                lineThickness\n                            \n                            \n                                    Protected\n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Protected\n                                    Readonly\n                                smoothing\n                            \n                            \n                                    Protected\n                                    Readonly\n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule],\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  private readonly gamepadService = inject(GamepadService, { optional: true });\n  private readonly playerService = inject(PlayerService);\n  private readonly localStorageService = inject(LocalStorageService);\n  protected readonly visualsService = inject(VisualsService);\n  protected readonly audioService = inject(AudioService);\n\n  protected readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  protected readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  protected readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  protected readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  protected readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  protected readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  protected readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  protected readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  protected readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  protected readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  protected readonly analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': ''},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': ''},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': ''},{'name': 'PlayerToolbarComponent', 'selector': 'player-toolbar'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': ''},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                            \n                                barsConfig\n                            \n                            \n                                colorConfig\n                            \n                            \n                                mode\n                            \n                            \n                                oscConfig\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        barsConfig\n                    \n                \n                \n                    \n                        Type :         FrequencyBarsConfig\n\n                    \n                \n                \n                    \n                        Default value : { gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 }\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        colorConfig\n                    \n                \n                \n                    \n                        Type :         VisualsColorConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'bars'\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        oscConfig\n                    \n                \n                \n                    \n                        Type :         OsciloscopeConfig\n\n                    \n                \n                \n                    \n                        Default value : { thickness: 2 }\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:91\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]'\n})\nexport class VisualsDirective implements OnDestroy {\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i [] = [...bufferPool];\n    let lastUpdateTime = 0;\n    const updateInterval = 1000 / 60; // Limit to 60fps\n\n    // Handle worker messages\n    this.visualizerWorker.addEventListener('message', (event) => {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private readonly localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  private wakelock?: WakeLockSentinel;\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : 20.2.4\n        \n            @angular/common : 20.3.1\n        \n            @angular/compiler : 20.3.1\n        \n            @angular/core : 20.3.1\n        \n            @angular/forms : 20.3.1\n        \n            @angular/material : 20.2.4\n        \n            @angular/platform-browser : 20.3.1\n        \n            @angular/router : 20.3.1\n        \n            @angular/service-worker : 20.3.1\n        \n            colord : ^2.9.3\n        \n            date-fns : 4.1.0\n        \n            hash-wasm : 4.12.0\n        \n            music-metadata : 11.9.0\n        \n            musicbrainz-api : 0.25.1\n        \n            ngx-date-fns : 12.0.1\n        \n            ngx-indexed-db : 21.0.0\n        \n            ngx-webstorage : 20.0.0\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            escapeLuceneQueryString   (libs/.../lucene-escape.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../time.helper.ts)\n                        \n                        \n                            formatWithLeadingZero   (libs/.../time.helper.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    libs/helpers/src/lib/lucene-escape.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        escapeLuceneQueryString\n                        \n                    \n                \n            \n            \n                \nescapeLuceneQueryString(queryString: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/time.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatWithLeadingZero\n                        \n                    \n                \n            \n            \n                \nformatWithLeadingZero(value: number, useLeadingZero: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                useLeadingZero\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nGraph\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"license - license","body":"\n                   \n\n\n\n\n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    37 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.3.44\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : CC0-1.0\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"todo - todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            EqualizerGainValues   (apps/.../audio.service.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/audio.service.ts\n    \n    \n        \n            \n                \n                    \n                    EqualizerGainValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../idexed-db-config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../player.types.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesMenuEntry   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZonelessChangeDetection(),\n    provideBrowserGlobalErrorListeners(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately', type: 'module' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/idexed-db-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'gblasterDB',\n  version: 3,\n  objectStoresMeta: [\n    {\n      store: 'library',\n      storeConfig: { keyPath: 'hash', autoIncrement: false },\n      storeSchema: [\n        { name: 'hash', keypath: 'hash', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'directoryHandles',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/player.types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16_000] as const\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesMenuEntry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files_menu')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
