var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionCache.html",[0,0.061,1,2.827]],["body/interfaces/ActionCache.html",[0,0.108,1,4.301,2,1.029,3,0.232,4,0.232,5,0.143,6,3.369,7,0.388,8,0.554,9,5.3,10,1.58,11,0.504,12,0.011,13,0.403,14,4.992,15,3.828,16,1.442,17,5.031,18,2.065,19,0.719,20,3.369,21,1.325,22,1.665,23,4.738,24,3.369,25,2.553,26,3.578,27,3.578,28,3.369,29,3.035,30,3.578,31,3.369,32,3.369,33,3.369,34,3.191,35,3.191,36,4.887,37,3.035,38,3.578,39,2.473,40,3.578,41,2.819,42,3.578,43,3.138,44,3.578,45,3.874,46,3.578,47,3.191,48,3.578,49,3.369,50,3.578,51,3.369,52,3.578,53,3.369,54,3.578,55,3.191,56,3.578,57,3.369,58,3.578,59,2.896,60,3.578,61,3.191,62,3.578,63,3.369,64,3.578,65,3.369,66,3.578,67,3.369,68,3.578,69,3.369,70,3.191,71,3.578,72,3.578,73,3.578,74,3.578,75,0.008,76,0.008]],["title/interfaces/Album.html",[0,0.061,77,1.397]],["body/interfaces/Album.html",[0,0.046,2,0.648,3,0.146,4,0.146,5,0.185,7,0.156,8,0.402,10,0.902,11,0.305,12,0.011,13,0.23,16,0.908,19,0.975,21,0.834,39,1.798,75,0.006,76,0.006,77,2.337,78,2.871,79,3.937,80,1.436,81,2.15,82,0.712,83,1.131,84,3.523,85,0.612,86,3.553,87,2.282,88,0.452,89,2.009,90,2.199,91,1.911,92,1.745,93,3.937,94,3.139,95,1.823,96,4.233,97,2.009,98,3.127,99,2.121,100,1.39,101,1.08,102,4.233,103,4.233,104,4.233,105,4.233,106,2.607,107,2.962,108,2.252,109,4.233,110,1.745,111,4.233,112,1.548,113,3.843,114,3.843,115,3.843,116,2.607,117,3.32,118,1.745,119,3.843,120,2.41,121,1.674,122,3.553,123,2.41,124,1.23,125,2.121,126,1.259,127,2.871,128,1.548,129,2.871,130,1.259,131,0.41,132,1.3,133,1.548,134,1.287,135,2.121,136,2.121,137,2.252,138,2.607,139,2.082,140,1.546,141,2.871,142,4.565,143,2.871,144,2.607,145,2.871,146,1.987,147,6.568,148,5.027,149,2.871,150,2.871,151,2.871,152,3.037,153,1.572,154,1.856,155,2.871,156,2.871,157,4.233,158,5.548,159,4.233,160,5.027,161,2.688,162,2.607,163,2.607,164,3.843,165,2.871,166,2.252,167,4.233,168,2.871,169,2.871,170,2.871,171,2.871,172,2.871,173,3.843,174,2.871,175,5.037,176,2.871,177,2.871,178,3.32,179,1.592,180,2.871,181,5.027,182,2.607,183,1.911,184,5.027,185,2.871,186,2.871,187,5.027,188,2.871,189,2.871,190,1.911,191,4.233,192,2.871,193,2.629,194,2.871,195,4.233,196,4.233,197,2.871,198,2.871,199,2.871,200,2.871,201,2.871,202,2.871,203,2.607,204,2.871,205,2.607,206,2.871,207,2.871,208,2.871,209,2.225,210,2.41,211,1.344,212,2.871,213,2.363,214,2.871,215,2.871,216,1.39,217,1.546,218,2.871,219,2.607,220,1.911,221,2.871,222,2.871,223,2.871,224,4.233,225,2.871,226,2.871,227,2.871,228,2.871,229,2.607,230,2.871,231,2.871,232,2.871,233,2.871,234,2.871,235,2.871,236,2.871,237,2.871,238,2.871,239,2.871,240,4.233,241,4.233,242,2.871,243,1.674,244,2.871,245,2.871,246,2.871,247,2.009]],["title/interfaces/AnalyserConfig.html",[0,0.061,248,2.43]],["body/interfaces/AnalyserConfig.html",[0,0.116,2,0.976,3,0.221,4,0.221,5,0.136,7,0.235,8,0.535,10,1.655,11,0.517,12,0.011,13,0.406,18,2.833,19,1.044,22,1.581,25,2.469,75,0.008,76,0.008,248,3.575,249,2.749,250,4.115,251,4.409,252,4.409,253,4.409,254,2.63,255,2.523,256,2.63,257,2.63,258,2.63,259,2.63,260,2.63,261,2.63,262,2.63,263,2.749,264,2.749,265,2.523,266,3.421,267,3.281,268,3.281,269,3.281,270,2.523,271,3.281,272,2.63,273,2.822,274,2.822,275,3.281,276,2.63,277,2.63,278,2.523,279,2.749,280,2.88,281,2.424,282,3.504,283,2.63,284,2.424,285,3.973,286,3.034,287,2.63,288,3.281,289,3.571,290,3.571,291,2.333,292,3.281,293,3.71]],["title/components/AppComponent.html",[83,1.022,294,1.791]],["body/components/AppComponent.html",[3,0.22,4,0.22,5,0.176,12,0.011,13,0.234,75,0.008,76,0.008,80,1.535,82,0.697,83,1.668,85,0.918,88,0.679,110,2.619,124,1.631,126,2.461,130,2.461,131,0.616,132,1.952,146,1.817,294,3.096,295,2.111,296,2.086,297,2.086,298,2.086,299,4.911,300,4.147,301,4.147,302,3.375,303,3.468,304,1.726,305,3.096,306,6.397,307,3.129,308,1,309,4.911,310,3.184,311,4.911,312,4.911,313,3.015,314,2.413,315,4.147,316,3.617,317,5.097,318,4.911,319,4.911,320,4.911,321,4.911,322,4.911,323,4.911,324,4.911,325,3.617,326,4.911,327,4.911,328,4.911,329,4.911,330,4.911,331,4.911,332,4.911,333,2.086,334,2.627,335,2.242,336,1.775,337,3.202,338,2.086,339,2.086,340,2.017,341,1.574,342,2.086,343,2.017,344,2.086,345,2.017,346,1.89,347,2.086,348,1.775,349,1.831,350,1.831,351,2.718,352,2.017,353,3.202,354,2.017,355,2.086,356,2.017,357,2.086,358,1.89,359,2.017,360,2.017,361,2.086,362,2.017,363,1.952,364,2.086,365,2.017,366,2.086,367,2.017,368,1.89,369,2.017,370,2.017,371,2.017,372,1.952,373,2.017,374,2.086]],["title/injectables/AudioService.html",[375,0.747,376,2.23]],["body/injectables/AudioService.html",[0,0.035,3,0.112,4,0.112,5,0.164,7,0.119,8,0.328,10,1.44,11,0.435,12,0.011,13,0.232,16,2.083,21,1.914,22,1.556,39,3.034,41,1.67,75,0.005,76,0.005,80,1.401,82,0.479,84,2.191,85,0.468,87,2.297,88,0.346,90,1.141,95,1.394,101,0.826,131,0.314,134,1.441,139,2.428,146,1.809,153,1.186,154,2.118,209,1.603,213,0.877,217,1.26,281,2.705,291,2.297,304,0.675,307,2.136,308,1.694,335,0.877,375,0.673,376,2.011,377,0.994,378,1.994,379,4.261,380,3.577,381,3.343,382,4.385,383,3.87,384,4.261,385,4.261,386,3.87,387,4.261,388,4.385,389,0.896,390,4.83,391,3.932,392,3.932,393,3.789,394,4.385,395,4.83,396,3.932,397,3.932,398,3.932,399,3.932,400,3.932,401,3.932,402,3.133,403,4.261,404,2.502,405,2.502,406,1.687,407,3.45,408,4.406,409,2.502,410,2.141,411,1.249,412,3.343,413,3.45,414,3.834,415,2.502,416,3.932,417,2.502,418,2.502,419,1.461,420,2.502,421,3.45,422,4.767,423,2.502,424,2.101,425,2.549,426,2.83,427,2.502,428,2.502,429,3.45,430,2.502,431,3.45,432,5.249,433,2.502,434,3.45,435,2.502,436,3.45,437,3.45,438,2.502,439,2.502,440,3.45,441,2.502,442,4.83,443,2.502,444,2.502,445,3.45,446,2.59,447,2.706,448,2.706,449,2.836,450,2.59,451,2.836,452,2.836,453,2.982,454,2.982,455,2.982,456,2.502,457,4.677,458,2.502,459,2.502,460,4.83,461,2.502,462,2.502,463,2.502,464,3.45,465,2.502,466,3.45,467,2.896,468,2.502,469,2.502,470,2.502,471,1.461,472,1.334,473,2.896,474,2.896,475,3.343,476,0.714,477,2.195,478,1.461,479,2.195,480,4.117,481,2.195,482,2.195,483,2.195,484,2.195,485,4.385,486,2.195,487,2.195,488,2.195,489,3.45,490,2.195,491,2.195,492,2.195,493,2.195,494,2.896,495,1.994,496,2.896,497,2.195,498,2.195,499,2.549,500,3.133,501,2.195,502,2.195,503,2.195,504,2.195,505,1.722,506,2.195,507,2.195,508,2.195,509,3.45,510,2.195,511,1.843,512,1.334,513,1.843,514,1.536,515,2.195,516,1.622,517,1.843,518,2.195,519,2.195,520,3.45,521,3.45,522,2.195,523,2.706,524,3.45,525,3.45,526,2.195,527,2.195,528,2.195,529,2.195,530,2.195,531,2.195,532,2.195,533,2.195,534,1.536,535,1.334,536,1.843,537,1.994,538,2.195,539,2.195,540,2.195,541,2.195,542,2.195,543,2.195,544,3.45,545,2.195,546,2.195,547,2.195,548,2.195,549,2.195,550,2.195,551,3.133,552,2.195,553,2.195,554,1.994,555,2.195,556,1.722,557,1.23,558,2.195,559,1.622,560,2.195,561,2.195,562,2.195,563,2.195,564,2.195,565,2.195,566,2.195,567,2.195,568,2.195,569,2.195,570,2.195,571,2.195,572,2.195,573,2.195,574,2.195,575,2.195,576,2.195,577,2.195,578,3.45,579,2.195,580,1.994,581,1.994,582,1.994,583,1.994,584,1.622,585,2.195,586,2.195,587,2.195,588,2.195,589,3.45,590,2.195,591,2.195,592,2.195,593,2.195,594,2.195,595,2.195,596,3.45,597,2.195,598,2.195,599,2.195,600,2.195,601,2.195,602,2.195,603,2.195,604,2.195,605,2.195,606,2.195,607,2.195,608,2.195,609,2.195,610,2.195]],["title/interfaces/AxisGamepadAction.html",[0,0.061,24,2.827]],["body/interfaces/AxisGamepadAction.html",[0,0.108,1,3.359,2,1.025,3,0.232,4,0.232,5,0.142,6,3.359,7,0.348,8,0.552,9,3.566,10,1.485,11,0.503,12,0.011,13,0.403,14,5.424,15,3.816,16,1.438,17,5.294,18,2.059,19,0.716,20,3.359,21,1.321,22,1.66,23,4.731,24,4.293,25,2.808,26,5.294,27,5.294,28,3.359,29,3.025,30,3.566,31,3.359,32,3.359,33,3.359,34,3.181,35,3.181,36,4.877,37,3.025,38,3.566,39,2.469,40,3.566,41,2.813,42,3.566,43,3.132,44,3.566,45,3.867,46,3.566,47,3.181,48,3.566,49,3.359,50,3.566,51,3.359,52,3.566,53,3.359,54,3.566,55,3.181,56,3.566,57,3.359,58,3.566,59,2.887,60,3.566,61,3.181,62,3.566,63,3.359,64,3.566,65,3.359,66,3.566,67,3.359,68,3.566,69,3.359,70,3.181,71,3.566,72,3.566,73,3.566,74,3.566,75,0.008,76,0.008]],["title/pipes/BandPipe.html",[121,2.23,611,3.474]],["body/pipes/BandPipe.html",[3,0.263,4,0.263,5,0.162,11,0.372,12,0.011,13,0.281,19,0.991,43,2.783,75,0.009,76,0.009,80,1.575,82,0.623,88,0.814,95,3.279,97,3.613,121,3.667,124,1.5,131,0.738,133,2.783,153,1.666,308,1.198,389,1.341,406,1.304,410,1.831,411,1.068,414,4.485,419,3.436,424,2.171,450,3.138,475,4.935,611,5.712,612,5.884,613,6.291,614,2.579,615,4.935,616,4.334,617,5.712,618,6.785,619,5.884,620,5.712,621,5.884,622,5.884,623,5.884,624,5.884]],["title/interfaces/BarsVisualizerOptions.html",[0,0.061,288,2.23]],["body/interfaces/BarsVisualizerOptions.html",[0,0.115,2,0.936,3,0.211,4,0.211,5,0.13,7,0.226,8,0.521,10,1.662,11,0.531,12,0.011,13,0.403,18,3.151,19,1.027,22,1.515,25,2.687,75,0.008,76,0.008,248,2.634,249,2.634,250,3.974,251,2.761,252,2.761,253,2.761,254,2.521,255,2.418,256,2.521,257,2.521,258,2.521,259,2.521,260,2.521,261,2.521,262,2.521,263,2.634,264,2.634,265,2.418,266,4.117,267,3.949,268,3.949,269,3.949,270,2.418,271,3.191,272,2.521,273,2.744,274,2.744,275,3.191,276,2.521,277,2.521,278,2.418,279,2.634,280,2.761,281,2.323,282,3.432,283,2.521,284,2.323,285,4.139,286,2.951,287,2.521,288,3.572,289,3.882,290,3.751,291,3.513,292,3.191,293,3.65]],["title/interfaces/BaseVisualizerOptions.html",[0,0.061,285,2.43]],["body/interfaces/BaseVisualizerOptions.html",[0,0.116,2,0.966,3,0.218,4,0.218,5,0.134,7,0.233,8,0.532,10,1.648,11,0.523,12,0.011,13,0.405,18,3.179,19,1.143,22,1.564,25,2.452,75,0.008,76,0.008,248,2.72,249,2.72,250,3.696,251,2.851,252,2.851,253,2.851,254,2.603,255,2.497,256,2.603,257,2.603,258,2.603,259,2.603,260,2.603,261,2.603,262,2.603,263,2.72,264,2.72,265,2.497,266,3.398,267,3.259,268,3.259,269,3.259,270,2.497,271,3.259,272,2.603,273,3.431,274,3.431,275,3.99,276,2.603,277,2.603,278,2.497,279,2.72,280,2.851,281,2.399,282,3.486,283,2.603,284,2.399,285,4.191,286,3.557,287,4.01,288,3.259,289,3.557,290,3.557,291,2.309,292,3.259,293,3.696]],["title/pipes/BitratePipe.html",[121,2.23,625,3.474]],["body/pipes/BitratePipe.html",[3,0.27,4,0.27,5,0.166,10,1.461,11,0.382,12,0.011,13,0.288,19,1.007,39,2.25,75,0.009,76,0.009,80,1.592,82,0.525,88,0.834,97,3.705,121,3.723,124,1.539,131,0.757,133,2.854,146,1.455,153,1.569,193,2.914,308,1.229,389,1.376,406,1.338,410,1.878,411,1.096,424,1.964,450,3.218,614,2.333,615,5.011,616,4.445,617,5.8,620,5.8,625,5.8,626,6.388,627,6.035,628,6.468,629,6.035,630,6.035,631,6.035]],["title/interfaces/ButtonGamepadAction.html",[0,0.061,28,2.827]],["body/interfaces/ButtonGamepadAction.html",[0,0.108,1,3.396,2,1.037,3,0.234,4,0.234,5,0.144,6,3.396,7,0.35,8,0.556,9,3.606,10,1.49,11,0.489,12,0.011,13,0.404,14,5.285,15,3.858,16,1.454,17,5.316,18,2.082,19,0.724,20,3.396,21,1.336,22,1.679,23,4.756,24,3.396,25,2.823,26,3.606,27,3.606,28,4.323,29,4.51,30,3.606,31,3.396,32,3.396,33,3.396,34,3.216,35,3.216,36,4.911,37,3.059,38,3.606,39,2.486,40,3.606,41,2.833,42,3.606,43,3.154,44,3.606,45,3.894,46,3.606,47,3.216,48,3.606,49,3.396,50,3.606,51,3.396,52,3.606,53,3.396,54,3.606,55,3.216,56,3.606,57,3.396,58,3.606,59,2.919,60,3.606,61,3.216,62,3.606,63,3.396,64,3.606,65,3.396,66,3.606,67,3.396,68,3.606,69,3.396,70,3.216,71,3.606,72,3.606,73,3.606,74,3.606,75,0.008,76,0.008]],["title/interfaces/Chainable.html",[0,0.061,632,3.826]],["body/interfaces/Chainable.html",[0,0.075,2,1.057,3,0.239,4,0.239,5,0.185,7,0.255,12,0.011,16,1.873,75,0.008,76,0.008,82,0.587,308,1.088,335,1.872,389,1.539,406,1.184,411,0.97,473,4.972,499,3.462,513,4.972,632,5.923,633,5.34,634,6.197,635,5.34,636,5.34,637,4.686,638,5.34,639,4.686,640,5.34,641,5.34,642,5.34,643,5.923,644,7.777,645,5.923,646,5.923,647,5.379,648,5.34,649,5.34,650,5.34,651,5.34,652,4.686,653,5.34,654,5.34,655,5.34,656,5.34,657,7.777,658,5.34,659,5.34,660,3.279,661,5.34,662,5.34,663,6.75,664,5.34,665,6.75,666,6.75,667,5.34,668,5.34,669,5.34,670,5.34,671,6.75,672,4.799,673,5.34,674,5.34,675,5.34,676,5.34,677,2.526]],["title/interfaces/Color.html",[0,0.061,678,2.827]],["body/interfaces/Color.html",[0,0.09,2,1.269,3,0.287,4,0.287,5,0.176,7,0.306,8,0.63,11,0.508,12,0.011,13,0.306,19,1.183,22,2.57,75,0.009,76,0.009,80,1.686,678,4.892,679,6.411,680,7.266,681,4.835]],["title/interfaces/ColorConfig.html",[0,0.061,682,2.43]],["body/interfaces/ColorConfig.html",[0,0.11,2,1.076,3,0.243,4,0.243,5,0.205,7,0.259,8,0.57,11,0.496,12,0.011,13,0.393,19,1.2,25,2.092,75,0.008,76,0.008,77,1.742,79,3.175,81,2.322,82,0.649,93,3.175,94,2.804,124,1.996,125,3.525,152,2.161,179,1.795,243,3.492,273,3.443,274,3.443,411,1.421,414,3.03,446,2.9,447,3.03,448,3.03,449,3.175,450,2.9,451,3.175,452,3.175,453,3.338,454,3.338,455,3.338,534,3.338,682,3.805,683,3.743,684,4.192,685,3.338,686,2.027,687,3.492,688,4.426,689,2.9,690,4.7,691,4.839,692,3.525,693,3.175,694,2.572,695,3.743,696,3.525,697,3.525,698,3.175]],["title/interfaces/CoverArtImage.html",[0,0.061,699,2.827]],["body/interfaces/CoverArtImage.html",[0,0.101,2,0.865,3,0.195,4,0.195,5,0.12,7,0.209,8,0.494,10,0.817,11,0.476,12,0.011,13,0.209,19,1.162,22,2.151,75,0.007,76,0.007,77,1.4,81,1.486,82,0.689,85,0.817,88,0.604,100,1.857,101,1.442,131,0.548,134,1.531,139,1.69,140,1.4,146,1.911,153,1.781,179,1.442,183,2.552,193,2.955,209,2.216,211,2.757,213,2.522,216,2.852,217,2.484,247,2.683,304,1.179,341,1.4,375,1.014,476,1.248,614,1.4,677,2.8,686,1.629,699,4.352,700,1.579,701,3.008,702,4.953,703,3.536,704,4.953,705,5.194,706,2.33,707,2.235,708,3.008,709,2.833,710,2.833,711,3.434,712,2.207,713,1.737,714,2.148,715,2.235,716,2.33,717,3.838,718,2.699,719,4.352,720,2.683,721,2.833,722,4.075,723,3.008,724,3.008,725,2.683,726,2.833,727,2.833,728,2.33,729,2.683,730,2.235,731,2.33,732,2.33,733,3.008,734,3.008,735,3.008,736,2.33,737,2.503,738,2.235,739,3.028,740,4.075,741,3.008,742,3.008,743,3.157,744,2.552,745,3.008,746,3.008,747,3.008,748,3.008,749,3.008,750,3.008,751,3.157,752,4.075,753,3.008,754,3.008,755,2.683,756,3.008,757,3.008,758,3.008,759,3.008,760,4.075,761,3.008,762,3.008,763,1.857,764,3.008,765,3.008,766,2.432,767,3.008,768,3.008,769,3.008]],["title/interfaces/CoverArtResponse.html",[0,0.061,727,2.827]],["body/interfaces/CoverArtResponse.html",[0,0.102,2,0.884,3,0.2,4,0.2,5,0.123,7,0.213,8,0.501,10,0.834,11,0.283,12,0.011,13,0.213,19,1.147,22,1.431,75,0.007,76,0.007,77,1.431,81,1.518,82,0.693,85,0.834,88,0.617,100,1.897,101,1.474,131,0.56,134,1.543,139,1.715,140,1.431,146,1.922,153,1.788,179,1.474,183,2.607,193,2.972,209,2.24,211,2.788,213,2.544,216,2.884,217,2.5,247,2.741,304,1.204,341,1.431,375,1.029,476,1.275,614,1.431,677,2.841,686,1.664,699,4.706,700,1.613,701,3.073,702,3.073,703,2.194,704,3.073,706,2.381,707,2.284,708,3.073,709,2.895,710,2.895,711,3.471,712,2.239,713,1.774,714,2.194,715,2.284,716,2.381,717,3.894,718,2.738,719,4.4,720,2.741,721,2.895,722,4.134,723,3.073,724,3.073,725,2.741,726,2.895,727,3.894,728,3.871,729,2.741,730,2.284,731,2.381,732,2.381,733,3.073,734,3.073,735,3.073,736,2.381,737,2.53,738,2.284,739,3.072,740,4.134,741,3.073,742,3.073,743,3.203,744,2.607,745,3.073,746,3.073,747,3.073,748,3.073,749,3.073,750,3.073,751,3.203,752,4.134,753,3.073,754,3.073,755,2.741,756,3.073,757,3.073,758,3.073,759,3.073,760,4.134,761,3.073,762,3.073,763,1.897,764,3.073,765,3.073,766,2.467,767,3.073,768,3.073,769,3.073]],["title/interfaces/CoverColor.html",[0,0.061,770,2.827]],["body/interfaces/CoverColor.html",[0,0.115,2,1.16,3,0.262,4,0.262,5,0.212,7,0.28,8,0.597,11,0.453,12,0.011,13,0.393,19,1.206,75,0.009,76,0.009,81,1.994,82,0.51,217,1.879,411,1.459,681,4.694,686,2.186,687,2.999,700,2.119,712,2.667,713,2.33,718,3.261,763,2.491,766,2.408,770,5.555,771,4.036,772,5.211,773,3.127,774,3.801,775,3.801,776,3.801,777,3.801,778,3.801,779,3.6,780,3.6,781,2.773]],["title/interfaces/CoverColorPalette.html",[0,0.061,687,2.23]],["body/interfaces/CoverColorPalette.html",[0,0.113,2,1.091,3,0.246,4,0.246,5,0.206,7,0.263,8,0.574,11,0.523,12,0.011,13,0.386,19,1.158,75,0.009,76,0.009,81,1.874,82,0.479,217,1.766,411,1.578,681,3.218,686,2.054,687,3.521,700,1.991,712,2.567,713,2.19,718,3.138,763,2.341,766,2.263,770,5.745,771,3.793,772,3.572,773,4.194,774,5.099,775,5.099,776,5.099,777,5.099,778,5.099,779,3.383,780,3.383,781,2.606]],["title/components/CoverDisplayComponent.html",[83,1.022,340,1.791]],["body/components/CoverDisplayComponent.html",[3,0.165,4,0.165,5,0.145,7,0.176,8,0.439,12,0.011,13,0.176,21,1.565,75,0.007,76,0.007,77,1.688,79,4.131,80,1.363,82,0.64,83,1.439,84,3.942,85,0.69,88,0.511,94,2.906,95,2.059,117,4.225,118,1.97,124,1.343,126,2.027,128,2.491,130,2.027,131,0.463,132,1.468,134,0.752,139,2.248,146,1.27,153,1.135,294,1.517,295,1.738,296,1.569,297,1.569,298,1.569,300,3.415,301,3.415,302,3.274,303,3.353,305,1.517,308,1.25,310,2.395,315,3.415,316,2.721,325,2.721,333,1.569,334,2.163,335,1.846,336,1.335,337,2.843,338,1.569,339,1.569,340,2.748,341,2.59,342,1.569,343,1.517,344,1.569,345,1.517,346,1.421,347,1.569,348,1.335,349,1.377,350,1.377,351,2.238,352,1.517,353,2.843,354,1.517,355,1.569,356,1.517,357,1.569,358,1.421,359,1.517,360,1.517,361,1.569,362,1.517,363,1.468,364,1.569,365,1.517,366,1.569,367,1.517,368,1.421,369,1.517,370,1.517,371,1.517,372,1.468,373,1.517,374,1.569,381,3.626,424,1.656,625,4.891,626,5.872,628,5.332,693,3.076,694,2.491,782,5.872,783,3.694,784,3.626,785,6.138,786,4.521,787,5.267,788,5.267,789,6.138,790,6.691,791,5.267,792,5.267,793,5.267,794,5.267,795,3.694,796,5.267,797,3.694,798,5.267,799,3.694,800,2.268,801,3.241,802,3.694,803,5.872,804,5.267,805,5.267,806,5.267,807,6.691,808,6.691,809,3.694,810,6.691,811,3.415,812,6.691,813,6.691,814,6.691,815,6.691,816,5.267,817,5.267,818,3.694]],["title/interfaces/DirHandleEntry.html",[0,0.061,819,3.474]],["body/interfaces/DirHandleEntry.html",[0,0.065,2,0.917,3,0.207,4,0.207,5,0.221,7,0.221,8,0.514,10,1.292,11,0.39,12,0.011,13,0.221,25,1.783,41,2.616,75,0.008,76,0.008,82,0.667,85,0.866,88,0.641,89,2.845,90,2.113,91,2.706,92,2.471,100,1.969,101,1.53,131,0.581,134,0.944,135,3.004,136,3.004,146,1.94,153,1.734,209,2.532,211,1.904,213,2.864,216,1.969,217,1.973,243,2.37,304,1.25,314,2.278,375,1.054,426,2.912,476,1.323,512,2.471,614,1.973,660,2.845,718,3.496,737,2.578,819,4.906,820,2.845,821,2.471,822,3.693,823,3.413,824,5.625,825,5.428,826,2.845,827,4.106,828,2.845,829,3.596,830,3.19,831,3.693,832,3.413,833,3.004,834,5.871,835,4.067,836,6.068,837,4.067,838,6.068,839,4.067,840,3.19,841,4.067,842,4.067,843,4.067,844,4.067,845,3.413,846,4.067,847,3.781,848,3.693,849,4.067,850,4.067,851,4.067,852,3.693,853,3.693,854,4.067,855,4.067,856,4.067,857,3.693,858,4.067,859,3.693,860,4.067,861,4.067,862,4.067,863,4.067,864,3.693,865,3.19,866,6.068,867,4.906,868,3.693,869,4.067,870,4.067,871,4.067]],["title/components/EqualizerComponent.html",[83,1.022,343,1.791]],["body/components/EqualizerComponent.html",[3,0.204,4,0.204,5,0.167,7,0.327,8,0.508,10,1.281,11,0.288,12,0.011,13,0.217,19,0.841,21,1.748,75,0.008,76,0.008,80,1.553,82,0.636,83,1.607,85,0.851,88,0.629,92,2.427,94,2.499,124,1.551,126,2.341,128,2.878,130,2.341,131,0.571,132,1.809,146,1.097,153,0.981,294,1.869,295,2.008,296,1.934,297,1.934,298,1.934,300,3.944,301,3.944,302,3.35,303,3.44,305,1.869,308,1.396,310,2.951,333,1.934,334,2.499,335,2.132,336,1.645,337,3.108,338,1.934,339,1.934,340,1.869,341,1.458,342,1.934,343,3.005,344,1.934,345,1.869,346,1.751,347,1.934,348,1.645,349,1.697,350,1.697,351,2.585,352,1.869,353,3.108,354,1.869,355,1.934,356,1.869,357,1.934,358,1.751,359,1.869,360,1.869,361,1.934,362,1.869,363,1.809,364,1.934,365,1.869,366,1.934,367,1.869,368,1.751,369,1.869,370,1.869,371,1.869,372,1.809,373,1.869,374,1.934,376,3.741,389,1.387,406,1.009,410,1.416,411,0.826,424,1.849,474,5.047,475,5.603,523,4.188,611,5.46,872,4.551,873,4.847,874,5.46,875,6.084,876,6.084,877,7.624,878,6.084,879,6.084,880,4.551,881,3.735,882,4.551,883,4.551,884,2.951,885,4.551,886,3.626,887,6.084,888,4.551]],["title/interfaces/EqualizerGainValues.html",[0,0.061,382,3.474]],["body/interfaces/EqualizerGainValues.html",[0,0.047,2,0.659,3,0.149,4,0.149,5,0.134,10,1.406,12,0.011,13,0.276,16,1.355,22,1.067,39,2.949,41,1.414,75,0.006,76,0.006,82,0.554,84,2.722,85,0.622,87,2.31,88,0.46,90,1.517,95,1.855,101,1.099,131,0.417,134,1.563,139,2.284,146,1.929,153,1.374,154,2.453,209,1.099,213,1.166,217,1.565,281,1.636,291,1.574,304,0.898,307,1.464,308,0.678,335,1.166,375,0.836,376,1.702,378,2.652,379,2.921,380,2.451,381,2.291,382,4.61,383,2.652,384,2.921,385,2.921,386,2.652,387,2.921,388,2.652,390,2.921,393,2.291,394,2.652,395,2.921,403,2.921,407,2.921,408,3.597,412,3.362,413,2.921,414,3.552,421,2.921,422,4.61,424,1.318,425,2.158,426,3.015,429,2.921,431,2.921,432,5.077,434,2.921,436,2.921,437,2.921,440,2.921,442,4.286,445,2.921,446,2.605,447,2.722,448,2.722,449,2.852,450,2.605,451,2.852,452,2.852,453,2.999,454,2.999,455,2.999,457,4.261,460,4.286,464,2.921,466,2.921,467,2.451,471,1.944,472,1.775,473,3.597,474,3.597,475,4.388,476,0.95,477,2.921,478,1.944,479,2.921,480,4.6,481,2.921,482,2.921,483,2.921,484,2.921,485,5.079,486,2.921,487,2.921,488,2.921,489,4.286,490,2.921,491,2.921,492,2.921,493,2.921,494,3.597,495,2.652,496,3.597,497,2.921,498,2.921,499,3.166,500,3.892,501,2.921,502,2.921,503,2.921,504,2.921,505,2.291,506,2.921,507,2.921,508,2.921,509,4.286,510,2.921,511,2.451,512,1.775,513,2.451,514,2.044,515,2.921,516,2.158,517,2.451,518,2.921,519,2.921,520,4.286,521,4.286,522,2.921,523,3.362,524,4.286,525,4.286,526,2.921,527,2.921,528,2.921,529,2.921,530,2.921,531,2.921,532,2.921,533,2.921,534,2.044,535,1.775,536,2.451,537,2.652,538,2.921,539,2.921,540,2.921,541,2.921,542,2.921,543,2.921,544,4.286,545,2.921,546,2.921,547,2.921,548,2.921,549,2.921,550,2.921,551,3.892,552,2.921,553,2.921,554,2.652,555,2.921,556,2.291,557,1.636,558,2.921,559,2.158,560,2.921,561,2.921,562,2.921,563,2.921,564,2.921,565,2.921,566,2.921,567,2.921,568,2.921,569,2.921,570,2.921,571,2.921,572,2.921,573,2.921,574,2.921,575,2.921,576,2.921,577,2.921,578,4.286,579,2.921,580,2.652,581,2.652,582,2.652,583,2.652,584,2.158,585,2.921,586,2.921,587,2.921,588,2.921,589,4.286,590,2.921,591,2.921,592,2.921,593,2.921,594,2.921,595,2.921,596,4.286,597,2.921,598,2.921,599,2.921,600,2.921,601,2.921,602,2.921,603,2.921,604,2.921,605,2.921,606,2.921,607,2.921,608,2.921,609,2.921,610,2.921,889,3.328,890,3.328]],["title/interfaces/FileData.html",[0,0.061,827,2.43]],["body/interfaces/FileData.html",[0,0.086,2,1.212,3,0.274,4,0.274,5,0.237,7,0.292,8,0.613,11,0.465,12,0.011,13,0.375,75,0.009,76,0.009,146,1.771,243,4.172,411,1.334,690,5.416,820,3.76,821,3.266,826,3.76,827,4.093,891,3.76,892,5.374,893,5.374,894,5.374,895,5.374,896,6.445,897,5.374,898,5.374,899,5.374,900,5.374,901,5.374,902,5.374,903,5.374,904,5.374,905,5.374,906,5.374,907,5.374,908,5.374,909,5.374,910,5.374]],["title/components/FileDropOverlayComponent.html",[83,1.022,345,1.791]],["body/components/FileDropOverlayComponent.html",[3,0.162,4,0.162,5,0.218,7,0.316,8,0.433,11,0.384,12,0.011,13,0.172,16,1.682,21,1.322,39,1.933,75,0.006,76,0.006,80,1.531,82,0.314,83,1.421,85,0.675,88,0.5,124,1.322,126,1.995,131,0.453,132,1.436,133,2.452,134,1.567,139,2.084,146,0.871,294,1.484,295,1.711,296,1.535,297,1.535,298,1.535,302,3.265,303,3.343,305,1.484,308,1.428,333,1.535,334,2.129,335,1.817,336,1.306,337,2.98,338,1.535,339,1.535,340,1.484,341,1.158,342,1.535,343,1.484,344,1.535,345,2.721,346,3.363,347,1.535,348,1.306,349,1.347,350,1.347,351,2.202,352,1.484,353,2.814,354,1.484,355,1.535,356,1.484,357,1.535,358,1.39,359,1.484,360,1.484,361,1.535,362,1.484,363,1.436,364,1.535,365,1.484,366,1.535,367,1.484,368,1.995,369,1.484,370,1.484,371,1.484,372,1.436,373,1.484,374,1.535,389,1.182,406,1.344,410,1.887,411,1.101,424,1.398,425,2.342,505,2.487,557,2.98,583,2.879,652,4.549,660,3.722,678,3.361,689,2.764,784,2.487,800,3.722,911,3.613,912,5.377,913,6.406,914,7.3,915,7.3,916,3.613,917,6.063,918,3.93,919,3.568,920,5.184,921,6.063,922,5.184,923,6.063,924,6.063,925,5.184,926,5.184,927,5.184,928,7.833,929,3.613,930,5.184,931,3.613,932,5.184,933,3.613,934,3.613,935,6.063,936,3.613,937,3.17,938,3.613,939,3.613,940,3.613,941,3.613,942,3.613,943,3.613,944,3.613,945,3.613,946,3.613,947,3.613,948,3.613,949,5.184,950,7.014,951,3.613,952,5.184,953,5.184,954,3.613,955,5.184,956,3.613,957,5.184,958,5.184,959,3.613,960,5.184,961,3.613,962,2.342,963,6.063,964,5.32,965,5.184,966,3.613,967,3.613,968,5.184,969,6.063,970,3.17,971,5.184,972,3.613,973,3.613,974,3.613,975,3.613,976,3.613,977,3.613,978,3.17,979,3.17,980,5.184,981,3.613,982,5.184,983,3.613,984,3.613,985,3.17,986,3.17,987,3.613,988,3.613,989,3.613,990,3.613,991,3.17,992,4.549,993,3.613,994,3.17,995,3.613,996,3.613,997,3.613,998,5.184,999,2.661]],["title/classes/FileLoaderService.html",[131,0.547,829,2.546]],["body/classes/FileLoaderService.html",[3,0.261,4,0.261,5,0.196,7,0.279,8,0.596,11,0.37,12,0.011,13,0.279,75,0.009,76,0.009,82,0.508,131,0.733,308,1.635,389,1.627,406,1.708,411,1.296,737,3.123,820,5.055,821,4.391,825,4.914,827,3.256,828,3.587,829,4.168,832,5.677,833,5.205,840,5.526,845,5.913,891,5.055,1000,5.842,1001,5.842,1002,8.787,1003,5.842,1004,5.842,1005,5.842,1006,5.842]],["title/interfaces/FrequencyBarsConfig.html",[0,0.061,265,2.23]],["body/interfaces/FrequencyBarsConfig.html",[0,0.116,2,0.976,3,0.221,4,0.221,5,0.136,7,0.235,8,0.535,10,1.659,11,0.517,12,0.011,13,0.406,18,2.833,19,1.044,22,1.581,25,2.469,75,0.008,76,0.008,248,2.749,249,2.749,250,3.71,251,2.88,252,2.88,253,2.88,254,2.63,255,2.523,256,2.63,257,2.63,258,2.63,259,2.63,260,2.63,261,2.63,262,2.63,263,2.749,264,2.749,265,3.281,266,4.174,267,4.003,268,4.003,269,4.003,270,2.523,271,3.281,272,2.63,273,2.822,274,2.822,275,3.281,276,2.63,277,2.63,278,2.523,279,2.749,280,2.88,281,2.424,282,3.504,283,2.63,284,2.424,285,3.973,286,3.034,287,2.63,288,3.281,289,3.571,290,3.571,291,2.333,292,3.281,293,3.71]],["title/interfaces/GamepadAction.html",[0,0.061,17,3.001]],["body/interfaces/GamepadAction.html",[0,0.106,1,3.242,2,0.99,3,0.224,4,0.224,5,0.137,6,3.242,7,0.384,8,0.54,9,3.442,10,1.569,11,0.526,12,0.011,13,0.401,14,4.92,15,3.683,16,1.388,17,5.224,18,3.016,19,0.992,20,4.92,21,1.935,22,2.3,23,5.385,24,3.242,25,2.49,26,3.442,27,3.442,28,3.242,29,2.92,30,3.442,31,3.242,32,3.242,33,3.242,34,3.07,35,3.07,36,4.767,37,2.92,38,3.442,39,2.413,40,3.442,41,2.75,42,3.442,43,3.061,44,3.442,45,3.779,46,3.442,47,3.07,48,3.442,49,3.242,50,3.442,51,3.242,52,3.442,53,3.242,54,3.442,55,3.07,56,3.442,57,3.242,58,3.442,59,2.786,60,3.442,61,3.07,62,3.442,63,3.242,64,3.442,65,3.242,66,3.442,67,3.242,68,3.442,69,3.242,70,3.07,71,3.442,72,3.442,73,3.442,74,3.442,75,0.008,76,0.008,411,1.378]],["title/injectables/GamepadService.html",[375,0.747,1007,2.827]],["body/injectables/GamepadService.html",[1,3.454,3,0.13,4,0.13,5,0.08,7,0.353,8,0.368,9,3.032,10,1.561,11,0.427,12,0.011,13,0.138,14,5.15,16,1.776,18,3.088,20,5.038,21,1.719,22,0.929,23,1.879,24,3.858,26,4.64,27,4.64,28,3.858,29,3.475,31,1.879,32,4.542,33,3.858,34,3.271,35,2.704,37,3.111,39,2.386,70,3.271,75,0.005,76,0.005,80,1.212,82,0.383,88,0.401,131,0.363,133,1.371,134,1.601,139,1.257,146,1.932,153,1.452,304,0.782,307,2.343,308,1.427,375,0.754,377,1.152,389,1.004,406,1.319,410,1.852,411,1.081,424,2.067,476,0.827,557,2.165,614,1.411,918,2.855,962,1.879,1007,2.855,1008,2.898,1009,5.328,1010,5.328,1011,4.404,1012,4.404,1013,5.328,1014,4.404,1015,4.404,1016,4.404,1017,2.898,1018,7.54,1019,4.404,1020,2.898,1021,7.54,1022,2.898,1023,5.951,1024,2.898,1025,7.219,1026,4.404,1027,2.898,1028,2.898,1029,2.898,1030,2.898,1031,2.898,1032,2.898,1033,2.898,1034,2.898,1035,2.898,1036,2.898,1037,5.328,1038,2.898,1039,5.328,1040,2.898,1041,2.898,1042,5.951,1043,2.898,1044,2.898,1045,2.898,1046,2.898,1047,4.404,1048,5.328,1049,5.1,1050,4.404,1051,2.543,1052,4.404,1053,2.898,1054,2.898,1055,2.898,1056,2.898,1057,2.898,1058,4.404,1059,2.898,1060,2.898,1061,2.898,1062,2.309,1063,2.898,1064,2.898,1065,3.924,1066,6.401,1067,2.898,1068,2.898,1069,5.328,1070,2.898,1071,2.898,1072,2.898,1073,2.898,1074,1.779,1075,2.898,1076,2.898,1077,2.898,1078,4.404,1079,2.898,1080,2.898,1081,2.898,1082,2.898,1083,2.898,1084,2.898,1085,4.675,1086,4.404,1087,3.244,1088,4.404,1089,4.404,1090,2.898,1091,2.898,1092,2.898,1093,4.404,1094,2.898,1095,2.898,1096,2.898,1097,4.404,1098,4.404,1099,5.328,1100,5.328,1101,5.951,1102,4.406,1103,5.328,1104,2.898,1105,5.951,1106,2.898,1107,5.914,1108,4.404,1109,4.404,1110,4.404,1111,2.898,1112,5.951,1113,2.898,1114,2.898,1115,4.404,1116,2.898,1117,2.898,1118,4.404,1119,4.404,1120,2.898,1121,2.898,1122,2.898,1123,2.898]],["title/interfaces/Hotkey.html",[0,0.061,1124,3.001]],["body/interfaces/Hotkey.html",[0,0.08,2,0.829,3,0.187,4,0.187,5,0.115,7,0.2,8,0.48,11,0.447,12,0.011,13,0.313,19,1.12,75,0.007,76,0.007,82,0.666,85,0.783,88,0.579,101,1.382,118,2.233,131,0.525,134,1.337,140,1.342,146,1.953,153,1.596,154,2.212,161,3.204,193,1.561,304,1.129,313,2.571,314,2.058,335,2.596,348,1.513,349,2.143,350,1.561,375,0.985,393,2.882,426,3.708,476,1.195,516,2.714,557,2.826,614,1.842,672,2.714,847,3.53,1065,3.084,1087,3.084,1124,3.958,1125,3.336,1126,5.456,1127,5.082,1128,5.773,1129,3.958,1130,3.084,1131,3.53,1132,2.445,1133,4.581,1134,3.958,1135,5.632,1136,3.336,1137,2.714,1138,2.571,1139,3.336,1140,3.336,1141,3.357,1142,3.084,1143,3.084,1144,4.234,1145,3.336,1146,3.336,1147,2.571,1148,3.336,1149,3.336,1150,3.336,1151,3.336,1152,3.336,1153,3.336,1154,3.336,1155,3.336,1156,4.581,1157,3.336,1158,4.581,1159,4.581,1160,4.581,1161,3.084,1162,3.336,1163,3.336,1164,3.336,1165,3.336,1166,3.958,1167,3.336,1168,3.336,1169,3.336,1170,3.336,1171,5.232,1172,3.336,1173,4.581,1174,3.336,1175,3.336,1176,4.581,1177,3.336,1178,3.336,1179,3.336,1180,3.336,1181,3.336,1182,3.336,1183,3.336,1184,4.581,1185,3.336,1186,3.336,1187,3.084,1188,3.336,1189,5.632,1190,3.336,1191,4.581,1192,3.336,1193,3.084,1194,3.336,1195,3.336,1196,2.882,1197,3.336,1198,3.336,1199,3.336]],["title/interfaces/HotkeyInfo.html",[0,0.061,1137,2.827]],["body/interfaces/HotkeyInfo.html",[0,0.081,2,0.842,3,0.19,4,0.19,5,0.117,7,0.203,8,0.485,11,0.368,12,0.011,13,0.316,19,1.088,75,0.007,76,0.007,82,0.669,85,0.795,88,0.588,101,1.403,118,2.267,131,0.533,134,1.348,140,1.362,146,1.959,153,1.605,154,2.236,161,3.238,193,1.585,304,1.147,313,2.61,314,2.089,335,2.036,348,1.536,349,2.166,350,1.585,375,0.995,393,2.927,426,3.723,476,1.214,516,2.756,557,2.855,614,1.862,672,2.756,1065,3.131,1087,3.131,1124,2.927,1125,3.388,1126,4.279,1127,5.103,1128,5.239,1129,4,1130,3.131,1131,3.567,1132,2.483,1133,4.629,1134,4,1135,6.476,1136,3.388,1137,3.767,1138,2.61,1139,3.388,1140,3.388,1141,3.393,1142,3.131,1143,3.131,1144,4.279,1145,3.388,1146,3.388,1147,2.61,1148,3.388,1149,3.388,1150,3.388,1151,3.388,1152,3.388,1153,3.388,1154,3.388,1155,3.388,1156,4.629,1157,3.388,1158,4.629,1159,4.629,1160,4.629,1161,3.131,1162,3.388,1163,3.388,1164,3.388,1165,3.388,1166,4,1167,3.388,1168,3.388,1169,3.388,1170,3.388,1171,5.274,1172,3.388,1173,4.629,1174,3.388,1175,3.388,1176,4.629,1177,3.388,1178,3.388,1179,3.388,1180,3.388,1181,3.388,1182,3.388,1183,3.388,1184,4.629,1185,3.388,1186,3.388,1187,3.131,1188,3.388,1189,5.668,1190,3.388,1191,4.629,1192,3.388,1193,3.131,1194,3.388,1195,3.388,1196,2.927,1197,3.388,1198,3.388,1199,3.388]],["title/interfaces/HotkeysData.html",[0,0.061,1200,3.474]],["body/interfaces/HotkeysData.html",[0,0.081,2,1.142,3,0.258,4,0.258,5,0.159,7,0.275,8,0.591,11,0.365,12,0.011,13,0.338,75,0.009,76,0.009,82,0.726,83,1.661,85,1.079,88,0.798,98,4.593,99,3.741,110,3.077,112,2.729,126,2.22,128,2.729,130,2.22,131,0.724,140,1.849,153,1.243,161,4.272,302,2.22,303,2.293,348,2.085,349,2.858,350,2.98,1131,3.543,1132,3.37,1137,3.741,1141,3.37,1147,3.543,1196,5.503,1200,5.645,1201,5.064,1202,4.25,1203,4.25,1204,5.218,1205,5.064,1206,4.35,1207,3.623,1208,5.064,1209,4.25,1210,4.25,1211,4.25,1212,5.064,1213,5.064,1214,4.598,1215,5.064]],["title/components/HotkeysHelpDialogComponent.html",[83,1.022,348,1.576]],["body/components/HotkeysHelpDialogComponent.html",[0,0.058,3,0.185,4,0.185,5,0.157,7,0.197,8,0.476,12,0.011,13,0.272,16,1.147,21,1.453,41,2.987,43,2.696,75,0.007,76,0.007,80,1.432,82,0.663,83,1.529,85,0.773,88,0.572,94,2.341,98,4.229,99,2.68,110,2.205,112,1.956,124,1.453,126,2.193,128,2.696,130,2.193,131,0.519,132,1.643,140,2.09,153,0.891,161,2.304,294,1.698,295,1.881,296,1.757,297,1.757,298,1.757,302,3.317,303,3.401,305,1.698,308,1.432,333,1.757,334,2.341,335,1.998,336,1.494,337,2.987,338,1.757,339,1.757,340,1.698,341,1.325,342,1.757,343,1.698,344,1.757,345,1.698,346,1.591,347,1.757,348,2.541,349,2.912,350,3.104,351,2.422,352,1.698,353,2.987,354,1.698,355,1.757,356,1.698,357,1.757,358,1.591,359,1.698,360,1.698,361,1.757,362,1.698,363,1.643,364,1.757,365,1.698,366,1.757,367,1.698,368,1.591,369,1.698,370,1.698,371,1.698,372,1.643,373,1.698,374,1.757,389,1.299,402,4.541,406,0.916,424,1.538,1124,3.923,1131,2.538,1132,2.414,1137,2.68,1141,3.328,1147,4.005,1196,2.846,1200,3.294,1201,6.471,1202,3.045,1203,3.045,1204,4.804,1205,3.628,1206,4.005,1207,3.336,1208,5.001,1209,4.198,1210,4.198,1211,4.198,1212,6.471,1213,3.628,1214,5.602,1215,3.628,1216,4.134,1217,3.628,1218,4.134,1219,4.134,1220,4.134,1221,7.031,1222,7.624,1223,7.031,1224,5.7,1225,5.7,1226,7.031,1227,5.7,1228,5.7,1229,5.001,1230,5.001,1231,5.7,1232,5.7,1233,5.7]],["title/injectables/HotkeysService.html",[375,0.747,1138,2.677]],["body/injectables/HotkeysService.html",[0,0.074,3,0.167,4,0.167,5,0.103,7,0.179,8,0.444,11,0.45,12,0.011,13,0.295,16,1.973,19,1.074,21,1.717,75,0.007,76,0.007,80,1.083,82,0.642,85,0.7,88,0.518,101,1.236,118,1.997,131,0.47,134,1.259,140,1.2,146,1.905,153,1.532,154,2.38,161,3.752,193,1.982,304,1.01,308,1.65,313,2.299,314,1.84,335,2.167,348,1.353,349,2.51,350,1.396,375,0.911,377,1.488,389,1.212,393,4.634,406,1.637,410,1.655,411,1.222,424,1.816,426,3.737,476,1.069,516,4.365,557,2.613,614,1.704,672,3.448,1065,2.758,1087,2.758,1124,2.578,1125,2.983,1126,3.917,1127,4.365,1128,5.237,1129,3.661,1130,2.758,1131,3.797,1132,2.187,1133,4.237,1134,3.661,1135,5.364,1136,2.983,1137,2.427,1138,3.265,1139,2.983,1140,2.983,1141,3.105,1142,2.758,1143,4.555,1144,5.237,1145,4.237,1146,4.927,1147,3.797,1148,4.927,1149,2.983,1150,2.983,1151,2.983,1152,2.983,1153,2.983,1154,2.983,1155,4.237,1156,4.237,1157,2.983,1158,4.237,1159,4.237,1160,4.237,1161,2.758,1162,2.983,1163,2.983,1164,2.983,1165,2.983,1166,3.661,1167,2.983,1168,2.983,1169,2.983,1170,2.983,1171,4.927,1172,2.983,1173,4.237,1174,2.983,1175,2.983,1176,4.237,1177,2.983,1178,2.983,1179,2.983,1180,2.983,1181,4.237,1182,2.983,1183,2.983,1184,4.237,1185,2.983,1186,2.983,1187,4.958,1188,5.364,1189,5.364,1190,2.983,1191,4.237,1192,2.983,1193,2.758,1194,2.983,1195,2.983,1196,2.578,1197,2.983,1198,2.983,1199,2.983,1234,5.318,1235,5.318,1236,3.744,1237,3.744,1238,3.744,1239,3.744,1240,3.744,1241,3.744,1242,3.744,1243,3.744,1244,3.744,1245,3.744,1246,3.744]],["title/interfaces/Id3CoverPicture.html",[0,0.061,684,2.677]],["body/interfaces/Id3CoverPicture.html",[0,0.103,2,1.21,3,0.273,4,0.273,5,0.168,7,0.292,8,0.612,10,1.371,11,0.464,12,0.011,13,0.35,19,1.184,75,0.009,76,0.009,77,1.959,82,0.532,94,2.511,124,1.559,140,2.612,152,2.43,179,2.018,284,3.863,684,4.826,685,3.753,688,4.756,689,3.26,693,3.57,694,3.944,700,2.209,712,2.279,1074,4.505,1247,5.364,1248,4.871]],["title/interfaces/Id3Tags.html",[0,0.061,712,1.625]],["body/interfaces/Id3Tags.html",[0,0.097,2,1.109,3,0.251,4,0.251,5,0.154,7,0.267,8,0.58,10,1.3,11,0.542,12,0.011,13,0.332,19,1.209,75,0.009,76,0.009,77,2.536,82,0.487,94,3.25,124,1.429,140,1.796,152,3.145,179,2.612,284,2.754,411,1.581,684,4.858,685,3.441,688,5.13,689,2.988,693,4.621,694,3.848,700,2.025,705,6.105,712,2.594,1074,4.271,1247,4.917,1248,6.305]],["title/injectables/Id3TagsService.html",[375,0.747,1249,3.474]],["body/injectables/Id3TagsService.html",[3,0.199,4,0.199,5,0.214,7,0.212,10,1.12,11,0.379,12,0.011,13,0.212,16,2.1,20,2.887,21,1.135,39,1.66,75,0.007,76,0.007,80,0.907,82,0.589,88,0.616,131,0.558,133,2.106,134,1.541,146,1.879,153,1.292,154,2.608,161,2.481,178,3.065,217,2.595,304,1.201,307,2.981,308,1.221,375,1.027,377,1.77,389,1.367,406,0.987,410,1.386,411,0.808,419,2.6,424,1.201,476,1.271,494,3.279,557,3.331,685,4.161,686,1.66,700,2.449,712,1.66,713,1.77,714,2.188,718,3.45,737,2.235,779,3.681,780,2.734,781,2.836,865,4.991,918,3.887,962,2.887,1249,4.777,1250,4.453,1251,5.261,1252,4.453,1253,5.261,1254,7.251,1255,4.453,1256,5.995,1257,5.21,1258,4.453,1259,4.453,1260,7.568,1261,6.778,1262,3.907,1263,4.453,1264,3.907,1265,3.548,1266,4.453,1267,5.995,1268,4.453,1269,5.995,1270,4.453,1271,5.995,1272,4.453,1273,3.907,1274,3.907,1275,4.453,1276,4.453,1277,4.453,1278,3.907,1279,6.778,1280,4.453,1281,3.279,1282,4.453,1283,4.453,1284,4.453,1285,3.907,1286,5.995,1287,4.453,1288,4.453,1289,4.453,1290,4.453,1291,4.453,1292,4.453,1293,4.453,1294,6.778,1295,4.453,1296,4.453,1297,4.453,1298,4.453,1299,4.453,1300,5.995,1301,5.261,1302,4.453,1303,4.453,1304,4.453,1305,4.453,1306,4.453,1307,4.453,1308,4.453,1309,4.453,1310,4.453,1311,4.453]],["title/interfaces/IndexedDbTrackMetadata.html",[0,0.061,93,2.546]],["body/interfaces/IndexedDbTrackMetadata.html",[0,0.11,2,1.089,3,0.246,4,0.246,5,0.206,7,0.262,8,0.574,11,0.475,12,0.011,13,0.394,19,1.171,25,2.646,75,0.009,76,0.009,77,1.763,79,3.212,81,2.339,82,0.653,93,4.016,94,2.825,124,2.004,125,3.566,152,2.186,179,1.816,243,4.139,273,2.42,274,2.42,411,1.249,414,3.066,446,2.933,447,3.066,448,3.066,449,3.212,450,2.933,451,3.212,452,3.212,453,3.377,454,3.377,455,3.377,534,3.377,682,3.066,683,3.787,684,4.222,685,3.377,686,2.051,687,3.517,688,4.459,689,2.933,690,5.411,691,5.096,692,3.566,693,3.212,694,2.602,695,3.787,696,3.566,697,3.566,698,3.212]],["title/interfaces/LastfmAlbum.html",[0,0.061,1312,2.827]],["body/interfaces/LastfmAlbum.html",[0,0.103,2,0.919,3,0.208,4,0.208,5,0.128,7,0.221,8,0.514,10,0.867,11,0.467,12,0.011,13,0.221,19,1.18,75,0.008,76,0.008,77,2.363,80,1.501,81,2.096,82,0.686,85,0.867,88,0.642,100,1.972,101,1.532,131,0.582,134,1.606,139,1.76,140,2.218,146,1.777,152,3.05,153,1.762,154,1.786,193,2.861,209,2.034,211,1.906,213,1.626,216,1.972,217,2.363,304,1.252,375,1.055,476,1.325,677,2.195,686,1.73,694,2.195,700,1.677,703,3.623,706,2.475,707,2.374,711,2.374,712,2.298,713,1.844,714,2.281,715,2.374,716,2.475,728,3.287,730,2.374,731,2.475,732,2.475,736,2.475,737,2.298,738,2.374,739,3.152,743,2.475,751,2.475,763,1.972,766,1.906,1312,4.486,1313,3.009,1314,3.009,1315,4.78,1316,2.71,1317,2.71,1318,3.784,1319,3.784,1320,3.009,1321,3.996,1322,2.849,1323,3.195,1324,3.195,1325,3.195,1326,3.195,1327,3.195,1328,3.009,1329,3.195,1330,3.195,1331,3.195,1332,3.195,1333,3.195,1334,3.996,1335,3.195,1336,3.195,1337,3.195,1338,3.195,1339,3.195,1340,3.195,1341,3.009,1342,3.195,1343,3.195,1344,3.195,1345,3.195,1346,3.195,1347,3.195]],["title/interfaces/LastfmErrorResponse.html",[0,0.061,1319,2.677]],["body/interfaces/LastfmErrorResponse.html",[0,0.104,2,0.928,3,0.21,4,0.21,5,0.129,7,0.224,8,0.518,10,1.3,11,0.44,12,0.011,13,0.224,19,1.167,75,0.008,76,0.008,77,2.372,80,0.954,81,2.11,82,0.688,85,0.876,88,0.648,100,1.991,101,1.547,131,0.588,134,1.611,139,1.771,140,2.228,146,1.784,152,2.466,153,1.765,154,1.804,193,2.87,209,2.048,211,1.925,213,1.643,216,1.991,217,2.586,304,1.264,375,1.062,476,1.338,677,2.217,686,1.747,694,2.217,700,1.694,703,2.303,706,2.499,707,2.397,711,2.397,712,2.313,713,1.863,714,2.303,715,2.397,716,2.499,728,3.308,730,2.397,731,2.499,732,2.499,736,2.499,737,2.313,738,2.397,739,3.173,743,2.499,751,2.499,763,1.991,766,1.925,1312,4.022,1313,3.039,1314,3.039,1315,4.022,1316,2.737,1317,2.737,1318,3.809,1319,4.27,1320,4.798,1321,4.022,1322,2.878,1323,3.226,1324,3.226,1325,3.226,1326,3.226,1327,3.226,1328,3.039,1329,3.226,1330,3.226,1331,3.226,1332,3.226,1333,3.226,1334,4.022,1335,3.226,1336,3.226,1337,3.226,1338,3.226,1339,3.226,1340,3.226,1341,3.039,1342,3.226,1343,3.226,1344,3.226,1345,3.226,1346,3.226,1347,3.226]],["title/interfaces/LastfmImage.html",[0,0.061,1315,2.827]],["body/interfaces/LastfmImage.html",[0,0.104,2,0.928,3,0.21,4,0.21,5,0.129,7,0.224,8,0.518,10,0.876,11,0.44,12,0.011,13,0.224,19,1.181,75,0.008,76,0.008,77,2.372,80,0.954,81,2.11,82,0.688,85,0.876,88,0.648,100,1.991,101,1.547,131,0.588,134,1.611,139,1.771,140,2.228,146,1.784,152,2.466,153,1.765,154,1.804,193,2.87,209,2.048,211,1.925,213,1.643,216,1.991,217,2.372,304,1.264,375,1.062,476,1.338,677,2.217,686,1.747,694,2.217,700,1.694,703,2.303,706,2.499,707,2.397,711,2.397,712,2.313,713,1.863,714,2.303,715,2.397,716,2.499,728,3.308,730,2.397,731,2.499,732,2.499,736,2.499,737,2.313,738,2.397,739,3.173,743,2.499,751,2.499,763,1.991,766,1.925,1312,4.022,1313,3.039,1314,3.039,1315,4.508,1316,4.322,1317,4.322,1318,3.809,1319,3.809,1320,3.039,1321,4.022,1322,2.878,1323,3.226,1324,3.226,1325,3.226,1326,3.226,1327,3.226,1328,3.039,1329,3.226,1330,3.226,1331,3.226,1332,3.226,1333,3.226,1334,4.022,1335,3.226,1336,3.226,1337,3.226,1338,3.226,1339,3.226,1340,3.226,1341,3.039,1342,3.226,1343,3.226,1344,3.226,1345,3.226,1346,3.226,1347,3.226]],["title/injectables/LastfmMetadataService.html",[375,0.747,1322,2.677]],["body/injectables/LastfmMetadataService.html",[0,0.103,3,0.208,4,0.208,5,0.128,7,0.222,10,0.869,11,0.391,12,0.011,13,0.222,19,1.145,75,0.008,76,0.008,77,2.364,80,1.256,81,2.098,82,0.686,85,0.869,88,0.643,100,1.975,101,1.534,131,0.583,134,1.607,139,1.761,140,2.219,146,1.778,152,2.452,153,1.762,154,1.788,193,2.862,209,2.435,211,1.909,213,1.629,216,1.975,217,2.364,304,1.254,308,0.946,375,1.056,377,1.847,389,1.406,406,1.03,410,1.446,411,0.844,476,1.327,677,2.198,686,1.733,694,2.198,700,2.229,703,2.284,706,2.478,707,2.377,711,2.377,712,2.75,713,1.847,714,2.284,715,2.377,716,2.478,728,3.29,730,2.377,731,2.478,732,2.478,736,3.29,737,2.582,738,2.377,739,3.155,743,2.478,751,2.478,763,1.975,766,1.909,781,2.198,1312,3.999,1313,3.999,1314,3.013,1315,3.999,1316,2.714,1317,2.714,1318,3.788,1319,3.788,1320,3.013,1321,3.999,1322,3.788,1323,3.199,1324,3.199,1325,3.199,1326,3.199,1327,3.199,1328,3.013,1329,3.199,1330,3.199,1331,3.199,1332,3.199,1333,3.199,1334,3.999,1335,3.199,1336,3.199,1337,3.199,1338,3.199,1339,3.199,1340,3.199,1341,3.013,1342,3.199,1343,3.199,1344,3.199,1345,3.199,1346,3.199,1347,3.199,1348,5.413,1349,4.647]],["title/interfaces/LastfmSuccessResponse.html",[0,0.061,1318,2.677]],["body/interfaces/LastfmSuccessResponse.html",[0,0.104,2,0.937,3,0.212,4,0.212,5,0.13,7,0.226,8,0.521,10,0.885,11,0.395,12,0.011,13,0.226,19,1.149,75,0.008,76,0.008,77,2.592,80,0.964,81,2.124,82,0.69,85,0.885,88,0.655,100,2.011,101,1.563,131,0.594,134,1.615,139,1.783,140,2.239,146,1.792,152,2.482,153,1.769,154,1.822,193,2.88,209,2.061,211,1.945,213,1.659,216,2.011,217,2.381,304,1.277,375,1.069,476,1.352,677,2.239,686,1.765,694,2.239,700,1.711,703,2.327,706,2.525,707,2.421,711,2.421,712,2.328,713,1.881,714,2.327,715,2.421,716,2.525,728,3.33,730,2.421,731,2.525,732,2.525,736,2.525,737,2.328,738,2.421,739,3.194,743,2.525,751,2.525,763,2.011,766,1.945,1312,4.817,1313,3.069,1314,3.069,1315,4.049,1316,2.765,1317,2.765,1318,4.291,1319,3.834,1320,3.069,1321,4.049,1322,2.907,1323,3.259,1324,3.259,1325,3.259,1326,3.259,1327,3.259,1328,3.069,1329,3.259,1330,3.259,1331,3.259,1332,3.259,1333,3.259,1334,4.049,1335,3.259,1336,3.259,1337,3.259,1338,3.259,1339,3.259,1340,3.259,1341,3.069,1342,3.259,1343,3.259,1344,3.259,1345,3.259,1346,3.259,1347,3.259]],["title/injectables/LegacyFileLoaderService.html",[375,0.747,1350,3.826]],["body/injectables/LegacyFileLoaderService.html",[3,0.224,4,0.224,5,0.234,7,0.342,8,0.54,11,0.317,12,0.011,13,0.239,25,2.49,39,1.864,75,0.008,76,0.008,82,0.624,88,0.691,131,0.627,134,1.461,146,1.56,153,1.077,154,1.924,209,2.741,213,1.752,304,1.349,307,3.157,308,1.601,375,1.108,377,1.987,389,1.475,406,1.591,411,1.175,476,1.428,505,3.442,557,2.457,614,1.602,660,4.66,737,2.675,800,3.07,820,3.974,821,3.451,823,3.683,825,4.455,826,3.07,827,2.786,828,3.07,829,4.786,830,3.442,832,5.285,833,4.92,840,4.94,845,5.589,1273,4.387,1285,4.387,1350,5.679,1351,6.472,1352,5,1353,6.659,1354,5,1355,5,1356,5,1357,5,1358,5,1359,5,1360,5,1361,5,1362,5,1363,5,1364,5,1365,5,1366,5,1367,5,1368,5,1369,5,1370,5,1371,5,1372,5,1373,5,1374,5,1375,5,1376,5,1377,5]],["title/components/LibraryComponent.html",[83,1.022,132,1.733]],["body/components/LibraryComponent.html",[0,0.029,3,0.093,4,0.093,5,0.16,7,0.099,8,0.282,10,0.924,11,0.39,12,0.011,13,0.161,16,1.372,19,0.919,21,1.571,39,1.843,75,0.004,76,0.004,77,2.421,78,1.82,79,2.502,80,1.539,81,1.15,82,0.649,83,1.004,84,3.433,85,0.388,86,3.155,87,1.6,88,0.287,89,1.273,90,1.542,91,1.211,92,1.106,93,4.24,94,3.136,95,1.156,96,3.759,97,1.273,98,2.777,99,1.344,100,0.881,101,0.684,102,3.759,103,3.759,104,3.759,105,3.759,106,1.652,107,2.077,108,1.427,109,3.759,110,1.106,111,3.759,112,0.981,113,3.413,114,3.413,115,3.413,116,1.652,117,2.949,118,1.106,119,3.413,120,1.527,121,1.061,122,2.491,123,1.527,124,1.26,125,1.344,126,1.302,127,2.968,128,1.6,129,2.968,130,1.302,131,0.26,132,1.964,133,1.6,134,1.006,135,1.344,136,1.344,137,1.427,138,1.652,139,2.219,140,1.084,141,3.759,142,4.653,143,3.759,144,3.413,145,3.759,146,1.963,147,6.63,148,5.125,149,2.968,150,2.968,151,2.968,152,3.134,153,1.588,154,1.902,155,2.968,156,3.759,157,4.337,158,5.637,159,4.337,160,5.125,161,2.754,162,2.695,163,2.695,164,3.938,165,2.968,166,2.328,167,4.337,168,2.968,169,2.968,170,2.968,171,2.968,172,2.968,173,3.938,174,2.968,175,5.118,176,2.968,177,2.968,178,3.402,179,1.631,180,2.968,181,5.125,182,2.695,183,1.975,184,5.125,185,2.968,186,2.968,187,5.125,188,2.968,189,2.968,190,1.975,191,4.337,192,2.968,193,2.817,194,2.968,195,4.337,196,4.337,197,2.968,198,2.968,199,2.968,200,2.968,201,2.968,202,2.968,203,2.695,204,2.968,205,2.695,206,2.968,207,2.968,208,2.968,209,2.396,210,1.527,211,0.852,212,1.82,213,1.908,214,1.82,215,1.82,216,0.881,217,1.084,218,1.82,219,1.652,220,1.211,221,2.968,222,1.82,223,1.82,224,2.968,225,2.968,226,1.82,227,2.968,228,1.82,229,2.695,230,1.82,231,1.82,232,2.968,233,1.82,234,1.82,235,3.759,236,1.82,237,2.968,238,1.82,239,2.968,240,2.968,241,3.759,242,1.82,243,1.061,244,1.82,245,1.82,246,1.82,247,1.273,294,0.852,295,1.116,296,0.881,297,0.881,298,0.881,302,2.938,303,2.968,305,0.852,308,1.479,333,0.881,334,1.389,335,1.186,336,0.749,337,2.1,338,0.881,339,0.881,340,0.852,341,0.665,342,0.881,343,0.852,344,0.881,345,0.852,346,0.798,347,0.881,348,0.749,349,0.773,350,0.773,351,1.437,352,0.852,353,2.1,354,0.852,355,0.881,356,0.852,357,0.881,358,0.798,359,0.852,360,0.852,361,0.881,362,0.852,363,0.824,364,0.881,365,0.852,366,0.881,367,0.852,368,0.798,369,0.852,370,0.852,371,0.852,372,0.824,373,0.852,374,0.881,389,0.771,406,1.365,410,1.917,411,1.118,424,1.576,556,3.402,1378,3.383,1379,3.383,1380,2.968,1381,3.383,1382,3.383,1383,3.383,1384,3.383,1385,2.074,1386,2.074,1387,2.074,1388,2.074,1389,2.074,1390,2.074,1391,2.074,1392,2.074,1393,2.074,1394,2.074,1395,2.074,1396,2.074,1397,2.074,1398,3.383,1399,3.402,1400,3.383,1401,3.383,1402,4.943]],["title/interceptors/LoaderInterceptor.html",[1403,4.36,1404,3.474]],["body/interceptors/LoaderInterceptor.html",[3,0.266,4,0.266,5,0.163,7,0.283,11,0.376,12,0.011,13,0.283,75,0.009,76,0.009,80,1.209,82,0.719,85,1.11,88,0.821,101,1.959,131,0.745,133,2.808,134,1.209,153,1.279,308,1.209,375,1.234,389,1.643,406,1.316,410,1.848,411,1.078,707,3.036,865,4.087,1134,5.343,1404,5.743,1405,5.937,1406,5.937,1407,7.208,1408,7.208,1409,8.073,1410,6.811,1411,8.073,1412,5.937,1413,5.937,1414,7.208,1415,5.937,1416,5.21,1417,4.962,1418,5.937,1419,4.73,1420,5.21,1421,5.937,1422,5.21]],["title/injectables/LoaderService.html",[375,0.747,1417,3.001]],["body/injectables/LoaderService.html",[3,0.258,4,0.258,5,0.159,7,0.275,8,0.591,12,0.011,13,0.275,16,1.966,21,1.472,39,2.98,41,3.01,75,0.009,76,0.01,82,0.502,87,2.729,88,0.798,131,0.724,134,1.175,139,2.189,304,1.557,308,1.561,375,1.213,377,2.293,383,6.108,389,1.615,406,1.57,424,1.557,457,5.218,476,1.648,551,4.598,554,4.598,580,4.598,1417,4.877,1423,5.771,1424,8.205,1425,8.205,1426,5.771,1427,5.771,1428,5.771,1429,5.771,1430,8.205,1431,5.771,1432,5.771,1433,4.598]],["title/injectables/MediaSessionService.html",[375,0.747,1434,3.001]],["body/injectables/MediaSessionService.html",[3,0.204,4,0.204,5,0.126,7,0.218,10,1.468,11,0.464,12,0.011,13,0.218,16,2.18,29,4.458,75,0.008,76,0.008,80,1.492,82,0.531,85,0.854,88,0.632,124,1.165,131,0.573,134,1.242,146,1.656,154,1.759,211,2.506,216,2.592,217,1.955,304,1.233,307,3.021,308,1.555,375,1.045,376,3.12,377,1.816,380,5.785,381,5.044,389,1.391,406,1.624,410,2.281,411,1.33,425,2.963,476,1.305,495,3.641,847,3.746,881,2.806,1166,5.044,1434,4.199,1435,6.892,1436,6.258,1437,4.57,1438,6.101,1439,6.101,1440,6.101,1441,6.101,1442,4.57,1443,6.101,1444,6.867,1445,7.635,1446,6.43,1447,4.57,1448,6.101,1449,6.867,1450,4.57,1451,6.101,1452,4.57,1453,6.101,1454,4.57,1455,4.727,1456,4.57,1457,4.861,1458,5.353,1459,4.57,1460,3.641,1461,4.57,1462,4.57,1463,4.57,1464,4.57,1465,4.01,1466,4.57,1467,4.57,1468,6.101,1469,4.861,1470,5.353,1471,6.101,1472,4.57,1473,4.57,1474,4.01,1475,4.57,1476,4.57,1477,4.57,1478,4.57,1479,4.57,1480,4.57,1481,4.57]],["title/injectables/MetadataService.html",[375,0.747,1482,3.211]],["body/injectables/MetadataService.html",[3,0.139,4,0.139,5,0.19,7,0.148,8,0.387,11,0.39,12,0.011,13,0.148,19,0.851,21,1.57,75,0.006,76,0.006,77,0.993,79,3.24,80,0.631,81,1.576,82,0.693,85,0.579,87,1.466,88,0.429,89,1.903,90,2.112,91,1.81,92,1.653,93,2.706,94,1.273,95,1.727,100,1.317,101,1.023,124,0.79,131,0.389,134,1.459,135,2.01,136,2.01,139,2.276,146,1.816,152,1.232,153,1.623,166,3.19,179,1.023,193,2.069,209,2.175,213,2.582,243,1.585,304,0.836,308,1.342,341,1.485,375,0.794,377,1.232,389,1.056,406,0.687,410,0.965,411,0.563,424,1.661,471,2.706,472,1.653,476,0.885,478,1.81,512,2.471,614,2.361,645,4.066,660,1.903,677,3.485,681,4.185,687,2.37,691,3.992,692,3.992,693,1.81,694,1.466,695,2.134,696,2.01,700,2.499,713,1.232,714,1.523,725,1.903,729,2.845,737,2.295,738,2.37,739,2.37,763,2.358,766,2.279,772,4.483,773,2.471,774,2.01,775,2.01,776,2.01,777,2.01,778,2.01,781,2.912,821,1.653,827,3.673,828,1.903,847,3.407,891,1.903,1249,3.692,1322,2.845,1482,3.413,1483,2.72,1484,5.549,1485,5.549,1486,5.549,1487,5.549,1488,4.634,1489,4.634,1490,3.1,1491,4.634,1492,3.1,1493,4.634,1494,3.1,1495,4.634,1496,3.1,1497,4.634,1498,3.1,1499,3.1,1500,2.72,1501,3.1,1502,2.72,1503,3.1,1504,3.1,1505,2.134,1506,3.1,1507,3.1,1508,2.72,1509,2.72,1510,3.1,1511,3.1,1512,3.1,1513,3.1,1514,3.1,1515,3.1,1516,3.1,1517,3.1,1518,4.634,1519,4.869,1520,3.1,1521,3.1,1522,4.634,1523,3.1,1524,4.634,1525,4.634,1526,3.692,1527,4.066,1528,4.066,1529,5.549,1530,3.1,1531,3.1,1532,4.634,1533,5.549,1534,3.692,1535,3.1,1536,3.1,1537,3.1,1538,3.1,1539,6.59,1540,3.1,1541,3.1,1542,3.1,1543,3.1,1544,3.1,1545,3.1,1546,3.1,1547,6.59,1548,3.1,1549,4.634,1550,3.1,1551,4.634,1552,4.634,1553,3.1,1554,3.1,1555,3.1,1556,3.1,1557,2.72,1558,4.634,1559,3.1,1560,3.1,1561,3.1,1562,3.1,1563,3.1,1564,3.1,1565,3.1,1566,3.1,1567,3.1,1568,3.1,1569,3.1,1570,3.1,1571,3.1,1572,3.1,1573,3.1,1574,3.1,1575,3.692,1576,2.72,1577,2.72,1578,3.1,1579,4.634,1580,3.1,1581,3.1,1582,3.1,1583,3.1,1584,3.1,1585,3.1,1586,3.1,1587,3.1,1588,3.1,1589,3.1,1590,2.72,1591,3.1,1592,3.1,1593,3.1,1594,3.1,1595,3.1,1596,3.1,1597,3.1,1598,3.1,1599,3.1,1600,3.1,1601,3.1,1602,3.1,1603,3.1]],["title/components/MetadataSettingsComponent.html",[83,1.022,352,1.791]],["body/components/MetadataSettingsComponent.html",[3,0.179,4,0.179,5,0.207,7,0.191,8,0.465,11,0.439,12,0.011,13,0.191,16,1.923,21,1.02,75,0.007,76,0.007,80,1.608,82,0.656,83,1.502,85,0.747,88,0.553,89,2.455,90,1.823,91,3.742,92,3.886,112,1.891,124,2.071,126,2.143,130,2.143,131,0.502,132,1.589,134,0.814,135,2.592,136,2.592,190,3.252,209,2.115,213,1.401,294,1.643,295,1.838,296,1.699,297,1.699,298,1.699,302,3.304,303,3.387,305,1.643,308,1.537,333,1.699,334,2.288,335,1.952,336,1.445,337,2.945,338,1.699,339,1.699,340,1.643,341,1.281,342,1.699,343,1.643,344,1.699,345,1.643,346,1.539,347,1.699,348,1.445,349,1.491,350,1.491,351,2.366,352,2.847,353,2.945,354,1.643,355,1.699,356,1.643,357,1.699,358,1.539,359,1.643,360,1.643,361,1.699,362,1.643,363,1.589,364,1.699,365,1.643,366,1.699,367,1.643,368,1.539,369,1.643,370,1.643,371,1.643,372,1.589,373,1.643,374,1.699,389,1.27,406,1.615,410,2.157,411,1.258,424,1.079,535,3.696,557,3.406,744,3.252,781,3.735,1102,3.834,1207,3.278,1328,3.611,1482,5.104,1604,7.742,1605,6.793,1606,3.186,1607,5.106,1608,6.409,1609,4.102,1610,6.931,1611,5.57,1612,5.57,1613,5.57,1614,5.57,1615,3.999,1616,5.57,1617,8.342,1618,3.999,1619,5.57,1620,3.999,1621,5.57,1622,3.999,1623,5.57,1624,3.999,1625,4.887,1626,3.186,1627,3.999,1628,3.509,1629,3.999,1630,3.509,1631,3.186,1632,3.999,1633,3.999,1634,3.999,1635,3.999,1636,3.999,1637,5.57,1638,6.082,1639,5.57,1640,4.887]],["title/interfaces/MusicbrainzReleaseGroup.html",[0,0.061,717,2.827]],["body/interfaces/MusicbrainzReleaseGroup.html",[0,0.1,2,0.858,3,0.194,4,0.194,5,0.119,7,0.207,8,0.491,10,0.81,11,0.423,12,0.011,13,0.207,19,1.186,22,1.389,75,0.007,76,0.007,77,1.389,81,1.474,82,0.688,85,0.81,88,0.6,100,1.842,101,1.431,131,0.544,134,1.527,139,1.681,140,1.389,146,1.907,153,1.778,179,2.367,183,4.188,193,2.949,209,2.207,211,2.746,213,2.514,216,2.841,217,2.478,247,2.662,304,1.17,341,1.389,375,1.008,411,1.069,476,1.238,614,1.389,677,2.785,686,1.616,699,3.817,700,1.567,701,2.984,702,2.984,703,2.131,704,2.984,706,2.312,707,2.217,708,2.984,709,2.811,710,2.811,711,3.42,712,2.195,713,1.723,714,2.131,715,2.217,716,2.312,717,4.335,718,3.419,719,5.014,720,4.403,721,2.811,722,4.053,723,2.984,724,2.984,725,2.662,726,2.811,727,2.811,728,2.312,729,2.662,730,2.217,731,2.312,732,2.312,733,2.984,734,2.984,735,2.984,736,2.312,737,2.493,738,2.217,739,3.011,740,4.053,741,2.984,742,2.984,743,3.14,744,2.532,745,2.984,746,2.984,747,2.984,748,2.984,749,2.984,750,2.984,751,3.14,752,4.053,753,2.984,754,2.984,755,2.662,756,2.984,757,2.984,758,2.984,759,2.984,760,4.053,761,2.984,762,2.984,763,1.842,764,2.984,765,2.984,766,2.418,767,2.984,768,2.984,769,2.984]],["title/interfaces/MusicbrainzResponse.html",[0,0.061,721,2.827]],["body/interfaces/MusicbrainzResponse.html",[0,0.101,2,0.872,3,0.197,4,0.197,5,0.121,7,0.21,8,0.497,10,1.26,11,0.377,12,0.011,13,0.21,19,1.144,22,1.412,75,0.007,76,0.007,77,1.412,81,1.498,82,0.691,85,0.823,88,0.609,100,1.872,101,1.454,131,0.553,134,1.535,139,1.699,140,1.412,146,1.915,153,1.783,179,1.454,183,2.572,193,2.962,209,2.225,211,2.769,213,2.53,216,2.864,217,2.49,247,2.705,304,1.188,341,1.412,375,1.019,476,1.258,614,1.412,677,2.815,686,1.642,699,3.859,700,1.592,701,3.032,702,3.032,703,2.165,704,3.032,706,2.349,707,2.253,708,3.032,709,2.856,710,2.856,711,3.448,712,2.219,713,1.751,714,2.165,715,2.253,716,2.349,717,4.68,718,2.713,719,5.038,720,2.705,721,3.859,722,5.19,723,4.969,724,3.032,725,2.705,726,2.856,727,2.856,728,2.349,729,2.705,730,2.253,731,2.349,732,2.349,733,3.032,734,3.032,735,3.032,736,2.349,737,2.513,738,2.253,739,3.044,740,4.097,741,3.032,742,3.032,743,3.174,744,2.572,745,3.032,746,3.032,747,3.032,748,3.032,749,3.032,750,3.032,751,3.174,752,4.097,753,3.032,754,3.032,755,2.705,756,3.032,757,3.032,758,3.032,759,3.032,760,4.097,761,3.032,762,3.032,763,1.872,764,3.032,765,3.032,766,2.445,767,3.032,768,3.032,769,3.032]],["title/injectables/MusicbrainzService.html",[375,0.747,729,2.677]],["body/injectables/MusicbrainzService.html",[0,0.101,3,0.196,4,0.196,5,0.121,7,0.21,10,0.821,11,0.278,12,0.011,13,0.21,19,1.144,22,1.408,75,0.007,76,0.007,77,1.408,80,0.895,81,1.494,82,0.69,85,0.821,88,0.608,100,1.867,101,1.45,131,0.551,134,1.534,139,1.696,140,1.408,146,1.914,153,1.783,179,1.45,183,2.566,193,2.96,209,2.486,211,2.765,213,2.527,216,2.86,217,2.488,247,2.697,304,1.185,308,0.895,341,1.408,375,1.017,377,1.746,389,1.354,406,0.974,410,1.367,411,0.798,476,1.254,614,1.408,677,2.81,686,1.638,699,3.852,700,2.147,701,3.024,702,3.024,703,2.159,704,3.024,706,2.343,707,2.247,708,3.024,709,2.848,710,2.848,711,3.443,712,2.688,713,1.746,714,2.159,715,2.247,716,2.343,717,3.852,718,2.708,719,4.364,720,2.697,721,2.848,722,4.09,723,3.024,724,3.024,725,2.697,726,2.848,727,2.848,728,2.343,729,3.648,730,2.247,731,2.343,732,2.343,733,3.024,734,3.024,735,3.024,736,3.168,737,2.688,738,2.247,739,3.039,740,4.09,741,3.024,742,3.024,743,3.168,744,2.566,745,3.024,746,3.024,747,3.024,748,3.024,749,3.024,750,3.024,751,3.168,752,4.09,753,3.024,754,3.024,755,2.697,756,3.024,757,3.024,758,3.024,759,3.024,760,4.09,761,3.024,762,3.024,763,1.867,764,3.024,765,3.024,766,2.44,767,3.024,768,3.024,769,3.024,781,2.078,1348,5.213,1641,4.393]],["title/injectables/NativeBrowserFileLoaderService.html",[375,0.747,831,3.474]],["body/injectables/NativeBrowserFileLoaderService.html",[0,0.062,3,0.197,4,0.197,5,0.218,7,0.21,8,0.497,10,0.824,11,0.279,12,0.011,13,0.21,25,2.292,41,2.531,75,0.007,76,0.007,82,0.656,85,0.824,88,0.61,89,2.708,90,2.011,91,2.576,92,2.352,100,1.874,101,1.456,131,0.553,134,0.898,135,2.86,136,2.86,146,1.916,153,1.712,209,2.757,211,1.812,213,2.832,216,1.874,217,1.909,243,2.256,304,1.19,308,1.471,314,2.168,375,1.02,377,1.753,389,1.358,406,1.495,411,1.082,426,2.818,476,1.259,512,2.352,614,1.909,660,2.708,718,2.716,737,2.812,819,3.515,820,2.708,821,2.352,822,3.515,823,3.249,824,5.193,825,5.193,826,2.708,827,4.025,828,2.708,829,4.641,830,3.036,831,4.747,832,4.968,833,4.683,834,5.755,835,3.871,836,5.919,837,3.871,838,5.919,839,3.871,840,4.972,841,3.871,842,3.871,843,3.871,844,3.871,845,5.32,846,3.871,847,3.658,848,3.515,849,3.871,850,3.871,851,3.871,852,3.515,853,3.515,854,3.871,855,3.871,856,3.871,857,3.515,858,3.871,859,3.515,860,3.871,861,3.871,862,3.871,863,3.871,864,3.515,865,3.036,866,5.919,867,4.747,868,3.515,869,3.871,870,3.871,871,3.871,1353,6.338,1642,4.411,1643,4.411,1644,4.411,1645,4.411]],["title/interfaces/OscVisualizerOptions.html",[0,0.061,292,2.23]],["body/interfaces/OscVisualizerOptions.html",[0,0.116,2,0.985,3,0.223,4,0.223,5,0.137,7,0.238,8,0.538,10,1.645,11,0.497,12,0.011,13,0.407,18,3.196,19,1.048,22,1.595,25,2.755,75,0.008,76,0.008,248,2.774,249,2.774,250,3.723,251,2.907,252,2.907,253,2.907,254,2.654,255,2.546,256,2.654,257,2.654,258,2.654,259,2.654,260,2.654,261,2.654,262,2.654,263,2.774,264,2.774,265,2.546,266,3.441,267,3.3,268,3.3,269,3.3,270,2.546,271,4.015,272,2.654,273,2.838,274,2.838,275,3.3,276,2.654,277,2.654,278,2.546,279,2.774,280,2.907,281,2.446,282,3.519,283,2.654,284,2.446,285,4.222,286,3.052,287,2.654,288,3.3,289,3.583,290,3.804,291,2.354,292,3.662,293,4.078]],["title/interfaces/OsciloscopeConfig.html",[0,0.061,270,2.23]],["body/interfaces/OsciloscopeConfig.html",[0,0.117,2,1.008,3,0.228,4,0.228,5,0.14,7,0.243,8,0.546,10,1.648,11,0.484,12,0.011,13,0.408,18,2.877,19,1.057,22,1.632,25,2.52,75,0.008,76,0.008,248,2.838,249,2.838,250,3.756,251,2.974,252,2.974,253,2.974,254,2.716,255,2.605,256,2.716,257,2.716,258,2.716,259,2.716,260,2.716,261,2.716,262,2.716,263,2.838,264,2.838,265,2.605,266,3.493,267,3.35,268,3.35,269,3.35,270,3.35,271,4.043,272,2.716,273,2.881,274,2.881,275,3.35,276,2.716,277,2.716,278,2.605,279,2.838,280,2.974,281,2.503,282,3.558,283,2.716,284,2.503,285,4.034,286,3.098,287,2.716,288,3.35,289,3.615,290,3.615,291,2.409,292,3.35,293,3.756]],["title/components/PlayerComponent.html",[83,1.022,354,1.791]],["body/components/PlayerComponent.html",[3,0.105,4,0.105,5,0.185,7,0.112,8,0.313,10,1.515,11,0.426,12,0.011,13,0.112,16,1.974,19,0.646,21,1.578,34,1.447,35,3.8,37,1.376,39,2.167,59,2.09,70,1.447,75,0.005,76,0.005,80,1.505,82,0.705,83,1.095,84,2.967,85,0.441,86,3.44,88,0.326,106,1.878,107,3.269,108,1.622,110,1.257,112,1.115,118,1.257,124,0.956,126,1.443,128,1.774,130,1.443,131,0.296,132,0.937,133,1.774,134,1.183,137,2.582,139,1.923,153,1.334,209,2.476,210,1.736,213,1.314,255,1.205,294,0.968,295,1.238,296,1.001,297,1.001,298,1.001,300,2.431,301,2.431,302,3.063,303,3.115,305,0.968,307,2.054,308,1.632,310,1.528,333,1.001,334,1.54,335,1.314,336,0.852,337,2.262,338,1.001,339,1.001,340,2.187,341,1.202,342,1.001,343,0.968,344,1.001,345,2.187,346,1.443,347,1.001,348,0.852,349,0.879,350,0.879,351,1.593,352,0.968,353,2.262,354,2.187,355,1.001,356,2.187,357,1.001,358,0.907,359,0.968,360,0.968,361,1.001,362,0.968,363,0.937,364,1.001,365,0.968,366,1.001,367,0.968,368,0.907,369,2.187,370,0.968,371,0.968,372,0.937,373,0.968,374,1.001,376,2.723,388,1.878,389,0.855,406,1.685,410,2.097,411,1.292,419,3.109,424,2.175,426,1.115,512,1.257,614,1.202,634,4.242,660,1.447,698,2.19,782,2.068,786,3.44,801,2.068,811,3.451,821,2,826,2.868,828,1.447,829,2.19,830,1.622,840,3.665,874,3.721,881,2.303,884,1.528,886,1.878,891,2.303,913,2.068,918,3.028,919,1.622,962,1.528,1007,2.431,1074,1.447,1126,1.736,1127,1.528,1128,1.736,1138,2.303,1206,2.868,1207,2.389,1646,2.357,1647,2.582,1648,4.098,1649,3.721,1650,4.671,1651,3.721,1652,3.75,1653,3.75,1654,4.671,1655,5.812,1656,3.75,1657,3.75,1658,3.75,1659,3.75,1660,3.75,1661,5.324,1662,3.75,1663,3.75,1664,3.291,1665,3.291,1666,5.324,1667,4.672,1668,4.672,1669,3.75,1670,3.75,1671,2.357,1672,3.75,1673,2.357,1674,3.75,1675,2.357,1676,2.357,1677,3.75,1678,2.357,1679,2.357,1680,3.75,1681,2.357,1682,3.75,1683,2.357,1684,3.75,1685,2.357,1686,3.75,1687,2.357,1688,2.357,1689,2.357,1690,2.357,1691,2.357,1692,2.357,1693,3.75,1694,2.357,1695,2.357,1696,3.75,1697,2.357,1698,1.878,1699,2.068,1700,2.357,1701,2.068,1702,2.068,1703,2.762,1704,2.068,1705,1.878,1706,1.878,1707,2.068,1708,2.357,1709,2.357,1710,2.357,1711,2.068,1712,2.068,1713,2.357,1714,2.068,1715,2.357,1716,2.357,1717,2.357,1718,2.357,1719,2.357,1720,3.75,1721,2.357,1722,3.75,1723,2.357,1724,2.357,1725,2.357,1726,2.357,1727,2.357,1728,2.357,1729,2.357,1730,2.357,1731,3.75,1732,2.357,1733,3.75,1734,4.671,1735,2.357,1736,2.357,1737,2.357,1738,2.357,1739,2.357,1740,2.357,1741,2.357,1742,3.75,1743,2.357,1744,3.75,1745,2.357,1746,2.357,1747,2.357,1748,2.357,1749,2.357,1750,2.357,1751,3.75,1752,2.357,1753,2.357,1754,3.75,1755,2.357,1756,2.357,1757,2.357,1758,2.068,1759,3.75,1760,3.291,1761,2.357,1762,2.357,1763,2.357,1764,5.324,1765,2.357,1766,2.357,1767,2.357,1768,2.357,1769,1.878,1770,2.357,1771,2.357,1772,2.357,1773,2.357,1774,2.357,1775,2.357,1776,2.357,1777,2.357,1778,2.357,1779,2.357,1780,2.357,1781,2.357,1782,2.357,1783,2.357,1784,2.357,1785,2.357,1786,2.357,1787,3.291,1788,3.291,1789,3.291,1790,3.291,1791,3.75,1792,3.75,1793,3.75,1794,2.19,1795,3.75,1796,3.614]],["title/injectables/PlayerService.html",[107,2.677,375,0.747]],["body/injectables/PlayerService.html",[3,0.097,4,0.097,5,0.153,7,0.103,8,0.292,10,1.323,11,0.413,12,0.011,13,0.103,16,1.81,21,1.718,39,2.335,41,2.15,43,1.021,75,0.004,76,0.004,77,0.691,80,1.276,82,0.628,84,3.315,85,0.403,87,2.082,88,0.298,90,0.984,94,3.014,95,1.203,107,2.145,124,1.597,131,0.271,134,1.516,139,2.294,142,4.032,144,4.429,146,1.902,152,0.858,153,1.749,179,0.712,193,2.335,209,2.702,213,2.609,217,0.691,229,1.719,243,1.787,273,2.617,274,2.617,281,2.487,304,0.582,307,1.936,308,1.653,315,2.265,316,1.589,325,1.589,375,0.598,376,1.787,377,0.858,380,3.242,389,0.796,406,1.69,410,1.949,411,1.223,419,2.571,422,3.508,424,1.979,426,2.393,471,2.04,472,1.151,476,0.616,478,1.26,512,1.151,614,1.411,634,4.032,682,2.82,696,2.265,697,1.399,698,1.26,737,2.072,821,1.863,826,1.325,827,3.491,828,1.325,829,2.04,830,1.485,847,1.325,852,1.719,881,1.325,884,1.399,891,2.145,1229,1.893,1274,1.893,1334,1.399,1380,3.066,1399,3.483,1410,4.878,1417,2.405,1419,1.719,1420,1.893,1422,1.893,1434,2.405,1436,1.719,1446,1.893,1455,2.405,1460,1.719,1465,3.066,1482,2.573,1557,1.893,1625,1.893,1630,1.893,1664,3.066,1665,3.066,1667,4.44,1668,4.44,1714,1.893,1794,1.26,1796,2.571,1797,1.893,1798,4.402,1799,3.863,1800,3.494,1801,4.402,1802,4.402,1803,3.494,1804,5.06,1805,3.494,1806,4.402,1807,5.06,1808,4.402,1809,3.494,1810,3.494,1811,2.158,1812,2.158,1813,2.158,1814,3.494,1815,3.494,1816,2.158,1817,4.74,1818,2.158,1819,2.158,1820,2.158,1821,3.494,1822,2.158,1823,2.158,1824,3.494,1825,2.158,1826,5.06,1827,3.494,1828,2.158,1829,2.158,1830,2.158,1831,3.494,1832,2.158,1833,3.494,1834,2.158,1835,2.158,1836,2.158,1837,2.158,1838,3.494,1839,3.494,1840,3.494,1841,2.158,1842,2.158,1843,2.158,1844,6.264,1845,5.06,1846,3.494,1847,3.494,1848,2.158,1849,3.494,1850,2.158,1851,3.494,1852,2.158,1853,2.158,1854,3.494,1855,2.158,1856,1.589,1857,1.893,1858,2.405,1859,2.158,1860,2.158,1861,2.158,1862,1.719,1863,1.589,1864,1.589,1865,2.158,1866,2.158,1867,1.719,1868,1.719,1869,3.494,1870,2.158,1871,4.402,1872,2.158,1873,2.158,1874,2.158,1875,2.158,1876,3.494,1877,2.158,1878,2.158,1879,2.158,1880,2.158,1881,2.158,1882,2.158,1883,2.158,1884,2.158,1885,2.158,1886,3.494,1887,2.158,1888,3.066,1889,2.158,1890,1.893,1891,2.158,1892,3.494,1893,2.158,1894,2.158,1895,2.158,1896,2.158,1897,2.158,1898,2.158,1899,2.158,1900,2.158,1901,2.158,1902,2.158,1903,2.158,1904,2.158,1905,2.158,1906,2.158,1907,2.158,1908,2.158,1909,2.158,1910,2.158,1911,2.158,1912,2.158,1913,2.158,1914,2.158,1915,2.158,1916,2.158,1917,2.158,1918,2.158,1919,2.158,1920,3.494,1921,2.158,1922,3.494,1923,2.158,1924,2.158,1925,3.494,1926,3.494,1927,3.066,1928,3.494,1929,2.158,1930,2.158,1931,2.158,1932,2.158,1933,2.158,1934,2.158,1935,1.893,1936,2.158,1937,2.158,1938,2.158,1939,2.158,1940,2.158,1941,2.158,1942,5.06,1943,2.158,1944,1.893,1945,2.158,1946,4.402,1947,2.158,1948,2.158,1949,3.494,1950,2.158,1951,2.158,1952,3.494,1953,2.158,1954,2.158,1955,2.158,1956,2.158,1957,1.893,1958,2.158,1959,5.06,1960,2.158,1961,2.158,1962,2.158,1963,2.158,1964,2.158,1965,3.494,1966,2.158,1967,2.158,1968,2.158,1969,3.494,1970,2.158,1971,2.158,1972,3.03,1973,2.158,1974,2.158,1975,2.158,1976,2.158,1977,2.158,1978,1.893,1979,3.508,1980,3.508,1981,2.158,1982,2.158,1983,1.719,1984,1.893,1985,2.158,1986,2.158,1987,2.158,1988,2.158]],["title/components/PlaylistComponent.html",[83,1.022,356,1.791]],["body/components/PlaylistComponent.html",[3,0.107,4,0.107,5,0.148,7,0.182,8,0.318,10,0.884,11,0.341,12,0.011,13,0.115,16,0.666,19,0.526,21,1.591,39,1.419,41,1.617,43,2.237,45,1.402,75,0.005,76,0.005,80,1.457,82,0.684,83,1.109,84,3.269,85,0.449,87,3.208,88,0.332,94,3.203,95,1.338,98,3.066,99,1.557,107,3.303,108,1.653,110,1.281,112,1.136,113,3.768,114,3.768,115,3.768,116,1.914,117,3.255,118,1.281,119,3.768,120,1.769,121,1.228,124,0.971,126,1.465,128,1.801,130,1.465,131,0.301,132,0.954,134,1.096,137,2.62,139,2.043,146,1.96,152,1.513,153,1.573,179,1.256,190,1.402,209,1.561,294,0.986,295,1.256,296,1.02,297,1.02,298,1.02,300,2.468,301,2.468,302,3.073,303,3.127,305,0.986,307,2.08,308,1.487,310,1.557,333,1.02,334,1.564,335,1.334,336,0.868,337,2.286,338,1.02,339,1.02,340,0.986,341,0.77,342,1.02,343,0.986,344,1.02,345,0.986,346,0.924,347,1.02,348,0.868,349,0.895,350,0.895,351,1.617,352,0.986,353,2.286,354,0.986,355,1.02,356,2.21,357,1.02,358,0.924,359,0.986,360,0.986,361,1.02,362,0.986,363,0.954,364,1.02,365,0.986,366,1.02,367,0.986,368,0.924,369,0.986,370,0.986,371,0.986,372,2.138,373,0.986,374,1.02,376,2.752,386,4.287,389,0.868,406,1.192,410,1.674,411,0.977,424,1.683,446,1.281,457,1.769,511,1.769,557,2.644,726,1.557,737,1.419,755,2.337,803,4.721,867,3.033,881,2.337,884,1.557,964,2.107,970,3.34,991,3.34,992,3.34,999,1.769,1206,2.903,1207,2.418,1214,1.914,1278,3.34,1399,4.669,1455,3.704,1457,1.914,1458,4.149,1460,1.914,1651,3.768,1799,3.34,1817,5.701,1856,1.769,1862,1.914,1863,1.769,1864,1.769,1867,1.914,1868,1.914,1927,3.34,1935,3.34,1944,2.107,1957,3.34,1989,2.402,1990,4.149,1991,4.729,1992,4.729,1993,4.729,1994,3.807,1995,3.807,1996,4.729,1997,4.729,1998,6.539,1999,3.963,2000,3.807,2001,3.807,2002,3.807,2003,2.402,2004,5.38,2005,2.402,2006,5.38,2007,2.402,2008,3.807,2009,2.402,2010,3.807,2011,2.402,2012,2.402,2013,5.38,2014,3.807,2015,3.807,2016,3.807,2017,3.807,2018,3.807,2019,3.807,2020,3.807,2021,3.807,2022,2.402,2023,2.402,2024,3.807,2025,2.402,2026,2.402,2027,3.34,2028,2.402,2029,2.402,2030,2.107,2031,2.402,2032,2.402,2033,2.107,2034,2.107,2035,2.402,2036,2.107,2037,2.402,2038,2.107,2039,2.402,2040,2.402,2041,5.476,2042,2.402,2043,4.149,2044,6.985,2045,4.729,2046,2.402,2047,2.402,2048,2.402,2049,3.807,2050,2.402,2051,3.807,2052,2.402,2053,2.402,2054,3.807,2055,2.402,2056,3.34,2057,2.402,2058,1.914,2059,4.729,2060,2.402,2061,2.107,2062,2.107,2063,2.107,2064,2.402,2065,2.107,2066,3.807,2067,2.402,2068,2.402,2069,2.402,2070,1.402,2071,2.107,2072,2.402,2073,2.402,2074,2.402,2075,4.729,2076,2.402,2077,5.38,2078,2.402,2079,2.402,2080,3.34,2081,2.402,2082,2.402,2083,2.402,2084,3.807,2085,3.807,2086,4.729,2087,2.402,2088,2.402,2089,3.807,2090,2.402,2091,2.402,2092,3.34,2093,2.402,2094,4.729,2095,2.402,2096,2.402,2097,3.807,2098,3.768,2099,3.807,2100,2.402,2101,4.729,2102,2.402,2103,1.914,2104,2.107,2105,1.914,2106,3.807,2107,2.402,2108,2.402,2109,3.807,2110,2.402,2111,2.402,2112,3.807,2113,3.807,2114,3.807,2115,5.38,2116,3.34,2117,3.807,2118,3.807,2119,3.807]],["title/components/PromptDialogComponent.html",[83,1.022,358,1.678]],["body/components/PromptDialogComponent.html",[0,0.064,3,0.205,4,0.205,5,0.168,7,0.218,8,0.509,12,0.011,13,0.291,16,1.695,19,0.95,21,1.557,75,0.008,76,0.008,80,1.493,82,0.598,83,1.611,85,0.855,88,0.633,112,2.165,124,1.557,126,2.35,130,2.35,131,0.574,132,1.819,140,2.202,179,1.51,294,1.88,295,2.015,296,1.944,297,1.944,298,1.944,302,3.352,303,3.442,305,1.88,308,1.493,333,1.944,334,2.508,335,2.14,336,1.654,337,3.115,338,1.944,339,1.944,340,1.88,341,1.467,342,1.944,343,1.88,344,1.944,345,1.88,346,1.761,347,1.944,348,1.654,349,1.706,350,1.706,351,2.594,352,1.88,353,3.115,354,1.88,355,1.944,356,1.88,357,1.944,358,2.821,359,3.137,360,1.88,361,1.944,362,1.88,363,1.819,364,1.944,365,1.88,366,1.944,367,1.88,368,1.761,369,1.88,370,1.88,371,1.88,372,1.819,373,1.88,374,1.944,389,1.392,406,1.353,424,1.647,559,5.094,912,5.626,1131,2.81,1132,2.672,1141,3.566,1147,4.219,1202,3.371,1203,3.371,1204,5.061,1207,3.515,1209,4.497,1210,4.497,1211,4.497,1217,4.016,1316,2.672,2120,6.702,2121,6.702,2122,6.433,2123,4.576,2124,4.576,2125,4.576,2126,3.371,2127,3.646,2128,4.016,2129,4.016,2130,6.106,2131,6.106,2132,6.106]],["title/interfaces/PromptDialogData.html",[0,0.061,2126,3.211]],["body/interfaces/PromptDialogData.html",[0,0.082,2,1.152,3,0.26,4,0.26,5,0.16,7,0.278,8,0.594,11,0.487,12,0.011,13,0.34,19,1.192,75,0.009,76,0.009,82,0.669,83,1.67,85,1.088,88,0.805,112,2.754,126,2.24,130,2.24,131,0.73,140,1.866,179,2.646,302,2.24,303,2.314,358,2.24,359,2.926,559,3.774,912,4.288,1131,3.574,1132,3.4,1141,3.4,1147,3.574,1202,4.288,1203,4.288,1204,5.246,1207,3.643,1209,4.288,1210,4.288,1211,4.288,1316,4.682,2120,5.108,2121,5.108,2122,5.108,2126,5.246,2127,6.389,2128,5.108,2129,5.108]],["title/interfaces/RemoteCoverPicture.html",[0,0.061,81,1.483]],["body/interfaces/RemoteCoverPicture.html",[0,0.116,2,1.169,3,0.264,4,0.264,5,0.213,7,0.282,8,0.599,11,0.455,12,0.011,13,0.394,19,1.208,75,0.009,76,0.009,81,2.443,82,0.514,217,1.892,681,3.448,686,2.201,687,3.02,700,2.134,712,2.678,713,2.347,718,3.275,763,3.423,766,3.31,770,5.511,771,4.065,772,3.828,773,3.149,774,3.828,775,3.828,776,3.828,777,3.828,778,3.828,779,3.626,780,3.626,781,2.793]],["title/components/SettingsComponent.html",[83,1.022,360,1.791]],["body/components/SettingsComponent.html",[3,0.231,4,0.231,5,0.182,12,0.011,13,0.246,21,1.317,75,0.008,76,0.008,80,1.564,82,0.668,83,1.708,88,0.714,124,1.858,126,2.543,128,3.126,130,2.543,131,0.648,132,2.053,294,2.121,295,2.181,296,2.194,297,2.194,298,2.194,302,3.391,303,3.486,305,2.121,333,2.194,334,2.714,335,2.316,336,1.866,337,3.264,338,2.194,339,2.194,340,2.121,341,1.655,342,2.194,343,2.121,344,2.194,345,2.121,346,1.987,347,2.194,348,1.866,349,1.925,350,1.925,351,2.808,352,3.155,353,3.264,354,2.121,355,2.194,356,2.121,357,2.194,358,1.987,359,2.121,360,3.155,361,2.194,362,2.121,363,2.053,364,2.194,365,3.155,366,2.808,367,3.155,368,2.543,369,2.121,370,2.121,371,2.121,372,2.053,373,2.121,374,2.194,535,3.524,1605,4.532,1609,4.867,2133,5.165,2134,6.608,2135,4.532,2136,7.287,2137,4.532]],["title/components/ShellComponent.html",[83,1.022,305,1.791]],["body/components/ShellComponent.html",[3,0.173,4,0.173,5,0.15,7,0.185,8,0.454,11,0.245,12,0.011,13,0.185,16,1.073,19,0.87,21,1.835,75,0.007,76,0.007,80,1.466,82,0.727,83,1.476,85,0.723,88,0.535,98,4.081,99,2.507,101,1.276,110,2.062,112,1.829,121,1.978,122,4.007,123,2.848,124,1.387,126,2.094,128,2.573,130,2.094,131,0.485,132,1.537,134,1.282,138,3.081,139,2.131,161,2.155,220,3.177,294,1.589,295,1.796,296,1.643,297,1.643,298,1.643,302,3.292,303,3.373,305,2.805,308,1.466,333,1.643,334,2.235,335,1.907,336,1.398,337,2.902,338,1.643,339,1.643,340,1.589,341,1.239,342,1.643,343,1.589,344,1.643,345,1.589,346,1.488,347,1.643,348,1.398,349,1.442,350,1.442,351,2.312,352,1.589,353,2.902,354,1.589,355,1.643,356,1.589,357,1.643,358,1.488,359,1.589,360,1.589,361,1.643,362,1.589,363,1.537,364,1.643,365,1.589,366,1.643,367,1.589,368,1.488,369,1.589,370,1.589,371,1.589,372,1.537,373,1.589,374,1.643,389,1.24,406,0.857,410,1.204,411,0.702,424,1.942,426,3.231,535,2.901,873,4.335,1134,3.745,1206,3.865,1207,3.219,1416,3.394,1417,4.702,1419,4.335,1647,3.745,1648,5.523,1703,5.03,1704,3.394,1707,3.394,1711,4.774,1857,3.394,1863,2.848,1864,2.848,1990,5.523,2030,3.394,2033,3.394,2034,3.394,2138,3.867,2139,5.441,2140,6.294,2141,6.294,2142,5.441,2143,5.441,2144,7.466,2145,5.523,2146,5.441,2147,5.441,2148,7.198,2149,3.867,2150,3.394,2151,5.441,2152,5.441,2153,3.867,2154,3.867,2155,5.441,2156,3.867,2157,3.867,2158,5.441,2159,3.867,2160,3.867,2161,3.867,2162,3.867,2163,5.441,2164,3.867,2165,3.867,2166,3.867,2167,3.867,2168,3.867,2169,3.867,2170,3.867,2171,3.867,2172,3.867,2173,3.867,2174,3.867,2175,3.867,2176,6.83,2177,5.441]],["title/components/SlidePanelComponent.html",[83,1.022,362,1.791]],["body/components/SlidePanelComponent.html",[3,0.137,4,0.137,5,0.126,7,0.146,8,0.382,11,0.475,12,0.011,13,0.146,16,1.526,19,1.014,21,1.913,22,1.762,75,0.006,76,0.006,80,1.244,82,0.569,83,1.289,88,0.422,110,1.629,112,1.444,118,1.629,124,1.168,126,1.763,128,2.167,130,1.763,131,0.383,132,1.214,133,2.167,139,1.57,294,1.254,295,1.512,296,1.297,297,1.297,298,1.297,302,3.193,303,3.261,305,1.254,308,1.634,333,1.297,334,1.882,335,1.606,336,1.104,337,2.596,338,1.297,339,1.297,340,1.254,341,0.979,342,1.297,343,1.254,344,1.297,345,1.254,346,1.175,347,1.297,348,1.104,349,1.138,350,1.138,351,1.947,352,1.254,353,2.596,354,1.254,355,1.297,356,1.254,357,1.297,358,1.175,359,1.254,360,1.254,361,1.297,362,2.51,363,3.216,364,1.297,365,1.254,366,1.297,367,1.254,368,1.175,369,1.254,370,1.254,371,1.254,372,1.214,373,1.254,374,1.297,389,1.044,406,1.016,424,2.024,426,3.47,512,3.803,614,2.449,616,2.249,800,5.068,912,5.959,1193,4.05,1206,3.377,1207,2.813,1649,4.382,1651,4.382,1706,2.433,1794,2.676,1796,3.569,1972,4.733,2043,4.826,2103,4.382,2178,7.1,2179,8.092,2180,3.054,2181,5.499,2182,5.628,2183,4.582,2184,4.582,2185,5.499,2186,5.499,2187,4.826,2188,6.111,2189,6.111,2190,3.651,2191,5.499,2192,6.548,2193,7.131,2194,5.499,2195,4.582,2196,4.582,2197,4.582,2198,3.054,2199,6.111,2200,3.054,2201,3.054,2202,6.876,2203,5.363,2204,3.054,2205,3.054,2206,3.054,2207,3.054,2208,4.582,2209,4.582,2210,3.054,2211,3.054,2212,3.054,2213,4.582,2214,4.582,2215,4.582,2216,4.582,2217,6.876,2218,7.131,2219,6.437,2220,2.68,2221,2.68,2222,3.054,2223,3.054,2224,6.876,2225,6.548,2226,6.876,2227,3.054,2228,3.054,2229,3.054,2230,3.054,2231,3.054,2232,2.68,2233,2.68,2234,3.054,2235,3.054,2236,3.054,2237,3.054,2238,3.054,2239,3.054,2240,5.499,2241,6.111,2242,6.111]],["title/components/StorageSettingsComponent.html",[83,1.022,365,1.791]],["body/components/StorageSettingsComponent.html",[3,0.221,4,0.221,5,0.176,7,0.235,12,0.011,13,0.235,16,1.369,75,0.008,76,0.008,80,1.537,82,0.657,83,1.671,85,0.922,88,0.682,90,2.249,112,2.333,124,1.636,126,2.469,130,2.469,131,0.619,132,1.96,134,1.004,294,2.026,295,2.117,296,2.096,297,2.096,298,2.096,302,3.377,303,3.47,305,2.026,308,1.004,333,2.096,334,2.635,335,2.248,336,1.783,337,3.208,338,2.096,339,2.096,340,2.026,341,1.581,342,2.096,343,2.026,344,2.096,345,2.026,346,1.898,347,2.096,348,1.783,349,1.839,350,1.839,351,2.726,352,2.026,353,3.208,354,2.026,355,2.096,356,2.026,357,2.096,358,1.898,359,2.026,360,2.026,361,2.096,362,2.026,363,1.96,364,2.096,365,3.101,366,3.471,367,2.026,368,1.898,369,2.026,370,2.026,371,2.026,372,1.96,373,2.026,374,2.096,389,1.462,406,1.093,471,2.88,472,2.63,478,2.88,535,4.278,536,3.633,1102,4.416,1207,3.646,1526,5.112,1606,3.93,1607,5.681,1609,4.725,1626,3.93,1631,3.93,1640,5.629,2135,5.629,2243,6.415,2244,7.55,2245,4.933]],["title/interfaces/TagsWorkerRequest.html",[0,0.061,779,2.677]],["body/interfaces/TagsWorkerRequest.html",[0,0.116,2,1.169,3,0.264,4,0.264,5,0.236,7,0.282,8,0.599,11,0.455,12,0.011,13,0.394,19,1.195,75,0.009,76,0.009,81,2.008,82,0.514,217,1.892,681,3.448,686,2.201,687,3.02,700,2.134,712,2.678,713,2.347,718,3.765,763,2.509,766,2.425,770,5.511,771,4.065,772,3.828,773,3.149,774,3.828,775,3.828,776,3.828,777,3.828,778,3.828,779,4.411,780,3.626,781,2.793]],["title/interfaces/TagsWorkerResponse.html",[0,0.061,780,2.677]],["body/interfaces/TagsWorkerResponse.html",[0,0.115,2,1.146,3,0.259,4,0.259,5,0.211,7,0.276,8,0.592,11,0.486,12,0.011,13,0.392,19,1.204,75,0.009,76,0.009,81,1.969,82,0.504,217,2.565,411,1.453,681,3.382,686,2.159,687,2.962,700,2.093,712,2.984,713,2.301,718,3.744,763,2.46,766,2.379,770,5.489,771,3.986,772,3.754,773,3.088,774,3.754,775,3.754,776,3.754,777,3.754,778,3.754,779,3.555,780,4.359,781,3.786]],["title/injectables/ThemeService.html",[315,2.827,375,0.747]],["body/injectables/ThemeService.html",[3,0.176,4,0.176,5,0.108,7,0.188,8,0.46,11,0.436,12,0.011,13,0.188,16,1.764,19,0.952,21,1.755,22,2.036,39,1.468,59,2.194,75,0.007,76,0.007,80,1.57,82,0.67,85,0.736,87,1.862,88,0.544,90,1.795,131,0.494,134,1.627,139,1.814,146,1.66,153,1.187,154,1.515,304,1.062,308,1.529,313,2.417,314,1.935,315,3.571,368,2.649,375,0.943,377,1.565,389,1.256,406,1.409,410,1.715,411,1,424,1.714,446,2.099,471,3.217,472,2.099,476,1.124,478,2.299,584,3.571,614,1.262,678,5.49,680,4.834,681,2.299,682,3.836,985,3.454,986,3.454,994,4.834,999,2.899,1575,4.389,1760,3.454,2246,3.937,2247,6.355,2248,7.245,2249,6.355,2250,6.884,2251,5.509,2252,5.509,2253,3.937,2254,5.509,2255,3.937,2256,4.057,2257,5.509,2258,3.937,2259,3.937,2260,5.509,2261,5.509,2262,6.884,2263,5.509,2264,3.937,2265,3.937,2266,5.576,2267,3.454,2268,3.937,2269,5.064,2270,5.064,2271,3.937,2272,3.937,2273,3.937,2274,3.937,2275,5.509,2276,3.937,2277,3.937,2278,3.937,2279,3.937,2280,3.937,2281,3.937,2282,3.937,2283,6.355,2284,5.509,2285,3.937,2286,5.509,2287,6.884,2288,3.937,2289,5.509,2290,5.509,2291,3.937,2292,3.937,2293,3.937,2294,3.937,2295,5.509,2296,3.937,2297,3.937,2298,5.509,2299,3.137,2300,3.937,2301,3.937,2302,8.468,2303,3.937,2304,3.937,2305,3.937,2306,3.937,2307,3.454,2308,3.937,2309,3.454,2310,3.937,2311,3.937,2312,3.937,2313,3.937,2314,3.937,2315,3.937,2316,3.937,2317,3.937,2318,3.937,2319,3.937,2320,3.937,2321,3.937,2322,3.937,2323,3.937,2324,3.937,2325,3.937,2326,3.937,2327,3.937,2328,3.937,2329,3.937,2330,3.937,2331,5.509,2332,3.454,2333,3.454,2334,3.937,2335,3.937,2336,3.937]],["title/components/ThemeSettingsComponent.html",[83,1.022,367,1.791]],["body/components/ThemeSettingsComponent.html",[3,0.215,4,0.215,5,0.174,7,0.23,8,0.527,11,0.305,12,0.011,13,0.23,16,1.337,18,2.51,21,1.228,75,0.008,76,0.008,80,1.582,82,0.651,83,1.652,85,0.9,88,0.666,124,1.611,126,2.431,130,2.431,131,0.604,132,1.914,294,1.979,295,2.085,296,2.047,297,2.047,298,2.047,302,3.369,303,3.461,305,1.979,308,1.286,315,4.85,316,3.548,325,4.652,333,2.047,334,2.595,335,2.214,336,1.741,337,3.179,338,2.047,339,2.047,340,1.979,341,1.544,342,2.047,343,1.979,344,2.047,345,1.979,346,1.854,347,2.047,348,1.741,349,1.796,350,1.796,351,2.684,352,1.979,353,3.179,354,1.979,355,2.047,356,1.979,357,2.047,358,1.854,359,1.979,360,1.979,361,2.047,362,1.979,363,1.914,364,2.047,365,1.979,366,2.047,367,3.073,368,3.126,369,1.979,370,1.979,371,1.979,372,1.914,373,1.979,374,2.047,389,1.44,406,1.068,410,1.499,411,0.875,424,1.3,535,3.369,557,2.367,1606,3.838,1607,5.616,1609,4.652,1626,3.838,1631,3.838,2137,6.185,2256,4.652,2299,5.033,2337,7.048,2338,7.048,2339,6.317,2340,6.317,2341,7.481,2342,4.817,2343,4.817,2344,4.817]],["title/pipes/TimePipe.html",[121,2.23,786,3.211]],["body/pipes/TimePipe.html",[3,0.269,4,0.269,5,0.166,10,1.46,11,0.381,12,0.011,13,0.287,19,1.006,75,0.009,76,0.009,80,1.591,82,0.632,88,0.833,97,3.698,121,3.719,124,1.536,131,0.756,133,2.849,153,1.298,193,2.912,308,1.227,389,1.373,406,1.335,410,1.875,411,1.094,419,3.518,424,1.625,613,6.381,614,2.6,615,5.006,616,4.436,617,5.794,618,6.854,620,5.794,786,5.356,811,4.714,1698,4.8,1699,5.286,1769,4.8,2345,6.024,2346,6.024]],["title/injectables/TitleService.html",[375,0.747,1703,3.211]],["body/injectables/TitleService.html",[3,0.27,4,0.27,5,0.166,7,0.288,8,0.607,11,0.382,12,0.011,13,0.288,16,1.675,19,1.081,21,1.539,75,0.009,76,0.009,80,1.229,82,0.633,85,1.128,87,3.698,88,0.834,131,0.757,134,1.229,139,2.232,179,2.742,304,1.628,308,1.482,313,3.705,314,2.966,375,1.247,377,2.398,389,1.659,406,1.338,410,1.878,411,1.096,424,1.628,476,1.723,1703,5.362,2347,6.035,2348,7.28,2349,7.28,2350,6.035,2351,6.035,2352,6.035,2353,6.035,2354,6.035,2355,6.035]],["title/interfaces/Track.html",[0,0.061,94,1.791]],["body/interfaces/Track.html",[0,0.109,2,1.067,3,0.241,4,0.241,5,0.232,7,0.257,8,0.567,11,0.509,12,0.011,13,0.392,19,1.166,25,2.075,75,0.008,76,0.008,77,1.728,79,3.149,81,2.31,82,0.647,93,3.149,94,3.054,124,2.126,125,3.496,152,2.143,179,1.78,243,4.114,273,2.372,274,2.372,411,1.233,414,3.005,446,2.876,447,3.005,448,3.005,449,3.149,450,2.876,451,3.149,452,3.149,453,3.311,454,3.311,455,3.311,534,3.311,682,3.005,683,3.712,684,4.17,685,3.311,686,2.01,687,3.474,688,4.403,689,2.876,690,5.373,691,5.215,692,3.496,693,3.149,694,2.551,695,3.712,696,3.496,697,3.496,698,3.149]],["title/interfaces/TrackMetadata.html",[0,0.061,691,2.827]],["body/interfaces/TrackMetadata.html",[0,0.106,2,0.973,3,0.22,4,0.22,5,0.196,7,0.235,8,0.534,11,0.542,12,0.011,13,0.383,19,1.216,25,1.892,75,0.008,76,0.008,77,2.417,79,4.404,81,2.564,82,0.619,93,2.872,94,3.212,124,1.923,125,3.188,152,2.997,179,2.489,243,3.275,273,2.163,274,2.163,411,1.553,414,2.741,446,2.623,447,2.741,448,2.741,449,2.872,450,2.623,451,2.872,452,2.872,453,3.019,454,3.019,455,3.019,534,3.019,682,2.741,683,3.385,684,4.63,685,3.019,686,1.833,687,3.857,688,4.889,689,2.623,690,4.408,691,4.889,692,4.889,693,4.404,694,3.567,695,5.191,696,4.889,697,3.188,698,2.872]],["title/injectables/UpdateService.html",[317,3.474,375,0.747]],["body/injectables/UpdateService.html",[3,0.218,4,0.218,5,0.134,7,0.233,12,0.011,13,0.233,75,0.008,76,0.008,82,0.695,85,0.911,88,0.674,100,2.071,101,1.609,131,0.611,134,1.444,140,2.272,146,1.709,153,1.528,154,1.876,179,1.609,190,2.846,209,2.639,304,1.315,307,3.118,308,1.444,317,5.072,358,1.876,375,1.09,377,1.937,389,1.451,406,1.411,426,2.306,476,1.392,559,4.872,584,4.872,614,1.562,737,2.802,833,4.872,1051,4.277,1130,3.59,1132,2.846,1141,2.846,1142,3.59,1257,3.355,1316,2.846,1705,3.884,1794,2.846,1796,4.14,1856,3.59,1862,3.884,1863,3.59,1864,3.59,1867,3.884,1868,3.884,1972,4.88,2126,4.688,2127,3.884,2356,4.874,2357,7.516,2358,4.874,2359,4.874,2360,4.874,2361,6.366,2362,6.22,2363,4.277,2364,4.874,2365,4.874,2366,4.874,2367,4.874,2368,4.874,2369,4.874,2370,4.874,2371,4.874,2372,5.173,2373,6.366,2374,4.874,2375,4.874,2376,4.874,2377,4.874,2378,4.874,2379,4.874,2380,4.874,2381,4.874,2382,4.874,2383,4.874,2384,4.874,2385,4.874,2386,4.874,2387,4.874,2388,4.874,2389,4.874,2390,4.874,2391,4.874,2392,4.874,2393,4.277,2394,4.874,2395,4.874,2396,4.874,2397,4.874]],["title/components/VisualizerComponent.html",[83,1.022,369,1.791]],["body/components/VisualizerComponent.html",[3,0.091,4,0.091,5,0.091,7,0.097,8,0.277,10,1.495,11,0.449,12,0.011,13,0.097,16,1.927,21,1.973,37,1.183,43,1.57,47,2.038,55,2.038,75,0.004,76,0.004,80,1.469,82,0.654,83,0.988,84,3.673,85,0.379,86,3.105,87,0.959,88,0.28,90,0.924,92,1.77,94,1.364,107,2.993,108,1.395,110,1.081,112,0.959,124,0.847,126,1.277,128,1.57,130,1.277,131,0.254,132,0.805,133,1.57,134,0.413,137,2.285,139,2.416,153,1.372,210,1.493,250,3.239,254,1.77,255,1.698,256,1.77,257,1.77,258,1.77,259,1.77,260,2.6,261,1.77,262,1.77,263,1.85,264,1.85,265,1.036,266,2.868,267,2.751,268,3.12,269,2.751,270,1.036,271,2.493,275,2.751,286,3.466,289,3.207,290,3.011,293,3.129,294,0.832,295,1.096,296,0.861,297,0.861,298,0.861,300,2.152,301,2.152,302,2.977,303,3.019,305,0.832,307,1.855,308,1.665,310,1.314,333,0.861,334,1.364,335,1.163,336,0.732,337,2.071,338,0.861,339,0.861,340,0.832,341,0.649,342,0.861,343,0.832,344,0.861,345,0.832,346,0.78,347,0.861,348,0.732,349,0.755,350,0.755,351,1.41,352,0.832,353,2.071,354,0.832,355,0.861,356,0.832,357,0.861,358,0.78,359,0.832,360,0.832,361,0.861,362,2.002,363,0.805,364,0.861,365,0.832,366,0.861,367,0.832,368,0.78,369,2.002,370,2.209,371,0.832,372,1.937,373,0.832,374,0.861,376,2.493,389,0.757,406,1.461,408,2.445,410,2.051,411,1.231,412,2.902,424,2.305,467,2.445,471,2.847,472,1.081,478,1.938,614,0.649,682,2.35,874,3.36,881,2.038,884,1.314,886,1.615,918,2.733,962,1.314,1007,2.152,1074,5.073,1206,2.589,1207,2.156,1317,1.938,1649,3.36,1701,1.778,1702,1.778,1705,1.615,1706,1.615,1712,1.778,1790,2.913,1794,1.938,1796,3.96,1980,2.645,1999,3.59,2027,2.913,2103,2.645,2116,2.913,2178,1.778,2182,1.493,2398,2.027,2399,4.216,2400,4.216,2401,3.32,2402,3.32,2403,3.7,2404,5.379,2405,4.216,2406,3.7,2407,3.7,2408,5.379,2409,5.379,2410,3.32,2411,3.32,2412,3.32,2413,3.32,2414,3.32,2415,3.32,2416,3.32,2417,3.32,2418,3.32,2419,3.32,2420,3.32,2421,2.027,2422,3.32,2423,2.027,2424,3.32,2425,2.027,2426,3.32,2427,2.027,2428,3.32,2429,2.027,2430,3.32,2431,2.027,2432,3.32,2433,2.027,2434,3.32,2435,2.027,2436,3.32,2437,2.027,2438,3.32,2439,3.32,2440,2.027,2441,2.913,2442,2.027,2443,3.32,2444,2.645,2445,2.027,2446,3.32,2447,3.32,2448,3.32,2449,3.32,2450,2.027,2451,3.32,2452,2.027,2453,3.32,2454,2.027,2455,3.32,2456,3.32,2457,2.027,2458,2.027,2459,3.32,2460,2.027,2461,3.32,2462,2.027,2463,3.32,2464,2.027,2465,2.027,2466,3.32,2467,3.32,2468,2.027,2469,3.32,2470,2.027,2471,2.027,2472,3.32,2473,2.027,2474,3.32,2475,3.32,2476,2.027,2477,2.027,2478,2.027,2479,2.027,2480,2.027,2481,2.027,2482,2.027,2483,3.32,2484,2.027,2485,3.32,2486,2.027,2487,3.32,2488,2.027,2489,2.027,2490,1.778,2491,2.027,2492,2.027,2493,2.027,2494,2.027,2495,2.027,2496,2.027,2497,2.027,2498,2.027,2499,2.027,2500,2.027,2501,2.027,2502,2.027,2503,2.027,2504,2.027,2505,2.027,2506,2.027,2507,2.027,2508,2.027,2509,2.027,2510,2.027,2511,2.027,2512,2.027,2513,3.32,2514,5.069,2515,2.913,2516,4.875,2517,3.32]],["title/interfaces/VisualsColorConfig.html",[0,0.061,272,2.325]],["body/interfaces/VisualsColorConfig.html",[0,0.116,2,0.978,3,0.221,4,0.221,5,0.136,7,0.236,8,0.536,10,1.644,11,0.508,12,0.011,13,0.406,18,2.836,19,1.146,22,1.583,25,2.471,75,0.008,76,0.008,248,2.753,249,2.753,250,3.713,251,2.885,252,2.885,253,2.885,254,2.634,255,2.527,256,2.634,257,2.634,258,2.634,259,2.634,260,2.634,261,2.634,262,2.634,263,2.753,264,2.753,265,2.527,266,3.424,267,3.284,268,3.284,269,3.284,270,2.527,271,3.284,272,3.424,273,3.444,274,3.444,275,4.005,276,2.634,277,2.634,278,2.527,279,2.753,280,2.885,281,2.428,282,3.506,283,2.634,284,2.428,285,3.976,286,3.037,287,2.634,288,3.284,289,3.573,290,3.573,291,2.337,292,3.284,293,3.713,411,1.457]],["title/directives/VisualsDirective.html",[336,1.576,372,1.733]],["body/directives/VisualsDirective.html",[3,0.133,4,0.133,5,0.082,7,0.142,8,0.375,10,0.557,11,0.382,12,0.011,13,0.142,16,1.504,18,2.575,21,1.539,22,2.183,39,2.25,41,2.564,43,2.127,75,0.006,76,0.006,80,0.916,82,0.471,85,0.557,88,0.412,124,0.76,131,0.374,133,2.127,134,1.517,139,2.3,140,1.736,146,2.012,153,1.168,154,1.731,178,3.73,193,1.677,205,2.374,250,1.464,265,1.524,266,2.889,267,2.771,268,2.771,269,2.771,270,1.524,271,2.771,272,1.589,273,1.978,274,1.978,275,2.3,276,3.771,277,2.889,278,3.087,279,2.506,281,1.464,282,2.21,283,1.589,284,1.464,286,1.409,287,2.398,289,2.855,290,3.444,291,1.409,293,2.966,302,1.731,307,2.383,308,1.571,336,1.625,371,1.224,372,1.787,373,1.847,376,2.3,389,1.025,402,3.584,406,1.201,408,4.772,410,1.4,411,0.817,412,4.46,424,1.628,467,3.313,496,2.194,499,1.931,556,2.051,614,1.736,615,3.096,647,2.374,682,3.61,800,4.47,811,1.931,881,1.829,884,1.931,918,3.513,937,2.614,962,1.931,1107,2.614,1257,3.73,1262,2.614,1264,2.614,1265,2.374,1317,1.74,1320,1.931,1455,3.096,1794,1.74,1796,3.525,1972,4.155,2190,3.584,2269,4.317,2270,4.317,2403,4.754,2407,4.754,2441,2.614,2444,3.584,2518,2.614,2519,6.036,2520,4.498,2521,4.498,2522,2.979,2523,4.498,2524,2.979,2525,4.498,2526,2.979,2527,4.498,2528,2.979,2529,2.979,2530,2.979,2531,4.498,2532,2.979,2533,2.979,2534,2.979,2535,2.979,2536,2.614,2537,2.614,2538,2.614,2539,2.614,2540,2.979,2541,2.979,2542,2.979,2543,2.979,2544,2.979,2545,4.498,2546,2.979,2547,2.979,2548,2.979,2549,2.979,2550,2.979,2551,2.979,2552,2.979,2553,2.979,2554,2.979,2555,7.072,2556,2.979,2557,2.979,2558,2.979,2559,2.979,2560,2.051,2561,4.498,2562,2.979,2563,2.979,2564,2.979,2565,2.979,2566,2.979,2567,2.979,2568,5.418,2569,2.979,2570,4.498,2571,4.498,2572,2.979,2573,2.979,2574,2.979,2575,6.036,2576,2.979,2577,2.979,2578,2.979,2579,2.979,2580,2.979,2581,2.979,2582,4.498,2583,2.979,2584,2.979,2585,2.979,2586,5.418,2587,6.036,2588,2.979,2589,2.979,2590,2.979,2591,2.979,2592,4.498,2593,4.498,2594,4.498,2595,5.418,2596,2.979,2597,2.979,2598,2.979,2599,2.979,2600,2.979,2601,2.979,2602,2.979,2603,2.979,2604,2.979,2605,6.206,2606,4.498,2607,4.498,2608,2.614,2609,2.614,2610,2.979,2611,2.979,2612,2.979,2613,2.979,2614,2.979,2615,4.498,2616,4.754,2617,4.498,2618,4.498,2619,2.979,2620,2.979,2621,2.979,2622,2.979,2623,2.979,2624,2.979,2625,2.979,2626,2.979,2627,2.979,2628,2.979,2629,2.979,2630,2.979,2631,4.498,2632,2.979,2633,2.979,2634,2.979,2635,2.614,2636,2.979,2637,2.614,2638,2.979,2639,2.979,2640,2.979]],["title/injectables/VisualsService.html",[375,0.747,1999,3.211]],["body/injectables/VisualsService.html",[3,0.248,4,0.248,5,0.152,7,0.265,8,0.577,11,0.351,12,0.011,13,0.265,16,1.539,21,1.415,75,0.009,76,0.009,82,0.655,85,1.037,87,2.624,88,0.767,90,2.529,131,0.696,134,1.13,139,2.15,286,3.27,289,3.729,290,3.729,293,3.875,304,1.496,308,1.408,375,1.184,377,2.205,389,1.576,406,1.229,424,1.496,471,4.037,472,2.958,476,1.584,478,3.239,1794,3.239,1796,4.737,1972,5.584,1999,5.092,2536,4.868,2641,5.547,2642,7.532,2643,7.884,2644,5.547,2645,6.913,2646,5.547,2647,8.389,2648,5.547,2649,5.547,2650,5.547]],["title/interfaces/VisualsWorkerMessage.html",[0,0.061,276,2.325]],["body/interfaces/VisualsWorkerMessage.html",[0,0.115,2,0.955,3,0.216,4,0.216,5,0.133,7,0.23,8,0.528,10,1.633,11,0.522,12,0.011,13,0.405,18,2.803,19,1.035,22,2.26,25,2.433,75,0.008,76,0.008,248,2.688,249,2.688,250,3.679,251,2.817,252,2.817,253,2.817,254,2.573,255,2.467,256,2.573,257,2.573,258,2.573,259,2.573,260,2.573,261,2.573,262,2.573,263,2.688,264,2.688,265,2.467,266,3.372,267,3.234,268,3.234,269,3.234,270,2.467,271,3.234,272,2.573,273,2.781,274,2.781,275,3.234,276,3.372,277,3.992,278,3.607,279,4.172,280,4.119,281,3.679,282,4.051,283,3.992,284,3.466,285,3.931,286,2.991,287,2.573,288,3.234,289,3.541,290,3.541,291,2.282,292,3.234,293,3.679,411,1.497]],["title/injectables/WakelockService.html",[375,0.747,1858,3.001]],["body/injectables/WakelockService.html",[3,0.255,4,0.255,5,0.157,7,0.272,8,0.587,11,0.361,12,0.011,13,0.272,75,0.009,76,0.009,82,0.496,88,0.788,131,0.715,134,1.161,153,1.515,209,2.785,211,2.342,213,1.998,216,2.422,217,1.827,304,1.538,307,3.354,308,1.621,375,1.204,377,2.266,389,1.603,406,1.558,411,1.277,419,4.106,476,1.628,1858,4.84,2651,5.701,2652,6.075,2653,7.96,2654,7.96,2655,7.031,2656,5.701,2657,5.701,2658,7.031,2659,7.625,2660,5.701,2661,5.701,2662,5.701,2663,5.701,2664,5.701,2665,5.701,2666,5.701,2667,5.701]],["title/changelog.html",[2668,2.52,2669,2.696,2670,3.212]],["body/changelog.html",[0,0.008,5,0.119,11,0.093,12,0.003,18,0.218,21,0.264,29,4.337,41,1.075,43,2.427,45,2.08,47,3.079,49,3.59,51,3.171,53,3.59,55,2.435,57,3.703,59,2.653,61,3.15,63,2.162,65,1.64,67,3.398,69,4.101,75,0.001,76,0.001,77,0.175,80,0.21,82,0.09,83,0.242,85,0.102,87,0.489,91,0.32,92,0.551,94,0.603,117,0.377,122,0.403,124,0.908,128,0.259,130,0.85,131,0.069,140,0.175,154,0.565,164,0.436,166,0.377,175,0.823,179,0.181,182,0.436,183,0.32,190,2.316,211,0.424,219,2.016,220,0.603,278,0.28,282,0.269,289,0.259,290,0.489,291,0.489,295,0.613,304,0.148,307,0.241,314,1.086,334,0.763,336,0.198,341,0.595,346,0.398,368,0.398,370,0.424,376,0.28,394,0.436,411,0.099,412,0.377,425,0.951,447,0.305,448,0.305,472,0.551,480,1.204,485,0.436,494,0.761,496,0.761,499,0.355,500,0.436,505,0.377,511,0.403,512,0.991,513,1.863,514,1.14,516,0.355,517,0.403,523,0.377,534,0.634,535,1.179,537,0.436,556,2.596,559,5.225,581,1.169,582,2.016,584,1.204,615,1.521,628,0.436,643,1.63,647,0.436,678,1.433,689,1.505,698,0.32,703,0.269,712,0.204,713,0.218,719,5.754,730,0.28,744,0.32,755,0.336,773,0.783,781,0.879,784,0.377,800,0.901,811,0.67,824,1.01,827,0.305,833,0.67,834,0.436,853,1.48,859,0.823,865,0.377,919,0.711,978,0.907,979,5.551,999,2.778,1049,0.823,1062,3.005,1085,0.907,1102,0.711,1127,0.355,1129,0.377,1143,0.761,1161,0.403,1166,0.377,1187,0.403,1230,0.48,1257,1.279,1265,1.169,1281,1.081,1301,0.48,1317,0.32,1341,0.355,1399,2.452,1433,0.436,1457,0.823,1469,0.823,1470,0.48,1474,0.48,1505,1.521,1528,0.48,1534,0.436,1577,0.48,1628,0.48,1638,0.48,1758,0.907,1787,0.48,1788,0.48,1789,0.48,1794,0.32,1817,0.436,1856,0.403,1888,1.288,1890,2.22,1979,0.436,1983,3.996,1984,1.63,2038,0.48,2041,0.48,2056,1.63,2058,0.436,2061,1.288,2062,0.48,2063,0.48,2070,0.603,2071,4.056,2080,0.48,2092,0.48,2098,0.436,2105,0.436,2145,0.48,2187,0.48,2190,0.436,2219,2.22,2220,0.907,2232,0.907,2233,0.48,2256,0.403,2299,0.436,2307,3.639,2309,4.178,2332,0.48,2333,0.48,2362,0.907,2372,1.01,2393,4.4,2406,0.48,2444,4.412,2490,0.48,2514,0.48,2515,0.48,2539,0.48,2560,2.452,2605,0.48,2608,3.125,2635,0.48,2637,0.48,2652,1.169,2670,1.288,2671,0.548,2672,2.822,2673,0.548,2674,0.548,2675,0.548,2676,0.548,2677,0.355,2678,0.548,2679,0.548,2680,6.149,2681,6.326,2682,0.548,2683,0.548,2684,0.548,2685,0.548,2686,0.548,2687,5.241,2688,1.858,2689,3.089,2690,0.548,2691,1.033,2692,1.63,2693,1.939,2694,1.467,2695,0.548,2696,5.944,2697,0.548,2698,0.548,2699,0.548,2700,0.548,2701,3.562,2702,0.548,2703,0.548,2704,0.548,2705,0.548,2706,0.548,2707,5.444,2708,4.474,2709,2.711,2710,1.858,2711,0.548,2712,0.548,2713,0.548,2714,0.548,2715,1.467,2716,5.87,2717,0.548,2718,0.548,2719,2.53,2720,4.316,2721,0.548,2722,0.548,2723,0.548,2724,0.548,2725,0.548,2726,0.548,2727,1.033,2728,0.548,2729,1.858,2730,3.089,2731,0.548,2732,0.548,2733,0.548,2734,0.548,2735,0.548,2736,0.548,2737,2.53,2738,0.548,2739,0.548,2740,0.548,2741,0.548,2742,0.548,2743,0.548,2744,0.548,2745,1.033,2746,0.548,2747,0.548,2748,0.548,2749,0.548,2750,0.548,2751,0.548,2752,0.548,2753,0.548,2754,0.548,2755,0.548,2756,0.548,2757,2.21,2758,0.548,2759,0.548,2760,0.548,2761,0.548,2762,0.548,2763,0.548,2764,0.548,2765,0.548,2766,1.033,2767,0.548,2768,0.548,2769,1.939,2770,0.548,2771,5.793,2772,1.467,2773,1.169,2774,1.467,2775,0.548,2776,0.548,2777,1.288,2778,0.548,2779,0.548,2780,1.288,2781,1.033,2782,1.033,2783,0.548,2784,0.548,2785,0.48,2786,0.548,2787,0.548,2788,0.548,2789,1.858,2790,0.548,2791,0.548,2792,0.548,2793,0.548,2794,1.033,2795,0.548,2796,0.548,2797,0.548,2798,6.082,2799,0.548,2800,0.548,2801,0.548,2802,0.548,2803,1.033,2804,0.548,2805,0.548,2806,1.858,2807,1.467,2808,0.548,2809,0.548,2810,0.548,2811,0.548,2812,0.548,2813,1.467,2814,1.033,2815,0.548,2816,0.548,2817,0.548,2818,0.548,2819,0.548,2820,0.548,2821,1.033,2822,0.548,2823,0.48,2824,0.548,2825,0.548,2826,0.548,2827,0.548,2828,0.548,2829,0.548,2830,0.548,2831,0.907,2832,0.548,2833,0.548,2834,1.033,2835,0.548,2836,0.548,2837,0.548,2838,0.548,2839,0.548,2840,0.548,2841,0.548,2842,0.548,2843,0.548,2844,0.548,2845,0.548,2846,1.858,2847,5.241,2848,0.548,2849,0.548,2850,0.548,2851,0.548,2852,0.548,2853,0.548,2854,0.548,2855,2.21,2856,0.548,2857,0.548,2858,0.548,2859,0.548,2860,0.548,2861,0.548,2862,0.548,2863,0.548,2864,0.548,2865,0.548,2866,0.548,2867,0.548,2868,0.548,2869,0.548,2870,0.548,2871,2.822,2872,0.548,2873,0.548,2874,5.87,2875,0.548,2876,0.548,2877,0.436,2878,0.548,2879,0.548,2880,0.548,2881,0.548,2882,0.548,2883,0.548,2884,0.548,2885,0.548,2886,0.548,2887,0.436,2888,1.033,2889,0.823,2890,0.548,2891,0.548,2892,0.548,2893,0.548,2894,6.682,2895,0.548,2896,0.548,2897,0.548,2898,0.548,2899,0.548,2900,0.548,2901,0.548,2902,0.548,2903,0.548,2904,0.548,2905,0.548,2906,0.548,2907,0.548,2908,0.548,2909,0.548,2910,0.548,2911,0.548,2912,0.548,2913,0.548,2914,1.467,2915,0.548,2916,0.548,2917,0.548,2918,0.548,2919,0.548,2920,0.548,2921,0.548,2922,0.548,2923,6.268,2924,0.548,2925,0.548,2926,0.548,2927,0.548,2928,0.548,2929,0.548,2930,0.548,2931,0.548,2932,6.794,2933,0.548,2934,0.548,2935,0.548,2936,1.033,2937,0.548,2938,0.548,2939,4.4,2940,0.548,2941,0.548,2942,0.548,2943,1.858,2944,0.548,2945,0.548,2946,0.548,2947,0.548,2948,0.548,2949,0.548,2950,0.548,2951,0.548,2952,0.548,2953,0.548,2954,0.548,2955,0.548,2956,0.548,2957,0.548,2958,0.548,2959,7.844,2960,7.447,2961,0.548,2962,0.548,2963,0.548,2964,0.548,2965,0.548,2966,0.548,2967,0.548,2968,3.812,2969,0.548,2970,0.548,2971,0.548,2972,0.548,2973,0.548,2974,1.858,2975,1.033,2976,1.467,2977,0.548,2978,0.548,2979,0.548,2980,0.548,2981,0.548,2982,0.548,2983,0.548,2984,0.548,2985,0.548,2986,6.014,2987,0.48,2988,0.548,2989,1.858,2990,1.858,2991,0.548,2992,0.548,2993,2.21,2994,2.822,2995,0.548,2996,0.48,2997,0.548,2998,0.548,2999,0.548,3000,0.548,3001,1.288,3002,0.548,3003,0.548,3004,0.548,3005,0.548,3006,0.548,3007,0.548,3008,0.548,3009,0.548,3010,0.548,3011,0.548,3012,1.033,3013,0.548,3014,0.548,3015,0.548,3016,2.53,3017,0.548,3018,0.548,3019,0.548,3020,0.548,3021,2.822,3022,1.033,3023,0.548,3024,1.033,3025,1.033,3026,0.548,3027,0.548,3028,0.548,3029,0.548,3030,0.548,3031,0.548,3032,3.562,3033,0.548,3034,0.548,3035,0.548,3036,0.548,3037,0.548,3038,0.548,3039,0.548,3040,0.548,3041,2.711,3042,0.548,3043,0.548,3044,0.548,3045,0.548,3046,0.548,3047,3.772,3048,0.548,3049,0.548,3050,0.548,3051,0.548,3052,7.101,3053,0.548,3054,0.548,3055,1.858,3056,2.22,3057,0.548,3058,0.548,3059,0.548,3060,0.548,3061,0.548,3062,1.858,3063,0.548,3064,0.548,3065,0.548,3066,0.548,3067,0.548,3068,0.548,3069,0.548,3070,0.548,3071,0.548,3072,0.548,3073,0.548,3074,0.548,3075,0.548,3076,0.548,3077,0.548,3078,0.548,3079,0.548,3080,0.548,3081,0.548,3082,0.548,3083,0.548,3084,4.892,3085,0.548,3086,0.548,3087,0.548,3088,0.548,3089,0.548,3090,0.548,3091,0.548,3092,0.48,3093,0.548,3094,0.548,3095,0.548,3096,0.548,3097,0.548,3098,0.548,3099,0.548,3100,0.548,3101,0.548,3102,0.548,3103,3.335,3104,7.338,3105,0.548,3106,0.548,3107,0.548,3108,0.548,3109,0.548,3110,0.548,3111,0.548,3112,0.548,3113,0.548,3114,0.548,3115,0.548,3116,0.548,3117,1.939,3118,0.548,3119,0.548,3120,0.548,3121,0.548,3122,0.548,3123,0.548,3124,1.033,3125,1.467,3126,1.467,3127,0.548,3128,0.548,3129,0.548,3130,0.548,3131,0.548,3132,1.033,3133,0.548,3134,0.548,3135,0.548,3136,0.548,3137,0.548,3138,0.548,3139,0.548,3140,0.548,3141,0.548,3142,0.548,3143,0.548,3144,0.548,3145,0.548,3146,0.548,3147,0.548,3148,0.548,3149,1.467,3150,1.033,3151,1.033,3152,0.548,3153,0.548,3154,0.548,3155,0.548,3156,0.548,3157,0.548,3158,0.548,3159,0.548,3160,0.548,3161,0.548,3162,0.548,3163,0.548,3164,0.548,3165,0.548,3166,0.548,3167,0.548,3168,0.548,3169,1.033,3170,0.548,3171,0.548,3172,0.548,3173,0.548,3174,0.548,3175,0.548,3176,0.548,3177,0.548,3178,0.548,3179,2.822,3180,6.082,3181,0.548,3182,0.548,3183,0.548,3184,0.548,3185,0.548,3186,0.548,3187,0.548,3188,0.548,3189,0.548,3190,0.548,3191,0.548,3192,0.548,3193,0.548,3194,0.548,3195,0.548,3196,1.033,3197,0.548,3198,0.548,3199,0.548,3200,0.548,3201,0.548,3202,0.548,3203,0.548,3204,0.548,3205,0.548,3206,0.548,3207,0.548,3208,0.548,3209,0.548,3210,4.892,3211,0.548,3212,0.548,3213,0.548,3214,0.548,3215,0.548,3216,0.548,3217,0.548,3218,0.548,3219,0.548,3220,0.548,3221,0.548,3222,0.548,3223,0.548,3224,0.548,3225,0.548,3226,0.548,3227,0.548,3228,0.548,3229,0.548,3230,0.548,3231,0.548,3232,0.548,3233,0.548,3234,0.548,3235,0.548,3236,0.548,3237,0.548,3238,0.548,3239,0.548,3240,1.033,3241,0.548,3242,1.033,3243,0.548,3244,0.548,3245,0.548,3246,0.548,3247,0.548,3248,0.548,3249,0.548,3250,0.548,3251,0.548,3252,3.089,3253,0.548,3254,0.548,3255,0.548,3256,0.548,3257,0.548,3258,0.548,3259,0.548,3260,0.548,3261,0.548,3262,0.548,3263,0.548,3264,0.548,3265,0.548,3266,2.21,3267,0.548,3268,0.548,3269,0.548,3270,0.548,3271,4.761,3272,5.131,3273,0.548,3274,0.548,3275,0.548,3276,0.548,3277,0.548,3278,0.548,3279,0.548,3280,0.548,3281,0.548,3282,0.548,3283,0.548,3284,0.548,3285,0.548,3286,0.548,3287,0.548,3288,0.548,3289,0.548,3290,0.548,3291,0.548,3292,0.48,3293,0.548,3294,0.548,3295,0.548,3296,0.548,3297,0.548,3298,1.858,3299,1.467,3300,0.548,3301,0.548,3302,0.548,3303,0.548,3304,0.548,3305,0.548,3306,0.548,3307,0.548,3308,1.033,3309,0.548,3310,0.548,3311,0.548,3312,0.548,3313,0.548,3314,0.548,3315,0.548,3316,0.548,3317,0.548,3318,0.548,3319,0.548,3320,0.548,3321,0.548,3322,0.548,3323,1.033,3324,0.548,3325,0.548,3326,0.548,3327,1.033,3328,0.548,3329,0.548,3330,0.548,3331,0.548,3332,0.548,3333,0.548,3334,0.548,3335,0.548,3336,0.548,3337,0.548,3338,0.548,3339,0.548,3340,1.467,3341,0.548,3342,0.548,3343,0.548,3344,0.548,3345,0.548,3346,0.548,3347,0.548,3348,0.548,3349,0.548,3350,0.548,3351,0.548,3352,0.548,3353,0.548,3354,0.548,3355,0.548,3356,0.548,3357,0.48,3358,0.548,3359,0.548,3360,0.548,3361,0.548,3362,0.548,3363,0.548,3364,7.598,3365,1.033,3366,0.548,3367,0.548,3368,0.548,3369,0.548,3370,0.548,3371,0.548,3372,0.548,3373,0.548,3374,0.548,3375,0.548,3376,0.548,3377,0.548,3378,0.548,3379,0.548,3380,0.548,3381,0.548,3382,0.548,3383,1.467,3384,1.467,3385,0.548,3386,0.548,3387,0.548,3388,0.548,3389,0.548,3390,0.548,3391,0.548,3392,0.548,3393,0.548,3394,0.548,3395,1.033,3396,0.548,3397,0.548,3398,0.548,3399,1.033,3400,1.939,3401,0.548,3402,0.548,3403,0.548,3404,0.548,3405,1.033,3406,0.548,3407,0.548,3408,0.548,3409,0.548,3410,0.548,3411,0.548,3412,0.548,3413,0.548,3414,0.548,3415,0.548,3416,0.548,3417,0.548,3418,0.548,3419,0.548,3420,0.548,3421,0.548,3422,0.548,3423,2.822,3424,0.548,3425,0.548,3426,0.548,3427,1.033,3428,0.548,3429,0.548,3430,0.548,3431,0.548,3432,0.548,3433,0.548,3434,0.548,3435,0.548,3436,0.548,3437,0.548,3438,0.548,3439,0.548,3440,0.548,3441,0.548,3442,0.548,3443,0.548,3444,1.467,3445,0.548,3446,0.548,3447,0.548,3448,0.548,3449,0.548,3450,0.548,3451,0.548,3452,0.548,3453,0.548,3454,1.033,3455,0.548,3456,0.548,3457,0.548,3458,0.548,3459,0.548,3460,0.548,3461,0.548,3462,0.548,3463,0.548,3464,0.548,3465,0.548,3466,0.548,3467,0.548,3468,0.548,3469,0.548,3470,0.548,3471,1.033,3472,0.548,3473,0.548,3474,0.548,3475,0.548,3476,0.548,3477,0.548,3478,0.548,3479,0.548,3480,0.548,3481,0.548,3482,0.548,3483,0.548,3484,0.548,3485,0.548,3486,0.548,3487,0.548,3488,0.548,3489,0.548,3490,0.548,3491,0.548,3492,0.548,3493,0.548,3494,0.548,3495,0.548,3496,0.548,3497,0.548,3498,0.548,3499,0.548,3500,4.147,3501,0.548,3502,0.548,3503,1.033,3504,1.033,3505,0.548,3506,0.548,3507,0.548,3508,0.548,3509,0.548,3510,0.548,3511,0.548,3512,0.548,3513,0.548,3514,0.548,3515,0.548,3516,0.548,3517,0.548,3518,0.548,3519,0.548,3520,0.548,3521,0.548,3522,2.822,3523,0.548,3524,1.033,3525,1.033,3526,0.548,3527,0.548,3528,0.548,3529,0.548,3530,0.548,3531,0.548,3532,0.548,3533,0.548,3534,0.548,3535,0.548,3536,0.548,3537,0.548,3538,0.548,3539,0.548,3540,0.548,3541,0.548,3542,0.548,3543,0.548,3544,0.548,3545,0.548,3546,0.548,3547,0.548,3548,0.548,3549,0.548,3550,0.548,3551,1.033,3552,0.548,3553,0.548,3554,0.548,3555,0.548,3556,0.548,3557,0.548,3558,0.548,3559,0.548,3560,0.548,3561,0.548,3562,0.548,3563,0.548,3564,0.548,3565,0.548,3566,0.548,3567,0.548,3568,0.548,3569,0.548,3570,0.548,3571,0.548,3572,0.548,3573,0.548,3574,0.548,3575,0.548,3576,0.548,3577,0.548,3578,0.548,3579,0.548,3580,0.548,3581,0.548,3582,0.548,3583,0.548,3584,1.033,3585,0.548,3586,0.548,3587,0.548,3588,0.548,3589,0.548,3590,0.548,3591,0.548,3592,0.711,3593,1.279,3594,0.548,3595,0.548,3596,0.548,3597,0.548,3598,0.548,3599,0.548,3600,0.548,3601,0.548,3602,0.548,3603,0.548,3604,0.548,3605,0.548,3606,0.548,3607,0.548,3608,0.548,3609,0.548,3610,0.548,3611,0.548,3612,0.548,3613,0.548,3614,0.548,3615,1.858,3616,0.548,3617,0.548,3618,0.548,3619,0.548,3620,1.033,3621,0.548,3622,1.033,3623,0.548,3624,0.548,3625,0.548,3626,0.548,3627,0.548,3628,0.548,3629,0.548,3630,0.548,3631,0.548,3632,0.548,3633,0.548,3634,0.548,3635,0.548,3636,0.548,3637,0.548,3638,0.548,3639,0.548,3640,0.548,3641,0.548,3642,0.548,3643,0.548,3644,0.548,3645,0.548,3646,0.548,3647,0.548,3648,0.548,3649,0.548,3650,0.548,3651,0.548,3652,0.548,3653,0.548,3654,0.548,3655,0.548,3656,0.548,3657,0.548,3658,0.548,3659,0.548,3660,0.548,3661,0.548,3662,0.548,3663,0.548,3664,0.548,3665,0.548,3666,0.548,3667,0.48,3668,0.548,3669,0.548,3670,0.548,3671,0.548,3672,0.548,3673,0.548,3674,0.548,3675,0.548,3676,0.548,3677,0.548,3678,0.548,3679,0.548,3680,0.548,3681,0.548,3682,0.548,3683,0.548,3684,0.548,3685,0.548,3686,0.548,3687,0.548,3688,0.548,3689,0.548,3690,0.548,3691,0.548,3692,0.548,3693,1.033,3694,0.548,3695,0.548,3696,0.548,3697,0.548,3698,0.548,3699,0.548,3700,0.548,3701,0.548,3702,0.548,3703,0.548,3704,0.548,3705,0.548,3706,0.548,3707,0.548,3708,0.548,3709,0.548,3710,0.548,3711,0.548,3712,0.548,3713,0.548,3714,0.548,3715,0.548,3716,0.548,3717,0.548,3718,0.548,3719,0.548,3720,0.548,3721,0.548,3722,0.548,3723,0.548,3724,0.548,3725,0.548,3726,0.548,3727,0.548,3728,0.548,3729,0.548,3730,0.548,3731,2.53,3732,0.548,3733,0.548,3734,0.548,3735,0.548,3736,0.548,3737,0.548,3738,0.548,3739,0.548,3740,1.033,3741,0.548,3742,0.548,3743,0.548,3744,0.548,3745,0.548,3746,0.548,3747,1.858,3748,0.548,3749,0.548,3750,0.548,3751,0.548,3752,0.548,3753,0.548,3754,0.548,3755,0.548,3756,0.548,3757,0.548,3758,0.548,3759,0.48,3760,0.548,3761,0.548,3762,1.939,3763,0.548,3764,0.548,3765,7.679,3766,0.548,3767,0.548,3768,0.548,3769,0.548,3770,0.548,3771,0.548,3772,0.548,3773,0.548,3774,0.548,3775,0.548,3776,0.548,3777,0.548,3778,0.548,3779,0.548,3780,0.548,3781,0.548,3782,1.033,3783,0.548,3784,0.548,3785,0.548,3786,0.548,3787,0.548,3788,0.548,3789,0.548,3790,0.548,3791,0.548,3792,0.548,3793,0.548,3794,0.548,3795,0.548,3796,0.548,3797,0.548,3798,0.548,3799,0.548,3800,0.548,3801,0.548,3802,0.548,3803,0.548,3804,0.548,3805,0.548,3806,0.548,3807,0.548,3808,0.548,3809,0.548,3810,0.548,3811,0.548,3812,0.548,3813,0.548,3814,1.033,3815,0.548,3816,0.548,3817,0.548,3818,0.548,3819,2.822,3820,0.548,3821,0.548,3822,0.548,3823,0.548,3824,2.822,3825,0.548,3826,0.548,3827,0.548,3828,0.548,3829,0.548,3830,0.548,3831,0.548,3832,0.548,3833,0.548,3834,0.548,3835,0.548,3836,0.548,3837,0.548,3838,1.033,3839,0.548,3840,0.548,3841,0.548,3842,0.548,3843,0.548,3844,0.548,3845,0.548,3846,0.548,3847,0.548,3848,0.548,3849,0.548,3850,0.548,3851,0.548,3852,2.21,3853,0.548,3854,0.548,3855,0.548,3856,0.548,3857,1.033,3858,0.548,3859,0.548,3860,0.548,3861,0.548,3862,1.033,3863,0.548,3864,0.548,3865,0.548,3866,0.548,3867,0.548,3868,1.033,3869,0.548,3870,0.548,3871,0.548,3872,0.548,3873,0.548,3874,0.548,3875,0.548,3876,0.548,3877,0.548,3878,0.548,3879,0.548,3880,0.548,3881,2.53,3882,0.548,3883,1.033,3884,1.939,3885,0.548,3886,0.548,3887,0.548,3888,0.548,3889,0.548,3890,0.548,3891,0.548,3892,0.548,3893,0.548,3894,1.467,3895,0.548,3896,0.548,3897,0.548,3898,0.548,3899,0.548,3900,0.548,3901,0.548,3902,0.548,3903,0.548,3904,0.548,3905,1.467,3906,0.548,3907,0.548,3908,0.548,3909,0.548,3910,0.548,3911,0.548,3912,0.548,3913,0.548,3914,0.548,3915,0.48,3916,0.548,3917,1.033,3918,0.548,3919,0.548,3920,0.548,3921,0.548,3922,0.548,3923,0.548,3924,0.548,3925,0.548,3926,0.548,3927,0.548,3928,0.548,3929,0.548,3930,0.548,3931,0.548,3932,0.548,3933,0.548,3934,0.548,3935,0.548,3936,1.033,3937,1.033,3938,0.548,3939,1.033,3940,0.548,3941,0.548,3942,0.548,3943,0.548,3944,0.548,3945,0.548,3946,0.548,3947,0.548,3948,0.548,3949,0.548,3950,0.548,3951,0.548,3952,0.548,3953,0.548,3954,0.548,3955,0.548,3956,0.548,3957,0.548,3958,0.548,3959,0.548,3960,0.548,3961,0.48,3962,0.548,3963,0.548,3964,1.033,3965,0.548,3966,0.548,3967,0.548,3968,0.548,3969,0.548,3970,0.548,3971,0.548,3972,0.548,3973,0.548,3974,0.548,3975,0.548,3976,0.548,3977,0.548,3978,0.548,3979,0.548,3980,0.548,3981,0.548,3982,0.548,3983,0.436,3984,0.548,3985,0.548,3986,0.548,3987,0.548,3988,0.548,3989,0.548,3990,0.548,3991,0.548,3992,0.548,3993,0.548,3994,0.548,3995,0.548,3996,0.548,3997,0.548,3998,0.548,3999,0.548,4000,0.548,4001,0.548,4002,0.548,4003,0.548,4004,0.548,4005,0.548,4006,0.48,4007,0.548,4008,0.548,4009,0.548,4010,1.467,4011,0.548,4012,0.548,4013,0.548,4014,0.548,4015,0.548,4016,0.548,4017,0.548,4018,0.548,4019,0.548,4020,0.548,4021,0.548,4022,0.548,4023,1.858,4024,0.548,4025,0.548,4026,0.548,4027,0.548,4028,0.548,4029,2.822,4030,2.21,4031,0.548,4032,0.548,4033,0.548,4034,0.548,4035,0.548,4036,0.548,4037,0.548,4038,0.548,4039,0.548,4040,0.548,4041,0.548,4042,0.548,4043,0.548,4044,0.548,4045,1.033,4046,0.548,4047,0.548,4048,0.548,4049,0.548,4050,0.548,4051,0.548,4052,0.548,4053,0.548,4054,0.548,4055,0.548,4056,0.548,4057,0.548,4058,0.548,4059,0.548,4060,0.548,4061,0.548,4062,0.548,4063,0.548,4064,0.548,4065,0.548,4066,0.548,4067,0.548,4068,0.548,4069,0.548,4070,0.548,4071,0.548,4072,0.548,4073,1.033,4074,0.548,4075,0.548,4076,0.548,4077,0.548,4078,0.548,4079,0.548,4080,0.548,4081,0.548,4082,0.548,4083,0.548,4084,0.548,4085,0.548,4086,0.548,4087,0.548,4088,0.548,4089,0.548,4090,0.548,4091,0.548,4092,0.548,4093,0.548,4094,0.548,4095,0.548,4096,0.548,4097,0.548,4098,0.548,4099,0.548,4100,0.548,4101,0.548,4102,1.858,4103,0.548,4104,0.548,4105,0.548,4106,0.548,4107,0.548,4108,1.033,4109,0.548,4110,0.548,4111,0.548,4112,0.548,4113,0.548,4114,0.548,4115,0.548,4116,0.548,4117,0.548,4118,0.548,4119,0.548,4120,0.548,4121,0.548,4122,0.548,4123,0.548,4124,1.033,4125,0.548,4126,0.548,4127,0.548,4128,0.548,4129,0.548,4130,0.548,4131,0.548,4132,0.548,4133,0.548,4134,0.548,4135,0.548,4136,0.548,4137,0.548,4138,0.548,4139,0.548,4140,0.548,4141,0.548,4142,0.548,4143,0.548,4144,2.21,4145,2.21,4146,0.548,4147,0.548,4148,0.548,4149,0.548,4150,0.548,4151,0.548,4152,0.548,4153,0.548,4154,0.548,4155,0.548,4156,0.548,4157,0.548,4158,0.548,4159,0.548,4160,0.548,4161,0.548,4162,0.548,4163,0.548,4164,0.548,4165,0.548,4166,0.548,4167,0.548,4168,0.548,4169,0.548,4170,0.548,4171,0.548,4172,0.548,4173,0.548,4174,0.548,4175,0.548,4176,0.548,4177,0.548,4178,0.548,4179,0.548,4180,0.548,4181,0.548,4182,0.548,4183,0.548,4184,0.548,4185,0.548,4186,0.548,4187,0.548,4188,0.548,4189,0.548,4190,0.548,4191,7.563,4192,0.548,4193,0.548,4194,0.548,4195,0.548,4196,0.548,4197,0.548,4198,0.548,4199,0.548,4200,0.548,4201,0.548,4202,0.548,4203,0.48,4204,1.467,4205,0.548,4206,0.548,4207,0.548,4208,0.48,4209,0.548,4210,0.548,4211,0.548,4212,0.548,4213,0.548,4214,0.548,4215,0.548,4216,0.548,4217,0.548,4218,0.548,4219,0.548,4220,0.548,4221,0.548,4222,0.548,4223,0.548,4224,0.548,4225,0.548,4226,0.907,4227,0.548,4228,0.548,4229,0.548,4230,0.548,4231,0.548,4232,0.548,4233,0.548,4234,0.548,4235,0.548,4236,1.033,4237,0.548,4238,0.548,4239,0.548,4240,0.548,4241,0.548,4242,0.548,4243,0.548,4244,0.548,4245,0.548,4246,0.548,4247,0.548,4248,0.548,4249,0.548,4250,0.548,4251,0.548,4252,0.548,4253,0.548,4254,0.548,4255,0.548,4256,0.548,4257,0.548,4258,0.548,4259,0.548,4260,0.548,4261,0.548,4262,0.548,4263,0.548,4264,0.548,4265,0.548,4266,0.548,4267,0.548,4268,0.548,4269,0.548,4270,0.548,4271,0.548,4272,0.548,4273,0.548,4274,0.548,4275,0.548,4276,0.548,4277,0.548,4278,0.548,4279,0.548,4280,0.548,4281,0.548,4282,0.548,4283,0.548,4284,0.548,4285,0.548,4286,0.548,4287,0.548,4288,0.548,4289,0.548,4290,0.548,4291,0.548,4292,0.548,4293,0.548,4294,0.548,4295,0.548,4296,0.548,4297,0.548,4298,0.548,4299,0.548,4300,0.548,4301,0.548,4302,0.548,4303,0.548,4304,0.548,4305,0.548,4306,0.548,4307,0.548,4308,0.548,4309,0.548,4310,0.548,4311,0.548,4312,0.548,4313,0.548,4314,0.548,4315,0.548,4316,0.548,4317,0.548,4318,0.548,4319,0.548,4320,0.548,4321,0.548,4322,0.548,4323,0.548,4324,0.548,4325,0.548,4326,0.548,4327,0.548,4328,0.548,4329,0.548,4330,0.548,4331,0.548,4332,0.548,4333,1.033,4334,0.548,4335,0.548,4336,0.548,4337,0.548,4338,0.548,4339,0.548,4340,0.548,4341,0.548,4342,0.548,4343,0.548,4344,0.548,4345,0.548,4346,0.548,4347,0.548,4348,0.548,4349,0.548,4350,0.548,4351,0.548,4352,0.548,4353,0.548,4354,0.548,4355,0.548,4356,0.548,4357,0.548,4358,0.548,4359,0.548,4360,0.548,4361,0.548,4362,0.548,4363,0.548,4364,0.548,4365,0.548,4366,0.548,4367,0.548,4368,1.033,4369,0.548,4370,0.548,4371,0.548,4372,0.548,4373,0.548,4374,1.033,4375,1.033,4376,1.033,4377,0.548,4378,0.548,4379,0.548,4380,0.548,4381,0.548,4382,0.548,4383,0.548,4384,1.033,4385,1.033,4386,0.548,4387,0.548,4388,0.548,4389,0.548,4390,0.548,4391,0.548,4392,0.548,4393,0.548,4394,0.548,4395,0.548,4396,0.548,4397,0.548,4398,0.548,4399,0.548,4400,0.548,4401,0.548,4402,0.548,4403,0.548,4404,0.548,4405,0.548,4406,0.548,4407,0.548,4408,0.548,4409,0.548,4410,0.548,4411,0.548,4412,0.548,4413,0.548,4414,0.548,4415,0.548,4416,0.548,4417,0.548,4418,0.548,4419,0.548,4420,0.548,4421,0.548,4422,0.548,4423,0.548,4424,0.548,4425,0.548,4426,0.548,4427,0.548,4428,0.548,4429,0.548,4430,0.548,4431,0.548,4432,0.548,4433,0.548,4434,0.548,4435,0.548,4436,0.548,4437,0.548,4438,0.548,4439,0.548,4440,0.548,4441,0.548,4442,0.548,4443,0.548,4444,0.548,4445,0.548,4446,0.548,4447,0.548,4448,0.548,4449,0.548,4450,0.548,4451,0.548,4452,0.548,4453,0.548,4454,0.548,4455,0.548,4456,0.548,4457,0.548,4458,0.548,4459,0.548,4460,0.548,4461,0.548,4462,0.548,4463,0.548,4464,0.548,4465,0.548,4466,0.548,4467,0.548,4468,0.548,4469,0.548,4470,0.548,4471,0.548,4472,0.548,4473,0.548,4474,0.548,4475,0.548,4476,0.548,4477,0.548,4478,0.548,4479,0.548,4480,0.548,4481,0.548,4482,0.548,4483,0.548,4484,1.033,4485,0.548,4486,1.033,4487,0.548,4488,1.033,4489,1.467,4490,0.548,4491,0.548,4492,1.033,4493,0.548,4494,1.033,4495,8.194,4496,0.548,4497,0.548,4498,1.033,4499,0.548,4500,0.548,4501,0.548,4502,1.033,4503,0.548,4504,1.033,4505,0.548,4506,1.033,4507,0.548,4508,1.033,4509,0.548,4510,1.033,4511,0.548,4512,0.548,4513,0.548,4514,0.548,4515,1.033,4516,0.548,4517,1.033,4518,0.548,4519,1.033,4520,0.548,4521,1.033,4522,0.548,4523,1.033,4524,0.548,4525,1.033,4526,0.548,4527,1.033,4528,0.548,4529,1.033,4530,0.548,4531,0.548,4532,1.033,4533,1.033,4534,0.548,4535,0.548,4536,1.033,4537,0.548,4538,1.033,4539,0.548,4540,1.033,4541,0.548,4542,1.033,4543,0.548,4544,0.548,4545,1.033,4546,0.548,4547,0.548,4548,0.548,4549,1.033,4550,0.48,4551,0.548,4552,0.548,4553,1.033,4554,0.548,4555,1.033,4556,0.907,4557,0.548,4558,0.548,4559,1.033,4560,1.033,4561,0.548,4562,0.548,4563,1.033,4564,1.467,4565,1.858,4566,0.548,4567,0.548,4568,0.548,4569,1.033,4570,0.548,4571,1.033,4572,0.548,4573,0.548,4574,1.033,4575,0.548,4576,1.033,4577,0.548,4578,1.033,4579,0.548,4580,1.033,4581,0.548,4582,1.033,4583,0.548,4584,1.033,4585,0.548,4586,0.548,4587,1.033,4588,0.548,4589,1.033,4590,0.548,4591,1.033,4592,0.548,4593,1.033,4594,0.548,4595,1.033,4596,0.548,4597,1.033,4598,0.548,4599,1.033,4600,0.548,4601,1.033,4602,0.548,4603,0.548,4604,1.033,4605,0.548,4606,0.548,4607,0.548,4608,1.033,4609,0.548,4610,0.548,4611,0.548,4612,1.033,4613,0.548,4614,0.377,4615,0.548,4616,0.548,4617,0.548,4618,1.467,4619,0.548,4620,1.033,4621,0.548,4622,1.033,4623,1.033,4624,1.033,4625,1.858,4626,1.033,4627,0.548,4628,0.548,4629,0.548,4630,0.548,4631,0.548,4632,0.548,4633,0.548,4634,1.033,4635,1.033,4636,0.548,4637,0.548,4638,1.033,4639,0.548,4640,0.548,4641,1.033,4642,0.548,4643,1.033,4644,0.548,4645,1.033,4646,0.548,4647,1.033,4648,0.548,4649,1.033,4650,1.467,4651,0.548,4652,0.548,4653,0.548,4654,1.033,4655,0.548,4656,1.033,4657,0.548,4658,1.467,4659,0.548,4660,0.548,4661,0.548,4662,1.033,4663,0.548,4664,1.033,4665,0.548,4666,0.548,4667,0.548,4668,0.548,4669,0.548,4670,0.548,4671,0.548,4672,1.033,4673,0.548,4674,1.033,4675,0.548,4676,1.033,4677,0.548,4678,1.033,4679,0.548,4680,1.033,4681,0.548,4682,1.033,4683,0.548,4684,1.033,4685,0.548,4686,1.033,4687,0.548,4688,1.033,4689,0.548,4690,1.033,4691,0.548,4692,1.033,4693,0.548,4694,1.033,4695,0.548,4696,1.033,4697,0.548,4698,1.033,4699,0.548,4700,1.033,4701,0.548,4702,1.033,4703,0.548,4704,1.033,4705,0.548,4706,1.033,4707,0.548,4708,1.033,4709,0.548,4710,0.548,4711,0.548,4712,0.548,4713,1.033,4714,0.548,4715,0.548,4716,0.548,4717,0.548,4718,1.033,4719,1.858,4720,1.033,4721,0.548,4722,1.467,4723,0.548,4724,0.548,4725,0.548,4726,1.033,4727,0.548,4728,0.761,4729,0.548,4730,0.548,4731,0.548,4732,0.548,4733,1.033,4734,0.548,4735,0.548,4736,0.548,4737,1.033,4738,0.548,4739,1.033,4740,0.548,4741,1.033,4742,0.548,4743,1.033,4744,0.548,4745,1.033,4746,0.548,4747,1.033,4748,0.548,4749,1.033,4750,1.033,4751,0.548,4752,0.548,4753,1.033,4754,0.548,4755,0.548,4756,1.033,4757,0.548,4758,0.548,4759,1.033,4760,0.548,4761,0.548,4762,1.033,4763,0.548,4764,0.548,4765,0.548,4766,0.548,4767,0.548,4768,0.548,4769,0.548,4770,0.548,4771,0.548,4772,0.548,4773,0.548,4774,1.033,4775,0.548,4776,0.548,4777,1.033,4778,0.548,4779,0.548,4780,1.033,4781,0.548,4782,0.548,4783,1.033,4784,0.548,4785,0.548,4786,0.548,4787,1.033,4788,0.548,4789,0.548,4790,0.548,4791,1.033,4792,0.548,4793,1.033,4794,0.548,4795,0.548,4796,0.548,4797,0.548,4798,1.033,4799,0.548,4800,1.033,4801,0.548,4802,1.033,4803,0.548,4804,1.033,4805,0.548,4806,0.548,4807,0.548,4808,0.548,4809,0.548,4810,1.033,4811,0.548,4812,1.033,4813,0.548,4814,0.548,4815,1.033,4816,0.548,4817,1.033,4818,0.548,4819,0.548,4820,0.548,4821,0.548,4822,0.548,4823,0.548,4824,1.033,4825,0.548,4826,0.548,4827,0.548,4828,1.033,4829,0.548,4830,0.548,4831,0.548,4832,0.548,4833,0.548,4834,0.48,4835,0.548,4836,1.033,4837,0.548,4838,1.033,4839,0.548,4840,0.48,4841,0.548,4842,0.548,4843,0.548,4844,0.548,4845,1.033,4846,0.548,4847,1.033,4848,0.548,4849,1.033,4850,0.548,4851,0.548,4852,1.033,4853,0.548,4854,0.548,4855,1.033,4856,0.548,4857,0.548,4858,0.548,4859,1.033,4860,0.548,4861,1.033,4862,0.548,4863,1.033,4864,0.548,4865,1.033,4866,0.548,4867,1.033,4868,0.548,4869,1.033,4870,0.548,4871,1.033,4872,0.548,4873,1.033,4874,0.548,4875,1.033,4876,0.548,4877,1.033,4878,0.548,4879,1.033,4880,0.548,4881,0.548,4882,0.548,4883,0.548,4884,0.548]],["title/dependencies.html",[2560,3.602,2773,2.917]],["body/dependencies.html",[12,0.011,75,0.009,76,0.009,88,0.804,90,3.653,91,3.394,92,3.099,97,3.568,101,1.918,118,3.099,120,4.28,121,2.972,123,4.28,124,1.482,313,4.368,314,3.497,472,3.099,689,3.099,709,3.767,710,3.767,711,2.972,720,4.368,773,3.099,1257,4,1500,5.099,1505,4,1508,5.099,1509,5.099,2036,5.099,2266,5.099,2267,5.099,2363,5.099,2560,4,2987,6.243,2996,7.563,3041,5.099,3092,5.099,3667,5.099,3961,5.099,4203,5.099,4208,5.099,4885,5.811,4886,5.811,4887,5.811,4888,5.811,4889,5.811,4890,7.115,4891,5.811,4892,5.811,4893,5.811,4894,5.811,4895,5.811,4896,5.811,4897,5.811,4898,5.811,4899,5.811]],["title/miscellaneous/enumerations.html",[4900,2.138,4901,4.592]],["body/miscellaneous/enumerations.html",[6,3.835,7,0.282,12,0.011,37,4.2,38,4.072,40,4.072,41,3.056,42,4.072,43,3.402,44,4.072,45,4.2,46,4.072,47,3.632,48,4.072,49,3.835,50,4.072,51,3.835,52,4.072,53,3.835,54,4.072,55,3.632,56,4.072,57,3.835,58,4.072,59,3.297,60,4.072,61,3.632,62,4.072,63,3.835,64,4.072,65,3.835,66,4.072,67,3.835,68,4.072,69,3.835,70,4.416,71,4.072,72,4.072,73,4.072,74,4.072,75,0.009,76,0.009,424,2.401,4900,3.454,4901,5.191,4902,6.311]],["title/miscellaneous/functions.html",[2887,4.17,4900,2.138]],["body/miscellaneous/functions.html",[5,0.224,7,0.204,10,1.334,11,0.521,12,0.011,19,1.091,21,1.093,22,2.287,75,0.007,76,0.007,80,1.692,282,3.788,288,2.191,292,2.191,314,3.266,406,1.905,410,2.586,411,1.509,424,1.576,614,1.373,672,4.308,677,2.763,700,2.402,715,2.987,737,2.477,820,3.586,821,3.115,822,3.414,823,4.894,824,2.95,825,4.913,848,3.414,864,3.414,891,2.631,1007,2.778,1074,4.382,1138,2.631,1251,5.125,1253,3.76,1434,2.95,1435,3.76,1436,3.414,1483,3.76,1576,3.76,1590,3.76,1698,4.654,1769,3.414,1797,3.76,1858,2.95,1978,3.76,1979,4.654,1980,3.414,2887,3.414,4900,2.502,4903,6.646,4904,7.143,4905,6.646,4906,6.646,4907,6.646,4908,6.646,4909,4.285,4910,5.841,4911,5.841,4912,4.285,4913,5.831,4914,3.76,4915,5.841,4916,4.285,4917,5.841,4918,5.831,4919,5.841,4920,5.841,4921,5.841,4922,5.841,4923,5.841,4924,4.285,4925,5.831,4926,5.841,4927,6.646,4928,5.841,4929,6.646,4930,6.646,4931,6.646,4932,5.841,4933,6.646,4934,5.841,4935,6.646,4936,5.841,4937,5.831,4938,5.841,4939,5.841,4940,5.831,4941,3.76,4942,3.76,4943,4.285,4944,4.285,4945,4.285,4946,4.285,4947,4.285,4948,4.285,4949,4.285,4950,5.841,4951,4.285,4952,3.76,4953,4.285,4954,4.285]],["title/index.html",[7,0.175,2668,2.52,2669,2.696]],["body/index.html",[5,0.192,12,0.011,59,3.155,75,0.009,76,0.009,77,1.814,124,2.025,152,2.25,166,3.897,179,1.869,314,2.782,341,2.244,368,2.179,475,4.82,480,4.539,535,3.019,536,4.17,584,3.67,678,3.67,689,3.019,744,3.306,773,3.019,781,2.678,800,4.299,873,4.511,1049,4.511,1102,3.897,1248,4.511,1281,4.17,1469,4.511,1502,4.968,1505,3.897,1526,4.511,1534,5.579,1647,3.897,2256,5.157,2560,3.897,2652,4.511,2668,3.897,2677,3.67,2709,4.968,2777,6.67,2780,4.968,2785,4.968,2823,4.968,2831,4.968,3117,4.968,3400,6.144,3762,6.144,3884,4.968,4550,4.968,4840,4.968,4955,4.968,4956,6.144,4957,4.968,4958,5.662,4959,5.662,4960,5.662,4961,5.662,4962,5.662,4963,7.001,4964,7.001,4965,5.662,4966,5.662,4967,5.662,4968,5.662,4969,5.662,4970,5.662,4971,5.662,4972,5.662,4973,5.662,4974,5.662,4975,5.662,4976,5.662,4977,5.662,4978,5.662,4979,5.662,4980,5.662,4981,5.662,4982,5.662,4983,5.662]],["title/license.html",[2668,2.52,2669,2.696,4728,2.696]],["body/license.html",[10,0.845,12,0.006,29,3.536,61,1.841,75,0.006,76,0.006,140,0.961,173,2.389,178,2.064,179,0.99,190,4.139,203,3.601,308,0.611,336,1.633,381,3.111,419,1.751,473,3.328,499,1.944,523,2.064,639,2.631,646,2.631,703,1.473,720,1.841,725,1.841,766,1.856,784,2.064,811,2.93,857,5.176,868,2.389,1129,4.472,1144,2.208,1281,2.208,1433,5.647,1455,2.064,1796,2.639,2065,3.966,2104,5.313,2203,2.631,2221,2.631,2372,2.064,2616,2.631,2680,2.631,2692,6.779,2693,2.631,2877,2.389,3056,2.631,3292,2.631,3915,4.773,3983,2.389,4728,5.029,4834,3.966,4984,7.087,4985,7.295,4986,6.497,4987,7.087,4988,2.998,4989,2.998,4990,2.998,4991,7.295,4992,2.998,4993,4.519,4994,2.998,4995,2.998,4996,2.998,4997,2.998,4998,5.439,4999,2.998,5000,5.439,5001,5.439,5002,2.998,5003,6.055,5004,2.998,5005,5.439,5006,2.998,5007,2.998,5008,2.998,5009,2.998,5010,7.295,5011,2.998,5012,2.998,5013,4.519,5014,4.519,5015,2.998,5016,2.998,5017,4.519,5018,7.726,5019,8.387,5020,4.519,5021,4.519,5022,2.998,5023,2.998,5024,2.998,5025,4.519,5026,8.499,5027,2.998,5028,5.439,5029,4.519,5030,2.998,5031,4.519,5032,2.998,5033,4.519,5034,2.998,5035,5.439,5036,2.998,5037,4.519,5038,4.519,5039,6.055,5040,2.998,5041,2.998,5042,2.998,5043,6.055,5044,4.519,5045,2.998,5046,2.998,5047,4.519,5048,2.998,5049,2.998,5050,2.998,5051,2.998,5052,5.439,5053,6.497,5054,7.464,5055,6.497,5056,5.439,5057,2.998,5058,2.998,5059,2.998,5060,4.519,5061,2.998,5062,4.519,5063,2.998,5064,2.998,5065,2.998,5066,2.998,5067,2.998,5068,2.998,5069,2.998,5070,2.064,5071,2.998,5072,2.998,5073,4.519,5074,2.998,5075,7.726,5076,6.497,5077,2.998,5078,2.998,5079,4.519,5080,2.998,5081,4.519,5082,7.087,5083,2.998,5084,2.998,5085,2.998,5086,2.998,5087,2.998,5088,2.998,5089,2.998,5090,2.998,5091,2.998,5092,2.998,5093,2.998,5094,2.998,5095,2.998,5096,2.998,5097,6.055,5098,2.998,5099,2.998,5100,2.998,5101,2.998,5102,5.439,5103,2.998,5104,2.998,5105,2.998,5106,4.519,5107,2.998,5108,2.998,5109,5.439,5110,4.519,5111,2.998,5112,2.998,5113,2.998,5114,2.998,5115,4.519,5116,2.998,5117,2.998,5118,2.998,5119,2.998,5120,2.998,5121,6.497,5122,2.998,5123,2.998,5124,2.998,5125,2.998,5126,2.998,5127,2.998,5128,2.998,5129,2.998,5130,4.519,5131,2.998,5132,5.439,5133,2.998,5134,2.998,5135,2.998,5136,2.998,5137,2.998,5138,2.998,5139,2.998,5140,7.087,5141,5.439,5142,2.998,5143,7.087,5144,4.519,5145,4.519,5146,2.998,5147,5.439,5148,2.998,5149,4.519,5150,2.998,5151,2.998,5152,2.998,5153,2.998,5154,2.998,5155,6.829,5156,4.519,5157,5.439,5158,4.519,5159,2.998,5160,2.998,5161,6.497,5162,4.519,5163,4.519,5164,5.439,5165,4.519,5166,4.519,5167,4.519,5168,4.519,5169,2.998,5170,2.998,5171,2.998,5172,2.998,5173,2.998,5174,2.998,5175,6.055,5176,2.998,5177,2.998,5178,2.998,5179,2.998,5180,2.998,5181,2.998,5182,2.998,5183,2.998,5184,2.998,5185,6.055,5186,5.439,5187,2.998,5188,4.519,5189,5.439,5190,4.519,5191,4.519,5192,4.519,5193,2.998,5194,2.998,5195,2.998,5196,2.998,5197,4.519,5198,2.998,5199,6.055,5200,2.998,5201,2.998,5202,2.998,5203,2.998,5204,4.519,5205,2.998,5206,2.998,5207,2.998,5208,2.998,5209,2.998,5210,2.998,5211,2.998,5212,2.998,5213,2.998,5214,2.998,5215,4.519,5216,2.998,5217,2.998,5218,2.998,5219,2.998,5220,2.998,5221,2.998,5222,2.998,5223,2.998,5224,2.998,5225,2.998,5226,2.998,5227,2.998,5228,2.998,5229,2.998,5230,2.998,5231,2.998,5232,2.998,5233,2.998,5234,4.519,5235,2.998,5236,2.998,5237,2.998,5238,2.998,5239,2.998,5240,2.998,5241,2.998,5242,2.998,5243,4.519,5244,2.998,5245,2.998,5246,2.998,5247,2.998,5248,2.998,5249,2.998,5250,2.998,5251,2.998,5252,2.998,5253,2.998,5254,2.998,5255,2.998,5256,2.998]],["title/modules.html",[2889,4.709]],["body/modules.html",[12,0.01,75,0.01,76,0.01,2889,5.539]],["title/overview.html",[5257,5.186]],["body/overview.html",[2,1.342,12,0.01,41,3.313,45,3.959,75,0.01,76,0.01,97,4.163,131,0.85,295,2.238,336,2.45,377,2.694,1062,5.402,2939,5.949,5257,5.949,5258,6.78]],["title/properties.html",[8,0.437,2773,2.917]],["body/properties.html",[8,0.558,12,0.011,75,0.01,76,0.01,480,4.333,1127,4.333,1647,4.601,2372,4.601,4006,5.865,4728,4.922,4956,5.865,4957,5.865,5259,6.684,5260,6.684,5261,6.684,5262,6.684,5263,6.684,5264,6.684]],["title/todo.html",[512,1.952,2668,2.52,2669,2.696]],["body/todo.html",[5,0.181,12,0.01,18,2.619,75,0.01,76,0.01,190,3.848,480,4.272,773,3.514,781,3.117,1399,4.536,1505,4.536,1575,5.251,2769,5.783,4226,5.783,4556,5.783,5265,6.59,5266,6.59,5267,6.59,5268,6.59,5269,6.59,5270,6.59,5271,5.783,5272,6.59,5273,6.59,5274,6.59,5275,6.59,5276,6.59,5277,6.59,5278,6.59]],["title/miscellaneous/typealiases.html",[4900,2.138,5279,5.233]],["body/miscellaneous/typealiases.html",[6,3.689,7,0.272,11,0.36,12,0.011,14,4.554,23,4.554,30,3.917,31,3.689,32,4.554,33,3.689,34,3.494,35,3.494,75,0.009,76,0.009,249,3.171,250,3.452,254,3.035,255,2.911,256,3.035,257,3.035,258,3.035,259,3.035,260,3.035,261,3.035,262,3.035,282,3.452,286,3.322,288,2.911,289,3.322,290,3.322,292,2.911,293,3.452,414,3.914,446,3.035,447,3.171,448,3.171,449,3.323,450,3.035,451,3.323,452,3.323,683,3.917,697,4.554,698,3.323,700,2.057,847,3.494,1313,3.689,1314,4.554,1318,3.494,1319,3.494,1321,4.554,4900,3.323,4902,6.685,5280,5.691,5281,7.619,5282,7.024,5283,5.691,5284,5.691,5285,5.691,5286,5.691,5287,5.691,5288,5.691]],["title/miscellaneous/variables.html",[4900,2.138,5289,4.592]],["body/miscellaneous/variables.html",[7,0.14,10,1.502,11,0.549,12,0.011,18,1.768,19,0.973,21,2.141,39,1.095,43,1.389,75,0.006,76,0.006,77,1.426,80,1.38,89,1.803,152,1.768,162,3.545,163,5.13,179,1.773,250,2.187,267,2.275,268,2.275,269,2.275,271,2.275,273,1.957,274,1.957,275,2.275,277,2.373,278,1.502,283,2.373,284,1.443,286,1.389,287,2.373,291,2.104,341,0.941,378,2.34,414,1.637,424,2.265,425,1.904,426,3.204,446,1.566,447,1.637,448,1.637,449,1.715,450,1.566,451,1.715,452,1.715,453,1.803,454,1.803,455,1.803,474,3.277,517,3.277,535,1.566,614,2.171,637,3.904,672,4.174,692,3.482,718,1.339,784,2.022,820,1.803,821,1.566,824,3.063,826,2.732,829,1.715,891,1.803,892,4.713,893,2.577,894,2.577,895,2.577,896,3.904,897,2.577,898,2.577,899,2.577,900,2.577,901,2.577,902,2.577,903,2.577,904,3.904,905,2.577,906,2.577,907,2.577,908,2.577,909,2.577,910,2.577,1007,1.904,1074,1.803,1138,1.803,1404,2.34,1434,2.022,1519,2.577,1527,3.904,1647,3.063,1858,2.022,2058,2.34,2098,2.34,2105,3.545,2150,2.577,2269,4.774,2270,4.774,2372,2.022,2518,2.577,2537,3.904,2538,3.904,2609,3.904,2877,3.545,2894,2.577,3759,2.577,3983,5.607,4900,1.715,4904,7.418,4913,2.577,4914,3.904,4918,2.577,4925,2.577,4937,2.577,4940,2.577,4941,2.577,4942,4.713,4952,2.577,4955,2.577,5289,2.577,5290,4.449,5291,4.449,5292,4.449,5293,4.449,5294,4.449,5295,4.449,5296,4.449,5297,4.449,5298,5.992,5299,2.937,5300,2.937,5301,4.449,5302,5.371,5303,4.449,5304,2.937,5305,4.449,5306,4.449,5307,2.937,5308,4.449,5309,6.438,5310,4.449,5311,4.449,5312,5.371,5313,4.449,5314,4.449,5315,4.449,5316,4.449,5317,4.449,5318,4.449,5319,4.449,5320,4.449,5321,2.937,5322,4.449,5323,2.937,5324,2.937,5325,2.937,5326,2.937,5327,2.937,5328,2.937,5329,2.937,5330,2.937,5331,2.937,5332,2.937,5333,2.937,5334,2.937,5335,2.937,5336,2.937,5337,2.937,5338,2.937,5339,2.937,5340,2.937,5341,2.937,5342,2.937,5343,2.937,5344,2.937,5345,2.937,5346,2.937,5347,6.438,5348,2.937,5349,2.937,5350,2.937,5351,2.937,5352,2.937,5353,2.937,5354,2.937,5355,2.937,5356,2.937,5357,2.937,5358,2.937,5359,2.937,5360,4.449,5361,7.038,5362,4.449,5363,4.449,5364,2.937,5365,2.937,5366,2.937,5367,2.937,5368,2.937,5369,2.937,5370,2.937,5371,2.937,5372,2.937,5373,2.937,5374,2.937,5375,2.937,5376,2.937,5377,2.937,5378,2.937,5379,2.937,5380,2.937,5381,2.937,5382,2.937,5383,2.937,5384,2.937,5385,2.937,5386,6.775,5387,4.449,5388,2.937,5389,2.937,5390,5.992,5391,2.937,5392,2.937,5393,2.937,5394,2.937,5395,2.937,5396,2.937]],["title/additional-documentation/ui-components-file-drop-overlay.html",[5,0.061,295,0.736,346,0.858,919,1.535,2070,1.302,4614,1.535,5070,1.535]],["body/additional-documentation/ui-components-file-drop-overlay.html",[5,0.212,12,0.01,75,0.01,76,0.01,220,3.887,295,2.546,346,2.968,514,4.087,919,5.31,2070,4.505,2677,4.315,2968,5.31,3592,4.582,3593,5.31,5397,4.903,5398,5.682,5399,4.903]],["title/additional-documentation/ui-components-slide-panel.html",[295,0.816,363,0.982,2070,1.443,2182,1.82,4614,1.701,5070,1.701]],["body/additional-documentation/ui-components-slide-panel.html",[12,0.01,75,0.01,76,0.01,220,3.903,295,2.552,363,3.073,514,4.104,2070,4.515,2182,5.695,2677,4.333,2968,5.323,3592,4.601,3593,5.323,5397,4.922,5398,5.695,5399,4.922]],["title/additional-documentation/ui-components-dialogs.html",[295,0.915,2070,1.619,4614,1.908,5070,1.908,5400,2.432]],["body/additional-documentation/ui-components-dialogs.html",[12,0.01,75,0.01,76,0.01,220,3.919,295,2.558,514,4.12,2070,4.526,2677,4.351,2968,5.335,3592,4.619,3593,5.335,5397,4.942,5398,5.708,5399,4.942,5400,6.801]],["title/additional-documentation/helpers.html",[4614,2.52,5070,2.52,5401,3.212]],["body/additional-documentation/helpers.html",[12,0.01,75,0.01,76,0.01,220,3.856,514,4.054,1983,5.261,2677,4.281,2968,5.589,3001,5.794,3357,7.125,3592,5.286,3593,5.286,5271,6.738,5397,5.655,5398,5.655,5399,5.655,5401,7.125]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["0",{"_index":39,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":1033,"title":{},"body":{"injectables/GamepadService.html":{}}}],["0.2",{"_index":1766,"title":{},"body":{"components/PlayerComponent.html":{}}}],["0.5",{"_index":467,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["0.7",{"_index":2475,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0.75",{"_index":2439,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["0038838",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["00399df",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["006b52c",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["009b48d",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["00b47ed",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["00d5b5e",{"_index":2907,"title":{},"body":{"changelog.html":{}}}],["0107dc5",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["0129566",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["013e987",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["0174ddf",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["019de24",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["025a430",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["027ad79",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["02bde5d",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["02c06cb",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["02d4bfb",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["02e548c",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["0325a08",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["0338bd7",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["03a0491",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["045b043",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["0486e25",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["04b4812",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["04dca08",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["0581767",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["05a441e",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["05b4ddd",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["05ddceb",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["0629b20",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["063950a",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["063d395",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["0674adf",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["067bbea",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["072caca",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["07d6959",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["07de52a",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["07ec810",{"_index":4396,"title":{},"body":{"changelog.html":{}}}],["0843a41",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["0858a77",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["08b1238",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["0903cd2",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["092dc60",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["0960760",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["097fe6b",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["09ae300",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["09eba6b",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["0a9aedc",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["0b2a071",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["0b30a9f",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["0ba1f5d",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["0bde446",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["0c889a3",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["0c91659",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["0cabcad",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["0cec276",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["0d0dfcb",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["0d76c85",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["0dc096d",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["0e060af",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["0e6195d",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["0f45127",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["0f6c72b",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["0f8326e",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["0f8e394",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":41,"title":{},"body":{"interfaces/ActionCache.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/LoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":4988,"title":{},"body":{"license.html":{}}}],["1.0.1",{"_index":4891,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":4885,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["1.2.4",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":59,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/PlayerComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["10.0.1",{"_index":4176,"title":{},"body":{"changelog.html":{}}}],["10.0.2",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["10.0.3",{"_index":4170,"title":{},"body":{"changelog.html":{}}}],["10.0.4",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["10.1",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["10.1.0",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["10.2.0",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["10.2.5",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["10.2.7",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["10.3.0",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["10.3.1",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["10.3.2",{"_index":4139,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":1760,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/ThemeService.html":{}}}],["1000",{"_index":450,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["101bbd0",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["1024",{"_index":259,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["108",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["1081f8e",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["1098d6a",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["10_000",{"_index":621,"title":{},"body":{"pipes/BandPipe.html":{}}}],["10bf971",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":61,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["11.0.0",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["11.0.2",{"_index":4892,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["11.1.2",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["11.2.0",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["11.3.0",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["11.3.1",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["11.4.0",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["11.4.1",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["11.4.10",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["11.4.11",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["11.4.2",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["11.4.3",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["11.4.5",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["11.4.6",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["11.4.8",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["11.4.9",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["11.5.0",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["11.5.1",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["11.5.10",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["11.5.11",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["11.5.12",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["11.5.13",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["11.5.14",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["11.5.3",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["11.5.4",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["11.5.5",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["11.5.6",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["11.5.7",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["11.5.8",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["11.5.9",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["112db1a",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["11ae344",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":63,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["12.0.0",{"_index":3961,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["12.0.1",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["12.0.10",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["12.0.11",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["12.0.12",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["12.0.13",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["12.0.15",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["12.0.16",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["12.0.3",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["12.0.4",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["12.0.5",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["12.0.6",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["12.0.7",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["12.0.8",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["12.0.9",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["12000",{"_index":5286,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["120476b",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["120f02a",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["122856c",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["128",{"_index":256,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["128a3c3",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["12_000",{"_index":453,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["12a71dd",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":65,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["13.0.0",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["13.0.1",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["13.0.10",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["13.0.11",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["13.0.12",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["13.0.13",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["13.0.16",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["13.0.18",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["13.0.19",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["13.0.2",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["13.0.20",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["13.0.3",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["13.0.5",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["13.0.6",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["13.0.7",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["13.0.8",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["13.0.9",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["13.1.0",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["13.1.1",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["13.1.10",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["13.1.11",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["13.1.12",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["13.1.2",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["13.1.3",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["13.1.4",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["13.1.5",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["13.1.6",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["13.1.7",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["13.1.8",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["13.1.9",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["13.2",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["13.2.0",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["13.2.1",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["13.2.2",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["13.2.3",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["13.2.4",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["13.2.5",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["13.2.6",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["13.3.0",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["13.3.1",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["13.3.2",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["13.3.3",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["13.3.4",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["13.3.5",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["131",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["133059f",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["1333d05",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["135",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["1385586",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["139",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["13bf8e2",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":67,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["14.0.0",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["14.0.10",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["14.0.11",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["14.0.12",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["14.0.13",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["14.0.2",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["14.0.3",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["14.0.4",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["14.0.5",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["14.0.6",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["14.0.7",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["14.0.8",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["14.0.9",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["14.1.0",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["14.1.1",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["14.1.10",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["14.1.11",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["14.1.12",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["14.1.13",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["14.1.14",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["14.1.15",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["14.1.16",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["14.1.17",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["14.1.18",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["14.1.19",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["14.1.2",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["14.1.20",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["14.1.23",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["14.1.3",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["14.1.4",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["14.1.5",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["14.1.6",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["14.1.7",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["14.1.8",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["14.1.9",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["140",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["14000",{"_index":5287,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["141",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["14148e0",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["142",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["144",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["1455d32",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["146",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["147",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["14768e6",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["14_000",{"_index":454,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["14a5bd3",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":69,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["15.0.0",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["15.0.1",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["15.0.2",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["15.0.3",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["15.0.4",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["15.0.5",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["15.0.6",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["15.0.7",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["15.0.8",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["15.0.9",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["15.1.1",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["15.1.10",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["15.1.11",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["15.1.12",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["15.1.13",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["15.1.14",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["15.1.16",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["15.1.17",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["15.1.2",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["15.1.3",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["15.1.4",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["15.1.5",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["15.1.6",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["15.1.7",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["15.1.8",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["15.1.9",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["150",{"_index":2332,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["155e1fd",{"_index":2942,"title":{},"body":{"changelog.html":{}}}],["15dded8",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1062,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"overview.html":{}}}],["16.0.1",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["16.0.2",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["16.0.3",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["16.0.4",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["16.0.5",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["16.0.6",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["16000",{"_index":5288,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["1604161",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["162acda",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["16384",{"_index":5284,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["164",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["166c79d",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["16925cf",{"_index":4165,"title":{},"body":{"changelog.html":{}}}],["16_000",{"_index":455,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["16_384",{"_index":263,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["16d8b1b",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2939,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["17.0.10",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["17.0.11",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["17.0.12",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["17.0.13",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["17.0.14",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["17.0.15",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["17.0.16",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["17.0.17",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["17.0.18",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["17.0.2",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["17.0.3",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["17.0.4",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["17.0.5",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["17.0.6",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["17.0.7",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["17.0.8",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["17.0.9",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["170",{"_index":447,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["170ea47",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["171",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["172",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["17266a3",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["1730f16",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["1745489",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["17a1677",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["17e4083",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["17ed8a6",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["18.0.1",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["18.1.0",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["18.1.1",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["18.2.0",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["18.2.2",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["18.2.3",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["18.2.4",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["18.2.5",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["18.2.6",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["18.2.7",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["181",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["184a834",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["1857720",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["18a45bd",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["18cab80",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["19.0.0",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["19.0.1",{"_index":3092,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.0.10",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["19.0.2",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["19.0.3",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["19.0.4",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["19.0.5",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["19.0.6",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["19.0.7",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["19.0.8",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["19.0.9",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["19.1.0",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["19.1.1",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["19.2.0",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["19.2.1",{"_index":2999,"title":{},"body":{"changelog.html":{}}}],["19.2.10",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["19.2.2",{"_index":2996,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.3",{"_index":2987,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["19.2.4",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["19.2.5",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["19.2.7",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["19.2.8",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["19.2.9",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["19.2.x",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["19.3.0",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["19.3.3",{"_index":4893,"title":{},"body":{"dependencies.html":{}}}],["19.4.0",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["19.4.1",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["19.4.10",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["19.4.11",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["19.4.12",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["19.4.13",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["19.4.14",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["19.4.15",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["19.4.2",{"_index":2929,"title":{},"body":{"changelog.html":{}}}],["19.4.3",{"_index":2925,"title":{},"body":{"changelog.html":{}}}],["19.4.4",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["19.4.5",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["19.4.6",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["19.4.7",{"_index":2902,"title":{},"body":{"changelog.html":{}}}],["19.4.8",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["19.4.9",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["19.5.0",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["19.5.1",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["19.5.3",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["19.5.4",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["194199c",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["195",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["1989419",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["199",{"_index":989,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["1996",{"_index":5127,"title":{},"body":{"license.html":{}}}],["19bf065",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["1a30a33",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["1a33b93",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["1a65661",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["1a92061",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["1c4c67e",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["1c7fa4e",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["1c876b6",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["1c9fedf",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["1d0b823",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["1de2a3c",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["1e340e1",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["1e4fd87",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["1e660c9",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["1e96bc3",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["1ebb626",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["1ffd91e",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":43,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["2.8.1",{"_index":4899,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":999,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["20.0.0",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["20.1.0",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["20.1.1",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["20.1.2",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["20.1.3",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["20.1.4",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["20.2.1",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["20.2.2",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["20.2.3",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["20.2.4",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["20.2.5",{"_index":5259,"title":{},"body":{"properties.html":{}}}],["200",{"_index":2333,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["20050dc",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["20110c3",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["2011e46",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":2960,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":260,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["206",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["207",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["208",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["20cf16a",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["20d1b8b",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["20rem",{"_index":2199,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["21",{"_index":2932,"title":{},"body":{"changelog.html":{}}}],["2119d47",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["220",{"_index":2490,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["220c7f4",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["221781e",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["223",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["228ee85",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["22afab3",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["22da5c7",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["22ec300",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["23061dd",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["2346f13",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["235",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["2389739",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2444,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["240",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["241",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["242",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["2427749",{"_index":4196,"title":{},"body":{"changelog.html":{}}}],["2434ec6",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["24e4c9a",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2307,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["250",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["2500235",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["250d7f9",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["251",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":998,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["256",{"_index":257,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["26",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["261",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["264",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["2708806",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["272",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["275e54d",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["27acba5",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["27fdc57",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["28465d6",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["28548eb",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["286",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["287",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["287138c",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["288",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["289",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["289ec3d",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["28cff25",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["292ed5a",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["29878bc",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["29f1cbe",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["29f2b37",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["2a4184c",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["2a427ed",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["2a99961",{"_index":4174,"title":{},"body":{"changelog.html":{}}}],["2ab7cc1",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["2b942c4",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["2bb0e78",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["2bb5430",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["2bcfefb",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["2bdc500",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["2bfabd0",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["2c0f612",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["2ce3664",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["2d68f3b",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["2db5dc7",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["2e2cf66",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["2e5b003",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["2eb6cae",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["2f0d555",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["2f592f3",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["2f67e34",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":45,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.0.2",{"_index":4898,"title":{},"body":{"dependencies.html":{}}}],["3.0.4",{"_index":4897,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":4889,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4894,"title":{},"body":{"dependencies.html":{}}}],["3.9.17",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["3.9.19",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":2309,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["300",{"_index":1031,"title":{},"body":{"injectables/GamepadService.html":{}}}],["3000",{"_index":451,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["301",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["305aec6",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["308b3e5",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["308bd9f",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["30_000",{"_index":1256,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["30fec73",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["30fps",{"_index":4345,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["310",{"_index":448,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["312",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["314f02a",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":254,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["3233ed1",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["32570e0",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["32768",{"_index":5285,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["32_768",{"_index":264,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["32c3f4d",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["32e3ad6",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["331bb8f",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["337a109",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["338",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["339af30",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["339bd87",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["339d07b",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["33bb6c8",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["33d73d9",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":2311,"title":{},"body":{"injectables/ThemeService.html":{}}}],["358",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["3597f8b",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["35a78e4",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["360px",{"_index":1194,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["362",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["362d9db",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["368",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["369",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["372",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["3773370",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["3797092",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["37f76dc",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["37fa04d",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["381",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["389407a",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["38d27f1",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["390",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["392b41d",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["395",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["397399b",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["3a67934408152a2fc3f7216c022ec1df",{"_index":1324,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["3a9067b",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["3acc7bf",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["3bccffb",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["3ccea4c",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["3ce805f",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["3d1f63c",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["3e58c71",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["3e7b9a4",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["3e8e5d0",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["3f2c562",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["3f449ec",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["3f668a5",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["3f73f6e",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["3fbfb97",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["3ff6d19",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":47,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["4(a",{"_index":5117,"title":{},"body":{"license.html":{}}}],["4.0.3",{"_index":4895,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":3667,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["4.1.1",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["4.4",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["40",{"_index":2313,"title":{},"body":{"injectables/ThemeService.html":{}}}],["401",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["402",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["4035819",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["403737f",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["4040b59",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["409",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["4096",{"_index":261,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["40cc765",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":5258,"title":{},"body":{"overview.html":{}}}],["411",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["4164d59",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["418b524",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["419",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["41e632f",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["422fc8e",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["423",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["424242",{"_index":2537,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["42a58d9",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["42f56c1",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["431",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["431a9ad",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["43463ab",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["438",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["43a40a4",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["43d9b1f",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["440hz",{"_index":667,"title":{},"body":{"interfaces/Chainable.html":{}}}],["448",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["450",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["455",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["457",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["460",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["465",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["466",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["467",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["468",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["4695772",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["469a890",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["46c60ce",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["46e627b",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["473",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["4781958",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["47842e1",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["478c88a",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["47b6776",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["47e3527",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["483",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["49a76e8",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["49b1735",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["49d8293",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["4a42a18",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["4a4b1c4",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["4a66bde",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["4bdbceb",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["4c16c1e",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["4c272db",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["4c8c0ad",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["4c8f851",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["4d47689",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["4d9ca69",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["4dbf4b8",{"_index":2895,"title":{},"body":{"changelog.html":{}}}],["4df45ed",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["4e27dea",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["4e72fcd",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["4e9a327",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["4eac2a7",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["4ec2e90",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["4ef0700",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["4f1794f",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["4f70846",{"_index":3253,"title":{},"body":{"changelog.html":{}}}],["4f91524",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["4feefcd",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":49,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":986,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["500",{"_index":724,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["5059439",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["505e77f",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["5061051",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["50b7005",{"_index":4088,"title":{},"body":{"changelog.html":{}}}],["50dbff9",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["5101ea6",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["511",{"_index":2912,"title":{},"body":{"changelog.html":{}}}],["51154fe",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":258,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["512x512",{"_index":1919,"title":{},"body":{"injectables/PlayerService.html":{}}}],["51304c2",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["51a51dd",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["51e219a",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["521e049",{"_index":4180,"title":{},"body":{"changelog.html":{}}}],["522",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["5273759",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["529",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["52afb10",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["52bf10d",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["52d642b",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["5302fb4",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["532",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["5321e86",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["53749c8",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["53818e8",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["539",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["53a8631",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["540",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["540fdd8",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["5467c6f",{"_index":4283,"title":{},"body":{"changelog.html":{}}}],["549bfa1",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["55e56b8",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["55f3319",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["569161e",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["56a3899",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["572a9f8",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["5742e12",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["57f591d",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["58",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["580c58d",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["5824006",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["586ef29",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["58fb13b",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["592ac3b",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["592cb7a",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["597ee4f",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["59f1df2",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["59f4ac4",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["5a61397",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["5a7054c",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["5a92c07",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["5aecee8",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["5aed853",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["5af2ad7",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["5bab2a7",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["5c1346d",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["5cbeb5b",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["5cec62d",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["5e77b33",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["5ed4032",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["5f1d097",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["5fe0756",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["5ffbd62",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["5sec.mp3",{"_index":668,"title":{},"body":{"interfaces/Chainable.html":{}}}],["6",{"_index":51,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["6.3.0",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["6.3.1",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["6.4.0",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["6.4.1",{"_index":4471,"title":{},"body":{"changelog.html":{}}}],["6.5.0",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["6.5.1",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["6.5.2",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["6.5.3",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["6.5.4",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["6.5.5",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["6.5.6",{"_index":4446,"title":{},"body":{"changelog.html":{}}}],["6.5.7",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["6.5.8",{"_index":4440,"title":{},"body":{"changelog.html":{}}}],["6.5.9",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["6.6.0",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["6.6.1",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["6.6.2",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["6.6.4",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["6.6.5",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["6.6.6",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["6.6.7",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["6.7.0",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["6.7.1",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["6.7.2",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["6.7.3",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["6.7.4",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["60",{"_index":446,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":449,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["6000",{"_index":452,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["600f7e6",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["60d5b05",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["60dbedc",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["61721ca",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["61eb69b",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["620afb8",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["62c64c5",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["62cfee7",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["62f7474",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["635e855",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["63600c3",{"_index":4217,"title":{},"body":{"changelog.html":{}}}],["63f69d0",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":255,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["646c494",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["64a34dc",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["64d30e1",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["654bac2",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["667c54e",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["667f875",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["669facb",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["670b3af",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["6756668",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["6782ecd",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["678aef6",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["67a17ee",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["681d4cd",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["6841a21",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["6878f22",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["68d9939",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["68e8dc6",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["6926167",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["6966d17",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["69ed6f4",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["6a6ec18",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["6a8d3be",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["6aed158",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["6b0ec83",{"_index":4310,"title":{},"body":{"changelog.html":{}}}],["6b2d8b8",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["6b5e613",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["6b9ff38",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["6bc0773",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["6bd60c5",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["6bf609d",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["6bfb6ba",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["6c219df",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["6c27523",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["6c63788",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["6c6f88c",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["6cab435",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["6cd086c",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["6cee32d",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["6d26668",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["6d2a8fe",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["6d52ad4",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["6d67484",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["6d6f310",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["6ee2324",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["6f12a37",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["6f1cdb4",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["6f6ac17",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["6fc1434",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["6fdfa5a",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":983,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["7",{"_index":53,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["7.0.0",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["7.0.2",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["7.0.3",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["7.0.4",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["7.0.5",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["7.0.6",{"_index":4351,"title":{},"body":{"changelog.html":{}}}],["7.1.0",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["7.1.1",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["7.2.0",{"_index":4338,"title":{},"body":{"changelog.html":{}}}],["7.8.2",{"_index":4896,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2317,"title":{},"body":{"injectables/ThemeService.html":{}}}],["707a0cb",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["70990de",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["71bd586",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["71e1d6c",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":2102,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["72075fe",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["722901c",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["72575f6",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["726da93",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["72be3d3",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["72dafd7",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["72fa061",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["73",{"_index":2467,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["73050ff",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["7362da7",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["73b9b59",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["73bd100",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["73ed2ca",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["7440340",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["7445539",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["7445cc4",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["7484f35",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["748a302",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["7493e98",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["74e7c83",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["7522583",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["7528cd4",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["752aa76",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["7553170",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["7560dfa",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["756dc90",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["7593825",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["75fc12c",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["764711a",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["76ace70",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["77091b9",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["774ffed",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["7762874",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["77707fb",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["7785053",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["77c544b",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["78fcf7a",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["79c83aa",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["79d861d",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["79fee74",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["7a1bbe5",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["7a66d5a",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["7a6f294",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["7a838a9",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["7a8645a",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["7b38580",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["7b491de",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["7b8cdeb",{"_index":2937,"title":{},"body":{"changelog.html":{}}}],["7bebf2d",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["7c00473",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["7c5bbe5",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["7ccbc95",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["7cf10f9",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["7d3846a",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["7d9d809",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["7def043",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["7defe9b",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["7e45969",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["7f1e3c1",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["7f8ad27",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["7f90220",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["7fb56e0",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["7fcd244",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":55,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["8.0.0",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["8.0.1",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["8.1.0",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["8.1.1",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["8.1.10",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["8.1.2",{"_index":4318,"title":{},"body":{"changelog.html":{}}}],["8.1.3",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["8.1.4",{"_index":4311,"title":{},"body":{"changelog.html":{}}}],["8.1.5",{"_index":4305,"title":{},"body":{"changelog.html":{}}}],["8.1.6",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["8.1.7",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["8.1.8",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["8.1.9",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["80",{"_index":2319,"title":{},"body":{"injectables/ThemeService.html":{}}}],["800",{"_index":5351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["800fdae",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["801cd46",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["80553e8",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["80b42ce",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["80d5e14",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["8192",{"_index":262,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["81bb449",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["822ff08",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["8264f64",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["8268a8b",{"_index":4223,"title":{},"body":{"changelog.html":{}}}],["826cbe5",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["828148a",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["8337321",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["834f706",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["8377116",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["839a546",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["8448134",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["845189d",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["84a2466",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["84ac04c",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["84e91e3",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["8515368",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["858ff56",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["8596088",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["85d2a14",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["85eb0ba",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["8626722",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["864d7e1",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["866de3e",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["869dddb",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["86a18bb",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["86a63af",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["86bda79",{"_index":4160,"title":{},"body":{"changelog.html":{}}}],["86be7eb",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["870e50b",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["8738efc",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["87adc2c",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["892689d",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["8a371a0",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["8aabc76",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["8b184a4",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["8b6bfeb",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["8b9fdf5",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["8c297a1",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["8c47814",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["8c56320",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["8c75c5f",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["8c90a58",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["8c9c5c3",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["8cab1e2",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["8d072f1",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["8d3ed72",{"_index":4281,"title":{},"body":{"changelog.html":{}}}],["8d47dd4",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["8d5f783",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["8d61f2e",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["8da74bb",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["8df3910",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["8dfc611",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["8e2ff5a",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["8e36da3",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["8e7ecec",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["8ebff84",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["8ec046f",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["8ee0628",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["8f60273",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":57,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["9.0.0",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["9.0.1",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["9.0.10",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["9.0.11",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["9.0.2",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["9.0.3",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["9.0.4",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["9.0.5",{"_index":4262,"title":{},"body":{"changelog.html":{}}}],["9.0.6",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["9.0.7",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["9.0.8",{"_index":4252,"title":{},"body":{"changelog.html":{}}}],["9.0.9",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["9.1.0",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["9.1.1",{"_index":4233,"title":{},"body":{"changelog.html":{}}}],["9.1.2",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["9.1.3",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":4200,"title":{},"body":{"changelog.html":{}}}],["9.2.2",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["9.2.3",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["9.2.4",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":2321,"title":{},"body":{"injectables/ThemeService.html":{}}}],["901f502",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["908f395",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["90df676",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["90e9f96",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["91d4a54",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["9280e3a",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["92d89c3",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["930dc28",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["934d323",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["939f6b8",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["9458a12",{"_index":4250,"title":{},"body":{"changelog.html":{}}}],["949055a",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["94b7001",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":2323,"title":{},"body":{"injectables/ThemeService.html":{}}}],["953bf76",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["95902bb",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["96/9/ec",{"_index":5123,"title":{},"body":{"license.html":{}}}],["965f5d8",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["96bcdfc",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["96dbdf6",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["972b1ee",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["9767a1a",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["9767ad0",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["97ccbb6",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["97d68d0",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["98",{"_index":2325,"title":{},"body":{"injectables/ThemeService.html":{}}}],["986dd30",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["98a793b",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":2327,"title":{},"body":{"injectables/ThemeService.html":{}}}],["9934470",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["998ad7c",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["9b0ad09",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["9b11a20",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["9c56a21",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["9ce5e31",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["9d2ef7e",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["9d81efd",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["9dfd762",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["9e95c2d",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["9eb089c",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["9fa1a37",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["9fb4192",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["_audiocontext",{"_index":484,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audioelement",{"_index":482,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_audiosourcenode",{"_index":486,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_connectedanalyzers",{"_index":493,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_eqgainnode",{"_index":490,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_frequencyfilters",{"_index":491,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_gainnode",{"_index":488,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_hasended",{"_index":497,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["_internalanalyzer",{"_index":2541,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["_pause",{"_index":1148,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["a.album",{"_index":188,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.artist",{"_index":185,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":174,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.title",{"_index":207,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a.track",{"_index":192,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["a00ccd1",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["a04aa39",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["a0517fe",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["a0aa269",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["a0c15a4",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["a0e7ce7",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["a10893b",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["a11eb42",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["a12f9c3",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["a19a09f",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["a1a074f",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["a1da736",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["a280f97",{"_index":2952,"title":{},"body":{"changelog.html":{}}}],["a2a4811",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["a2b1db1",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["a358906",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["a3ae7df",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["a409033",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["a40c9e8",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["a457b9c",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["a4b6dab",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["a4de6d4",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["a552ea9",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["a555517",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["a5849e4",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["a6386d2",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["a7cf166",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["a7f82ab",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["a8073a9",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["a84cb97",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["a867afe",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["a8bb04b",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["a90639a",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["a948ad5",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["a9a8e68",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["a9a9c0b",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["a_button",{"_index":38,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ab311db",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["ab5a0f8",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["ab89f63",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["ab98677",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["abandoned",{"_index":5222,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":5153,"title":{},"body":{"license.html":{}}}],["abbrechen",{"_index":2132,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["abc0b07",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["abccf03",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":5352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absence",{"_index":5234,"title":{},"body":{"license.html":{}}}],["abstacted",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":1002,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["ac.index",{"_index":1105,"title":{},"body":{"injectables/GamepadService.html":{}}}],["ac02523",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["ac62dde",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["accent",{"_index":985,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["accentcolor",{"_index":2274,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accentcolorpalette",{"_index":2247,"title":{},"body":{"injectables/ThemeService.html":{}}}],["accepts",{"_index":856,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["access",{"_index":2558,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["accessors",{"_index":402,"title":{},"body":{"injectables/AudioService.html":{},"components/HotkeysHelpDialogComponent.html":{},"directives/VisualsDirective.html":{}}}],["account",{"_index":5195,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":5237,"title":{},"body":{"license.html":{}}}],["achse",{"_index":1069,"title":{},"body":{"injectables/GamepadService.html":{}}}],["acknowledges",{"_index":5253,"title":{},"body":{"license.html":{}}}],["action",{"_index":29,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"license.html":{}}}],["action(details",{"_index":1473,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["actioncache",{"_index":1,"title":{"interfaces/ActionCache.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["actionfunction",{"_index":14,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["actions/cache",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["actions/checkout",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["actions/setup",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["actions/upload",{"_index":2853,"title":{},"body":{"changelog.html":{}}}],["activated",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["activatewakelock",{"_index":2653,"title":{},"body":{"injectables/WakelockService.html":{}}}],["activeaxescaches",{"_index":1036,"title":{},"body":{"injectables/GamepadService.html":{}}}],["actual_component",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["ad57b9c",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["ad6497d",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["ad7e0f1",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["ada5e83",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["ada6807",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["adapt",{"_index":5093,"title":{},"body":{"license.html":{}}}],["add",{"_index":556,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["addalbumtoplaylist",{"_index":1378,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addalbumtoplaylist(album",{"_index":232,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["added",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["addeventlistener('gamepadconnected",{"_index":1041,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addeventlistener('gamepaddisconnected",{"_index":1044,"title":{},"body":{"injectables/GamepadService.html":{}}}],["addfilestoplaylist",{"_index":1803,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(...filedatas",{"_index":1929,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfilestoplaylist(filedatas",{"_index":1812,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addition",{"_index":5196,"title":{},"body":{"license.html":{}}}],["additional",{"_index":5070,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"license.html":{}}}],["adds",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["addtrackstoplaylist",{"_index":1379,"title":{},"body":{"components/LibraryComponent.html":{}}}],["addtrackstoplaylist(...dbtracks",{"_index":239,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["addtracktoplaylist",{"_index":1380,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["addtracktoplaylist(song",{"_index":1815,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addtracktoplaylist(track",{"_index":237,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["adjust",{"_index":4966,"title":{},"body":{"index.html":{}}}],["advertising",{"_index":5167,"title":{},"body":{"license.html":{}}}],["ae202ad",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["ae93b7a",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["aefd739",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["af0ef42",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["af2926f",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["af8a6b4",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["affected",{"_index":5197,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":5075,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":5155,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":5212,"title":{},"body":{"license.html":{}}}],["afterpausedorstopped",{"_index":1905,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterplayloaded",{"_index":1903,"title":{},"body":{"injectables/PlayerService.html":{}}}],["afterviewinit",{"_index":917,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["again",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":5111,"title":{},"body":{"license.html":{}}}],["agents",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["aiff",{"_index":896,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":77,"title":{"interfaces/Album.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["album.coverurl",{"_index":1398,"title":{},"body":{"components/LibraryComponent.html":{}}}],["album.name",{"_index":235,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumcompare",{"_index":187,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap",{"_index":165,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.has(albumname",{"_index":169,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.set(albumname",{"_index":170,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albummap.values()].sort((a",{"_index":172,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albumname",{"_index":167,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["albums",{"_index":164,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["aliases",{"_index":5280,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":990,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["allex/crc32",{"_index":1500,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["allowed_extensions",{"_index":904,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes",{"_index":826,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["allowed_mimetypes.includes(file.type",{"_index":852,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{}}}],["allowed_mimetypes.join",{"_index":1368,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["allowed_types",{"_index":1654,"title":{},"body":{"components/PlayerComponent.html":{}}}],["allowedcommonjsdeps",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["allowedtypes",{"_index":923,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["alpha",{"_index":275,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["alpha.40",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["amended",{"_index":5133,"title":{},"body":{"license.html":{}}}],["analyser",{"_index":412,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["analyser.disconnect",{"_index":578,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["analyserconfig",{"_index":248,"title":{"interfaces/AnalyserConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["analyserdata",{"_index":283,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["analysernode",{"_index":408,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["analysers",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["analyservalue",{"_index":2586,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["analyze",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["analyzer",{"_index":2637,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["and/or",{"_index":5028,"title":{},"body":{"license.html":{}}}],["android",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["angular",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["angular.json",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["angular/animations",{"_index":4886,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4203,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/cdk/layout",{"_index":2160,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/cdk/scrolling",{"_index":116,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["angular/common",{"_index":118,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":707,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interceptors/LoaderInterceptor.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["angular/compiler",{"_index":4887,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":88,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":1863,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["angular/forms",{"_index":2036,"title":{},"body":{"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4208,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":112,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/card",{"_index":1631,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["angular/material/checkbox",{"_index":2343,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["angular/material/core",{"_index":2480,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/dialog",{"_index":1132,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["angular/material/form",{"_index":2037,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/icon",{"_index":110,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/input",{"_index":2035,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["angular/material/list",{"_index":99,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/menu",{"_index":106,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{}}}],["angular/material/progress",{"_index":2033,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/select",{"_index":2481,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["angular/material/sidenav",{"_index":2162,"title":{},"body":{"components/ShellComponent.html":{}}}],["angular/material/slide",{"_index":1627,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["angular/material/slider",{"_index":886,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/material/toolbar",{"_index":1707,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["angular/material/tooltip",{"_index":1706,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["angular/platform",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":123,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2363,"title":{},"body":{"injectables/UpdateService.html":{},"dependencies.html":{}}}],["angularmaterial",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["angulartitleservice",{"_index":2352,"title":{},"body":{"injectables/TitleService.html":{}}}],["animationframeref",{"_index":2543,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["api",{"_index":859,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["api_key",{"_index":1339,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["api_url",{"_index":732,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["apis",{"_index":4958,"title":{},"body":{"index.html":{}}}],["app",{"_index":584,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{}}}],["app.component.html",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":294,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["appconfig",{"_index":5290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["append",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["applicable",{"_index":5140,"title":{},"body":{"license.html":{}}}],["application",{"_index":2220,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["applicationconfig",{"_index":5327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":5207,"title":{},"body":{"license.html":{}}}],["apply",{"_index":5079,"title":{},"body":{"license.html":{}}}],["apps",{"_index":4967,"title":{},"body":{"index.html":{}}}],["apps/.../app.config.ts",{"_index":5291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":5312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":5321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../audio.service.ts",{"_index":5304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../default",{"_index":5301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":5299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":5300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file",{"_index":4914,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../gamepad.service.factory.ts",{"_index":4919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../gamepad.types.ts",{"_index":4902,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../hotkeys.service.factory.ts",{"_index":4926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../lastfm",{"_index":5283,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../media",{"_index":4932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.helper.ts",{"_index":4909,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.service.ts",{"_index":4911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../metadata.worker.ts",{"_index":4912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../native",{"_index":4922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.po.ts",{"_index":5309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../player.service.ts",{"_index":4924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../player.types.ts",{"_index":5282,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../settings.po.ts",{"_index":5307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.directive.ts",{"_index":5303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../visuals.types.ts",{"_index":5281,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../visuals.worker.ts",{"_index":4904,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../wakelock.service.factory.ts",{"_index":4936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/cypress/support/app.po.ts",{"_index":5378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/commands.ts",{"_index":633,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/commands.ts:16",{"_index":635,"title":{},"body":{"interfaces/Chainable.html":{}}}],["apps/gblaster/cypress/support/player.po.ts",{"_index":5371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/cypress/support/settings.po.ts",{"_index":5367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.component.ts",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.component.ts:14",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/gblaster/src/app/app.config.ts",{"_index":5326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/app.routes.ts",{"_index":5385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts",{"_index":378,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:136",{"_index":420,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:143",{"_index":409,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:151",{"_index":405,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:158",{"_index":430,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:164",{"_index":418,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:172",{"_index":417,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:178",{"_index":439,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:186",{"_index":435,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:191",{"_index":423,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:199",{"_index":415,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:203",{"_index":433,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:211",{"_index":438,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:219",{"_index":428,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:26",{"_index":458,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:27",{"_index":462,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:28",{"_index":461,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:29",{"_index":463,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:30",{"_index":459,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:31",{"_index":443,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:32",{"_index":444,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:33",{"_index":468,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:34",{"_index":441,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:35",{"_index":465,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:37",{"_index":456,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:43",{"_index":470,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:45",{"_index":404,"title":{},"body":{"injectables/AudioService.html":{}}}],["apps/gblaster/src/app/player/audio.service.ts:8",{"_index":890,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["apps/gblaster/src/app/player/cover",{"_index":626,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts",{"_index":612,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/band.pipe.ts:10",{"_index":619,"title":{},"body":{"pipes/BandPipe.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts",{"_index":872,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14",{"_index":882,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16",{"_index":883,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18",{"_index":880,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["apps/gblaster/src/app/player/file",{"_index":820,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts",{"_index":78,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:132",{"_index":1390,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:138",{"_index":1389,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:143",{"_index":1391,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:149",{"_index":1388,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:156",{"_index":1385,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:161",{"_index":1387,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:165",{"_index":1386,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:48",{"_index":1393,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:49",{"_index":1392,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:50",{"_index":1394,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:52",{"_index":1397,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:60",{"_index":1396,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/library/library.component.ts:86",{"_index":1395,"title":{},"body":{"components/LibraryComponent.html":{}}}],["apps/gblaster/src/app/player/metadata",{"_index":700,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/player.component.ts",{"_index":1646,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:108",{"_index":1679,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:113",{"_index":1694,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:115",{"_index":1681,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:121",{"_index":1685,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:125",{"_index":1687,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:129",{"_index":1689,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:133",{"_index":1675,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:137",{"_index":1671,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:141",{"_index":1683,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:145",{"_index":1678,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:156",{"_index":1697,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:158",{"_index":1690,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:162",{"_index":1691,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:166",{"_index":1673,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:170",{"_index":1688,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:175",{"_index":1676,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:45",{"_index":1695,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:50",{"_index":1692,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.component.ts:52",{"_index":1669,"title":{},"body":{"components/PlayerComponent.html":{}}}],["apps/gblaster/src/app/player/player.service.ts",{"_index":1797,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:109",{"_index":1818,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:114",{"_index":1816,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:120",{"_index":1813,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:153",{"_index":1834,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:159",{"_index":1850,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:163",{"_index":1848,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:171",{"_index":1832,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:175",{"_index":1822,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:187",{"_index":1820,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:203",{"_index":1835,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:212",{"_index":1819,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:233",{"_index":1823,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:251",{"_index":1829,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:269",{"_index":1830,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:27",{"_index":1843,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:286",{"_index":1825,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:29",{"_index":1853,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:290",{"_index":1828,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:304",{"_index":1836,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:31",{"_index":1842,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:323",{"_index":1837,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:33",{"_index":1852,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:34",{"_index":1855,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:36",{"_index":1841,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.service.ts:41",{"_index":1811,"title":{},"body":{"injectables/PlayerService.html":{}}}],["apps/gblaster/src/app/player/player.types.ts",{"_index":683,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts",{"_index":1989,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:158",{"_index":2005,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:164",{"_index":2007,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:170",{"_index":2009,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:175",{"_index":2011,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:42",{"_index":2023,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:43",{"_index":2012,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:44",{"_index":2028,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:47",{"_index":2026,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:49",{"_index":2022,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:61",{"_index":2025,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/playlist/playlist.component.ts:63",{"_index":2003,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts",{"_index":2345,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/time.pipe.ts:10",{"_index":2346,"title":{},"body":{"pipes/TimePipe.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts",{"_index":2398,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101",{"_index":2429,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107",{"_index":2423,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114",{"_index":2427,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121",{"_index":2425,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128",{"_index":2433,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135",{"_index":2431,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26",{"_index":2458,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29",{"_index":2442,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30",{"_index":2471,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31",{"_index":2477,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32",{"_index":2465,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34",{"_index":2476,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35",{"_index":2468,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36",{"_index":2440,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37",{"_index":2445,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38",{"_index":2460,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39",{"_index":2454,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40",{"_index":2462,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41",{"_index":2452,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42",{"_index":2464,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44",{"_index":2419,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62",{"_index":2473,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66",{"_index":2457,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70",{"_index":2450,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74",{"_index":2470,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78",{"_index":2437,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86",{"_index":2435,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94",{"_index":2421,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts",{"_index":2518,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105",{"_index":2526,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126",{"_index":2528,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15",{"_index":2532,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17",{"_index":2529,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188",{"_index":2524,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19",{"_index":2533,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21",{"_index":2530,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23",{"_index":2523,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33",{"_index":2522,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93",{"_index":2535,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts",{"_index":2641,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11",{"_index":2646,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13",{"_index":2644,"title":{},"body":{"injectables/VisualsService.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts",{"_index":249,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts",{"_index":4941,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts",{"_index":4951,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts",{"_index":1008,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108",{"_index":1027,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121",{"_index":1020,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125",{"_index":1024,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145",{"_index":1017,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15",{"_index":1028,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16",{"_index":1015,"title":{},"body":{"injectables/GamepadService.html":{}}}],["apps/gblaster/src/app/services/gamepad/gamepad.types.ts",{"_index":6,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys",{"_index":1201,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts",{"_index":4953,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts",{"_index":1125,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100",{"_index":1239,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104",{"_index":1240,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26",{"_index":1243,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30",{"_index":1246,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32",{"_index":1245,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34",{"_index":1244,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36",{"_index":1242,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38",{"_index":1236,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48",{"_index":1238,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85",{"_index":1241,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96",{"_index":1237,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts",{"_index":1406,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.interceptor.ts:11",{"_index":1412,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts",{"_index":1423,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:11",{"_index":1427,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:18",{"_index":1426,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/loader/loader.service.ts:7",{"_index":1428,"title":{},"body":{"injectables/LoaderService.html":{}}}],["apps/gblaster/src/app/services/media",{"_index":1435,"title":{},"body":{"injectables/MediaSessionService.html":{},"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/title.service.ts",{"_index":2347,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:10",{"_index":2351,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/title.service.ts:12",{"_index":2350,"title":{},"body":{"injectables/TitleService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.factory.ts",{"_index":4954,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts",{"_index":2651,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:11",{"_index":2656,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:28",{"_index":2657,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/services/wakelock.service.ts:7",{"_index":2655,"title":{},"body":{"injectables/WakelockService.html":{}}}],["apps/gblaster/src/app/settings/metadata",{"_index":1604,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/settings.component.ts",{"_index":2133,"title":{},"body":{"components/SettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/storage",{"_index":2243,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["apps/gblaster/src/app/settings/theme",{"_index":2337,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts",{"_index":2138,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:24",{"_index":2157,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:25",{"_index":2154,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:35",{"_index":2153,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:37",{"_index":2156,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/shell/shell.component.ts:39",{"_index":2149,"title":{},"body":{"components/ShellComponent.html":{}}}],["apps/gblaster/src/app/theme/default",{"_index":5366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts",{"_index":2246,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:20",{"_index":2264,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:22",{"_index":2265,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:23",{"_index":2259,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:25",{"_index":2253,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:31",{"_index":2258,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.service.ts:37",{"_index":2255,"title":{},"body":{"injectables/ThemeService.html":{}}}],["apps/gblaster/src/app/theme/theme.types.ts",{"_index":679,"title":{},"body":{"interfaces/Color.html":{}}}],["apps/gblaster/src/app/update.service.ts",{"_index":2356,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:14",{"_index":2358,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:45",{"_index":2360,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/app/update.service.ts:52",{"_index":2359,"title":{},"body":{"injectables/UpdateService.html":{}}}],["apps/gblaster/src/environments/environment.prod.ts",{"_index":5364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/gblaster/src/environments/environment.ts",{"_index":5365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["april",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["arguments_",{"_index":618,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["arising",{"_index":5122,"title":{},"body":{"license.html":{}}}],["arrays",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["art",{"_index":1534,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["artifact",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["artist",{"_index":152,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["artist:${luceneescapequery.escape(artist",{"_index":747,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["artistcompare",{"_index":184,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["artists",{"_index":182,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["artwork",{"_index":1914,"title":{},"body":{"injectables/PlayerService.html":{}}}],["askuserforupdate",{"_index":2357,"title":{},"body":{"injectables/UpdateService.html":{}}}],["assert",{"_index":5214,"title":{},"body":{"license.html":{}}}],["assets/icons/record.svg",{"_index":1514,"title":{},"body":{"injectables/MetadataService.html":{}}}],["associated",{"_index":5156,"title":{},"body":{"license.html":{}}}],["associating",{"_index":5074,"title":{},"body":{"license.html":{}}}],["async",{"_index":209,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"injectables/WakelockService.html":{}}}],["atrack",{"_index":191,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["attorney",{"_index":4994,"title":{},"body":{"license.html":{}}}],["audio",{"_index":480,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["audio.service",{"_index":884,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["audio/flac",{"_index":900,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":893,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mp4",{"_index":902,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":894,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":897,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/opus",{"_index":903,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vnd.wav",{"_index":899,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/vorbis",{"_index":898,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/wav",{"_index":901,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audio/x",{"_index":895,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":485,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audiocontext.creategain",{"_index":524,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiocontext.createmediaelementsource(audioelement",{"_index":522,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement",{"_index":500,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["audioelement.autoplay",{"_index":506,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.controls",{"_index":507,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.id",{"_index":502,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.loop",{"_index":501,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.preload",{"_index":510,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.style.display",{"_index":504,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioelement.volume",{"_index":508,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audioservice",{"_index":376,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["audioservice.isplaying",{"_index":1790,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["audiosource",{"_index":521,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audiosource.connect(eqgain",{"_index":530,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["audit",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["auf",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":5263,"title":{},"body":{"properties.html":{}}}],["author(s",{"_index":5100,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":5027,"title":{},"body":{"license.html":{}}}],["auto",{"_index":511,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["autofix",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["autofixes",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["autoincrement",{"_index":5362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":5015,"title":{},"body":{"license.html":{}}}],["autoscroll",{"_index":2057,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["available",{"_index":178,"title":{},"body":{"interfaces/Album.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["availablebuffers.length",{"_index":2623,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.push(event.data.reusablebuffer",{"_index":2614,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["availablebuffers.shift",{"_index":2624,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["avatar",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1274,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/PlayerService.html":{}}}],["await",{"_index":213,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"injectables/WakelockService.html":{}}}],["away",{"_index":2096,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["axis",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["axis.valueof",{"_index":1112,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.mode",{"_index":1117,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisaction.timeout",{"_index":1116,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisactions",{"_index":1009,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache",{"_index":1115,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axiscache.lastactionexecution",{"_index":1118,"title":{},"body":{"injectables/GamepadService.html":{}}}],["axisdirection",{"_index":23,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["axisgamepadaction",{"_index":24,"title":{"interfaces/AxisGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["axisindex",{"_index":1018,"title":{},"body":{"injectables/GamepadService.html":{}}}],["b",{"_index":173,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["b.track",{"_index":197,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["b04ce8b",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["b0d0fe4",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["b20fd36",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["b241b46",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["b286be9",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["b2b5088",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["b2dcbb8",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["b2ed530",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["b3905a0",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["b416bff",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["b4d909a",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["b599685",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["b5dfb18",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["b5f68a1",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["b65204b",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["b6729e6",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["b6bd950",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["b708169",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["b7303ed",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["b73ce66",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["b7bb801",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["b7be438",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["b7e8f76",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["b80e2ea",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["b820bf4",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["b8ad144",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["b925747",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["b9445d4",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["b99bf0c",{"_index":4277,"title":{},"body":{"changelog.html":{}}}],["b_button",{"_index":40,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["ba13cfe",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["ba2a28a",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["ba634aa",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["babdb9f",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":205,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"directives/VisualsDirective.html":{}}}],["background",{"_index":996,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["backgroundcolor",{"_index":789,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["badges",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["band",{"_index":475,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"index.html":{}}}],["band.pipe",{"_index":885,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bandfrequency",{"_index":416,"title":{},"body":{"injectables/AudioService.html":{}}}],["bandgains",{"_index":607,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandgains[bandfrequency",{"_index":609,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bandpipe",{"_index":611,"title":{"pipes/BandPipe.html":{}},"body":{"pipes/BandPipe.html":{},"components/EqualizerComponent.html":{}}}],["bands",{"_index":877,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["bar",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["barcount",{"_index":266,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["bark",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["barkscalebandenergy",{"_index":5292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bars",{"_index":289,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["barsconfig",{"_index":2403,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["barsvisualizeroptions",{"_index":288,"title":{"interfaces/BarsVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["barwidth",{"_index":5293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base64",{"_index":666,"title":{},"body":{"interfaces/Chainable.html":{}}}],["based",{"_index":5139,"title":{},"body":{"license.html":{}}}],["basegain",{"_index":379,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["basesubscribingclass",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["basevisualizeroptions",{"_index":285,"title":{"interfaces/BaseVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["basis",{"_index":4999,"title":{},"body":{"license.html":{}}}],["bb34f11",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["bb4a1a8",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["bb4ded8",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["bb4e0ce",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["bb8466d",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["bba9cb0",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["bbda480",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["bc4e4dc",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["bcbcbc",{"_index":2538,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["bd0ddc3",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["bd67275",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["bda90a4",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["be025cd",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["be57fa9",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["be90110",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["bef3e3e",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":2088,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["below",{"_index":5020,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":5169,"title":{},"body":{"license.html":{}}}],["berarbeiten",{"_index":1885,"title":{},"body":{"injectables/PlayerService.html":{}}}],["bereits",{"_index":1087,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["better",{"_index":2608,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["bf7b3a9",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["bfd28ec",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["bfd4685",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["bffc736",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["bigger",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["biquadfilternode",{"_index":492,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["bitrate",{"_index":628,"title":{},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"changelog.html":{}}}],["bitrate.pipe",{"_index":802,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["bitratepipe",{"_index":625,"title":{"pipes/BitratePipe.html":{}},"body":{"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{}}}],["blob([meta.embeddedpicture.data",{"_index":1573,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([metadatacache.embeddedpicture.data",{"_index":1530,"title":{},"body":{"injectables/MetadataService.html":{}}}],["blob([tags.picture.data",{"_index":1553,"title":{},"body":{"injectables/MetadataService.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{}}}],["booleanattribute",{"_index":2216,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["bootstrap",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["border",{"_index":982,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["both",{"_index":199,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["bottom",{"_index":2043,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["box",{"_index":980,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["branch",{"_index":4216,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":1972,"title":{},"body":{"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["breakpointobserver",{"_index":2158,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints",{"_index":2159,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.large",{"_index":2170,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.medium",{"_index":2169,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.small",{"_index":2168,"title":{},"body":{"components/ShellComponent.html":{}}}],["breakpoints.xlarge",{"_index":2171,"title":{},"body":{"components/ShellComponent.html":{}}}],["browser",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["browserlist",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["btrack",{"_index":196,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["buffer",{"_index":2605,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["buffer.buffer",{"_index":2630,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bufferlength",{"_index":287,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["bufferpool",{"_index":2610,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffers",{"_index":2607,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["buffersize",{"_index":2604,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["bugs",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3056,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["buildapiurl(method",{"_index":1333,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["builds",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["bundles",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1085,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{}}}],["button.pressed",{"_index":1098,"title":{},"body":{"injectables/GamepadService.html":{}}}],["button.value",{"_index":1100,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttonactions",{"_index":1010,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache",{"_index":1103,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttoncache.lastactionexecution",{"_index":1108,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttongamepadaction",{"_index":28,"title":{"interfaces/ButtonGamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["buttonindex",{"_index":1021,"title":{},"body":{"injectables/GamepadService.html":{}}}],["buttontext",{"_index":2127,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["buttontooltip",{"_index":2185,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["buttonvalue",{"_index":15,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["c",{"_index":5242,"title":{},"body":{"license.html":{}}}],["c.islight",{"_index":2336,"title":{},"body":{"injectables/ThemeService.html":{}}}],["c042ae8",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["c08196a",{"_index":4259,"title":{},"body":{"changelog.html":{}}}],["c0c9413",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["c0d5ae4",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["c20efb2",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["c2c0b8f",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["c3062ed",{"_index":2933,"title":{},"body":{"changelog.html":{}}}],["c31aaa6",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["c3208e7",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["c339811",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["c35bc38",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["c363f4e",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["c398655",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["c3bb2d1",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["c3d7490",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["c4668f1",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["c51af5f",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["c550911",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["c64cd79",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["c6dff5e",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["c73a2ce",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["c78b2bf",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["c82e02b",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["c86decf",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["c9dcf09",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["ca80a43",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["ca87d69",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["cace929",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":1102,"title":{},"body":{"injectables/GamepadService.html":{},"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["cache.filter((ac",{"_index":1110,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.find((ac",{"_index":1104,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cache.push",{"_index":1109,"title":{},"body":{"injectables/GamepadService.html":{}}}],["cacheable",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["caching",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["calculate",{"_index":2085,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["calculating",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":580,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["callback",{"_index":1126,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{}}}],["called",{"_index":1432,"title":{},"body":{"injectables/LoaderService.html":{}}}],["cancel",{"_index":2122,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["cancelanimationframe(this.animationframeref",{"_index":2633,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["cancellation",{"_index":5178,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":277,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["canvasgradient",{"_index":5324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvasheight",{"_index":5294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvaswidth",{"_index":5295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cap",{"_index":2516,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["capfalldown",{"_index":269,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capheight",{"_index":267,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["capypositionarray",{"_index":5296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":5369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":1796,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"license.html":{}}}],["casesensitive",{"_index":5338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catastrophic",{"_index":1302,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["catch",{"_index":216,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/WakelockService.html":{}}}],["causes",{"_index":5157,"title":{},"body":{"license.html":{}}}],["cb01a92",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["cb19d50",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["cb797bc",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["cbab637",{"_index":4279,"title":{},"body":{"changelog.html":{}}}],["cbc6e41",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["cbef1c8",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["cc0",{"_index":4987,"title":{},"body":{"license.html":{}}}],["ccbf388",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["cd2a934",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["cd5831f",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["cd620b6",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["cdb5380",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["cdf04e9",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":113,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualforof",{"_index":114,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":115,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["ce588f9",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["ce621ee",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["cea2824",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["cefa1f1",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":992,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["certain",{"_index":5030,"title":{},"body":{"license.html":{}}}],["cf00688",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["cf13446",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["chainable",{"_index":632,"title":{"interfaces/Chainable.html":{}},"body":{"interfaces/Chainable.html":{}}}],["change",{"_index":2061,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["changed",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["changedarkmode",{"_index":2339,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedarkmode(event",{"_index":2340,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["changedetection",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["changelog",{"_index":2670,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":2056,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["check",{"_index":855,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["checkforbuttonclicked(gamepad",{"_index":1095,"title":{},"body":{"injectables/GamepadService.html":{}}}],["checkintervals",{"_index":1034,"title":{},"body":{"injectables/GamepadService.html":{}}}],["child",{"_index":669,"title":{},"body":{"interfaces/Chainable.html":{}}}],["child(${link",{"_index":5381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chore",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["chore(config",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["chore(deps",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["chromaprint",{"_index":4136,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":4962,"title":{},"body":{"index.html":{}}}],["ci",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["circular",{"_index":290,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["claims",{"_index":5043,"title":{},"body":{"license.html":{}}}],["class",{"_index":131,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"overview.html":{}}}],["class.closed",{"_index":2196,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["class.opened",{"_index":2197,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["classes",{"_index":1000,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["cleanup",{"_index":582,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["clear",{"_index":1640,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["clearing",{"_index":5244,"title":{},"body":{"license.html":{}}}],["clearinterval(interval",{"_index":1123,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearinterval(this.checkintervals[event.gamepad.index",{"_index":1075,"title":{},"body":{"injectables/GamepadService.html":{}}}],["clearmetadatacache",{"_index":1610,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["clearsettingscache",{"_index":2244,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["cleartimeout(timeoutid",{"_index":1286,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["cli",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":33,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":4995,"title":{},"body":{"license.html":{}}}],["close",{"_index":1214,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlaylistComponent.html":{}}}],["closed",{"_index":2186,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closeonnavigation",{"_index":2395,"title":{},"body":{"injectables/UpdateService.html":{}}}],["closepanel",{"_index":2188,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["closing",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["clr",{"_index":2286,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.hex",{"_index":2290,"title":{},"body":{"injectables/ThemeService.html":{}}}],["clr.name",{"_index":2289,"title":{},"body":{"injectables/ThemeService.html":{}}}],["code",{"_index":2221,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["color",{"_index":678,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"index.html":{}}}],["color.getbrightness",{"_index":2335,"title":{},"body":{"injectables/ThemeService.html":{}}}],["color.tohexstring(false",{"_index":2334,"title":{},"body":{"injectables/ThemeService.html":{}}}],["colorconfig",{"_index":682,"title":{"interfaces/ColorConfig.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["colorconfig?.alpha",{"_index":2594,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.maincolor",{"_index":2592,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorconfig?.peakcolor",{"_index":2593,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["colorful",{"_index":5260,"title":{},"body":{"properties.html":{}}}],["colors",{"_index":2256,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["colors.ts",{"_index":5302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":2225,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["command",{"_index":657,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands",{"_index":644,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commands.js",{"_index":640,"title":{},"body":{"interfaces/Chainable.html":{}}}],["commercial",{"_index":5056,"title":{},"body":{"license.html":{}}}],["committen",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["commons",{"_index":4985,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":5095,"title":{},"body":{"license.html":{}}}],["compare",{"_index":181,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["comparison",{"_index":206,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["compatibility",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["compensation",{"_index":5072,"title":{},"body":{"license.html":{}}}],["competition",{"_index":5113,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2063,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["compodoc",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":83,"title":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["component_template",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["components",{"_index":295,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["components/dialogs",{"_index":2364,"title":{},"body":{"injectables/UpdateService.html":{}}}],["components/dialogs/src/lib/prompt",{"_index":2120,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["components/file",{"_index":913,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlayerComponent.html":{}}}],["components/slide",{"_index":2178,"title":{},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["comprehensive",{"_index":648,"title":{},"body":{"interfaces/Chainable.html":{}}}],["compressed",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["computecolors(hex",{"_index":2301,"title":{},"body":{"injectables/ThemeService.html":{}}}],["computed",{"_index":84,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["concerning",{"_index":5228,"title":{},"body":{"license.html":{}}}],["confer",{"_index":5016,"title":{},"body":{"license.html":{}}}],["config",{"_index":2393,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["config).afterclosed",{"_index":2397,"title":{},"body":{"injectables/UpdateService.html":{}}}],["configuration",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":529,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["connected",{"_index":1053,"title":{},"body":{"injectables/GamepadService.html":{}}}],["connectionlistener(event",{"_index":1046,"title":{},"body":{"injectables/GamepadService.html":{}}}],["consents",{"_index":5248,"title":{},"body":{"license.html":{}}}],["consideration",{"_index":5071,"title":{},"body":{"license.html":{}}}],["consistency",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["console",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["console.error('error",{"_index":218,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('file",{"_index":246,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["console.error('worker",{"_index":1299,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["console.error(error",{"_index":550,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["console.log('button",{"_index":1064,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('handling",{"_index":1893,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.log('negativ",{"_index":1070,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log('no",{"_index":844,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["console.log('positiv",{"_index":1068,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`axis",{"_index":1081,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`button",{"_index":1077,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`current",{"_index":2375,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`downloading",{"_index":2371,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`failed",{"_index":2383,"title":{},"body":{"injectables/UpdateService.html":{}}}],["console.log(`gamepad",{"_index":1072,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.log(`new",{"_index":1051,"title":{},"body":{"injectables/GamepadService.html":{},"injectables/UpdateService.html":{}}}],["console.log(`page",{"_index":2553,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["console.log(gamepad",{"_index":1054,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.time('full",{"_index":1937,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.time('hash",{"_index":1515,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('id3tags",{"_index":1536,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('vibrant",{"_index":1549,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.time('webcover",{"_index":1541,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('full",{"_index":1939,"title":{},"body":{"injectables/PlayerService.html":{}}}],["console.timeend('hash",{"_index":1517,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('id3tags",{"_index":1538,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('vibrant",{"_index":1551,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.timeend('webcover",{"_index":1544,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('diesem",{"_index":1084,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('dieser",{"_index":1092,"title":{},"body":{"injectables/GamepadService.html":{}}}],["console.warn('failed",{"_index":743,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn('loaderservice",{"_index":1431,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.warn('missing",{"_index":1545,"title":{},"body":{"injectables/MetadataService.html":{}}}],["console.warn('no",{"_index":769,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["console.warn(`${error.name",{"_index":2665,"title":{},"body":{"injectables/WakelockService.html":{}}}],["console.warn(`hotkey",{"_index":1158,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["console.warn(`the",{"_index":1468,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["const",{"_index":146,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{}}}],["constructor",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["contemplated",{"_index":5184,"title":{},"body":{"license.html":{}}}],["content",{"_index":994,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/ThemeService.html":{}}}],["context",{"_index":517,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":1933,"title":{},"body":{"injectables/PlayerService.html":{}}}],["contrary",{"_index":5216,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":5146,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":5057,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":5036,"title":{},"body":{"license.html":{}}}],["control",{"_index":2232,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["controls",{"_index":4970,"title":{},"body":{"index.html":{}}}],["converter",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["converttobarkscale",{"_index":4903,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copies",{"_index":5166,"title":{},"body":{"license.html":{}}}],["copy",{"_index":967,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["copyright",{"_index":5018,"title":{},"body":{"license.html":{}}}],["core",{"_index":479,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["corporation",{"_index":4990,"title":{},"body":{"license.html":{}}}],["correct",{"_index":2573,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["corresponding",{"_index":5138,"title":{},"body":{"license.html":{}}}],["council",{"_index":5126,"title":{},"body":{"license.html":{}}}],["count",{"_index":723,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["cover",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cover_api_url",{"_index":734,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverart",{"_index":1638,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["coverartimage",{"_index":699,"title":{"interfaces/CoverArtImage.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverartresponse",{"_index":727,"title":{"interfaces/CoverArtResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverbackground",{"_index":790,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["covercolor",{"_index":770,"title":{"interfaces/CoverColor.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["covercolorpalette",{"_index":687,"title":{"interfaces/CoverColorPalette.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors",{"_index":696,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["covercolors?.darkvibrant?.hex",{"_index":1839,"title":{},"body":{"injectables/PlayerService.html":{}}}],["covercolors?.lightvibrant?.hex",{"_index":1840,"title":{},"body":{"injectables/PlayerService.html":{}}}],["coverdata",{"_index":759,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdata.images.find((image",{"_index":761,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverdisplay",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["coverdisplaycomponent",{"_index":340,"title":{"components/CoverDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["coverimage",{"_index":760,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["coverimage.thumbnails.small",{"_index":765,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["covers",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["coverurl",{"_index":79,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["coverurls",{"_index":1539,"title":{},"body":{"injectables/MetadataService.html":{}}}],["coverurls?.original",{"_index":1548,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc",{"_index":692,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/variables.html":{}}}],["crc32",{"_index":1499,"title":{},"body":{"injectables/MetadataService.html":{}}}],["crc32(hashstring",{"_index":1586,"title":{},"body":{"injectables/MetadataService.html":{}}}],["create",{"_index":499,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["createdefaultaxisaction(axisindex",{"_index":1067,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createdefaultbuttonaction(buttonindex",{"_index":1063,"title":{},"body":{"injectables/GamepadService.html":{}}}],["createobjecturlforembeddedpicture(meta",{"_index":1566,"title":{},"body":{"injectables/MetadataService.html":{}}}],["createtrackfromfile(filedata",{"_index":1936,"title":{},"body":{"injectables/PlayerService.html":{}}}],["creative",{"_index":4984,"title":{},"body":{"license.html":{}}}],["creator",{"_index":5022,"title":{},"body":{"license.html":{}}}],["crossing",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["css",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["cultural",{"_index":5037,"title":{},"body":{"license.html":{}}}],["culture",{"_index":5061,"title":{},"body":{"license.html":{}}}],["current",{"_index":2065,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["currentanalyser",{"_index":2569,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentbarsconfig",{"_index":2563,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentcolorconfig",{"_index":2567,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentfolderhandle",{"_index":832,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["currentindex",{"_index":2089,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currently",{"_index":2238,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["currentlyloadedtrack",{"_index":1798,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentmode",{"_index":2561,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentoscconfig",{"_index":2565,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["currentplaylist",{"_index":1799,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["currentposition",{"_index":1959,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currenttime",{"_index":380,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["currenttrack",{"_index":803,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlaylistComponent.html":{}}}],["currenttrack.metadata?.crc",{"_index":2079,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["currenttrack?.file?.name",{"_index":805,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.album",{"_index":807,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.artist",{"_index":806,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.bitrate",{"_index":814,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.codec",{"_index":813,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.container",{"_index":812,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.duration",{"_index":810,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.format?.samplerate",{"_index":815,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.title",{"_index":804,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["currenttrack?.metadata?.year",{"_index":808,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["custom",{"_index":643,"title":{},"body":{"interfaces/Chainable.html":{},"changelog.html":{}}}],["cy.get('#hidden_file_input').attachfile",{"_index":662,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cy.get('#load_files",{"_index":5373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#sidenav_menu_button",{"_index":5383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_button",{"_index":5376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('#volume_slider",{"_index":5377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.playlist",{"_index":5374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('.title",{"_index":5384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mat",{"_index":5368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get('mtb",{"_index":5372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.get(`:nth",{"_index":5380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cy.log('loading",{"_index":659,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress",{"_index":513,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["cypress.commands.add(\"dismiss",{"_index":674,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add(\"drag",{"_index":670,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.add('loadfiles",{"_index":658,"title":{},"body":{"interfaces/Chainable.html":{}}}],["cypress.commands.overwrite(\"visit",{"_index":675,"title":{},"body":{"interfaces/Chainable.html":{}}}],["d",{"_index":5251,"title":{},"body":{"license.html":{}}}],["d0b8d34",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["d0cd94f",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["d1b4f51",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["d200e57",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["d254989",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["d2765b8",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["d29b113",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["d2e1df8",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["d2f46f8",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["d3",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["d38c534",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["d3bca3a",{"_index":4238,"title":{},"body":{"changelog.html":{}}}],["d489b64",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["d4abfdc",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["d505863",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["d50fcd7",{"_index":2928,"title":{},"body":{"changelog.html":{}}}],["d516e97",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["d562368",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["d597302",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["d5cd7ea",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["d612735",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["d6210df",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["d629a20",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["d641392",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["d64a3c3",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["d690072",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["d78443f",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["d7b3ea2",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["d895f0f",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["d8a2bf9",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["d8bf0e7",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["d954540",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["d9677d0",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":5007,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2299,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{}}}],["dark)').matches",{"_index":2263,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkcontrast",{"_index":680,"title":{},"body":{"interfaces/Color.html":{},"injectables/ThemeService.html":{}}}],["darkmode",{"_index":2248,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkmuted",{"_index":776,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["darkvibrant",{"_index":775,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["das",{"_index":2390,"title":{},"body":{"injectables/UpdateService.html":{}}}],["dashed",{"_index":984,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["data",{"_index":140,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["data.album.image",{"_index":1344,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["data.text",{"_index":2131,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data.title",{"_index":2130,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["data['release",{"_index":752,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["database",{"_index":5029,"title":{},"body":{"license.html":{}}}],["databaseconfig",{"_index":5297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databases",{"_index":5129,"title":{},"body":{"license.html":{}}}],["date",{"_index":720,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{},"license.html":{}}}],["dateien",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["dates",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["db",{"_index":92,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["db2122c",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["db48fe2",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["dbb788d",{"_index":4307,"title":{},"body":{"changelog.html":{}}}],["dbc354f",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["dbconfig",{"_index":5357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbtrack",{"_index":240,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle",{"_index":244,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtrack.filehandle?.getfile",{"_index":242,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dbtracks",{"_index":241,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["dc41223",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["dc45fe1",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["dc55360",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["dd93cb1",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["ddab2f3",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["de5bda9",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["december",{"_index":2959,"title":{},"body":{"changelog.html":{}}}],["declare",{"_index":654,"title":{},"body":{"interfaces/Chainable.html":{}}}],["decorator",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":2213,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["decreasevolume",{"_index":1657,"title":{},"body":{"components/PlayerComponent.html":{}}}],["decreasevolume(value",{"_index":1670,"title":{},"body":{"components/PlayerComponent.html":{}}}],["deemed",{"_index":5205,"title":{},"body":{"license.html":{}}}],["default",{"_index":21,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_deadspace",{"_index":1032,"title":{},"body":{"injectables/GamepadService.html":{}}}],["default_turbo_timeout",{"_index":1030,"title":{},"body":{"injectables/GamepadService.html":{}}}],["defaults",{"_index":1143,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["defects",{"_index":5236,"title":{},"body":{"license.html":{}}}],["defined",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["definiert",{"_index":1233,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["delay",{"_index":2068,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["dep",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":2560,"title":{"dependencies.html":{}},"body":{"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["depicted",{"_index":5108,"title":{},"body":{"license.html":{}}}],["deploy",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":2894,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["deregisteraxisaction",{"_index":1011,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisteraxisaction(axisindex",{"_index":1016,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction",{"_index":1012,"title":{},"body":{"injectables/GamepadService.html":{}}}],["deregisterbuttonaction(buttonindex",{"_index":1019,"title":{},"body":{"injectables/GamepadService.html":{}}}],["description",{"_index":1127,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{},"changelog.html":{},"properties.html":{}}}],["desktop",{"_index":4975,"title":{},"body":{"index.html":{}}}],["destroref",{"_index":1867,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["destroyed",{"_index":1310,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["destroyref",{"_index":1856,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["details",{"_index":1445,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["details.fastseek",{"_index":1968,"title":{},"body":{"injectables/PlayerService.html":{}}}],["details.seektime",{"_index":1967,"title":{},"body":{"injectables/PlayerService.html":{}}}],["detection",{"_index":2062,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["determine",{"_index":2087,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["detriment",{"_index":5171,"title":{},"body":{"license.html":{}}}],["dev",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["devcontainer.json",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":1141,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["dialog'},{'name",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["dialog.component",{"_index":1136,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialog.component.html",{"_index":1209,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.scss",{"_index":1208,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1202,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialog.component.ts:17",{"_index":2124,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":2125,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1218,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1217,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1220,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":2123,"title":{},"body":{"components/PromptDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1216,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["dialog/prompt",{"_index":2121,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogref",{"_index":1147,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["dialogreference",{"_index":1191,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogreference.afterclosed().subscribe",{"_index":1198,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dialogs",{"_index":5400,"title":{"additional-documentation/ui-components-dialogs.html":{}},"body":{"additional-documentation/ui-components-dialogs.html":{}}}],["didn't",{"_index":870,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["diesen",{"_index":1152,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["dir",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":336,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["directives",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["directories",{"_index":858,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["directory",{"_index":1789,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["dirhandle",{"_index":4952,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dirhandle.values",{"_index":849,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry",{"_index":819,"title":{"interfaces/DirHandleEntry.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["dirhandleentry).topromise",{"_index":843,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["disable",{"_index":1984,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["disableclose",{"_index":2394,"title":{},"body":{"injectables/UpdateService.html":{}}}],["disabled",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["disabletooltipinteractivity",{"_index":5353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimers",{"_index":5217,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":5005,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2635,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["disconnectallanalyzers",{"_index":390,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["disconnectanalysernode",{"_index":391,"title":{},"body":{"injectables/AudioService.html":{}}}],["disconnectanalysernode(analyser",{"_index":407,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["disconnected",{"_index":1073,"title":{},"body":{"injectables/GamepadService.html":{}}}],["disconnectionlistener(event",{"_index":1071,"title":{},"body":{"injectables/GamepadService.html":{}}}],["discoverable",{"_index":5240,"title":{},"body":{"license.html":{}}}],["display",{"_index":784,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["display'},{'name",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["display.component",{"_index":1709,"title":{},"body":{"components/PlayerComponent.html":{}}}],["display.component.html",{"_index":787,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.scss",{"_index":788,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts",{"_index":783,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:18",{"_index":799,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:20",{"_index":797,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display.component.ts:22",{"_index":795,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["display/bitrate.pipe.ts",{"_index":627,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/bitrate.pipe.ts:8",{"_index":629,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["display/cover",{"_index":782,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["displayed",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["displayfunction",{"_index":878,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["displayfunction(value",{"_index":879,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["dispose",{"_index":1173,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["disrupt",{"_index":5181,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":5119,"title":{},"body":{"license.html":{}}}],["distance",{"_index":2086,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["distribute",{"_index":5081,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4993,"title":{},"body":{"license.html":{}}}],["document",{"_index":1129,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{},"license.html":{}}}],["document.body.append(audioelement",{"_index":515,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["document.body.append(this.fileinput",{"_index":1370,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.createelement('input",{"_index":1362,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["document.documentelement.style.setproperty",{"_index":2287,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.location.reload",{"_index":2381,"title":{},"body":{"injectables/UpdateService.html":{}}}],["documented",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["domrect",{"_index":280,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["domsanitizer",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["dotenv",{"_index":2898,"title":{},"body":{"changelog.html":{}}}],["double",{"_index":854,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["doubleclick",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["download",{"_index":1637,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["dpad_down",{"_index":64,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_left",{"_index":66,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_right",{"_index":68,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpad_up",{"_index":62,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["dpi",{"_index":2574,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drag",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["dragend",{"_index":959,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragendlistener",{"_index":946,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenter",{"_index":951,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragenterlistener",{"_index":943,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragevent",{"_index":928,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleave",{"_index":956,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragleavelistener",{"_index":945,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragover",{"_index":954,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dragoverlistener",{"_index":944,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["draw",{"_index":2615,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["drawbars",{"_index":4905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularbars",{"_index":4906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawcircularosc",{"_index":4907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drawosc",{"_index":4908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["drop",{"_index":346,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["drop(event",{"_index":927,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["droplistener",{"_index":947,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["dual",{"_index":673,"title":{},"body":{"interfaces/Chainable.html":{}}}],["dummy",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["duplicate",{"_index":1934,"title":{},"body":{"injectables/PlayerService.html":{}}}],["duplicates",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["duration",{"_index":381,"title":{},"body":{"injectables/AudioService.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{},"license.html":{}}}],["durationseconds",{"_index":1800,"title":{},"body":{"injectables/PlayerService.html":{}}}],["durchgeführt",{"_index":2391,"title":{},"body":{"injectables/UpdateService.html":{}}}],["duty",{"_index":5255,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":4888,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1167,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.g",{"_index":2235,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["e.preventdefault",{"_index":1169,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e.stoppropagation",{"_index":1170,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["e102482",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["e11e3bd",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["e218808",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["e252172",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["e2a0794",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["e2e1eb4",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["e336db1",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["e34b732",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["e36192c",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["e42b61f",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["e486f52",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["e4b565b",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["e4d8e7c",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["e4ec6c1",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["e5de213",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["e615145",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["e6660e2",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["e6d7fd2",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["e6fc6eb",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["e7032e1",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["e727ac0",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["e7aa58d",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["e7c9ada",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["e844d5d",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["e933c61",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["e96ef56",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["e992cb4",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["e99d4f2",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["ea1fc76",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["ea63800",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["ea688e0",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["ea932ef",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["eaa27a6",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["eab1d35",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["eac8dd6",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":2104,"title":{},"body":{"components/PlaylistComponent.html":{},"license.html":{}}}],["eaeb47a",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["eaf46cf",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["eaf70a8",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["eb5338b",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["ebab8da",{"_index":4312,"title":{},"body":{"changelog.html":{}}}],["ec067ee",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["ec1f94a",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["eccaa4a",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["ecf45e6",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["ed57248",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["ee83304",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["ee8b31b",{"_index":3004,"title":{},"body":{"changelog.html":{}}}],["ef11066",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["ef22e4a",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["ef650c5",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["efc9aad",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["eff95d0",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1455,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"directives/VisualsDirective.html":{},"license.html":{}}}],["effective",{"_index":5206,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":5066,"title":{},"body":{"license.html":{}}}],["eine",{"_index":1088,"title":{},"body":{"injectables/GamepadService.html":{}}}],["electron",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["elects",{"_index":5078,"title":{},"body":{"license.html":{}}}],["element",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["elementref",{"_index":937,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"directives/VisualsDirective.html":{}}}],["elements",{"_index":481,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["elementscrolled",{"_index":2046,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["elr",{"_index":2546,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["elr.nativeelement",{"_index":2549,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["embedded",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["embeddedpicture",{"_index":695,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["empty",{"_index":1229,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"injectables/PlayerService.html":{}}}],["enable",{"_index":2040,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["enabled",{"_index":2058,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["encodeuricomponent(album",{"_index":1332,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encodeuricomponent(artist",{"_index":1331,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["encoding",{"_index":665,"title":{},"body":{"interfaces/Chainable.html":{}}}],["endings",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["enhance",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["enjoyment",{"_index":5183,"title":{},"body":{"license.html":{}}}],["enough",{"_index":2620,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["ensure",{"_index":2069,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ensurehttps",{"_index":715,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["ensurehttps(coverimage.image",{"_index":768,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails.large",{"_index":767,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(coverimage.thumbnails['500",{"_index":764,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ensurehttps(images[1]['#text",{"_index":1346,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(images[5]['#text",{"_index":1347,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["ensurehttps(url",{"_index":4947,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entfernt",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["entries",{"_index":1935,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["entries[0].contentrect",{"_index":2584,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["entry",{"_index":834,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["entry.getfile",{"_index":851,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.handle",{"_index":839,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["entry.kind",{"_index":850,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["enumerations",{"_index":4901,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":5298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.production",{"_index":5333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":534,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{}}}],["eqgain",{"_index":525,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.connect(eqinput",{"_index":531,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqgain.gain.value",{"_index":541,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqinput",{"_index":526,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput",{"_index":527,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["eqoutput.connect(gain",{"_index":532,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equalizer",{"_index":873,"title":{},"body":{"components/EqualizerComponent.html":{},"components/ShellComponent.html":{},"index.html":{}}}],["equalizer'},{'name",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizer.component.html",{"_index":875,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizer.component.scss",{"_index":876,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["equalizercomponent",{"_index":343,"title":{"components/EqualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["equalizergainvalues",{"_index":382,"title":{"interfaces/EqualizerGainValues.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["equitable",{"_index":5180,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":5137,"title":{},"body":{"license.html":{}}}],["error",{"_index":217,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/WakelockService.html":{}}}],["error('metadata",{"_index":1271,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error('service",{"_index":1309,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(error",{"_index":1295,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error(event.message",{"_index":1304,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["error.message",{"_index":2666,"title":{},"body":{"injectables/WakelockService.html":{}}}],["errorevent",{"_index":1298,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["errors",{"_index":5239,"title":{},"body":{"license.html":{}}}],["erst",{"_index":1569,"title":{},"body":{"injectables/MetadataService.html":{}}}],["erweitert",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["es",{"_index":1230,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{},"changelog.html":{}}}],["esbuild",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["escape",{"_index":710,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["eslint",{"_index":1983,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"additional-documentation/helpers.html":{}}}],["eslint/utils",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["eslintrc",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["establish",{"_index":2559,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["european",{"_index":5124,"title":{},"body":{"license.html":{}}}],["event",{"_index":557,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["event.currentversion.hash",{"_index":2376,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.data",{"_index":1292,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["event.data.bufferready",{"_index":2611,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.data.reusablebuffer",{"_index":2612,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["event.datatransfer.dropeffect",{"_index":966,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.datatransfer?.files",{"_index":965,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.error",{"_index":2385,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.gamepad.index",{"_index":1052,"title":{},"body":{"injectables/GamepadService.html":{}}}],["event.latestversion.hash",{"_index":2378,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.preventdefault",{"_index":963,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["event.stoppropagation",{"_index":964,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["event.type",{"_index":2369,"title":{},"body":{"injectables/UpdateService.html":{}}}],["event.version.hash",{"_index":2373,"title":{},"body":{"injectables/UpdateService.html":{}}}],["eventcoalescing",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["eventmanager",{"_index":1133,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["events",{"_index":583,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{}}}],["example",{"_index":639,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["examples",{"_index":649,"title":{},"body":{"interfaces/Chainable.html":{}}}],["exclusions",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["exclusive",{"_index":5017,"title":{},"body":{"license.html":{}}}],["execute",{"_index":5399,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["executor",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["exercise",{"_index":5204,"title":{},"body":{"license.html":{}}}],["existing",{"_index":646,"title":{},"body":{"interfaces/Chainable.html":{},"license.html":{}}}],["exists",{"_index":2638,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["exit",{"_index":585,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["expect",{"_index":1889,"title":{},"body":{"injectables/PlayerService.html":{}}}],["expectation",{"_index":5069,"title":{},"body":{"license.html":{}}}],["expected",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":5266,"title":{},"body":{"todo.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["express",{"_index":5185,"title":{},"body":{"license.html":{}}}],["expression",{"_index":2234,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["extensions",{"_index":4834,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["extent",{"_index":5076,"title":{},"body":{"license.html":{}}}],["extractcolorswithnodevibrant",{"_index":4910,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extractcolorswithnodevibrant(coverurls.original",{"_index":1550,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(objecturl",{"_index":1555,"title":{},"body":{"injectables/MetadataService.html":{}}}],["extractcolorswithnodevibrant(url",{"_index":1590,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["extractcoverurls(data",{"_index":1343,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["extraction",{"_index":1281,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["extracts",{"_index":4965,"title":{},"body":{"index.html":{}}}],["extracttags",{"_index":1251,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["extracttags(file",{"_index":1253,"title":{},"body":{"injectables/Id3TagsService.html":{},"miscellaneous/functions.html":{}}}],["f038069",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["f0442a7",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["f06b116",{"_index":4219,"title":{},"body":{"changelog.html":{}}}],["f076ced",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["f0ae911",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["f0f7618",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["f12cad8",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["f154aed",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["f1580e8",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["f18fa1f",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["f1b02b7",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["f1cad4d",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["f1f709b",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["f201082",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["f209ddb",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["f24dcc7",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["f278040",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["f2cfbcc",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["f306ca1",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["f31886e",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["f3351c2",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["f34b7cf",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["f36895a",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["f386a36",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["f3a09c7",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["f3a3520",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["f3f4ae7",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["f3f93f6",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["f401a49",{"_index":4441,"title":{},"body":{"changelog.html":{}}}],["f4324a4",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["f4928f5",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["f4f50ef",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["f52095f",{"_index":2917,"title":{},"body":{"changelog.html":{}}}],["f54702d",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["f591692",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["f5c6154",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["f5ee0e6",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["f69d368",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["f78467f",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["f7913c1",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["f8b7451",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["f8cbc65",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["f908dd2",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["f954f07",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["f9c114e",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["f9c93ce",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["fall",{"_index":204,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["fallback",{"_index":5187,"title":{},"body":{"license.html":{}}}],["fallback_accent_color",{"_index":2269,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["fallback_primary_color",{"_index":2270,"title":{},"body":{"injectables/ThemeService.html":{},"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["falldown",{"_index":2517,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["false",{"_index":426,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":2095,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["fastseek",{"_index":422,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/PlayerService.html":{}}}],["fb05c12",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["fc633d2",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["fc998b4",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["fd18536",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["fd45c70",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["fdad632",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["fe15d24",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["fe4ebfa",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["fear",{"_index":5041,"title":{},"body":{"license.html":{}}}],["feat",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":4959,"title":{},"body":{"index.html":{}}}],["february",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["fee270f",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["fee5161",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["fefaba0",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["fetchalbuminfo(artist",{"_index":1329,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["fetchcoverart(releasegroupid",{"_index":756,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["ff778a5",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["ff7cdad",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["ffa9bb5",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["ffc8723",{"_index":4159,"title":{},"body":{"changelog.html":{}}}],["ffe5da9",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["ffnet",{"_index":1151,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["fft",{"_index":2513,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fft_options",{"_index":2404,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["fftsize",{"_index":250,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2038,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["file",{"_index":5,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["file.arraybuffer",{"_index":1589,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.lastmodified",{"_index":1585,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.name",{"_index":1582,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.size",{"_index":1584,"title":{},"body":{"injectables/MetadataService.html":{}}}],["file.type",{"_index":1583,"title":{},"body":{"injectables/MetadataService.html":{}}}],["filedata",{"_index":827,"title":{"interfaces/FileData.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"changelog.html":{}}}],["filedata.file",{"_index":1940,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filedata.filehandle",{"_index":1557,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/PlayerService.html":{}}}],["filedata.push",{"_index":860,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedata.push(...subfiles",{"_index":863,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["filedatas",{"_index":1814,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filedatas.values",{"_index":1931,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filedatas?.length",{"_index":1930,"title":{},"body":{"injectables/PlayerService.html":{}}}],["filedropoverlaycomponent",{"_index":345,"title":{"components/FileDropOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["filehandle",{"_index":243,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["filehandle.getfile",{"_index":1899,"title":{},"body":{"injectables/PlayerService.html":{}}}],["fileinput",{"_index":1358,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["filelist",{"_index":975,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["fileloaderservice",{"_index":829,"title":{"classes/FileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["fileloaderservice:11",{"_index":1357,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:18",{"_index":1645,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:20",{"_index":1642,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:27",{"_index":1354,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:29",{"_index":1355,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservice:30",{"_index":1644,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:40",{"_index":1643,"title":{},"body":{"injectables/NativeBrowserFileLoaderService.html":{}}}],["fileloaderservice:46",{"_index":1356,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["fileloaderservicefactory",{"_index":4913,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filepath",{"_index":663,"title":{},"body":{"interfaces/Chainable.html":{}}}],["files",{"_index":660,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/DirHandleEntry.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{}}}],["filesdroped",{"_index":924,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["filesystemdirectoryhandle",{"_index":825,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["filesystemfilehandle",{"_index":690,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/FileData.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["fill",{"_index":2625,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["filter",{"_index":537,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["filter((artist",{"_index":151,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filter((song",{"_index":2017,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["filter.gain.value",{"_index":539,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["filtered",{"_index":147,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.filter((item",{"_index":158,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filtered.sort((a",{"_index":180,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["filteredplaylist",{"_index":1996,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["filteredplaylist().length",{"_index":2112,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["filtering",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":1415,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["findreleasegroupid(artist",{"_index":745,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["finished",{"_index":2613,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["fireaxisaction(index",{"_index":1080,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firebase",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["firebuttonaction(index",{"_index":1076,"title":{},"body":{"injectables/GamepadService.html":{}}}],["firm",{"_index":4992,"title":{},"body":{"license.html":{}}}],["first",{"_index":183,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["firstvaluefrom",{"_index":100,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.dialog.open(promptdialogcomponent",{"_index":2396,"title":{},"body":{"injectables/UpdateService.html":{}}}],["firstvaluefrom(this.http.get(url",{"_index":751,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getall('metatags",{"_index":214,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbyid('dirhandle",{"_index":835,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["firstvaluefrom(this.indexeddbservice.getbykey('metatags",{"_index":1520,"title":{},"body":{"injectables/MetadataService.html":{}}}],["fitness",{"_index":5232,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["fix(deps",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["fix(eslint",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":979,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["flac",{"_index":906,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["flat",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":978,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"changelog.html":{}}}],["float32array",{"_index":4942,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":2233,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["fns",{"_index":4890,"title":{},"body":{"dependencies.html":{}}}],["folders",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":5091,"title":{},"body":{"license.html":{}}}],["font",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":5051,"title":{},"body":{"license.html":{}}}],["format",{"_index":694,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["formating",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["formatlabel",{"_index":1658,"title":{},"body":{"components/PlayerComponent.html":{}}}],["formatlabel(value",{"_index":1672,"title":{},"body":{"components/PlayerComponent.html":{}}}],["formats",{"_index":4961,"title":{},"body":{"index.html":{}}}],["formatsecondsasclock",{"_index":1698,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formatsecondsasclock(value",{"_index":1769,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":1993,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["found",{"_index":247,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["free",{"_index":5060,"title":{},"body":{"license.html":{}}}],["freely",{"_index":5049,"title":{},"body":{"license.html":{}}}],["frequency",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["frequency_bands",{"_index":474,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"miscellaneous/variables.html":{}}}],["frequencyband",{"_index":414,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"interfaces/ColorConfig.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["frequencybarsconfig",{"_index":265,"title":{"interfaces/FrequencyBarsConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["frequencytobarkmap",{"_index":5305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front",{"_index":702,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["full",{"_index":5389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen/multiwindow",{"_index":5277,"title":{},"body":{"todo.html":{}}}],["fully",{"_index":5149,"title":{},"body":{"license.html":{}}}],["function",{"_index":847,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/Hotkey.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":2887,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["funkt",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["further",{"_index":5062,"title":{},"body":{"license.html":{}}}],["future",{"_index":5161,"title":{},"body":{"license.html":{}}}],["für",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["gain",{"_index":523,"title":{},"body":{"injectables/AudioService.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"license.html":{}}}],["gain.connect(audiocontext.destination",{"_index":533,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gain.gain.value",{"_index":543,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainnode",{"_index":489,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gainvalue",{"_index":432,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gamepad",{"_index":1049,"title":{},"body":{"injectables/GamepadService.html":{},"changelog.html":{},"index.html":{}}}],["gamepad.buttons[buttonindex",{"_index":1096,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepad.types",{"_index":1029,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadaction",{"_index":17,"title":{"interfaces/GamepadAction.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{}}}],["gamepadaxes",{"_index":70,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadaxes.s1_x",{"_index":1735,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadaxes.s1_y",{"_index":1745,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadaxes.s2_y",{"_index":1736,"title":{},"body":{"components/PlayerComponent.html":{}}}],["gamepadbuttons",{"_index":37,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamepadevent",{"_index":1042,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads",{"_index":1047,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepads[event.gamepad.index",{"_index":1050,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gamepadservice",{"_index":1007,"title":{"injectables/GamepadService.html":{}},"body":{"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamepadservicefactory",{"_index":4918,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":268,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["gax",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["gblaster",{"_index":4955,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["gebraucht",{"_index":1572,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generated",{"_index":2677,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["generatefilehash",{"_index":4920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generatefilehash(file",{"_index":1576,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["generatefilehash(filedata.file",{"_index":1516,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generatefilehashmd5(file",{"_index":1587,"title":{},"body":{"injectables/MetadataService.html":{}}}],["generator.bitdroid.de/#section",{"_index":4980,"title":{},"body":{"index.html":{}}}],["generierte",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["getanalysernode",{"_index":2534,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getaudiofilesfromdirhandle",{"_index":4921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(dirhandle",{"_index":848,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["getaudiofilesfromdirhandle(entry",{"_index":862,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getaudiofilesfromdirhandle(this.currentfolderhandle",{"_index":846,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["getbytefrequencydata",{"_index":2602,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getbytetimedomaindata",{"_index":2603,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["getcardtitle",{"_index":5306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcolorobject(value",{"_index":2329,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getcoverdisplay",{"_index":5308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcoverpictureurls",{"_index":1348,"title":{},"body":{"injectables/LastfmMetadataService.html":{},"injectables/MusicbrainzService.html":{}}}],["getcoverpictureurls(tags",{"_index":736,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["getfiles",{"_index":1372,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["getfrequencybandgainsignal",{"_index":392,"title":{},"body":{"injectables/AudioService.html":{}}}],["getfrequencybandgainsignal(bandfrequency",{"_index":413,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["gethasended",{"_index":469,"title":{},"body":{"injectables/AudioService.html":{}}}],["gethotkeylist",{"_index":1219,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["getloadfilesbutton",{"_index":637,"title":{},"body":{"interfaces/Chainable.html":{},"miscellaneous/variables.html":{}}}],["getloadfilesbutton().click",{"_index":661,"title":{},"body":{"interfaces/Chainable.html":{}}}],["getmetadata",{"_index":1488,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getmetadata(filedata",{"_index":1489,"title":{},"body":{"injectables/MetadataService.html":{}}}],["getplaylistitems",{"_index":5310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrandomint",{"_index":4923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrandomint(0",{"_index":1956,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getrandomint(min",{"_index":1978,"title":{},"body":{"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["getsidenavlink",{"_index":5311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsidenavtogglebutton",{"_index":5313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":2668,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettoolbartitle",{"_index":5314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumebutton",{"_index":5315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getvolumeiconforlevel(vol",{"_index":1763,"title":{},"body":{"components/PlayerComponent.html":{}}}],["getvolumeslider",{"_index":5316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gh",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2572,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["globalthis",{"_index":1887,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.launchqueue.setconsumer(async",{"_index":1891,"title":{},"body":{"injectables/PlayerService.html":{}}}],["globalthis.matchmedia('(prefers",{"_index":2261,"title":{},"body":{"injectables/ThemeService.html":{}}}],["globalthis.setinterval",{"_index":1056,"title":{},"body":{"injectables/GamepadService.html":{}}}],["google",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["gp",{"_index":1058,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps",{"_index":1057,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gps[event.gamepad.index",{"_index":1059,"title":{},"body":{"injectables/GamepadService.html":{}}}],["gradient",{"_index":5317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":871,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["granted",{"_index":836,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["grants",{"_index":868,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["graph",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["greater",{"_index":5064,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5144,"title":{},"body":{"license.html":{}}}],["group/${releasegroupid",{"_index":758,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["group?query=${query}&limit=5&fmt=json",{"_index":750,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups",{"_index":722,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups']?.length",{"_index":753,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["groups'][0].id",{"_index":754,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["grpc/grpc",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["hack",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":824,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handle.requestpermission",{"_index":869,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["handledroppedfiles(droppedfiles",{"_index":974,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["handleerror",{"_index":1297,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handlemessage",{"_index":1290,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["handler",{"_index":1166,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["handles",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["hanging",{"_index":1275,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["hasbackdrop",{"_index":1195,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hasended",{"_index":403,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["hashing",{"_index":1579,"title":{},"body":{"injectables/MetadataService.html":{}}}],["hashstring",{"_index":1581,"title":{},"body":{"injectables/MetadataService.html":{}}}],["height",{"_index":2103,"title":{},"body":{"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["heirs",{"_index":5172,"title":{},"body":{"license.html":{}}}],["held",{"_index":5220,"title":{},"body":{"license.html":{}}}],["help",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["helpers",{"_index":5401,"title":{"additional-documentation/helpers.html":{}},"body":{"additional-documentation/helpers.html":{}}}],["helpopen",{"_index":1146,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["here",{"_index":652,"title":{},"body":{"interfaces/Chainable.html":{},"components/FileDropOverlayComponent.html":{}}}],["hereby",{"_index":5147,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":5004,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":5009,"title":{},"body":{"license.html":{}}}],["hex",{"_index":681,"title":{},"body":{"interfaces/Color.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{}}}],["hidden",{"_index":971,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hidden_file_input",{"_index":1365,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["hide",{"_index":1424,"title":{},"body":{"injectables/LoaderService.html":{}}}],["hilfe",{"_index":1153,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["history",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["hk",{"_index":1184,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hk.subscription.unsubscribe",{"_index":1186,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["hold",{"_index":34,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hooks",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["hopefully",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":976,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hostbinding",{"_index":2217,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class",{"_index":2231,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.closed",{"_index":2214,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('class.opened",{"_index":2215,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.bottom",{"_index":2227,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.height",{"_index":2230,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.top",{"_index":2228,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbinding('style.width",{"_index":2229,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostbindings",{"_index":2195,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["hostelement",{"_index":939,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["hosting",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["hotkey",{"_index":1124,"title":{"interfaces/Hotkey.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkey[0",{"_index":1222,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[0].length",{"_index":1225,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkey[1].description",{"_index":1228,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyinfo",{"_index":1137,"title":{"interfaces/HotkeyInfo.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["hotkeylist",{"_index":1212,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeys",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeys.service",{"_index":1205,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeysdata",{"_index":1200,"title":{"interfaces/HotkeysData.html":{}},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["hotkeyshelpdialogcomponent",{"_index":348,"title":{"components/HotkeysHelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["hotkeysservice",{"_index":1138,"title":{"injectables/HotkeysService.html":{}},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hotkeysservicefactory",{"_index":4925,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["htmlaudioelement",{"_index":483,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["htmlcanvaselement",{"_index":2542,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["htmlinputelement",{"_index":1359,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["http",{"_index":730,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["http_interceptors",{"_index":5354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":706,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["httpevent",{"_index":1413,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httphandler",{"_index":1411,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":1414,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["httprequest",{"_index":1409,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["https://android",{"_index":4979,"title":{},"body":{"index.html":{}}}],["https://coverartarchive.org",{"_index":735,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://github.com/motabass/gblaster",{"_index":5262,"title":{},"body":{"properties.html":{}}}],["https://musicbrainz.org/ws/2",{"_index":733,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["https://on.cypress.io/custom",{"_index":653,"title":{},"body":{"interfaces/Chainable.html":{}}}],["https://petershaggynoble.github.io/mdi",{"_index":4981,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/20917710/fast",{"_index":1580,"title":{},"body":{"injectables/MetadataService.html":{}}}],["https://ws.audioscrobbler.com/2.0",{"_index":1325,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["husky",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":3400,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["iconregistry",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgicon('logo",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["iconregistry.addsvgiconset(sanitizer.bypasssecuritytrustresourceurl('assets/icon",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":3762,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["id",{"_index":718,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"miscellaneous/variables.html":{}}}],["id3",{"_index":713,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3coverpicture",{"_index":684,"title":{"interfaces/Id3CoverPicture.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["id3tags",{"_index":712,"title":{"interfaces/Id3Tags.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{}}}],["id3tagsservice",{"_index":1249,"title":{"injectables/Id3TagsService.html":{}},"body":{"injectables/Id3TagsService.html":{},"injectables/MetadataService.html":{}}}],["ideal",{"_index":5059,"title":{},"body":{"license.html":{}}}],["iformat",{"_index":688,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ignore",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["ignores",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["ii",{"_index":5097,"title":{},"body":{"license.html":{}}}],["iii",{"_index":5102,"title":{},"body":{"license.html":{}}}],["image",{"_index":703,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"license.html":{}}}],["image.front",{"_index":762,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images",{"_index":728,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["images[5]?.['#text",{"_index":1345,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["iml",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":1758,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["implementation",{"_index":5131,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":5142,"title":{},"body":{"license.html":{}}}],["implements",{"_index":133,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["implied",{"_index":5229,"title":{},"body":{"license.html":{}}}],["import",{"_index":82,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["import('./player/equalizer/equalizer.component",{"_index":5393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/library/library.component",{"_index":5395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./player/player.component",{"_index":5391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./settings/settings.component",{"_index":5396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import.meta.url",{"_index":1264,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["imports",{"_index":130,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["improve",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":3292,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["including",{"_index":5054,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":5046,"title":{},"body":{"license.html":{}}}],["increasevolume",{"_index":1659,"title":{},"body":{"components/PlayerComponent.html":{}}}],["increasevolume(value",{"_index":1674,"title":{},"body":{"components/PlayerComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":889,"title":{},"body":{"interfaces/EqualizerGainValues.html":{}}}],["indexed",{"_index":91,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{},"dependencies.html":{}}}],["indexeddb",{"_index":4550,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["indexeddbservice",{"_index":135,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["indexeddbtrackmetadata",{"_index":93,"title":{"interfaces/IndexedDbTrackMetadata.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["ineffective",{"_index":5192,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":5209,"title":{},"body":{"license.html":{}}}],["inferred",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["information",{"_index":4998,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":5044,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":1353,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["init",{"_index":833,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["initbarkscale",{"_index":4927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":516,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["initializetheme",{"_index":2250,"title":{},"body":{"injectables/ThemeService.html":{}}}],["initialvalue",{"_index":2152,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject",{"_index":85,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["inject(audioservice",{"_index":881,"title":{},"body":{"components/EqualizerComponent.html":{},"injectables/MediaSessionService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["inject(breakpointobserver",{"_index":2165,"title":{},"body":{"components/ShellComponent.html":{}}}],["inject(destroyref",{"_index":1868,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["inject(document",{"_index":1140,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(domsanitizer",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(elementref",{"_index":940,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(eventmanager",{"_index":1139,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["inject(fileloaderservice",{"_index":1714,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["inject(gamepadservice",{"_index":1712,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(hotkeysservice",{"_index":1713,"title":{},"body":{"components/PlayerComponent.html":{}}}],["inject(httpclient",{"_index":731,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["inject(id3tagsservice",{"_index":1510,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(lastfmmetadataservice",{"_index":1511,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(loaderservice",{"_index":1419,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["inject(localstorageservice",{"_index":478,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["inject(mat_dialog_data",{"_index":1211,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["inject(matdialog",{"_index":1142,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["inject(maticonregistry",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(mediasessionservice",{"_index":1866,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject(meta",{"_index":2272,"title":{},"body":{"injectables/ThemeService.html":{}}}],["inject(metadataservice",{"_index":1625,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["inject(musicbrainzservice",{"_index":1512,"title":{},"body":{"injectables/MetadataService.html":{}}}],["inject(ngxindexeddbservice",{"_index":136,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["inject(ngzone",{"_index":2540,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject(playerservice",{"_index":137,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(renderer2",{"_index":942,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["inject(router",{"_index":138,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["inject(swupdate",{"_index":2365,"title":{},"body":{"injectables/UpdateService.html":{}}}],["inject(themeservice",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["inject(title",{"_index":2353,"title":{},"body":{"injectables/TitleService.html":{}}}],["inject(titleservice",{"_index":1711,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["inject(updateservice",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(visualsservice",{"_index":2027,"title":{},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["inject(wakelockservice",{"_index":1865,"title":{},"body":{"injectables/PlayerService.html":{}}}],["inject>(elementref",{"_index":2547,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["inject>(matdialogref",{"_index":1210,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["injectable",{"_index":375,"title":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["injectables",{"_index":377,"title":{},"body":{"injectables/AudioService.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"overview.html":{}}}],["input",{"_index":800,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('bars",{"_index":2531,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["input.required",{"_index":798,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["inputcheckmode",{"_index":32,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":2190,"title":{},"body":{"components/SlidePanelComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["inset",{"_index":987,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["install",{"_index":2384,"title":{},"body":{"injectables/UpdateService.html":{}}}],["installable",{"_index":4977,"title":{},"body":{"index.html":{}}}],["instant",{"_index":2094,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["instead",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["integriert",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["intended",{"_index":5086,"title":{},"body":{"license.html":{}}}],["intending",{"_index":5174,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1407,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["intercept(request",{"_index":1408,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interceptor",{"_index":1403,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1405,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"overview.html":{}}}],["intergrated",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["internal",{"_index":2636,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["interop",{"_index":1864,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{}}}],["interval",{"_index":1121,"title":{},"body":{"injectables/GamepadService.html":{}}}],["introducing",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":5191,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":5210,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":5208,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":5202,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":5150,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":2000,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isactive(song",{"_index":2004,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isautoscrollenabled",{"_index":2039,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isaxisvalueindetectionrange(axis",{"_index":1111,"title":{},"body":{"injectables/GamepadService.html":{}}}],["isbarsvisualizeroptions",{"_index":4928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isbarsvisualizeroptions(options",{"_index":4943,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgamepadsupported",{"_index":4929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ishandset",{"_index":2144,"title":{},"body":{"components/ShellComponent.html":{}}}],["iskeyboardsupported",{"_index":4930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":383,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["islooping",{"_index":384,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ismediasessionsupported",{"_index":4931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnan(atrack",{"_index":201,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["isnan(btrack",{"_index":202,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["isoscvisualizeroptions",{"_index":4934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isoscvisualizeroptions(options",{"_index":4944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ispaused",{"_index":385,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["isplaying",{"_index":386,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlaylistComponent.html":{}}}],["isplaying(song",{"_index":2006,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["isplaylistempty",{"_index":1655,"title":{},"body":{"components/PlayerComponent.html":{}}}],["isstopped",{"_index":387,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["ist",{"_index":1159,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["iswakelocksupported",{"_index":4935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item",{"_index":2098,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["item.album",{"_index":160,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item.artist",{"_index":159,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["item__content",{"_index":5382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":991,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["itemsize",{"_index":2101,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["iv",{"_index":5109,"title":{},"body":{"license.html":{}}}],["january",{"_index":2923,"title":{},"body":{"changelog.html":{}}}],["jb",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["jest",{"_index":3001,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["js",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1341,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"changelog.html":{}}}],["judged",{"_index":5189,"title":{},"body":{"license.html":{}}}],["july",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["jurisdictions",{"_index":5012,"title":{},"body":{"license.html":{}}}],["justify",{"_index":993,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["k",{"_index":623,"title":{},"body":{"pipes/BandPipe.html":{}}}],["kb/s",{"_index":631,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["keine",{"_index":1232,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["keyboard",{"_index":4968,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1168,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keydown.${merged.keys",{"_index":1164,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["keypath",{"_index":5361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":1128,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/PlayerComponent.html":{}}}],["keys.replaceall",{"_index":1183,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["kind",{"_index":5227,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5084,"title":{},"body":{"license.html":{}}}],["known",{"_index":5159,"title":{},"body":{"license.html":{}}}],["kreieren",{"_index":1570,"title":{},"body":{"injectables/MetadataService.html":{}}}],["l1_button",{"_index":46,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["l2_button",{"_index":50,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["lang",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":725,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"license.html":{}}}],["last",{"_index":1788,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["last.fm",{"_index":1328,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/MetadataSettingsComponent.html":{}}}],["lastactionexecution",{"_index":9,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["lastfm",{"_index":1502,"title":{},"body":{"injectables/MetadataService.html":{},"index.html":{}}}],["lastfm_api_key",{"_index":1323,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmalbum",{"_index":1312,"title":{"interfaces/LastfmAlbum.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmerrorresponse",{"_index":1319,"title":{"interfaces/LastfmErrorResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmimage",{"_index":1315,"title":{"interfaces/LastfmImage.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["lastfmmetadataservice",{"_index":1322,"title":{"injectables/LastfmMetadataService.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{}}}],["lastfmresponse",{"_index":1321,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastfmsuccessresponse",{"_index":1318,"title":{"interfaces/LastfmSuccessResponse.html":{}},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["lastupdatetime",{"_index":2618,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["late",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["latencyhint",{"_index":518,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["latent",{"_index":5235,"title":{},"body":{"license.html":{}}}],["later",{"_index":5042,"title":{},"body":{"license.html":{}}}],["latest",{"_index":2709,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["launch",{"_index":1894,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters",{"_index":1892,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files",{"_index":1898,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchparameters.files.length",{"_index":1897,"title":{},"body":{"injectables/PlayerService.html":{}}}],["launchqueue",{"_index":1886,"title":{},"body":{"injectables/PlayerService.html":{}}}],["law",{"_index":4991,"title":{},"body":{"license.html":{}}}],["laws",{"_index":5011,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3117,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["lazy",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["leadingminutezero",{"_index":4950,"title":{},"body":{"miscellaneous/functions.html":{}}}],["leave",{"_index":925,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["leave(event",{"_index":930,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["left",{"_index":2202,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["legacyfileloaderservice",{"_index":1350,"title":{"injectables/LegacyFileLoaderService.html":{}},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["legal",{"_index":4986,"title":{},"body":{"license.html":{}}}],["legally",{"_index":5190,"title":{},"body":{"license.html":{}}}],["legend",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["liability",{"_index":5006,"title":{},"body":{"license.html":{}}}],["lib",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":220,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["library.component.html",{"_index":127,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":129,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["librarycomponent",{"_index":132,"title":{"components/LibraryComponent.html":{}},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["libs",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["libs/.../helpers",{"_index":4916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/helpers/src/lib/helpers",{"_index":4949,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/ui",{"_index":912,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SlidePanelComponent.html":{}}}],["license",{"_index":4728,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{},"properties.html":{}}}],["license.md",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["licensed",{"_index":5224,"title":{},"body":{"license.html":{}}}],["light",{"_index":2300,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightmuted",{"_index":778,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["lightnesslimit",{"_index":2331,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lightvibrant",{"_index":777,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["likeness",{"_index":5107,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":5055,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":5115,"title":{},"body":{"license.html":{}}}],["limited",{"_index":5090,"title":{},"body":{"license.html":{}}}],["line",{"_index":1985,"title":{},"body":{"injectables/PlayerService.html":{}}}],["linethickness",{"_index":2405,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["link",{"_index":5379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lint",{"_index":3357,"title":{},"body":{"changelog.html":{},"additional-documentation/helpers.html":{}}}],["linting",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":2105,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":558,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lite",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":705,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/Id3Tags.html":{}}}],["load",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["loadcomponent",{"_index":5390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["loadedtrack",{"_index":1952,"title":{},"body":{"injectables/PlayerService.html":{}}}],["loader",{"_index":821,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loader.helpers",{"_index":828,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loader.helpers.ts",{"_index":892,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["loader.service",{"_index":1418,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["loader.service.abstract",{"_index":830,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loader.service.abstract.ts",{"_index":1001,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:4",{"_index":1003,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:5",{"_index":1005,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:6",{"_index":1006,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.abstract.ts:7",{"_index":1004,"title":{},"body":{"classes/FileLoaderService.html":{}}}],["loader.service.factory.ts",{"_index":4915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loader.service.ts",{"_index":823,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["loader.service.ts:13",{"_index":1352,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["loaderinterceptor",{"_index":1404,"title":{"interceptors/LoaderInterceptor.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["loaderservice",{"_index":1417,"title":{"injectables/LoaderService.html":{}},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["loaderservice.isloading",{"_index":2177,"title":{},"body":{"components/ShellComponent.html":{}}}],["loadfiles",{"_index":634,"title":{},"body":{"interfaces/Chainable.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["loading",{"_index":219,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["loadingcounter",{"_index":1429,"title":{},"body":{"injectables/LoaderService.html":{}}}],["local",{"_index":1526,"title":{},"body":{"injectables/MetadataService.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localecompare(b.album",{"_index":189,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.artist",{"_index":186,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localecompare(b.title",{"_index":208,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["localization",{"_index":5278,"title":{},"body":{"todo.html":{}}}],["localstorage",{"_index":536,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/StorageSettingsComponent.html":{},"index.html":{}}}],["localstorageservice",{"_index":471,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["lock.json",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["locking",{"_index":4971,"title":{},"body":{"index.html":{}}}],["logic",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["lookup",{"_index":1546,"title":{},"body":{"injectables/MetadataService.html":{}}}],["loop",{"_index":436,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["lucene",{"_index":709,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["luceneescapequery",{"_index":708,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["made",{"_index":5087,"title":{},"body":{"license.html":{}}}],["main",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["main_audio",{"_index":503,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["maincolor",{"_index":273,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":581,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["make",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":5000,"title":{},"body":{"license.html":{}}}],["management",{"_index":5268,"title":{},"body":{"todo.html":{}}}],["manifest.json",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":161,"title":{},"body":{"interfaces/Album.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{}}}],["map((result",{"_index":2172,"title":{},"body":{"components/ShellComponent.html":{}}}],["map((tag",{"_index":149,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["mapping",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["march",{"_index":2680,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["maskable",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["mat",{"_index":5375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1203,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["mat_tooltip_default_options",{"_index":5348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1207,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["matcardmodule",{"_index":1607,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["matcheckboxchange",{"_index":2341,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matcheckboxmodule",{"_index":2338,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["matdialog",{"_index":1130,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/UpdateService.html":{}}}],["matdialogconfig",{"_index":2361,"title":{},"body":{"injectables/UpdateService.html":{}}}],["matdialogmodule",{"_index":1204,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["matdialogref",{"_index":1131,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["material",{"_index":2777,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["matformfieldmodule",{"_index":1991,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.abs(targetindex",{"_index":2091,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.ceil(min",{"_index":1981,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor((visiblerange.start",{"_index":2090,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.floor(math.random",{"_index":1988,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(max",{"_index":1982,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.floor(pos",{"_index":1847,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.max(0",{"_index":2107,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["math.round(this.audioservice.duration",{"_index":1849,"title":{},"body":{"injectables/PlayerService.html":{}}}],["math.round(value",{"_index":630,"title":{},"body":{"pipes/BitratePipe.html":{}}}],["maticon",{"_index":109,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticonbutton",{"_index":111,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["maticonmodule",{"_index":1206,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["maticonregistry",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["matinput",{"_index":1992,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["matlistmodule",{"_index":98,"title":{},"body":{"interfaces/Album.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matmenu",{"_index":102,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenucontent",{"_index":103,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenuitem",{"_index":104,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matmenumodule",{"_index":1650,"title":{},"body":{"components/PlayerComponent.html":{}}}],["matmenutrigger",{"_index":105,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["matoptionmodule",{"_index":2400,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matprogressspinnermodule",{"_index":1990,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["matselectmodule",{"_index":2399,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["matsidenav",{"_index":2161,"title":{},"body":{"components/ShellComponent.html":{}}}],["matsidenavmodule",{"_index":2140,"title":{},"body":{"components/ShellComponent.html":{}}}],["matslidermodule",{"_index":874,"title":{},"body":{"components/EqualizerComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["matslidetogglechange",{"_index":1617,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["matslidetogglemodule",{"_index":1608,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["mattoolbarmodule",{"_index":1648,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["mattooltipmodule",{"_index":1649,"title":{},"body":{"components/PlayerComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{}}}],["max",{"_index":1979,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["maxdecibels",{"_index":251,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["maximum",{"_index":5164,"title":{},"body":{"license.html":{}}}],["md5",{"_index":1509,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["mdc",{"_index":3759,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["meaning",{"_index":5085,"title":{},"body":{"license.html":{}}}],["measureoffset",{"_index":2051,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["meatadata",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1469,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{},"index.html":{}}}],["mediaelementaudiosourcenode",{"_index":487,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["mediametadata(metadata",{"_index":1478,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediametadatainit",{"_index":1449,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasession",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["mediasessionaction",{"_index":1444,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionactiondetails",{"_index":1446,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["mediasessionplaybackstate",{"_index":1480,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["mediasessionservice",{"_index":1434,"title":{"injectables/MediaSessionService.html":{}},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mediasessionservicefactory",{"_index":4937,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":5165,"title":{},"body":{"license.html":{}}}],["member",{"_index":5170,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["menus",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":5231,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1161,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["merged.description",{"_index":1179,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["merged.keys",{"_index":1180,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["message",{"_index":1320,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"directives/VisualsDirective.html":{}}}],["messageevent",{"_index":1291,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["meta",{"_index":1575,"title":{},"body":{"injectables/MetadataService.html":{},"injectables/ThemeService.html":{},"todo.html":{}}}],["meta.coverurl",{"_index":1568,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture",{"_index":1567,"title":{},"body":{"injectables/MetadataService.html":{}}}],["meta.embeddedpicture.format",{"_index":1574,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata",{"_index":124,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["metadata).topromise",{"_index":1564,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.helper",{"_index":716,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadata.service",{"_index":1503,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadata.service.ts",{"_index":1314,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["metadata.service.ts:36",{"_index":1349,"title":{},"body":{"injectables/LastfmMetadataService.html":{}}}],["metadata.types",{"_index":714,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["metadatacache",{"_index":1519,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["metadatacache.coverurl",{"_index":1523,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture",{"_index":1521,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadatacache.embeddedpicture.format",{"_index":1531,"title":{},"body":{"injectables/MetadataService.html":{}}}],["metadataservice",{"_index":1482,"title":{"injectables/MetadataService.html":{}},"body":{"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["metadatasettingscomponent",{"_index":352,"title":{"components/MetadataSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["metatags",{"_index":5359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meter",{"_index":4972,"title":{},"body":{"index.html":{}}}],["meternumber",{"_index":5318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1338,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["methods",{"_index":389,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["mic",{"_index":5273,"title":{},"body":{"todo.html":{}}}],["migrate",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["migrated",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["migrating",{"_index":2226,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["migration",{"_index":2219,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["min",{"_index":1980,"title":{},"body":{"injectables/PlayerService.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{}}}],["mindb",{"_index":2406,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["mindecibels",{"_index":252,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["miscellaneous",{"_index":4900,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":4006,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["mobile",{"_index":3884,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mobx",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":18,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/ThemeSettingsComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":2029,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["modes",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":5045,"title":{},"body":{"license.html":{}}}],["module",{"_index":1265,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["modules",{"_index":2889,"title":{"modules.html":{}},"body":{"changelog.html":{},"modules.html":{}}}],["monochrome",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["monochrome.svg",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["monorepo",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["moral",{"_index":5098,"title":{},"body":{"license.html":{}}}],["more",{"_index":647,"title":{},"body":{"interfaces/Chainable.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["motabass",{"_index":5264,"title":{},"body":{"properties.html":{}}}],["motabass/helpers",{"_index":1699,"title":{},"body":{"components/PlayerComponent.html":{},"pipes/TimePipe.html":{}}}],["motabass/ui",{"_index":1705,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["motivations",{"_index":5068,"title":{},"body":{"license.html":{}}}],["moved",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["mp3",{"_index":905,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mp4",{"_index":910,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["mtb",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["mtbvisual",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["multi",{"_index":5356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["music",{"_index":689,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["musicbrainz",{"_index":744,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{},"index.html":{}}}],["musicbrainz.service",{"_index":1504,"title":{},"body":{"injectables/MetadataService.html":{}}}],["musicbrainzreleasegroup",{"_index":717,"title":{"interfaces/MusicbrainzReleaseGroup.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzresponse",{"_index":721,"title":{"interfaces/MusicbrainzResponse.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["musicbrainzservice",{"_index":729,"title":{"injectables/MusicbrainzService.html":{}},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["muted",{"_index":774,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Color.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":655,"title":{},"body":{"interfaces/Chainable.html":{}}}],["nan",{"_index":195,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["narrowing",{"_index":2237,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["national",{"_index":5130,"title":{},"body":{"license.html":{}}}],["native",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["nativebrowserfileloaderservice",{"_index":831,"title":{"injectables/NativeBrowserFileLoaderService.html":{}},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["navigates",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["navigateto",{"_index":2146,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigateto(route",{"_index":2147,"title":{},"body":{"components/ShellComponent.html":{}}}],["navigation",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["navigator.getgamepads",{"_index":1048,"title":{},"body":{"injectables/GamepadService.html":{}}}],["navigator.mediasession.metadata",{"_index":1477,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.playbackstate",{"_index":1481,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler('seekto",{"_index":1472,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setactionhandler(action",{"_index":1467,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession.setpositionstate",{"_index":1476,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.mediasession?.setpositionstate",{"_index":1475,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["navigator.wakelock",{"_index":2662,"title":{},"body":{"injectables/WakelockService.html":{}}}],["navigator.wakelock.request('screen",{"_index":2663,"title":{},"body":{"injectables/WakelockService.html":{}}}],["nbsp",{"_index":809,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["nearby",{"_index":2093,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["nearly",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":5247,"title":{},"body":{"license.html":{}}}],["negative",{"_index":30,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/typealiases.html":{}}}],["negativeactionfunction",{"_index":27,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["neighboring",{"_index":5089,"title":{},"body":{"license.html":{}}}],["neu",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":154,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"injectables/ThemeService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["newsize",{"_index":279,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["next",{"_index":1410,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["next.handle(request).pipe(finalize",{"_index":1421,"title":{},"body":{"interceptors/LoaderInterceptor.html":{}}}],["nextid",{"_index":1258,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["nextmode",{"_index":2647,"title":{},"body":{"injectables/VisualsService.html":{}}}],["ng",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["ng11",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["ng15",{"_index":4179,"title":{},"body":{"changelog.html":{}}}],["ngafterviewinit",{"_index":948,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["ngarraypipesmodule",{"_index":96,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["ngclass",{"_index":1651,"title":{},"body":{"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SlidePanelComponent.html":{}}}],["ngif",{"_index":2236,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngonchanges",{"_index":2239,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ngondestroy",{"_index":962,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["ngoninit",{"_index":210,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["ngoptimizedimage",{"_index":117,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["ngstyle",{"_index":785,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["ngx",{"_index":90,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"dependencies.html":{}}}],["ngxindexeddbservice",{"_index":89,"title":{},"body":{"interfaces/Album.html":{},"interfaces/DirHandleEntry.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/variables.html":{}}}],["nicht",{"_index":1065,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["node",{"_index":1505,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["node_modules",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["nodes",{"_index":520,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["non",{"_index":5199,"title":{},"body":{"license.html":{}}}],["none",{"_index":505,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/LegacyFileLoaderService.html":{},"changelog.html":{}}}],["notable",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["notes.md",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":1895,"title":{},"body":{"injectables/PlayerService.html":{}}}],["notification",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["november",{"_index":2986,"title":{},"body":{"changelog.html":{}}}],["now",{"_index":2616,"title":{},"body":{"directives/VisualsDirective.html":{},"license.html":{}}}],["npm",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["nrwl",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["nrwl/nx",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":1074,"title":{},"body":{"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"pipes/TimePipe.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(a.track",{"_index":194,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(axisindex",{"_index":1039,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number(b.track",{"_index":198,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["number(buttonindex",{"_index":1037,"title":{},"body":{"injectables/GamepadService.html":{}}}],["number.isnan(duration",{"_index":1464,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["number_",{"_index":887,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["numbers",{"_index":200,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["nx",{"_index":2968,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["obeservable",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":1527,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/variables.html":{}}}],["objectstoresmeta",{"_index":5358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecturl",{"_index":1533,"title":{},"body":{"injectables/MetadataService.html":{}}}],["obligation",{"_index":5256,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1134,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["observable((observer",{"_index":1165,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observable.subscribe(options.callback",{"_index":1177,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observe([breakpoints.xsmall",{"_index":2167,"title":{},"body":{"components/ShellComponent.html":{}}}],["observer",{"_index":2582,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["observer.next(e",{"_index":1172,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["observer.observe(this.canvas",{"_index":2585,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["obtaining",{"_index":5246,"title":{},"body":{"license.html":{}}}],["october",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["offers",{"_index":5225,"title":{},"body":{"license.html":{}}}],["offline",{"_index":4976,"title":{},"body":{"index.html":{}}}],["offscreencanvas",{"_index":278,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["offscreencanvasrenderingcontext2d",{"_index":5323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":2106,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["ogg",{"_index":907,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["ohne",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["older",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["oldsource",{"_index":588,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["onchanges",{"_index":2181,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["ondestroy",{"_index":918,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["one",{"_index":698,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["onfilesdropped",{"_index":1660,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onfilesdropped(files",{"_index":1677,"title":{},"body":{"components/PlayerComponent.html":{}}}],["oninit",{"_index":86,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["onprefertagembeddedpicschange",{"_index":1611,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onprefertagembeddedpicschange(event",{"_index":1616,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onreload",{"_index":1661,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onsliderpositionchanged",{"_index":1662,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onsliderpositionchanged(value",{"_index":1680,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onusetagembeddedpicschange",{"_index":1612,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagembeddedpicschange(event",{"_index":1619,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange",{"_index":1613,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusetagscachechange(event",{"_index":1621,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange",{"_index":1614,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onusewebtagschange(event",{"_index":1623,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["onvolumechange",{"_index":1663,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onvolumechange(value",{"_index":1682,"title":{},"body":{"components/PlayerComponent.html":{}}}],["open",{"_index":2187,"title":{},"body":{"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["openedstate",{"_index":2191,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["openfiles",{"_index":845,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["openpanel",{"_index":2189,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["optimizations",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["optimize",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":2862,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":2514,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["optional",{"_index":411,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":672,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.keys",{"_index":1156,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["options.keys.replaceall",{"_index":1163,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["opus",{"_index":909,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["origin",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["original",{"_index":766,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"license.html":{}}}],["originalfn",{"_index":676,"title":{},"body":{"interfaces/Chainable.html":{}}}],["os",{"_index":4969,"title":{},"body":{"index.html":{}}}],["osc",{"_index":293,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{}}}],["oscconfig",{"_index":2407,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["oscilloscope",{"_index":2823,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["oscilloscopepath",{"_index":5319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["osciloscopeconfig",{"_index":270,"title":{"interfaces/OsciloscopeConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["oscvisualizeroptions",{"_index":292,"title":{"interfaces/OscVisualizerOptions.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["oss",{"_index":4978,"title":{},"body":{"index.html":{}}}],["others",{"_index":5067,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":203,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"license.html":{}}}],["out",{"_index":1283,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["output",{"_index":935,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["outside",{"_index":2083,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["over",{"_index":926,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["over(event",{"_index":932,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay",{"_index":919,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{}},"body":{"components/FileDropOverlayComponent.html":{},"components/PlayerComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{}}}],["overlay'},{'name",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["overlay.component.html",{"_index":922,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":921,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":916,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:12",{"_index":934,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:14",{"_index":936,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:38",{"_index":933,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:48",{"_index":931,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay.component.ts:54",{"_index":929,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/file",{"_index":915,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overlay/src/lib/file",{"_index":914,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["overrides",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["overtly",{"_index":5148,"title":{},"body":{"license.html":{}}}],["overview",{"_index":5257,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":645,"title":{},"body":{"interfaces/Chainable.html":{},"injectables/MetadataService.html":{}}}],["overwritten",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["owner",{"_index":5025,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":5024,"title":{},"body":{"license.html":{}}}],["owners",{"_index":5031,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":2629,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["package",{"_index":2773,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["packages",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["packgr",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":4614,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["palette",{"_index":1547,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.hex",{"_index":1600,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkmuted?.titletextcolor",{"_index":1601,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.hex",{"_index":1594,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.darkvibrant?.titletextcolor",{"_index":1595,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.hex",{"_index":1602,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightmuted?.titletextcolor",{"_index":1603,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.hex",{"_index":1596,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.lightvibrant?.titletextcolor",{"_index":1597,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.hex",{"_index":1598,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.muted?.titletextcolor",{"_index":1599,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.hex",{"_index":1592,"title":{},"body":{"injectables/MetadataService.html":{}}}],["palette.vibrant?.titletextcolor",{"_index":1593,"title":{},"body":{"injectables/MetadataService.html":{}}}],["panel",{"_index":2182,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["panel'},{'name",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["panel.component.html",{"_index":2183,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.scss",{"_index":2184,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts",{"_index":2180,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:16",{"_index":2201,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:21",{"_index":2198,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:26",{"_index":2206,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:31",{"_index":2207,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:36",{"_index":2200,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:41",{"_index":2204,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:46",{"_index":2205,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:48",{"_index":2212,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:50",{"_index":2208,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:51",{"_index":2209,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:63",{"_index":2211,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel.component.ts:69",{"_index":2210,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["panel/src/lib/slide",{"_index":2179,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["paragraph",{"_index":5116,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":410,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1334,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/PlayerService.html":{}}}],["parent",{"_index":656,"title":{},"body":{"interfaces/Chainable.html":{}}}],["parliament",{"_index":5125,"title":{},"body":{"license.html":{}}}],["part",{"_index":3915,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["partial",{"_index":1144,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"license.html":{}}}],["particular",{"_index":5233,"title":{},"body":{"license.html":{}}}],["party",{"_index":5254,"title":{},"body":{"license.html":{}}}],["pass",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["passed",{"_index":2621,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["patent",{"_index":5219,"title":{},"body":{"license.html":{}}}],["path",{"_index":5386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path2d",{"_index":5325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":5388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":393,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["peakcolor",{"_index":274,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ColorConfig.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1300,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["pendingrequests",{"_index":1259,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["per",{"_index":4322,"title":{},"body":{"changelog.html":{}}}],["perform",{"_index":5094,"title":{},"body":{"license.html":{}}}],["performance",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["performance.now",{"_index":1107,"title":{},"body":{"injectables/GamepadService.html":{},"directives/VisualsDirective.html":{}}}],["performer(s",{"_index":5101,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5033,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":5241,"title":{},"body":{"license.html":{}}}],["permission",{"_index":866,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["permissions",{"_index":5249,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":5145,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":4973,"title":{},"body":{"index.html":{}}}],["person",{"_index":5073,"title":{},"body":{"license.html":{}}}],["person's",{"_index":5106,"title":{},"body":{"license.html":{}}}],["persons",{"_index":5245,"title":{},"body":{"license.html":{}}}],["pertaining",{"_index":5105,"title":{},"body":{"license.html":{}}}],["picture",{"_index":1248,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"index.html":{}}}],["pin",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":121,"title":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{}}}],["pipe(takeuntildestroyed(this.destroref",{"_index":2047,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["pipes",{"_index":97,"title":{},"body":{"interfaces/Album.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/LibraryComponent.html":{},"pipes/TimePipe.html":{},"dependencies.html":{},"overview.html":{}}}],["pipetransform",{"_index":620,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["placeholder_url",{"_index":1513,"title":{},"body":{"injectables/MetadataService.html":{}}}],["play",{"_index":394,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{}}}],["play/pause",{"_index":1719,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playback",{"_index":519,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["player",{"_index":1647,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["player'},{'name",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.component.html",{"_index":1652,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.scss",{"_index":1653,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.po",{"_index":638,"title":{},"body":{"interfaces/Chainable.html":{}}}],["player.service",{"_index":108,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["player.types",{"_index":95,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["player/audio.service",{"_index":1456,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["player/eq",{"_index":5392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/library",{"_index":5394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player/metadata",{"_index":1629,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["player/player.types",{"_index":2271,"title":{},"body":{"injectables/ThemeService.html":{}}}],["playercomponent",{"_index":354,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice",{"_index":107,"title":{"injectables/PlayerService.html":{}},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["playerservice.currentlyloadedtrack",{"_index":1791,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playerservice.currenttime",{"_index":1792,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playerservice.repeat",{"_index":1795,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playing",{"_index":1457,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["playlist",{"_index":1399,"title":{},"body":{"components/LibraryComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{},"todo.html":{}}}],["playlist'},{'name",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlist.component.html",{"_index":1994,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.component.scss",{"_index":1995,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.findindex((track",{"_index":2078,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playlist.indexof(loadedtrack",{"_index":1960,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playlist.length",{"_index":1957,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["playlist/playlist.component",{"_index":1710,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playlistcomponent",{"_index":356,"title":{"components/PlaylistComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["playlistsong.metadata?.crc",{"_index":1926,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpause",{"_index":1804,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausesong",{"_index":2001,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausesong(event",{"_index":2008,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["playpausetrack",{"_index":1805,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playpausetrack(track",{"_index":1821,"title":{},"body":{"injectables/PlayerService.html":{}}}],["plays",{"_index":4960,"title":{},"body":{"index.html":{}}}],["playstate",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["playtrack",{"_index":1381,"title":{},"body":{"components/LibraryComponent.html":{}}}],["playtrack(track",{"_index":229,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["please",{"_index":650,"title":{},"body":{"interfaces/Chainable.html":{}}}],["plug",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["pluginnewanalysernode",{"_index":395,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["plugins",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":977,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["polfills",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["polyfills",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["pool",{"_index":2606,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["pos",{"_index":1846,"title":{},"body":{"injectables/PlayerService.html":{}}}],["position",{"_index":425,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/MediaSessionService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["positive",{"_index":31,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"miscellaneous/typealiases.html":{}}}],["positiveactionfunction",{"_index":26,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{}}}],["possible",{"_index":5050,"title":{},"body":{"license.html":{}}}],["postcss",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["prdefinded",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["pre",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["precommit",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["prefertagembeddedpicture",{"_index":1484,"title":{},"body":{"injectables/MetadataService.html":{}}}],["prefetch",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":5339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preparations",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["present",{"_index":5238,"title":{},"body":{"license.html":{}}}],["preserved",{"_index":5193,"title":{},"body":{"license.html":{}}}],["preset",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["pressedbuttonscaches",{"_index":1035,"title":{},"body":{"injectables/GamepadService.html":{}}}],["prettier",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["prevents",{"_index":2223,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["previous",{"_index":1806,"title":{},"body":{"injectables/PlayerService.html":{}}}],["prevsubject",{"_index":671,"title":{},"body":{"interfaces/Chainable.html":{}}}],["primary",{"_index":2288,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolor",{"_index":2273,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarycolorpalette",{"_index":2249,"title":{},"body":{"injectables/ThemeService.html":{}}}],["primarytype:album",{"_index":748,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["prioritize",{"_index":1639,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["privacy",{"_index":5104,"title":{},"body":{"license.html":{}}}],["private",{"_index":134,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["prive",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["problems",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["process",{"_index":2619,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["production",{"_index":2877,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":737,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1273,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["promise.reject(new",{"_index":1270,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promises",{"_index":1276,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["promote",{"_index":5058,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":5168,"title":{},"body":{"license.html":{}}}],["prompt",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogcomponent",{"_index":358,"title":{"components/PromptDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{}}}],["promptdialogdata",{"_index":2126,"title":{"interfaces/PromptDialogData.html":{}},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"properties.html":{}}}],["props",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["protected",{"_index":5088,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":5110,"title":{},"body":{"license.html":{}}}],["protection",{"_index":5128,"title":{},"body":{"license.html":{}}}],["protobufjs",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":3983,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":5341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":5003,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":476,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{}}}],["provideexperimentalzonelesschangedetection",{"_index":5329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":5342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideindexeddb(databaseconfig",{"_index":5330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxwebstorage(withngxwebstorageconfig",{"_index":5336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":5344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":5328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":4997,"title":{},"body":{"license.html":{}}}],["provideserviceworker('ngsw",{"_index":5331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":5039,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":5103,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":5080,"title":{},"body":{"license.html":{}}}],["pure",{"_index":613,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/TimePipe.html":{}}}],["purpose",{"_index":5010,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":5053,"title":{},"body":{"license.html":{}}}],["pwa",{"_index":4957,"title":{},"body":{"index.html":{},"properties.html":{}}}],["quality",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["query",{"_index":711,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"dependencies.html":{}}}],["queryparams",{"_index":1336,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["queue",{"_index":1896,"title":{},"body":{"injectables/PlayerService.html":{}}}],["quiet",{"_index":5182,"title":{},"body":{"license.html":{}}}],["r1_button",{"_index":48,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["r2_button",{"_index":52,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["random",{"_index":1987,"title":{},"body":{"injectables/PlayerService.html":{}}}],["randomposition",{"_index":1955,"title":{},"body":{"injectables/PlayerService.html":{}}}],["range",{"_index":2080,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["rate",{"_index":817,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["read",{"_index":651,"title":{},"body":{"interfaces/Chainable.html":{}}}],["readded",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["reader",{"_index":4983,"title":{},"body":{"index.html":{}}}],["readme",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":139,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["ready",{"_index":2377,"title":{},"body":{"injectables/UpdateService.html":{}}}],["real",{"_index":1578,"title":{},"body":{"injectables/MetadataService.html":{}}}],["realkeys",{"_index":1182,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reason",{"_index":5188,"title":{},"body":{"license.html":{}}}],["record",{"_index":1335,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["rect",{"_index":2575,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["recursive",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["redirectto",{"_index":5387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redistribute",{"_index":5048,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["reenabled",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["refactored",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["refactorings",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":5002,"title":{},"body":{"license.html":{}}}],["regards",{"_index":5114,"title":{},"body":{"license.html":{}}}],["register",{"_index":1234,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["register(options",{"_index":1155,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["registeraxisaction",{"_index":1013,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeraxisaction(axisindex",{"_index":1022,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction",{"_index":1014,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registerbuttonaction(buttonindex",{"_index":1026,"title":{},"body":{"injectables/GamepadService.html":{}}}],["registeredhotkeys",{"_index":1196,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{}}}],["registerimmediately",{"_index":5335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":5334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registriert",{"_index":1160,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["reinstall",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["reject",{"_index":1260,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(error",{"_index":1288,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["reject(new",{"_index":1280,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["related",{"_index":2692,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["relationship",{"_index":4996,"title":{},"body":{"license.html":{}}}],["release",{"_index":719,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"changelog.html":{}}}],["release:${luceneescapequery.escape(album",{"_index":746,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasegroupid",{"_index":740,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["releasewakelock",{"_index":2654,"title":{},"body":{"injectables/WakelockService.html":{}}}],["reliably",{"_index":5040,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":5034,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1787,"title":{},"body":{"components/PlayerComponent.html":{},"changelog.html":{}}}],["remainder",{"_index":5211,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":5213,"title":{},"body":{"license.html":{}}}],["remote",{"_index":1532,"title":{},"body":{"injectables/MetadataService.html":{}}}],["remotecoverpicture",{"_index":81,"title":{"interfaces/RemoteCoverPicture.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["remove",{"_index":853,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["removed",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["renderer",{"_index":941,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renderer2",{"_index":938,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["renew",{"_index":1525,"title":{},"body":{"injectables/MetadataService.html":{}}}],["renovate",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["renovate.json",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":1801,"title":{},"body":{"injectables/PlayerService.html":{}}}],["repeatmode",{"_index":697,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/PlayerService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["replace",{"_index":1577,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["replaced",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["report",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["reporting",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":5261,"title":{},"body":{"properties.html":{}}}],["representations",{"_index":5226,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":5092,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":5063,"title":{},"body":{"license.html":{}}}],["request",{"_index":865,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/Id3TagsService.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"changelog.html":{}}}],["request.reject(new",{"_index":1294,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["request.resolve(tags",{"_index":1296,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["requestanimationframe",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe(draw",{"_index":2632,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["requests",{"_index":1301,"title":{},"body":{"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["requestwakelock",{"_index":2661,"title":{},"body":{"injectables/WakelockService.html":{}}}],["required",{"_index":5250,"title":{},"body":{"license.html":{}}}],["rescission",{"_index":5177,"title":{},"body":{"license.html":{}}}],["resizeobserver",{"_index":2545,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resizeobserver((entries",{"_index":2583,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["resolve",{"_index":1285,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/LegacyFileLoaderService.html":{}}}],["resolve(tags",{"_index":1287,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["resolve(this.getfiles",{"_index":1376,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["respect",{"_index":5215,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":5243,"title":{},"body":{"license.html":{}}}],["responsive",{"_index":4974,"title":{},"body":{"index.html":{}}}],["result",{"_index":212,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["result.matches",{"_index":2173,"title":{},"body":{"components/ShellComponent.html":{}}}],["resulting",{"_index":5008,"title":{},"body":{"license.html":{}}}],["results",{"_index":75,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["resume",{"_index":1187,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"changelog.html":{}}}],["retained",{"_index":5099,"title":{},"body":{"license.html":{}}}],["return",{"_index":153,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/WakelockService.html":{}}}],["returns",{"_index":406,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/Chainable.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":5047,"title":{},"body":{"license.html":{}}}],["revert",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["revocation",{"_index":5176,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["rgb(255",{"_index":997,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["rgba(0,0,0,0",{"_index":794,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["rid",{"_index":4167,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":2203,"title":{},"body":{"components/SlidePanelComponent.html":{},"license.html":{}}}],["rights",{"_index":5019,"title":{},"body":{"license.html":{}}}],["root",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"injectables/UpdateService.html":{},"injectables/VisualsService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["rotation",{"_index":2609,"title":{},"body":{"directives/VisualsDirective.html":{},"miscellaneous/variables.html":{}}}],["rounding",{"_index":4353,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":2150,"title":{},"body":{"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":122,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/ShellComponent.html":{},"changelog.html":{}}}],["routeroutlet",{"_index":2141,"title":{},"body":{"components/ShellComponent.html":{}}}],["routes",{"_index":5320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["royalty",{"_index":5198,"title":{},"body":{"license.html":{}}}],["rule",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":3592,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["running",{"_index":5397,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["rxjs",{"_index":101,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/ShellComponent.html":{},"injectables/UpdateService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1416,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"components/ShellComponent.html":{}}}],["s1_button",{"_index":58,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_x",{"_index":71,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s1_y",{"_index":72,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_button",{"_index":60,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_x",{"_index":73,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["s2_y",{"_index":74,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["safe",{"_index":120,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{},"dependencies.html":{}}}],["safepipe",{"_index":119,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/PlaylistComponent.html":{}}}],["sample",{"_index":816,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["samplerate",{"_index":291,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sandbox",{"_index":4982,"title":{},"body":{"index.html":{}}}],["sanitizer",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/logo",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["saving",{"_index":5270,"title":{},"body":{"todo.html":{}}}],["scale",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":2262,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scientific",{"_index":5038,"title":{},"body":{"license.html":{}}}],["screen",{"_index":4840,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scroll",{"_index":2041,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollbehavior",{"_index":2097,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolled",{"_index":2052,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolling",{"_index":2092,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["scrollposition",{"_index":2049,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolls",{"_index":2042,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltobottom",{"_index":2073,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrolltocurrenttrack",{"_index":2076,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scrollviewport",{"_index":1997,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["scss",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":755,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["searchterm",{"_index":1998,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["seconds",{"_index":1826,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seeking",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["seekleft",{"_index":1664,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["seekleft(seconds",{"_index":1824,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekleft(value",{"_index":1684,"title":{},"body":{"components/PlayerComponent.html":{}}}],["seekright",{"_index":1665,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["seekright(seconds",{"_index":1827,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seekright(value",{"_index":1686,"title":{},"body":{"components/PlayerComponent.html":{}}}],["seekto",{"_index":1474,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["seektohandler(details",{"_index":1966,"title":{},"body":{"injectables/PlayerService.html":{}}}],["seektoposition",{"_index":396,"title":{},"body":{"injectables/AudioService.html":{}}}],["seektoposition(position",{"_index":421,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["seektto",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["select_button",{"_index":54,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["selectalbum",{"_index":1382,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectalbum(album",{"_index":225,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectartist",{"_index":1383,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selectartist(artist",{"_index":221,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selected",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["selectedalbum",{"_index":143,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedartist",{"_index":141,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["selectedtrack",{"_index":144,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["selectnext",{"_index":1807,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selector",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["selectprevious",{"_index":1808,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong",{"_index":1809,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selectsong(song",{"_index":1831,"title":{},"body":{"injectables/PlayerService.html":{}}}],["selecttrack",{"_index":1384,"title":{},"body":{"components/LibraryComponent.html":{}}}],["selecttrack(track",{"_index":227,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["self",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["semantics",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":2627,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["sending",{"_index":1078,"title":{},"body":{"injectables/GamepadService.html":{}}}],["separate",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["separator",{"_index":5337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seperated",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["september",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["service/file",{"_index":891,"title":{},"body":{"interfaces/FileData.html":{},"classes/FileLoaderService.html":{},"injectables/MetadataService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/id3",{"_index":685,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/lastfm",{"_index":1313,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"miscellaneous/typealiases.html":{}}}],["service/legacy",{"_index":1351,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["service/metadata.helper.ts",{"_index":4946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/metadata.service",{"_index":1630,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"injectables/PlayerService.html":{}}}],["service/metadata.service.ts",{"_index":1483,"title":{},"body":{"injectables/MetadataService.html":{},"miscellaneous/functions.html":{}}}],["service/metadata.service.ts:26",{"_index":1498,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:27",{"_index":1496,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:28",{"_index":1494,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:29",{"_index":1492,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.service.ts:31",{"_index":1490,"title":{},"body":{"injectables/MetadataService.html":{}}}],["service/metadata.types",{"_index":125,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["service/metadata.types.ts",{"_index":771,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["service/metadata.worker.ts",{"_index":4948,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/musicbrainz.service.ts",{"_index":701,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["service/musicbrainz.service.ts:40",{"_index":1641,"title":{},"body":{"injectables/MusicbrainzService.html":{}}}],["service/native",{"_index":822,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["services",{"_index":2693,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["services/gamepad/gamepad.service",{"_index":1701,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/gamepad/gamepad.types",{"_index":1702,"title":{},"body":{"components/PlayerComponent.html":{},"components/VisualizerComponent.html":{}}}],["services/hotkeys/hotkeys.service",{"_index":1700,"title":{},"body":{"components/PlayerComponent.html":{}}}],["services/loader/loader.service",{"_index":1857,"title":{},"body":{"injectables/PlayerService.html":{},"components/ShellComponent.html":{}}}],["services/media",{"_index":1860,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services/title.service",{"_index":1704,"title":{},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{}}}],["services/wakelock.service",{"_index":1859,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session",{"_index":1470,"title":{},"body":{"injectables/MediaSessionService.html":{},"changelog.html":{}}}],["session.service",{"_index":1861,"title":{},"body":{"injectables/PlayerService.html":{}}}],["session.service.factory.ts",{"_index":4933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["session.service.ts",{"_index":1437,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:31",{"_index":1447,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:39",{"_index":1452,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:49",{"_index":1454,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:58",{"_index":1450,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session.service.ts:8",{"_index":1442,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["session/media",{"_index":1436,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":494,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/Id3TagsService.html":{},"changelog.html":{}}}],["set(filtered",{"_index":155,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["set.svg",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["setaccentcolor(color",{"_index":2293,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setactionhandler",{"_index":1438,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setactionhandler(action",{"_index":1443,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setalpha",{"_index":2410,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setalpha(value",{"_index":2420,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount",{"_index":2411,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbarcount(value",{"_index":2422,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setbasegain",{"_index":397,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbasegain(volume",{"_index":427,"title":{},"body":{"injectables/AudioService.html":{}}}],["setbrowsermetadata",{"_index":1439,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setbrowsermetadata(metadata",{"_index":1448,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setcapfalldown",{"_index":2412,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapfalldown(value",{"_index":2424,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight",{"_index":2413,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcapheight(value",{"_index":2426,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setcolors",{"_index":2251,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolors(colors",{"_index":2254,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode",{"_index":2252,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setdarkmode(darkmode",{"_index":2257,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setfftsize",{"_index":2414,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfftsize(value",{"_index":2428,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setfileassource",{"_index":398,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfileassource(file",{"_index":429,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setfrequencybandgain",{"_index":399,"title":{},"body":{"injectables/AudioService.html":{}}}],["setfrequencybandgain(bandfrequency",{"_index":431,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setgap",{"_index":2415,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setgap(value",{"_index":2430,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness",{"_index":2416,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setlinethickness(value",{"_index":2432,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setloop",{"_index":400,"title":{},"body":{"injectables/AudioService.html":{}}}],["setloop(loop",{"_index":434,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["setmindb",{"_index":2417,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setmindb(value",{"_index":2434,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setoverlayclass",{"_index":2297,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setplaybackstate(state",{"_index":1479,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setprimarycolor(color",{"_index":2282,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setseekposition",{"_index":1810,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseekposition(value",{"_index":1833,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setseektohandler",{"_index":1440,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setseektohandler(action",{"_index":1451,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["setsmoothing",{"_index":2418,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["setsmoothing(value",{"_index":2436,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["settimeout",{"_index":1278,"title":{},"body":{"injectables/Id3TagsService.html":{},"components/PlaylistComponent.html":{}}}],["setting",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["settings",{"_index":535,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settings.component",{"_index":2136,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1609,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.scss",{"_index":2134,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.ts",{"_index":1606,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:12",{"_index":2342,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:14",{"_index":1626,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settings.component.ts:17",{"_index":1624,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:21",{"_index":1622,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":1620,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:29",{"_index":1618,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings.component.ts:33",{"_index":1615,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["settings/metadata",{"_index":1605,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings/storage",{"_index":2135,"title":{},"body":{"components/SettingsComponent.html":{},"components/StorageSettingsComponent.html":{}}}],["settings/theme",{"_index":2137,"title":{},"body":{"components/SettingsComponent.html":{},"components/ThemeSettingsComponent.html":{}}}],["settingscomponent",{"_index":360,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["settitle",{"_index":2348,"title":{},"body":{"injectables/TitleService.html":{}}}],["settitle(title",{"_index":2349,"title":{},"body":{"injectables/TitleService.html":{}}}],["setupresizeobserver",{"_index":2581,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["setupvisualsworkerwithoptions",{"_index":4938,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupvisualsworkerwithoptions(options",{"_index":4945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setvolume",{"_index":401,"title":{},"body":{"injectables/AudioService.html":{}}}],["setvolume(value",{"_index":437,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["several",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":5175,"title":{},"body":{"license.html":{}}}],["share",{"_index":5274,"title":{},"body":{"todo.html":{}}}],["sharereplay",{"_index":2163,"title":{},"body":{"components/ShellComponent.html":{}}}],["shas",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["shell",{"_index":2139,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell'},{'name",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shell.component.html",{"_index":2142,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":2143,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/shell.component",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["shellcomponent",{"_index":305,"title":{"components/ShellComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["shift+h",{"_index":1150,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["shift+p",{"_index":1718,"title":{},"body":{"components/PlayerComponent.html":{}}}],["show",{"_index":1425,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showdelay",{"_index":5350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdirectorypicker",{"_index":841,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["showpicker",{"_index":840,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"classes/FileLoaderService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{}}}],["shows",{"_index":641,"title":{},"body":{"interfaces/Chainable.html":{}}}],["showslidepanel",{"_index":2408,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["shuffle",{"_index":1802,"title":{},"body":{"injectables/PlayerService.html":{}}}],["side",{"_index":2192,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["sidenav",{"_index":2145,"title":{},"body":{"components/ShellComponent.html":{},"changelog.html":{}}}],["signal",{"_index":87,"title":{},"body":{"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/ThemeService.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["signal(0",{"_index":442,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(44_100",{"_index":464,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(false",{"_index":457,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{},"components/PlaylistComponent.html":{}}}],["signal(this.localstorageservice.retrieve('alpha",{"_index":2438,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('barcount",{"_index":2443,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capfalldown",{"_index":2451,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('capheight",{"_index":2453,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('darkmode",{"_index":2260,"title":{},"body":{"injectables/ThemeService.html":{}}}],["signal(this.localstorageservice.retrieve('fftsize",{"_index":2459,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('gap",{"_index":2461,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('linethickness",{"_index":2463,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('mindb",{"_index":2466,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('prefertagembeddedpicture",{"_index":1491,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('repeat",{"_index":1851,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('shuffle",{"_index":1854,"title":{},"body":{"injectables/PlayerService.html":{}}}],["signal(this.localstorageservice.retrieve('smoothing",{"_index":2474,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["signal(this.localstorageservice.retrieve('usetagembeddedpicture",{"_index":1493,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usetagscache",{"_index":1495,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('usewebmetainfos",{"_index":1497,"title":{},"body":{"injectables/MetadataService.html":{}}}],["signal(this.localstorageservice.retrieve('visualmode",{"_index":2645,"title":{},"body":{"injectables/VisualsService.html":{}}}],["signal(this.storageservice.retrieve('basegain",{"_index":440,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(this.storageservice.retrieve('volume",{"_index":466,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(true",{"_index":460,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["signal(undefined",{"_index":142,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/PlayerService.html":{}}}],["signals",{"_index":496,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["signalös",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":5136,"title":{},"body":{"license.html":{}}}],["simpler",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["simplified",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["sind",{"_index":1231,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["size",{"_index":1317,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["sizes",{"_index":1918,"title":{},"body":{"injectables/PlayerService.html":{}}}],["sizing",{"_index":981,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["skiplocationchange",{"_index":2148,"title":{},"body":{"components/ShellComponent.html":{}}}],["skipped",{"_index":2218,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["slicewidthcache",{"_index":5322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slide",{"_index":363,"title":{"additional-documentation/ui-components-slide-panel.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"additional-documentation/ui-components-slide-panel.html":{}}}],["slidepanelcomponent",{"_index":362,"title":{"components/SlidePanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["slider",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["sliders",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":726,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"components/PlaylistComponent.html":{}}}],["smaller",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["smooth",{"_index":2075,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["smoothing",{"_index":2409,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["smoothingtimeconstant",{"_index":253,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["snyk",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["soll",{"_index":2389,"title":{},"body":{"injectables/UpdateService.html":{}}}],["sonarjs",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["sonarjs/pseudo",{"_index":1986,"title":{},"body":{"injectables/PlayerService.html":{}}}],["song",{"_index":1817,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"changelog.html":{}}}],["song.file.name",{"_index":2118,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.file.name).tolowercase().includes(term",{"_index":2019,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata",{"_index":2113,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.coverurl",{"_index":2114,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata.crc",{"_index":2111,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.artist",{"_index":2020,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song.metadata?.crc",{"_index":1927,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["song.metadata?.title",{"_index":2018,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.artist",{"_index":2119,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["song?.metadata?.title",{"_index":2117,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["songplaying",{"_index":2115,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["sort",{"_index":177,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["sortable",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":5269,"title":{},"body":{"todo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"components/AppComponent.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/CoverDisplayComponent.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{}}}],["spark",{"_index":1508,"title":{},"body":{"injectables/MetadataService.html":{},"dependencies.html":{}}}],["sparkmd5",{"_index":1507,"title":{},"body":{"injectables/MetadataService.html":{}}}],["sparkmd5.arraybuffer.hash(await",{"_index":1588,"title":{},"body":{"injectables/MetadataService.html":{}}}],["spectrogram",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":2034,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["splashscreen",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1916,"title":{},"body":{"injectables/PlayerService.html":{}}}],["stable",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":615,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{}}}],["standing",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["start_button",{"_index":56,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2669,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starts",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["startvisualization(getdatamethod",{"_index":2601,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["state",{"_index":495,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MediaSessionService.html":{}}}],["statement",{"_index":5186,"title":{},"body":{"license.html":{}}}],["statt",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["statutory",{"_index":5230,"title":{},"body":{"license.html":{}}}],["steps",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":281,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/EqualizerGainValues.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"injectables/PlayerService.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["stopvisualizer",{"_index":2519,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["storage",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["storageservice",{"_index":477,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["storagesettingscomponent",{"_index":365,"title":{"components/StorageSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["store",{"_index":162,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["storeconfig",{"_index":5360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeschema",{"_index":5363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"components/EqualizerComponent.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"interfaces/VisualsColorConfig.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structures",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["stuff",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["style",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["stylelint",{"_index":2993,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":911,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["styleurl",{"_index":128,"title":{},"body":{"interfaces/Album.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":920,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["sub",{"_index":1176,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subfiles",{"_index":861,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["subject",{"_index":473,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"license.html":{}}}],["sublicensable",{"_index":5201,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2048,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["subscription",{"_index":1135,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["subsequent",{"_index":5023,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":1224,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["substr(hotkey[0].length",{"_index":1227,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["successor",{"_index":5134,"title":{},"body":{"license.html":{}}}],["successors",{"_index":5173,"title":{},"body":{"license.html":{}}}],["such",{"_index":5121,"title":{},"body":{"license.html":{}}}],["suche",{"_index":5267,"title":{},"body":{"todo.html":{}}}],["super",{"_index":1360,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["support",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["supported",{"_index":1471,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["supports",{"_index":4963,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":5223,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":5154,"title":{},"body":{"license.html":{}}}],["suspended",{"_index":593,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["svg",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["svgo",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["swc/core",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["switch",{"_index":1794,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"changelog.html":{}}}],["switched",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["swupdate",{"_index":2362,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{}}}],["swupdate.activateupdate().then",{"_index":2380,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.isenabled",{"_index":2367,"title":{},"body":{"injectables/UpdateService.html":{}}}],["swupdate.versionupdates.pipe(takeuntildestroyed(this.destroref)).subscribe((event",{"_index":2368,"title":{},"body":{"injectables/UpdateService.html":{}}}],["syntax",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":4556,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["tag",{"_index":166,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"changelog.html":{},"index.html":{}}}],["tag.album",{"_index":168,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.artist",{"_index":150,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tag.coverurl",{"_index":171,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["tags",{"_index":781,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"injectables/LastfmMetadataService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["tags.album",{"_index":739,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.artist",{"_index":738,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["tags.format",{"_index":1562,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture",{"_index":1552,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.picture.format",{"_index":1554,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service",{"_index":1501,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.service.ts",{"_index":1250,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:17",{"_index":1255,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.service.ts:9",{"_index":1252,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["tags.title",{"_index":1559,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.track?.no?.tostring",{"_index":1560,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tags.types",{"_index":686,"title":{},"body":{"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tags.types.ts",{"_index":1247,"title":{},"body":{"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{}}}],["tags.year",{"_index":1561,"title":{},"body":{"injectables/MetadataService.html":{}}}],["tagsworkerrequest",{"_index":779,"title":{"interfaces/TagsWorkerRequest.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["tagsworkerresponse",{"_index":780,"title":{"interfaces/TagsWorkerResponse.html":{}},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/Id3TagsService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["takeuntildestroyed",{"_index":1862,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{}}}],["taking",{"_index":5194,"title":{},"body":{"license.html":{}}}],["target",{"_index":5275,"title":{},"body":{"todo.html":{}}}],["targetindex",{"_index":2077,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tastenkürzel",{"_index":1221,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["tek.mp3",{"_index":664,"title":{},"body":{"interfaces/Chainable.html":{}}}],["template",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["templates",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["templateurl",{"_index":126,"title":{},"body":{"interfaces/Album.html":{},"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["temporarily",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["term",{"_index":2013,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["termination",{"_index":5179,"title":{},"body":{"license.html":{}}}],["terms",{"_index":5083,"title":{},"body":{"license.html":{}}}],["territories",{"_index":5162,"title":{},"body":{"license.html":{}}}],["test",{"_index":514,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["tests",{"_index":3593,"title":{},"body":{"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["text",{"_index":1316,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{}}}],["texthex",{"_index":772,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thebespokepixel/es",{"_index":2267,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["theme",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{},"index.html":{}}}],["theme.types",{"_index":2268,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme/theme.service",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice",{"_index":315,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"injectables/PlayerService.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{}}}],["themeservice.initializetheme",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["themesettingscomponent",{"_index":367,"title":{"components/ThemeSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["thereof",{"_index":5132,"title":{},"body":{"license.html":{}}}],["thickness",{"_index":271,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["this._audiocontext",{"_index":546,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.createanalyser",{"_index":574,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.resume",{"_index":594,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiocontext.state",{"_index":592,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement",{"_index":544,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('canplay",{"_index":555,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('durationchange",{"_index":562,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('ended",{"_index":572,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('error",{"_index":549,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadeddata",{"_index":552,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('loadstart",{"_index":553,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('pause",{"_index":569,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('play",{"_index":564,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.addeventlistener('timeupdate",{"_index":560,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.currenttime",{"_index":604,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.fastseek(position",{"_index":603,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.loop",{"_index":601,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.pause",{"_index":597,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.play",{"_index":595,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audioelement.src",{"_index":589,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiosourcenode",{"_index":545,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._audiosourcenode.connect(analyser",{"_index":575,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.add(analyser",{"_index":576,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.clear",{"_index":587,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.delete(analyser",{"_index":579,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.foreach((analyser",{"_index":586,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._connectedanalyzers.has(analyser",{"_index":577,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._eqgainnode",{"_index":547,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[band",{"_index":538,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._frequencyfilters[bandfrequency].gain.value",{"_index":606,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._gainnode",{"_index":548,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.asobservable",{"_index":498,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._hasended.next(true",{"_index":573,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this._internalanalyzer",{"_index":2587,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this._pause",{"_index":1171,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.accentcolor",{"_index":2294,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.accentcolorpalette",{"_index":2295,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.activeaxescaches[gamepad.index",{"_index":1120,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.addfilestoplaylist(...filedatas",{"_index":1924,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addfilestoplaylist(file",{"_index":1900,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.addtrackstoplaylist(...tracks",{"_index":236,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtrackstoplaylist(track",{"_index":238,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.addtracktoplaylist(track",{"_index":230,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.afterpausedorstopped",{"_index":1949,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.afterplayloaded",{"_index":1922,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.alpha",{"_index":2456,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.alpha.set(value",{"_index":2499,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser",{"_index":2570,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analyser.fftsize",{"_index":2483,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.maxdecibels",{"_index":2489,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.mindecibels",{"_index":2487,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analyser.smoothingtimeconstant",{"_index":2485,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.analysernode.fftsize",{"_index":2596,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode.frequencybincount",{"_index":2595,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.analysernode[getdatamethod](buffer",{"_index":2626,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.angulartitleservice.settitle(title",{"_index":2354,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.animationframeref",{"_index":2631,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.api_url}/release",{"_index":749,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.api_url}?${queryparams.tostring",{"_index":1342,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.askuserforupdate().then((update",{"_index":2379,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.audioservice.currenttime",{"_index":1465,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{}}}],["this.audioservice.disconnectanalysernode(this._internalanalyzer",{"_index":2639,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.disconnectanalysernode(this.analyser",{"_index":2494,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.audioservice.duration",{"_index":1463,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.audioservice.hasended$.pipe(takeuntildestroyed(this.destroref)).subscribe",{"_index":1901,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.isloading",{"_index":1942,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.ispaused",{"_index":1460,"title":{},"body":{"injectables/MediaSessionService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isplaying",{"_index":1458,"title":{},"body":{"injectables/MediaSessionService.html":{},"components/PlaylistComponent.html":{}}}],["this.audioservice.isstopped",{"_index":1845,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pause",{"_index":1948,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.play",{"_index":1920,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.pluginnewanalysernode",{"_index":2441,"title":{},"body":{"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["this.audioservice.samplerate",{"_index":2597,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.audioservice.setfileassource(track.file",{"_index":1908,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(false",{"_index":1975,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setloop(true",{"_index":1973,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.audioservice.setvolume(this.audioservice.volume",{"_index":1759,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.audioservice.setvolume(value",{"_index":1761,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.audioservice.stop",{"_index":1950,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.axisactions.push(this.createdefaultaxisaction(number(axisindex",{"_index":1040,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex",{"_index":1093,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[axisindex].default",{"_index":1091,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.axisactions[index].positiveactionfunction(value",{"_index":1082,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.barcount",{"_index":2446,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barcount.set(value",{"_index":2503,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.barsconfig",{"_index":2564,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().barcount",{"_index":2588,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capfalldown",{"_index":2591,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().capheight",{"_index":2590,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.barsconfig().gap",{"_index":2589,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.basegain",{"_index":542,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.breakpointobserver",{"_index":2166,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.buildapiurl('album.getinfo",{"_index":1330,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.buttonactions.push(this.createdefaultbuttonaction(number(buttonindex",{"_index":1038,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex",{"_index":1089,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].default",{"_index":1083,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].mode",{"_index":1097,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[buttonindex].timeout",{"_index":1106,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.buttonactions[index].action(value",{"_index":1079,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.canvas",{"_index":2548,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.getboundingclientrect",{"_index":2576,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.canvas.transfercontroltooffscreen",{"_index":2554,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.capfalldown",{"_index":2449,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capfalldown.set(value",{"_index":2507,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight",{"_index":2447,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.capheight.set(value",{"_index":2505,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.checkforaxesinput(gp",{"_index":1061,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkforbuttonclicked(gp",{"_index":1060,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals",{"_index":1122,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.checkintervals[event.gamepad.index",{"_index":1055,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.closed",{"_index":2242,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.colorconfig",{"_index":2568,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.computecolors(this.accentcolor",{"_index":2296,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.computecolors(this.primarycolor",{"_index":2285,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.connectionlistener(event",{"_index":1043,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.cover_api_url}/release",{"_index":757,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.createdefaultaxisaction(axisindex",{"_index":1094,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createdefaultbuttonaction(buttonindex",{"_index":1090,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.createequalizer(audiocontext",{"_index":528,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.createobjecturlforembeddedpicture(metadata",{"_index":1565,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createobjecturlforembeddedpicture(metadatacache",{"_index":1535,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.createtrackfromfile(filedata",{"_index":1932,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentfolderhandle",{"_index":838,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.currentlyloadedtrack",{"_index":1844,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.covercolors",{"_index":1838,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack()?.metadata?.crc",{"_index":1943,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(track",{"_index":1921,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentlyloadedtrack.set(undefined",{"_index":1951,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist",{"_index":1953,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().indexof(selectedtrack",{"_index":1963,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist().some((playlistsong",{"_index":1925,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplaylist.update((playlist",{"_index":1928,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currenttime.set(this._audioelement.currenttime",{"_index":561,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.darkmode",{"_index":2298,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.darkmode.set(darkmode",{"_index":2278,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.data",{"_index":148,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.data().filter((track",{"_index":233,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.data.registeredhotkeys.entries",{"_index":1213,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.data.set(result",{"_index":215,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.decreasevolume(value",{"_index":1737,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.default_deadspace",{"_index":1113,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.default_turbo_timeout",{"_index":1025,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.defaults",{"_index":1162,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialog.open(hotkeyshelpdialogcomponent",{"_index":1192,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref",{"_index":1199,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dialogref.close",{"_index":1215,"title":{},"body":{"interfaces/HotkeysData.html":{},"components/HotkeysHelpDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2129,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref.close(true",{"_index":2128,"title":{},"body":{"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{}}}],["this.dialogref?.close",{"_index":1190,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.disconnectionlistener(event",{"_index":1045,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.document",{"_index":1145,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.dragendlistener",{"_index":958,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragenterlistener",{"_index":949,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragleavelistener",{"_index":955,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.dragoverlistener",{"_index":953,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.drop.bind(this",{"_index":961,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.droplistener",{"_index":960,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.duration.set(this._audioelement.duration",{"_index":563,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues",{"_index":608,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[band",{"_index":540,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues()[bandfrequency",{"_index":605,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.equalizergainvalues.set(bandgains",{"_index":610,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.eventmanager.addeventlistener(merged.element",{"_index":1174,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.extractcoverurls(data",{"_index":1327,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchalbuminfo(tags.artist",{"_index":1326,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.fetchcoverart(releasegroupid",{"_index":742,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fftsize",{"_index":2484,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fftsize.set(value",{"_index":2501,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.fileinput",{"_index":1361,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.accept",{"_index":1367,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.addeventlistener('change",{"_index":1375,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.click",{"_index":1374,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.files",{"_index":1373,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.id",{"_index":1364,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.multiple",{"_index":1369,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.style.display",{"_index":1366,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileinput.type",{"_index":1363,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.fileloaderservice.currentfolderhandle",{"_index":1753,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.fileloaderservice.init",{"_index":1752,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.fileloaderservice.openfiles",{"_index":1923,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.fileloaderservice.showpicker",{"_index":1770,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.files",{"_index":1377,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.files.map((file",{"_index":1371,"title":{},"body":{"injectables/LegacyFileLoaderService.html":{}}}],["this.filteredplaylist",{"_index":2059,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.findreleasegroupid(tags.artist",{"_index":741,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["this.fireaxisaction(axisindex",{"_index":1119,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.firebuttonaction(buttonindex",{"_index":1099,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.gamepadservice",{"_index":1722,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_x",{"_index":1784,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s1_y",{"_index":1786,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisteraxisaction(gamepadaxes.s2_y",{"_index":1785,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.a_button",{"_index":1772,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.b_button",{"_index":1773,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_down",{"_index":1780,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.dpad_up",{"_index":1779,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l1_button",{"_index":1782,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.l2_button",{"_index":1776,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r1_button",{"_index":1781,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.r2_button",{"_index":1777,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.s2_button",{"_index":1778,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.start_button",{"_index":1783,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.x_button",{"_index":1774,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.deregisterbuttonaction(gamepadbuttons.y_button",{"_index":1775,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registeraxisaction",{"_index":1734,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.a_button",{"_index":1723,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.b_button",{"_index":1724,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_down",{"_index":1743,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.dpad_up",{"_index":1741,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l1_button",{"_index":1748,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.l2_button",{"_index":1730,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r1_button",{"_index":1746,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.r2_button",{"_index":1732,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.s2_button",{"_index":1739,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.start_button",{"_index":1750,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.x_button",{"_index":1726,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice.registerbuttonaction(gamepadbuttons.y_button",{"_index":1728,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamepadservice?.deregisterbuttonaction(gamepadbuttons.select_button",{"_index":2493,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gamepadservice?.registerbuttonaction(gamepadbuttons.select_button",{"_index":2491,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap",{"_index":2448,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.gap.set(value",{"_index":2511,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.getcolorobject(new",{"_index":2302,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.getvolumeiconforlevel(this.audioservice.volume",{"_index":1696,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.handledroppedfiles(event.datatransfer?.files",{"_index":973,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.handleerror",{"_index":1269,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.handlemessage",{"_index":1267,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.helpopen",{"_index":1189,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys",{"_index":1197,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.delete(merged.keys",{"_index":1175,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(options.keys",{"_index":1157,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.get(realkeys",{"_index":1185,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeys.set(merged.keys",{"_index":1178,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.hotkeysservice",{"_index":1715,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.hotkeysservice.initialize",{"_index":1716,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.hotkeysservice.register",{"_index":1717,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.id3tagsservice.extracttags(filedata.file",{"_index":1537,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.increasevolume(value",{"_index":1738,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.indexeddbservice.add('metatags",{"_index":1563,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.indexeddbservice.clear('metatags').topromise",{"_index":1636,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.indexeddbservice.update('dirhandle",{"_index":842,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["this.isautoscrollenabled",{"_index":2054,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isautoscrollenabled.set(false",{"_index":2055,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.isaxisvalueindetectionrange(axis",{"_index":1114,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.isloading.set(false",{"_index":551,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.isloading.set(true",{"_index":554,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/LoaderService.html":{}}}],["this.islooping.set(loop",{"_index":602,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(false",{"_index":568,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.ispaused.set(true",{"_index":571,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying",{"_index":596,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(false",{"_index":570,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isplaying.set(true",{"_index":567,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(false",{"_index":566,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.isstopped.set(true",{"_index":600,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.lastfm_api_key",{"_index":1340,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["this.lastfmmetadataservice.getcoverpictureurls(tags",{"_index":1542,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.leave(event",{"_index":972,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.leave.bind(this",{"_index":957,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.linethickness",{"_index":2469,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.linethickness.set(value",{"_index":2509,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.loaderservice.hide",{"_index":1422,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["this.loaderservice.show",{"_index":1420,"title":{},"body":{"interceptors/LoaderInterceptor.html":{},"injectables/PlayerService.html":{}}}],["this.loadfiles",{"_index":1754,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.loadingcounter",{"_index":1430,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorage.clear",{"_index":2245,"title":{},"body":{"components/StorageSettingsComponent.html":{}}}],["this.localstorageservice.store('alpha",{"_index":2500,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('barcount",{"_index":2504,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capfalldown",{"_index":2508,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('capheight",{"_index":2506,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('darkmode",{"_index":2279,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.localstorageservice.store('fftsize",{"_index":2502,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('gap",{"_index":2512,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('linethickness",{"_index":2510,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('mindb",{"_index":2498,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('smoothing",{"_index":2496,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.localstorageservice.store('visualmode",{"_index":2650,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.mediasessionservice",{"_index":1869,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('nexttrack",{"_index":1875,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('pause",{"_index":1872,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('play",{"_index":1870,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('previoustrack",{"_index":1877,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekbackward",{"_index":1879,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('seekforward",{"_index":1881,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setactionhandler('stop",{"_index":1873,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setbrowsermetadata",{"_index":1910,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.mediasessionservice.setseektohandler((details",{"_index":1883,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.meta.addtag",{"_index":2291,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.meta.updatetag",{"_index":2292,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.metadataservice.getmetadata(filedata",{"_index":1938,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.metadataservice.prefertagembeddedpicture.set(event.checked",{"_index":1635,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagembeddedpicture.set(event.checked",{"_index":1634,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usetagscache.set(event.checked",{"_index":1633,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.metadataservice.usewebmetainfos.set(event.checked",{"_index":1632,"title":{},"body":{"components/MetadataSettingsComponent.html":{}}}],["this.mindb",{"_index":2488,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mindb.set(value",{"_index":2497,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.mode",{"_index":2562,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.musicbrainzservice.getcoverpictureurls(tags",{"_index":1543,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.next",{"_index":1876,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.nextid",{"_index":1272,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.open",{"_index":2241,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.openedstate",{"_index":2240,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["this.oscconfig",{"_index":2566,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.oscconfig().thickness",{"_index":2599,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.over.bind(this",{"_index":952,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.pause",{"_index":598,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.pendingrequests.clear",{"_index":1311,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.delete(id",{"_index":1279,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.entries",{"_index":1303,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.get(id",{"_index":1293,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.set(id",{"_index":1284,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.pendingrequests.values",{"_index":1308,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.placeholder_url",{"_index":1558,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.playerservice",{"_index":2016,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.addfilestoplaylist(...files.map((file",{"_index":1762,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.addtracktoplaylist(track",{"_index":245,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.playerservice.colorconfig",{"_index":2455,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.playerservice.currentlyloadedtrack",{"_index":2066,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentlyloadedtrack()?.metadata?.crc",{"_index":2109,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist",{"_index":2015,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.currentplaylist().length",{"_index":1693,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.durationseconds",{"_index":1793,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.loadfiles",{"_index":1771,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.next",{"_index":1747,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.playpause",{"_index":1720,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.playpausetrack(song",{"_index":2110,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.playerservice.previous",{"_index":1749,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.seekleft(value",{"_index":1756,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.seekright(value",{"_index":1757,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.selectnext",{"_index":1744,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.selectprevious",{"_index":1742,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.setseekposition(value",{"_index":1755,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.stop",{"_index":1725,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.togglerepeat",{"_index":1767,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerservice.toggleshuffle",{"_index":1768,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playpause",{"_index":1871,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(playlist[randomposition",{"_index":1958,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[0",{"_index":1962,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.currentplaylist()[currentposition",{"_index":1961,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(this.selectedtrack",{"_index":1947,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playtrack(track",{"_index":1945,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.prefertagembeddedpicture",{"_index":1524,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.pressedbuttonscaches[gamepad.index",{"_index":1101,"title":{},"body":{"injectables/GamepadService.html":{}}}],["this.previous",{"_index":1878,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.primarycolor",{"_index":2283,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.primarycolorpalette",{"_index":2284,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.register",{"_index":1149,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.renderer.listen('window",{"_index":950,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.renderer.setstyle(this.hostelement.nativeelement",{"_index":968,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["this.repeat",{"_index":1970,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('all",{"_index":1971,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('off",{"_index":1976,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.repeat.set('one",{"_index":1974,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.requestwakelock",{"_index":2660,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.resizeobserver",{"_index":2556,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.resizeobserver.disconnect",{"_index":2634,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.router.navigate(['/player",{"_index":231,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.router.navigate([route",{"_index":2175,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.samplerate.set(this._audiocontext.samplerate",{"_index":565,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.scrolltobottom",{"_index":2064,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrolltocurrenttrack",{"_index":2072,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.scrollviewport",{"_index":2045,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm",{"_index":2067,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.searchterm().tolowercase",{"_index":2014,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["this.seekleft(10",{"_index":1880,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekleft(value",{"_index":1731,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.seekright(10",{"_index":1882,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seekright(value",{"_index":1733,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.seektohandler(details",{"_index":1884,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.seektoposition(0",{"_index":599,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.selectedalbum",{"_index":176,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(album",{"_index":226,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedalbum.set(undefined",{"_index":223,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist",{"_index":157,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedartist.set(artist",{"_index":222,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack",{"_index":1946,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(song",{"_index":1941,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(this.currentplaylist()[currentposition",{"_index":1964,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.selectedtrack.set(track",{"_index":228,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectedtrack.set(undefined",{"_index":224,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["this.selectsong(track",{"_index":1907,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setaccentcolor(colors.peakcolor",{"_index":2281,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setaccentcolor(this.accentcolor",{"_index":2277,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setoverlayclass",{"_index":2275,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setplaybackstate('none",{"_index":1462,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('paused",{"_index":1461,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setplaybackstate('playing",{"_index":1459,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.setprimarycolor(colors.maincolor",{"_index":2280,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setprimarycolor(this.primarycolor",{"_index":2276,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setseekposition(details.seektime",{"_index":1969,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setseekposition(this.currenttime",{"_index":1965,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.setupresizeobserver",{"_index":2557,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.showpicker",{"_index":1751,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.shuffle",{"_index":1954,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.shuffle.set(!this.shuffle",{"_index":1977,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.sidenav()?.close",{"_index":2174,"title":{},"body":{"components/ShellComponent.html":{}}}],["this.smoothing",{"_index":2486,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.smoothing.set(value",{"_index":2495,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.startvisualization('getbytefrequencydata",{"_index":2598,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.startvisualization('getbytetimedomaindata",{"_index":2600,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.stop",{"_index":1874,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.stopvisualizer",{"_index":2571,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.storageservice.retrieve('equalizergainvalues",{"_index":445,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.swupdate",{"_index":2366,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.checkforupdate",{"_index":2387,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.swupdate.isenabled",{"_index":2386,"title":{},"body":{"injectables/UpdateService.html":{}}}],["this.themeservice.darkmode",{"_index":791,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.themeservice.setcolors(this.colorconfig",{"_index":1902,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.themeservice.setdarkmode(event.checked",{"_index":2344,"title":{},"body":{"components/ThemeSettingsComponent.html":{}}}],["this.title.set(title",{"_index":2355,"title":{},"body":{"injectables/TitleService.html":{}}}],["this.titleservice.settitle('gblaster",{"_index":1721,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglehelpdialog",{"_index":1154,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["this.togglemute",{"_index":1740,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.togglerepeat",{"_index":1729,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.toggleshuffle",{"_index":1727,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.track()?.metadata?.covercolors?.darkmuted?.hex",{"_index":792,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.track()?.metadata?.covercolors?.lightmuted?.hex",{"_index":793,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.track()?.metadata?.coverurl?.original",{"_index":796,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["this.updatemediapositionstate(duration",{"_index":1466,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["this.usetagembeddedpicture",{"_index":1522,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usetagscache",{"_index":1518,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.usewebmetainfos",{"_index":1540,"title":{},"body":{"injectables/MetadataService.html":{}}}],["this.visualizefrequencybars(false",{"_index":2577,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizefrequencybars(true",{"_index":2580,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(false",{"_index":2578,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizeoscilloscope(true",{"_index":2579,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker",{"_index":2550,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.postmessage",{"_index":2555,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualizerworker.terminate",{"_index":2640,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.visualmode",{"_index":2648,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualmode.set(nextmode",{"_index":2649,"title":{},"body":{"injectables/VisualsService.html":{}}}],["this.visualsservice.togglevisualmode",{"_index":2492,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.visualsservice.visualmode",{"_index":2472,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["this.volume",{"_index":509,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["this.wakelock",{"_index":2659,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.addeventlistener('release",{"_index":2664,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelock.release",{"_index":2667,"title":{},"body":{"injectables/WakelockService.html":{}}}],["this.wakelockservice?.activatewakelock",{"_index":1904,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.wakelockservice?.releasewakelock",{"_index":1906,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.worker",{"_index":1261,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('error",{"_index":1268,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.addeventlistener('message",{"_index":1266,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.onmessage",{"_index":2552,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["this.worker.postmessage",{"_index":1289,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('error",{"_index":1306,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.removeeventlistener('message",{"_index":1305,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["this.worker.terminate",{"_index":1307,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["those",{"_index":5035,"title":{},"body":{"license.html":{}}}],["threads.js",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["through",{"_index":5065,"title":{},"body":{"license.html":{}}}],["throughout",{"_index":5013,"title":{},"body":{"license.html":{}}}],["thum",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["thumb",{"_index":763,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{}}}],["thumbnails",{"_index":704,"title":{},"body":{"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{}}}],["time",{"_index":811,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"license.html":{}}}],["time.pipe",{"_index":801,"title":{},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{}}}],["time.ts",{"_index":4917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timed",{"_index":1282,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeout",{"_index":20,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"injectables/Id3TagsService.html":{}}}],["timeoutid",{"_index":1277,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timeoutms",{"_index":1254,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["timepipe",{"_index":786,"title":{"pipes/TimePipe.html":{}},"body":{"components/CoverDisplayComponent.html":{},"components/PlayerComponent.html":{},"pipes/TimePipe.html":{}}}],["timesincelastupdate",{"_index":2617,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["tinycolor",{"_index":2266,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["tinycolor(hex",{"_index":2314,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(10",{"_index":2316,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(15",{"_index":2318,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(18",{"_index":2320,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(21",{"_index":2322,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(24",{"_index":2324,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(27",{"_index":2326,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(30",{"_index":2328,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).darken(5",{"_index":2315,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(15",{"_index":2312,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(20",{"_index":2310,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(25",{"_index":2308,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(30",{"_index":2306,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(35",{"_index":2305,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(45",{"_index":2304,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(hex).lighten(55",{"_index":2303,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tinycolor(value",{"_index":2330,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":179,"title":{},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["title').contains(title",{"_index":5370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["titleservice",{"_index":1703,"title":{"injectables/TitleService.html":{}},"body":{"components/PlayerComponent.html":{},"components/ShellComponent.html":{},"injectables/TitleService.html":{}}}],["titleservice.title",{"_index":2176,"title":{},"body":{"components/ShellComponent.html":{}}}],["todo",{"_index":512,"title":{"todo.html":{}},"body":{"injectables/AudioService.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"changelog.html":{}}}],["todo.md",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["todos",{"_index":4226,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["toggle",{"_index":1628,"title":{},"body":{"components/MetadataSettingsComponent.html":{},"changelog.html":{}}}],["togglehelpdialog",{"_index":1188,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["toggleicon",{"_index":2193,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["togglemute",{"_index":1666,"title":{},"body":{"components/PlayerComponent.html":{}}}],["togglerepeat",{"_index":1667,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["toggleshuffle",{"_index":1668,"title":{},"body":{"components/PlayerComponent.html":{},"injectables/PlayerService.html":{}}}],["togglevisualmode",{"_index":2643,"title":{},"body":{"injectables/VisualsService.html":{}}}],["token",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["tolowercase().includes(term",{"_index":2021,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["tools",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["tooltips",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":2194,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["tosignal",{"_index":2164,"title":{},"body":{"components/ShellComponent.html":{}}}],["tosignal(this.ishandset",{"_index":2151,"title":{},"body":{"components/ShellComponent.html":{}}}],["tostring",{"_index":1223,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["touppercase",{"_index":1226,"title":{},"body":{"components/HotkeysHelpDialogComponent.html":{}}}],["track",{"_index":94,"title":{"interfaces/Track.html":{}},"body":{"interfaces/Album.html":{},"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["track();@let",{"_index":818,"title":{},"body":{"components/CoverDisplayComponent.html":{}}}],["track.album",{"_index":234,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["track.coverurl",{"_index":1400,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.metadata",{"_index":1909,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.album",{"_index":1913,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.artist",{"_index":1912,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl.original",{"_index":1917,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.coverurl?.original",{"_index":1915,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata.title",{"_index":1911,"title":{},"body":{"injectables/PlayerService.html":{}}}],["track.metadata?.crc",{"_index":1944,"title":{},"body":{"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{}}}],["track.title",{"_index":1402,"title":{},"body":{"components/LibraryComponent.html":{}}}],["track.track",{"_index":1401,"title":{},"body":{"components/LibraryComponent.html":{}}}],["trackbycrc",{"_index":2002,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trackbycrc(index",{"_index":2010,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["trackmetadata",{"_index":691,"title":{"interfaces/TrackMetadata.html":{}},"body":{"interfaces/ColorConfig.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["tracks",{"_index":175,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"changelog.html":{}}}],["trademark",{"_index":5218,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":5200,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":2628,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["transform",{"_index":616,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/SlidePanelComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(value",{"_index":617,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"pipes/TimePipe.html":{}}}],["transitions",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["translate",{"_index":5096,"title":{},"body":{"license.html":{}}}],["transparency",{"_index":2515,"title":{},"body":{"components/VisualizerComponent.html":{},"changelog.html":{}}}],["treaty",{"_index":5141,"title":{},"body":{"license.html":{}}}],["tree",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["trial",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["trials",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":614,"title":{},"body":{"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"injectables/LegacyFileLoaderService.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"pipes/TimePipe.html":{},"injectables/UpdateService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":211,"title":{},"body":{"interfaces/Album.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/DirHandleEntry.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MediaSessionService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"injectables/WakelockService.html":{},"changelog.html":{}}}],["ts",{"_index":1888,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["tsconfig",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":3041,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["tslint",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["ttry",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["turbo",{"_index":35,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/PlayerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["turbotimeout",{"_index":1023,"title":{},"body":{"injectables/GamepadService.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"interfaces/AnalyserConfig.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"pipes/BandPipe.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"pipes/BitratePipe.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Color.html":{},"interfaces/ColorConfig.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"interfaces/DirHandleEntry.html":{},"components/EqualizerComponent.html":{},"interfaces/FileData.html":{},"components/FileDropOverlayComponent.html":{},"classes/FileLoaderService.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"interfaces/HotkeysData.html":{},"injectables/HotkeysService.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"injectables/Id3TagsService.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/LegacyFileLoaderService.html":{},"components/LibraryComponent.html":{},"interceptors/LoaderInterceptor.html":{},"injectables/MediaSessionService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"interfaces/PromptDialogData.html":{},"interfaces/RemoteCoverPicture.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"injectables/WakelockService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":5279,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1890,"title":{},"body":{"injectables/PlayerService.html":{},"changelog.html":{}}}],["types/node",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["typing",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["ubuntu",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":2070,"title":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}},"body":{"components/PlaylistComponent.html":{},"changelog.html":{},"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{}}}],["uint8array",{"_index":284,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/variables.html":{}}}],["um",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["unconditional",{"_index":5203,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":5151,"title":{},"body":{"license.html":{}}}],["und",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":193,"title":{},"body":{"interfaces/Album.html":{},"pipes/BitratePipe.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"components/LibraryComponent.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"directives/VisualsDirective.html":{}}}],["under",{"_index":5082,"title":{},"body":{"license.html":{}}}],["understands",{"_index":5252,"title":{},"body":{"license.html":{}}}],["uneeded",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["unfair",{"_index":5112,"title":{},"body":{"license.html":{}}}],["unicorn",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":163,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"miscellaneous/variables.html":{}}}],["uniquealbums",{"_index":156,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["uniqueartists",{"_index":145,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{}}}],["unit",{"_index":5398,"title":{},"body":{"additional-documentation/ui-components-file-drop-overlay.html":{},"additional-documentation/ui-components-slide-panel.html":{},"additional-documentation/ui-components-dialogs.html":{},"additional-documentation/helpers.html":{}}}],["universal",{"_index":4989,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":419,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"injectables/Id3TagsService.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"pipes/TimePipe.html":{},"injectables/WakelockService.html":{},"license.html":{}}}],["unregister",{"_index":1235,"title":{},"body":{"injectables/HotkeysService.html":{}}}],["unregister(keys",{"_index":1181,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{}}}],["unsubscribe",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":559,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PromptDialogComponent.html":{},"interfaces/PromptDialogData.html":{},"injectables/UpdateService.html":{},"changelog.html":{}}}],["update.service",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["updated",{"_index":2071,"title":{},"body":{"components/PlaylistComponent.html":{},"changelog.html":{}}}],["updateinterval",{"_index":2622,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["updatemediapositionstate",{"_index":1441,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updatemediapositionstate(duration",{"_index":1453,"title":{},"body":{"injectables/MediaSessionService.html":{}}}],["updates",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["updateservice",{"_index":317,"title":{"injectables/UpdateService.html":{}},"body":{"components/AppComponent.html":{},"injectables/UpdateService.html":{}}}],["updateservice.init",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["updating",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":636,"title":{},"body":{"interfaces/Chainable.html":{}}}],["upon",{"_index":5021,"title":{},"body":{"license.html":{}}}],["url",{"_index":677,"title":{},"body":{"interfaces/Chainable.html":{},"interfaces/CoverArtImage.html":{},"interfaces/CoverArtResponse.html":{},"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{},"injectables/MetadataService.html":{},"interfaces/MusicbrainzReleaseGroup.html":{},"interfaces/MusicbrainzResponse.html":{},"injectables/MusicbrainzService.html":{},"miscellaneous/functions.html":{}}}],["url('metadata.worker",{"_index":1263,"title":{},"body":{"injectables/Id3TagsService.html":{}}}],["url('visuals.worker",{"_index":2551,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["url.createobjecturl(file",{"_index":590,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["url.createobjecturl(new",{"_index":1529,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(objecturl",{"_index":1556,"title":{},"body":{"injectables/MetadataService.html":{}}}],["url.revokeobjecturl(oldsource",{"_index":591,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{}}}],["urls",{"_index":1528,"title":{},"body":{"injectables/MetadataService.html":{},"changelog.html":{}}}],["urlsearchparams",{"_index":1337,"title":{},"body":{"interfaces/LastfmAlbum.html":{},"interfaces/LastfmErrorResponse.html":{},"interfaces/LastfmImage.html":{},"injectables/LastfmMetadataService.html":{},"interfaces/LastfmSuccessResponse.html":{}}}],["usage",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":190,"title":{},"body":{"interfaces/Album.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlaylistComponent.html":{},"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["useclass",{"_index":5355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":2224,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["usefactory",{"_index":5347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":867,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"components/PlaylistComponent.html":{}}}],["usermediainput",{"_index":5272,"title":{},"body":{"todo.html":{}}}],["uses",{"_index":4964,"title":{},"body":{"index.html":{}}}],["usetagembeddedpicture",{"_index":1485,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usetagscache",{"_index":1486,"title":{},"body":{"injectables/MetadataService.html":{}}}],["usevalue",{"_index":5349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usewebmetainfos",{"_index":1487,"title":{},"body":{"injectables/MetadataService.html":{}}}],["using",{"_index":2785,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["utc",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["v",{"_index":5118,"title":{},"body":{"license.html":{}}}],["v0.10.0",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["v0.11.0",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["v0.12.0",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["v0.13.0",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["v0.14.0",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["v0.15.0",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["v0.16.0",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["v0.17.0",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["v0.18.0",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["v0.19.0",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["v0.20.0",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["v0.21.0",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["v0.22.0",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["v0.23.0",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["v0.24.0",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["v0.25.0",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["v0.28.0",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["v0.29.0",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["v0.4.0",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["v0.5.0",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["v0.6.0",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["v0.7.0",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["v0.8.0",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["v0.9.0",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["v1.0.0",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["v1.0.1",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["v1.0.2",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["v1.10.0",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["v1.11.0",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["v1.11.1",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["v1.11.10",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["v1.11.11",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["v1.11.12",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["v1.11.2",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["v1.11.3",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["v1.11.4",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["v1.11.5",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["v1.11.6",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["v1.11.7",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["v1.11.8",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["v1.11.9",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["v1.12.0",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["v1.13.0",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["v1.14.0",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["v1.15.0",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["v1.16.0",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["v1.17.0",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["v1.18.0",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["v1.19.0",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["v1.2.2",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["v1.3.0",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["v1.4.0",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["v1.4.1",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["v1.6.1",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["v1.6.2",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["v1.6.3",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["v1.6.4",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["v1.7.1",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["v1.9.1",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["v10.0.0",{"_index":4178,"title":{},"body":{"changelog.html":{}}}],["v10.0.1",{"_index":4175,"title":{},"body":{"changelog.html":{}}}],["v10.0.2",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["v10.0.3",{"_index":4166,"title":{},"body":{"changelog.html":{}}}],["v10.0.4",{"_index":4161,"title":{},"body":{"changelog.html":{}}}],["v10.1.0",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["v10.2.0",{"_index":4152,"title":{},"body":{"changelog.html":{}}}],["v10.3.0",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["v10.3.1",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["v10.3.2",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["v11.0.0",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["v11.0.2",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["v11.1.0",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["v11.1.1",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["v11.1.2",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["v11.18.0",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["v11.2.0",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["v11.20.0",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["v11.22.0",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["v11.24.1",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["v11.3.0",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["v11.3.1",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["v11.30.1",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["v11.4.0",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["v11.4.1",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["v11.4.10",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["v11.4.11",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["v11.4.2",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["v11.4.3",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["v11.4.5",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["v11.4.6",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["v11.4.7",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["v11.4.8",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["v11.4.9",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["v11.5.0",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["v11.5.1",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["v11.5.10",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["v11.5.11",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["v11.5.12",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["v11.5.13",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["v11.5.14",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["v11.5.2",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["v11.5.3",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["v11.5.4",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["v11.5.5",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["v11.5.6",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["v11.5.7",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["v11.5.8",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["v11.5.9",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["v12",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["v12.0.0",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["v12.0.1",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["v12.0.10",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["v12.0.11",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["v12.0.12",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["v12.0.13",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["v12.0.14",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["v12.0.15",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["v12.0.16",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["v12.0.2",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["v12.0.3",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["v12.0.4",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["v12.0.5",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["v12.0.6",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["v12.0.7",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["v12.0.8",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["v12.0.9",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["v12.2.13",{"_index":4204,"title":{},"body":{"changelog.html":{}}}],["v12.2.5",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["v12.3.0",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["v12.6.2",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["v12.8.0",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["v12.9.0",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["v13",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["v13.0.0",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["v13.0.1",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["v13.0.10",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["v13.0.11",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["v13.0.12",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["v13.0.13",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["v13.0.16",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["v13.0.18",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["v13.0.19",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["v13.0.2",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["v13.0.20",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["v13.0.3",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["v13.0.5",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["v13.0.6",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["v13.0.7",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["v13.0.8",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["v13.0.9",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["v13.1.0",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["v13.1.1",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["v13.1.10",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["v13.1.11",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["v13.1.12",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["v13.1.2",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["v13.1.3",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["v13.1.4",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["v13.1.5",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["v13.1.6",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["v13.1.7",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["v13.1.8",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["v13.1.9",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["v13.10.1",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["v13.11.2",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["v13.11.4",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["v13.13.0",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["v13.14.2",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["v13.15.1",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["v13.2.0",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["v13.2.1",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["v13.2.2",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["v13.2.3",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["v13.2.4",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["v13.2.5",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["v13.2.6",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["v13.22.0",{"_index":3074,"title":{},"body":{"changelog.html":{}}}],["v13.24.2",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["v13.26.0",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["v13.28.0",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["v13.29.1",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["v13.29.3",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["v13.3.0",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["v13.3.1",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["v13.3.2",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["v13.3.3",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["v13.3.4",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["v13.3.5",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["v13.31.2",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["v13.32.0",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["v13.33.0",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["v13.5.1",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["v13.7.2",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["v13.7.5",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["v14.0.0",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["v14.0.1",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["v14.0.10",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["v14.0.11",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["v14.0.12",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["v14.0.13",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["v14.0.2",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["v14.0.3",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["v14.0.4",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["v14.0.5",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["v14.0.6",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["v14.0.7",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["v14.0.8",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["v14.0.9",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["v14.1.0",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["v14.1.1",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["v14.1.10",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["v14.1.11",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["v14.1.12",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["v14.1.13",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["v14.1.14",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["v14.1.15",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["v14.1.16",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["v14.1.17",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["v14.1.18",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["v14.1.19",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["v14.1.2",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["v14.1.20",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["v14.1.23",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["v14.1.3",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["v14.1.4",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["v14.1.5",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["v14.1.6",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["v14.1.7",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["v14.1.8",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["v14.1.9",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["v15",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["v15.0.0",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["v15.0.1",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["v15.0.2",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["v15.0.3",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["v15.0.4",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["v15.0.5",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["v15.0.6",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["v15.0.7",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["v15.0.8",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["v15.0.9",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["v15.1.0",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["v15.1.1",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["v15.1.10",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["v15.1.11",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["v15.1.12",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["v15.1.13",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["v15.1.14",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["v15.1.16",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["v15.1.17",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["v15.1.2",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["v15.1.3",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["v15.1.4",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["v15.1.5",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["v15.1.6",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["v15.1.7",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["v15.1.8",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["v15.1.9",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["v15.4.4",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["v16.0.0",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["v16.0.1",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["v16.0.2",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["v16.0.3",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["v16.0.4",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["v16.0.5",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["v16.0.6",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["v17",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["v17.0.1",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["v17.0.10",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["v17.0.11",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["v17.0.12",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["v17.0.13",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["v17.0.14",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["v17.0.15",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["v17.0.16",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["v17.0.17",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["v17.0.18",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["v17.0.2",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["v17.0.3",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["v17.0.4",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["v17.0.5",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["v17.0.6",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["v17.0.7",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["v17.0.8",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["v17.0.9",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["v18",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["v18.0.0",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["v18.0.1",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["v18.1.0",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["v18.1.1",{"_index":3139,"title":{},"body":{"changelog.html":{}}}],["v18.16.5",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["v18.2.0",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["v18.2.2",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["v18.2.3",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["v18.2.4",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["v18.2.5",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["v18.2.6",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["v18.2.7",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["v19",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["v19.0.0",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["v19.0.1",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["v19.0.10",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["v19.0.2",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["v19.0.3",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["v19.0.4",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["v19.0.5",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["v19.0.6",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["v19.0.7",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["v19.0.8",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["v19.0.9",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["v19.1.0",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["v19.1.1",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["v19.2.0",{"_index":3005,"title":{},"body":{"changelog.html":{}}}],["v19.2.1",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["v19.2.10",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["v19.2.2",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["v19.2.3",{"_index":2985,"title":{},"body":{"changelog.html":{}}}],["v19.2.4",{"_index":2981,"title":{},"body":{"changelog.html":{}}}],["v19.2.5",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["v19.2.6",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["v19.2.7",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["v19.2.8",{"_index":2958,"title":{},"body":{"changelog.html":{}}}],["v19.2.9",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["v19.3.0",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["v19.4.0",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["v19.4.1",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["v19.4.10",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["v19.4.11",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["v19.4.12",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["v19.4.13",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["v19.4.14",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["v19.4.15",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["v19.4.2",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["v19.4.3",{"_index":2922,"title":{},"body":{"changelog.html":{}}}],["v19.4.4",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["v19.4.5",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["v19.4.6",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["v19.4.7",{"_index":2901,"title":{},"body":{"changelog.html":{}}}],["v19.4.8",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["v19.4.9",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["v19.5.0",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["v19.5.1",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["v19.5.3",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["v19.5.4",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["v2.0.2",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["v2.5.0",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["v2.5.3",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["v2.6.0",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["v2.6.1",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["v2.6.2",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["v2.6.3",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["v2.7.0",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["v2.8.1",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["v20.0.0",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["v20.0.1",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["v20.1.0",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["v20.1.1",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["v20.1.2",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["v20.1.3",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["v20.1.4",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["v20.2.0",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["v20.2.1",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["v20.2.2",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["v20.2.3",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["v20.2.4",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["v20.2.5",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["v20.8.6",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["v24",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["v3.0.3",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["v3.0.4",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["v3.0.5",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["v3.0.6",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["v3.0.7",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["v3.0.8",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["v3.0.9",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["v3.10.0",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["v3.11.0",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["v3.4.0",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["v3.4.1",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["v3.5.0",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["v3.5.1",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["v3.6.0",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["v3.7.0",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["v3.8.0",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["v3.8.1",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["v3.9.0",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["v4.2.0",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["v4.3.1",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["v4.4.0",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["v4.5.0",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["v4.6.0",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["v4.7.0",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["v5.1.0",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["v5.2.0",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["v5.2.1",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["v5.2.10",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["v5.2.11",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["v5.2.12",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["v5.2.2",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["v5.2.3",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["v5.2.4",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["v5.2.5",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["v5.2.6",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["v5.2.7",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["v5.2.8",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["v5.2.9",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["v5.48.0",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["v6.0.0",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["v6.0.1",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["v6.1.0",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["v6.1.1",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["v6.2.0",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["v6.2.1",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["v6.2.2",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["v6.2.3",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["v6.2.4",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["v6.2.5",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["v6.2.6",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["v6.3.0",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["v6.3.1",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["v6.4.0",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["v6.4.1",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["v6.5.0",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["v6.5.1",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["v6.5.2",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["v6.5.3",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["v6.5.4",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["v6.5.5",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["v6.5.6",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["v6.5.7",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["v6.5.8",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["v6.5.9",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["v6.6.0",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["v6.6.1",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["v6.6.2",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["v6.6.3",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["v6.6.4",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["v6.6.5",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["v6.6.6",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["v6.6.7",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["v6.7.0",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["v6.7.1",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["v6.7.2",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["v6.7.3",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["v6.7.4",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["v7.0.0",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["v7.0.1",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["v7.0.2",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["v7.0.3",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["v7.0.4",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["v7.0.5",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["v7.0.6",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["v7.1.0",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["v7.1.1",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["v7.13.1",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["v7.13.3",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["v7.13.4",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["v7.2.0",{"_index":4337,"title":{},"body":{"changelog.html":{}}}],["v8.0.0",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["v8.0.1",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["v8.0.3",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["v8.1.0",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["v8.1.1",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["v8.1.10",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["v8.1.2",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["v8.1.3",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["v8.1.4",{"_index":4308,"title":{},"body":{"changelog.html":{}}}],["v8.1.5",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["v8.1.6",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["v8.1.7",{"_index":4297,"title":{},"body":{"changelog.html":{}}}],["v8.1.8",{"_index":4291,"title":{},"body":{"changelog.html":{}}}],["v8.1.9",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["v8.26.1",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["v8.31.0",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["v8.4.21",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["v8.6.0",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["v9.0.0",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["v9.0.1",{"_index":4276,"title":{},"body":{"changelog.html":{}}}],["v9.0.10",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["v9.0.11",{"_index":4241,"title":{},"body":{"changelog.html":{}}}],["v9.0.2",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["v9.0.3",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["v9.0.4",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["v9.0.5",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["v9.0.6",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["v9.0.7",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["v9.0.8",{"_index":4251,"title":{},"body":{"changelog.html":{}}}],["v9.0.9",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["v9.1.0",{"_index":4235,"title":{},"body":{"changelog.html":{}}}],["v9.1.1",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["v9.1.2",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["v9.1.3",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["v9.2.0",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["v9.2.1",{"_index":4199,"title":{},"body":{"changelog.html":{}}}],["v9.2.2",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["v9.2.3",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["v9.2.4",{"_index":4183,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":424,"title":{},"body":{"injectables/AudioService.html":{},"pipes/BandPipe.html":{},"pipes/BitratePipe.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MetadataService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"pipes/TimePipe.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(1",{"_index":888,"title":{},"body":{"components/EqualizerComponent.html":{}}}],["value.tostring",{"_index":624,"title":{},"body":{"pipes/BandPipe.html":{}}}],["value.tostring().slice(0",{"_index":622,"title":{},"body":{"pipes/BandPipe.html":{}}}],["var",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["variables",{"_index":5289,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables.scss",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["variant",{"_index":1765,"title":{},"body":{"components/PlayerComponent.html":{}}}],["various",{"_index":642,"title":{},"body":{"interfaces/Chainable.html":{}}}],["verfügbar",{"_index":2388,"title":{},"body":{"injectables/UpdateService.html":{}}}],["verifypermission",{"_index":4939,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verifypermission(entry.handle",{"_index":837,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{}}}],["verifypermission(handle",{"_index":864,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2372,"title":{},"body":{"injectables/UpdateService.html":{},"changelog.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_detected",{"_index":2370,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_installation_failed",{"_index":2382,"title":{},"body":{"injectables/UpdateService.html":{}}}],["version_ready",{"_index":2374,"title":{},"body":{"injectables/UpdateService.html":{}}}],["versions",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["very",{"_index":2053,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vi",{"_index":5120,"title":{},"body":{"license.html":{}}}],["via",{"_index":5271,"title":{},"body":{"todo.html":{},"additional-documentation/helpers.html":{}}}],["vibrant",{"_index":773,"title":{},"body":{"interfaces/CoverColor.html":{},"interfaces/CoverColorPalette.html":{},"injectables/MetadataService.html":{},"interfaces/RemoteCoverPicture.html":{},"interfaces/TagsWorkerRequest.html":{},"interfaces/TagsWorkerResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["vibrant.from(url).getpalette",{"_index":1591,"title":{},"body":{"injectables/MetadataService.html":{}}}],["vibrant/browser",{"_index":1506,"title":{},"body":{"injectables/MetadataService.html":{}}}],["view",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":2030,"title":{},"body":{"components/PlaylistComponent.html":{},"components/ShellComponent.html":{}}}],["viewchild('drawer",{"_index":2155,"title":{},"body":{"components/ShellComponent.html":{}}}],["viewchild('scrollviewport",{"_index":2024,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport",{"_index":2044,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getrenderedrange",{"_index":2082,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.getviewportsize",{"_index":2100,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.measurescrolloffset('bottom",{"_index":2050,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltoindex(playlist.length",{"_index":2074,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewport.scrolltooffset(offset",{"_index":2108,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["viewportheight",{"_index":2099,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["vii",{"_index":5135,"title":{},"body":{"license.html":{}}}],["virtual",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":969,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["visible",{"_index":970,"title":{},"body":{"components/FileDropOverlayComponent.html":{},"components/PlaylistComponent.html":{}}}],["visiblerange",{"_index":2081,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visiblerange.end",{"_index":2084,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualization",{"_index":2780,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["visualizefrequencybars",{"_index":2520,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizefrequencybars(circular",{"_index":2525,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope",{"_index":2521,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizeoscilloscope(circular",{"_index":2527,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualizer",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"changelog.html":{}}}],["visualizer.component.html",{"_index":2401,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer.component.scss",{"_index":2402,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualizer/visualizer.component",{"_index":1708,"title":{},"body":{"components/PlayerComponent.html":{}}}],["visualizer/visuals/visuals.directive",{"_index":2032,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizer/visuals/visuals.service",{"_index":2031,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["visualizercomponent",{"_index":369,"title":{"components/VisualizerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualizermode",{"_index":286,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"components/VisualizerComponent.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{},"interfaces/VisualsWorkerMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["visualizeroptions",{"_index":282,"title":{},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["visualizers",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["visualizerworker",{"_index":2544,"title":{},"body":{"directives/VisualsDirective.html":{}}}],["visualmode",{"_index":2642,"title":{},"body":{"injectables/VisualsService.html":{}}}],["visuals",{"_index":2769,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["visuals.types",{"_index":2536,"title":{},"body":{"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["visuals/visuals.directive",{"_index":2482,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.service",{"_index":2479,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visuals/visuals.types",{"_index":2478,"title":{},"body":{"components/VisualizerComponent.html":{}}}],["visualscolorconfig",{"_index":272,"title":{"interfaces/VisualsColorConfig.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["visualsdirective",{"_index":372,"title":{"directives/VisualsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CoverDisplayComponent.html":{},"components/EqualizerComponent.html":{},"components/FileDropOverlayComponent.html":{},"components/HotkeysHelpDialogComponent.html":{},"components/LibraryComponent.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/SettingsComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"components/ThemeSettingsComponent.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{}}}],["visualsservice",{"_index":1999,"title":{"injectables/VisualsService.html":{}},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{}}}],["visualsservice.visualmode",{"_index":2116,"title":{},"body":{"components/PlaylistComponent.html":{},"components/VisualizerComponent.html":{}}}],["visualsworkermessage",{"_index":276,"title":{"interfaces/VisualsWorkerMessage.html":{}},"body":{"interfaces/AnalyserConfig.html":{},"interfaces/BarsVisualizerOptions.html":{},"interfaces/BaseVisualizerOptions.html":{},"interfaces/FrequencyBarsConfig.html":{},"interfaces/OscVisualizerOptions.html":{},"interfaces/OsciloscopeConfig.html":{},"interfaces/VisualsColorConfig.html":{},"directives/VisualsDirective.html":{},"interfaces/VisualsWorkerMessage.html":{}}}],["vm2",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":16,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/Album.html":{},"injectables/AudioService.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/Chainable.html":{},"interfaces/EqualizerGainValues.html":{},"components/FileDropOverlayComponent.html":{},"interfaces/GamepadAction.html":{},"injectables/GamepadService.html":{},"components/HotkeysHelpDialogComponent.html":{},"injectables/HotkeysService.html":{},"injectables/Id3TagsService.html":{},"components/LibraryComponent.html":{},"injectables/LoaderService.html":{},"injectables/MediaSessionService.html":{},"components/MetadataSettingsComponent.html":{},"components/PlayerComponent.html":{},"injectables/PlayerService.html":{},"components/PlaylistComponent.html":{},"components/PromptDialogComponent.html":{},"components/ShellComponent.html":{},"components/SlidePanelComponent.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/ThemeSettingsComponent.html":{},"injectables/TitleService.html":{},"components/VisualizerComponent.html":{},"directives/VisualsDirective.html":{},"injectables/VisualsService.html":{}}}],["vol",{"_index":1764,"title":{},"body":{"components/PlayerComponent.html":{}}}],["volume",{"_index":388,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"components/PlayerComponent.html":{}}}],["volumeicon",{"_index":1656,"title":{},"body":{"components/PlayerComponent.html":{}}}],["voluntarily",{"_index":5077,"title":{},"body":{"license.html":{}}}],["vulnerabilities",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["w9jds/firebase",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["wait",{"_index":2060,"title":{},"body":{"components/PlaylistComponent.html":{}}}],["waived",{"_index":5221,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5143,"title":{},"body":{"license.html":{}}}],["waives",{"_index":5152,"title":{},"body":{"license.html":{}}}],["wakelock",{"_index":2652,"title":{},"body":{"injectables/WakelockService.html":{},"changelog.html":{},"index.html":{}}}],["wakelocksentinel",{"_index":2658,"title":{},"body":{"injectables/WakelockService.html":{}}}],["wakelockservice",{"_index":1858,"title":{"injectables/WakelockService.html":{}},"body":{"injectables/PlayerService.html":{},"injectables/WakelockService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wakelockservicefactory",{"_index":4940,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":5001,"title":{},"body":{"license.html":{}}}],["wasm",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["wav",{"_index":908,"title":{},"body":{"interfaces/FileData.html":{},"miscellaneous/variables.html":{}}}],["waveform",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["web",{"_index":4956,"title":{},"body":{"index.html":{},"properties.html":{}}}],["webmanifest",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["webpack",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["webstorage",{"_index":472,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/EqualizerGainValues.html":{},"injectables/MetadataService.html":{},"injectables/PlayerService.html":{},"components/StorageSettingsComponent.html":{},"injectables/ThemeService.html":{},"components/VisualizerComponent.html":{},"injectables/VisualsService.html":{},"changelog.html":{},"dependencies.html":{}}}],["webworker",{"_index":5265,"title":{},"body":{"todo.html":{}}}],["well",{"_index":5160,"title":{},"body":{"license.html":{}}}],["wenn",{"_index":1571,"title":{},"body":{"injectables/MetadataService.html":{}}}],["werden",{"_index":2392,"title":{},"body":{"injectables/UpdateService.html":{}}}],["whatsoever",{"_index":5052,"title":{},"body":{"license.html":{}}}],["whether",{"_index":5158,"title":{},"body":{"license.html":{}}}],["white",{"_index":995,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["whitelist",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":1193,"title":{},"body":{"interfaces/Hotkey.html":{},"interfaces/HotkeyInfo.html":{},"injectables/HotkeysService.html":{},"components/SlidePanelComponent.html":{}}}],["window.showopenfilepicker",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":5032,"title":{},"body":{"license.html":{}}}],["withenabledblockinginitialnavigation",{"_index":5345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":5343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlocalstorage",{"_index":5340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1433,"title":{},"body":{"injectables/LoaderService.html":{},"changelog.html":{},"license.html":{}}}],["withviewtransitions",{"_index":5346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":5026,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1257,"title":{},"body":{"injectables/Id3TagsService.html":{},"injectables/UpdateService.html":{},"directives/VisualsDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["worker(new",{"_index":1262,"title":{},"body":{"injectables/Id3TagsService.html":{},"directives/VisualsDirective.html":{}}}],["worker.js",{"_index":5332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workers",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2831,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["works",{"_index":857,"title":{},"body":{"interfaces/DirHandleEntry.html":{},"injectables/NativeBrowserFileLoaderService.html":{},"license.html":{}}}],["world",{"_index":5014,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":5163,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["writes",{"_index":2222,"title":{},"body":{"components/SlidePanelComponent.html":{}}}],["writing",{"_index":5276,"title":{},"body":{"todo.html":{}}}],["wurde",{"_index":1086,"title":{},"body":{"injectables/GamepadService.html":{}}}],["x_button",{"_index":42,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["y_button",{"_index":44,"title":{},"body":{"interfaces/ActionCache.html":{},"interfaces/AxisGamepadAction.html":{},"interfaces/ButtonGamepadAction.html":{},"interfaces/GamepadAction.html":{},"miscellaneous/enumerations.html":{}}}],["year",{"_index":693,"title":{},"body":{"interfaces/ColorConfig.html":{},"components/CoverDisplayComponent.html":{},"interfaces/Id3CoverPicture.html":{},"interfaces/Id3Tags.html":{},"interfaces/IndexedDbTrackMetadata.html":{},"injectables/MetadataService.html":{},"interfaces/Track.html":{},"interfaces/TrackMetadata.html":{}}}],["z",{"_index":988,"title":{},"body":{"components/FileDropOverlayComponent.html":{}}}],["zone",{"_index":2539,"title":{},"body":{"directives/VisualsDirective.html":{},"changelog.html":{}}}],["zoneless",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["zu",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["zugewiesen",{"_index":1066,"title":{},"body":{"injectables/GamepadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionCache.html":{"url":"interfaces/ActionCache.html","title":"interface - ActionCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            lastActionExecution\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastActionExecution\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastActionExecution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Album.html":{"url":"interfaces/Album.html","title":"interface - Album","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/library/library.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { NgOptimizedImage } from '@angular/common';\nimport { SafePipe } from 'safe-pipe';\nimport { Router } from '@angular/router';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\n\nexport interface Album {\n  name: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    NgOptimizedImage,\n    SafePipe\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  private playerService = inject(PlayerService);\n  private router = inject(Router);\n\n  private readonly data = signal([]);\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.data()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.data();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    let filtered = this.data();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('metatags'));\n      this.data.set(result || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      void this.router.navigate(['/player']);\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    const tracks = this.data().filter((track) => track.album === album.name);\n    await this.addTracksToPlaylist(...tracks);\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    await this.addTracksToPlaylist(track);\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyserConfig.html":{"url":"interfaces/AnalyserConfig.html","title":"interface - AnalyserConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyserConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            maxDecibels\n                                        \n                                \n                                \n                                        \n                                            minDecibels\n                                        \n                                \n                                \n                                        \n                                            smoothingTimeConstant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         FftSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FftSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDecibels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDecibels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smoothingTimeConstant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smoothingTimeConstant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-root\n            \n\n\n            \n                imports\n                \n                                ShellComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemeService } from './theme/theme.service';\nimport { UpdateService } from './update.service';\nimport { ShellComponent } from './shell/shell.component';\n\n@Component({\n  selector: 'mtb-root',\n  templateUrl: './app.component.html',\n  imports: [ShellComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  constructor() {\n    const updateService = inject(UpdateService);\n    const iconRegistry = inject(MatIconRegistry);\n    const sanitizer = inject(DomSanitizer);\n    const themeService = inject(ThemeService);\n\n    updateService.init();\n\n    themeService.initializeTheme();\n\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl('assets/icon-set.svg'));\n    iconRegistry.addSvgIcon('logo', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/logo-monochrome.svg'));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                baseGain\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                    Readonly\n                                equalizerGainValues\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Readonly\n                                isLooping\n                            \n                            \n                                    Readonly\n                                isPaused\n                            \n                            \n                                    Readonly\n                                isPlaying\n                            \n                            \n                                    Readonly\n                                isStopped\n                            \n                            \n                                    Readonly\n                                sampleRate\n                            \n                            \n                                    Readonly\n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectAllAnalyzers\n                            \n                            \n                                disconnectAnalyserNode\n                            \n                            \n                                getFrequencyBandGainSignal\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                plugInNewAnalyserNode\n                            \n                            \n                                seekToPosition\n                            \n                            \n                                setBaseGain\n                            \n                            \n                                setFileAsSource\n                            \n                            \n                                setFrequencyBandGain\n                            \n                            \n                                setLoop\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasEnded$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAllAnalyzers\n                        \n                    \n                \n            \n            \n                \ndisconnectAllAnalyzers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAnalyserNode\n                        \n                    \n                \n            \n            \n                \ndisconnectAnalyserNode(analyser: AnalyserNode)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                analyser\n                                            \n                                                        AnalyserNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFrequencyBandGainSignal\n                        \n                    \n                \n            \n            \n                \ngetFrequencyBandGainSignal(bandFrequency: FrequencyBand)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plugInNewAnalyserNode\n                        \n                    \n                \n            \n            \n                \nplugInNewAnalyserNode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     AnalyserNode\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekToPosition\n                        \n                    \n                \n            \n            \n                \nseekToPosition(position: number, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBaseGain\n                        \n                    \n                \n            \n            \n                \nsetBaseGain(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFileAsSource\n                        \n                    \n                \n            \n            \n                \nsetFileAsSource(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFrequencyBandGain\n                        \n                    \n                \n            \n            \n                \nsetFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bandFrequency\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gainValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoop\n                        \n                    \n                \n            \n            \n                \nsetLoop(loop: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loop\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/audio.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        baseGain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('baseGain') ?? 1)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        equalizerGainValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  )\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLooping\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPaused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isStopped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(44_100)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.storageService.retrieve('volume') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasEnded$\n                    \n                \n\n                \n                    \n                        gethasEnded$()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/audio.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._audioSourceNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      analyser.disconnect();\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      analyser.disconnect();\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxisGamepadAction.html":{"url":"interfaces/AxisGamepadAction.html","title":"interface - AxisGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AxisGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            negativeActionFunction\n                                        \n                                \n                                \n                                        \n                                            positiveActionFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        negativeActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        negativeActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positiveActionFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        positiveActionFunction:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BandPipe.html":{"url":"pipes/BandPipe.html","title":"pipe - BandPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BandPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/equalizer/band.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        band\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: FrequencyBand, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/band.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FrequencyBand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { FrequencyBand } from '../player.types';\n\n@Pipe({\n  name: 'band',\n  pure: true,\n  standalone: true\n})\nexport class BandPipe implements PipeTransform {\n  transform(value: FrequencyBand, ...arguments_: unknown[]): string {\n    if (!value) {\n      return '';\n    }\n\n    if (value = 1000 && value = 10_000) {\n      return value.toString().slice(0, 2) + 'K';\n    }\n\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarsVisualizerOptions.html":{"url":"interfaces/BarsVisualizerOptions.html","title":"interface - BarsVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BarsVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            fftSize\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fftSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fftSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"bars\" | \"circular-bars\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bars\" | \"circular-bars\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseVisualizerOptions.html":{"url":"interfaces/BaseVisualizerOptions.html","title":"interface - BaseVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alpha\n                                        \n                                \n                                \n                                        \n                                            bufferLength\n                                        \n                                \n                                \n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bufferLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bufferLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         VisualizerMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BitratePipe.html":{"url":"pipes/BitratePipe.html","title":"pipe - BitratePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BitratePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bitrate\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/cover-display/bitrate.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bitrate',\n  standalone: true\n})\nexport class BitratePipe implements PipeTransform {\n  transform(value: number | undefined): string {\n    if (!value) {\n      return '0';\n    }\n    const bitrate = Math.round(value / 1000);\n    return `${bitrate} kb/s`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGamepadAction.html":{"url":"interfaces/ButtonGamepadAction.html","title":"interface - ButtonGamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonGamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GamepadAction\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chainable.html":{"url":"interfaces/Chainable.html","title":"interface - Chainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Chainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/cypress/support/commands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        loadFiles\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFiles\n                        \n                    \n                \n            \n            \n                \nloadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/cypress/support/commands.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'cypress-file-upload';\nimport { getLoadFilesButton } from './player.po';\n\n// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n\ndeclare namespace Cypress {\n  interface Chainable {\n    loadFiles(): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('loadFiles', () => {\n  cy.log('Loading files...');\n  getLoadFilesButton().click();\n  cy.get('#hidden_file_input').attachFile([\n    { filePath: 'tek.mp3', encoding: 'base64' },\n    { filePath: '440Hz-5sec.mp3', encoding: 'base64' }\n  ]);\n  // });\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkContrast\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkContrast\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkContrast:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Color {\n  name: string;\n  hex: string;\n  darkContrast: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorConfig.html":{"url":"interfaces/ColorConfig.html","title":"interface - ColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtImage.html":{"url":"interfaces/CoverArtImage.html","title":"interface - CoverArtImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            front\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            thumbnails\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        front\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        front:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnails:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverArtResponse.html":{"url":"interfaces/CoverArtResponse.html","title":"interface - CoverArtResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverArtResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            images\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         CoverArtImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverArtImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColor.html":{"url":"interfaces/CoverColor.html","title":"interface - CoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textHex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textHex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textHex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverColorPalette.html":{"url":"interfaces/CoverColorPalette.html","title":"interface - CoverColorPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoverColorPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            darkMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            darkVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightMuted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lightVibrant\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            muted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            vibrant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightMuted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightMuted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightVibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lightVibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vibrant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vibrant:         CoverColor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColor\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverDisplayComponent.html":{"url":"components/CoverDisplayComponent.html","title":"component - CoverDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CoverDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/cover-display/cover-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-cover-display\n            \n\n\n            \n                imports\n                \n                            NgStyle\n                            TimePipe\n                            NgOptimizedImage\n                            BitratePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cover-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cover-display.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                backgroundColor\n                            \n                            \n                                    Readonly\n                                coverUrl\n                            \n                            \n                                    Readonly\n                                track\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        backgroundColor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.track()?.metadata?.coverColors?.darkMuted?.hex\n      : this.track()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        coverUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.track()?.metadata?.coverUrl?.original)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        track\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/cover-display/cover-display.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, input, inject } from '@angular/core';\nimport { ThemeService } from '../../theme/theme.service';\nimport { TimePipe } from '../time.pipe';\nimport { NgOptimizedImage, NgStyle } from '@angular/common';\nimport { Track } from '../player.types';\nimport { BitratePipe } from './bitrate.pipe';\n\n@Component({\n  selector: 'mtb-cover-display',\n  templateUrl: './cover-display.component.html',\n  styleUrl: './cover-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [NgStyle, TimePipe, NgOptimizedImage, BitratePipe]\n})\nexport class CoverDisplayComponent {\n  private themeService = inject(ThemeService);\n\n  readonly track = input.required();\n\n  readonly coverUrl = computed(() => this.track()?.metadata?.coverUrl?.original);\n\n  readonly backgroundColor = computed(() => {\n    const coverBackground = this.themeService.darkMode()\n      ? this.track()?.metadata?.coverColors?.darkMuted?.hex\n      : this.track()?.metadata?.coverColors?.lightMuted?.hex;\n    return coverBackground || 'rgba(0,0,0,0)';\n  });\n}\n\n    \n\n    \n        @let currentTrack = track();\n@let cover = coverUrl();\n\n  \n    {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}\n  \n  {{ currentTrack?.metadata?.artist }}\n  \n    @if (currentTrack?.metadata?.album) {\n      \n        Album: {{ currentTrack?.metadata?.album }}\n      \n    }\n    @if (currentTrack?.metadata?.year) {\n      \n        Year: {{ currentTrack?.metadata?.year }}\n      \n    }\n    &nbsp;\n    @if (currentTrack?.metadata?.format?.duration) {\n      \n        Duration: {{ currentTrack?.metadata?.format?.duration | time }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {\n      \n        Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})\n      \n    }\n    @if (currentTrack?.metadata?.format?.bitrate) {\n      \n        Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}\n      \n    }\n    @if (currentTrack?.metadata?.format?.sampleRate) {\n      \n        Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}\n      \n    }\n  \n\n@if (currentTrack && cover) {\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let currentTrack = track();@let cover = coverUrl();      {{ currentTrack?.metadata?.title || currentTrack?.file?.name }}    {{ currentTrack?.metadata?.artist }}      @if (currentTrack?.metadata?.album) {              Album: {{ currentTrack?.metadata?.album }}          }    @if (currentTrack?.metadata?.year) {              Year: {{ currentTrack?.metadata?.year }}          }         @if (currentTrack?.metadata?.format?.duration) {              Duration: {{ currentTrack?.metadata?.format?.duration | time }}          }    @if (currentTrack?.metadata?.format?.container && currentTrack?.metadata?.format?.codec) {              Format: {{ currentTrack?.metadata?.format?.container }} ({{ currentTrack?.metadata?.format?.codec }})          }    @if (currentTrack?.metadata?.format?.bitrate) {              Bitrate: {{ currentTrack?.metadata?.format?.bitrate | bitrate }}          }    @if (currentTrack?.metadata?.format?.sampleRate) {              Sample-Rate: {{ currentTrack?.metadata?.format?.sampleRate }}          }  @if (currentTrack && cover) {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoverDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirHandleEntry.html":{"url":"interfaces/DirHandleEntry.html","title":"interface - DirHandleEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirHandleEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handle\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handle:     FileSystemDirectoryHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemDirectoryHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService extends FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  async init() {\n    const entry = await firstValueFrom(this.indexedDbService.getByID('dirHandle', 1));\n    if (entry) {\n      const granted = await verifyPermission(entry.handle);\n      if (granted) {\n        this.currentFolderHandle = entry.handle;\n      }\n    }\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle = handle;\n      await this.indexedDbService.update('dirHandle', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    if (this.currentFolderHandle) {\n      return getAudioFilesFromDirHandle(this.currentFolderHandle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EqualizerComponent.html":{"url":"components/EqualizerComponent.html","title":"component - EqualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EqualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/equalizer/equalizer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-equalizer\n            \n\n\n            \n                imports\n                \n                            MatSliderModule\n                            BandPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./equalizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./equalizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                BANDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFunction\n                        \n                    \n                \n            \n            \n                \ndisplayFunction(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : FREQUENCY_BANDS\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/equalizer/equalizer.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { AudioService, FREQUENCY_BANDS } from '../audio.service';\nimport { BandPipe } from './band.pipe';\nimport { MatSliderModule } from '@angular/material/slider';\n\n@Component({\n  selector: 'mtb-equalizer',\n  templateUrl: './equalizer.component.html',\n  styleUrl: './equalizer.component.scss',\n  imports: [MatSliderModule, BandPipe],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport default class EqualizerComponent {\n  audioService = inject(AudioService);\n\n  BANDS = FREQUENCY_BANDS;\n\n  displayFunction(value: number): string {\n    const number_ = value.toFixed(1);\n    return number_ + ' dB';\n  }\n}\n\n    \n\n    \n        \n  \n    @for (band of BANDS; track band; let i = $index) {\n      \n        \n          {{ band | band }}\n          \n        \n      \n    }\n\n    \n      \n        GAIN\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for (band of BANDS; track band; let i = $index) {                        {{ band | band }}                            }                  GAIN                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'EqualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EqualizerGainValues.html":{"url":"interfaces/EqualizerGainValues.html","title":"interface - EqualizerGainValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EqualizerGainValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/audio.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [band: number]:        number\n\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/audio.service.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { computed, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FrequencyBand } from './player.types';\nimport { Subject } from 'rxjs';\n\nexport const FREQUENCY_BANDS: FrequencyBand[] = [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000];\n\nexport interface EqualizerGainValues {\n  [band: number]: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AudioService {\n  private storageService = inject(LocalStorageService);\n\n  // Core audio elements\n  private _audioElement: HTMLAudioElement;\n  private _audioContext: AudioContext;\n  private _audioSourceNode: MediaElementAudioSourceNode;\n  private _gainNode: GainNode;\n  private _eqGainNode: GainNode;\n  private _frequencyFilters: { [band: number]: BiquadFilterNode } = {};\n  private _connectedAnalyzers = new Set();\n\n  // State signals\n  readonly isLoading = signal(false);\n  readonly isPlaying = signal(false);\n  readonly isPaused = signal(true);\n  readonly isStopped = signal(true);\n  readonly isLooping = signal(false);\n  readonly currentTime = signal(0);\n  readonly duration = signal(0);\n  readonly volume = signal(this.storageService.retrieve('volume') ?? 0.5);\n  readonly baseGain = signal(this.storageService.retrieve('baseGain') ?? 1);\n  readonly sampleRate = signal(44_100);\n\n  readonly equalizerGainValues = signal(\n    this.storageService.retrieve('equalizerGainValues') ?? { 60: 0, 170: 0, 310: 0, 600: 0, 1000: 0, 3000: 0, 6000: 0, 12_000: 0, 14_000: 0, 16_000: 0 }\n  );\n\n  private readonly _hasEnded = new Subject();\n\n  get hasEnded$() {\n    return this._hasEnded.asObservable();\n  }\n\n  constructor() {\n    // create audio element\n    const audioElement = new Audio();\n    audioElement.loop = false;\n    audioElement.id = 'main_audio';\n    audioElement.style.display = 'none';\n    audioElement.autoplay = false;\n    audioElement.controls = false;\n    audioElement.volume = this.volume();\n    audioElement.preload = 'auto';\n\n    // TODO: only for cypress test!?\n    document.body.append(audioElement);\n\n    // initialize audio context\n    const audioContext = new AudioContext({\n      latencyHint: 'playback'\n    });\n\n    // create audio nodes\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n    const gain = audioContext.createGain();\n    const eqGain = audioContext.createGain();\n    const { eqInput, eqOutput } = this.createEqualizer(audioContext);\n\n    // connect audio nodes\n    audioSource.connect(eqGain);\n    eqGain.connect(eqInput);\n    eqOutput.connect(gain);\n    gain.connect(audioContext.destination);\n\n    // set eq settings from localstorage\n    for (const band of FREQUENCY_BANDS) {\n      const filter = this._frequencyFilters[band];\n      filter.gain.value = this.equalizerGainValues()[band];\n    }\n    eqGain.gain.value = this.baseGain();\n\n    gain.gain.value = this.volume();\n\n    this._audioElement = audioElement;\n    this._audioSourceNode = audioSource;\n    this._audioContext = audioContext;\n    this._eqGainNode = eqGain;\n    this._gainNode = gain;\n\n    this._audioElement.addEventListener('error', (error) => {\n      console.error(error);\n      this.isLoading.set(false);\n    });\n\n    // this._audioElement.addEventListener('loadeddata', (error) => {\n    //\n    // });\n\n    this._audioElement.addEventListener('loadstart', () => {\n      this.isLoading.set(true);\n    });\n\n    this._audioElement.addEventListener('canplay', () => {\n      this.isLoading.set(false);\n    });\n\n    // Add event listeners to update signals\n    this._audioElement.addEventListener('timeupdate', () => {\n      this.currentTime.set(this._audioElement.currentTime);\n    });\n\n    this._audioElement.addEventListener('durationchange', () => {\n      this.duration.set(this._audioElement.duration);\n    });\n\n    this._audioElement.addEventListener('play', () => {\n      this.sampleRate.set(this._audioContext.sampleRate);\n      this.isStopped.set(false);\n      this.isPlaying.set(true);\n      this.isPaused.set(false);\n    });\n\n    this._audioElement.addEventListener('pause', () => {\n      this.isPlaying.set(false);\n      this.isPaused.set(true);\n    });\n\n    this._audioElement.addEventListener('ended', () => {\n      this._hasEnded.next(true);\n    });\n  }\n\n  plugInNewAnalyserNode(): AnalyserNode {\n    const analyser = this._audioContext.createAnalyser();\n    this._audioSourceNode.connect(analyser);\n    this._connectedAnalyzers.add(analyser);\n    return analyser;\n  }\n\n  disconnectAnalyserNode(analyser: AnalyserNode): void {\n    if (this._connectedAnalyzers.has(analyser)) {\n      analyser.disconnect();\n      this._connectedAnalyzers.delete(analyser);\n    }\n  }\n\n  // Call on major cleanup events or app exit\n  disconnectAllAnalyzers(): void {\n    this._connectedAnalyzers.forEach((analyser) => {\n      analyser.disconnect();\n    });\n    this._connectedAnalyzers.clear();\n  }\n\n  setFileAsSource(file: File) {\n    const oldSource = this._audioElement.src;\n    this._audioElement.src = URL.createObjectURL(file);\n    URL.revokeObjectURL(oldSource);\n  }\n\n  async play() {\n    if (this._audioContext.state === 'suspended') {\n      await this._audioContext.resume();\n    }\n\n    return this._audioElement.play();\n  }\n\n  pause() {\n    if (this.isPlaying()) {\n      this._audioElement.pause();\n    }\n  }\n\n  stop() {\n    if (this.isPlaying()) {\n      this.pause();\n    }\n    this.seekToPosition(0);\n    this.isStopped.set(true);\n  }\n\n  setLoop(loop: boolean) {\n    this._audioElement.loop = loop;\n    this.isLooping.set(loop);\n  }\n\n  seekToPosition(position: number, fastSeek = false) {\n    if ('fastSeek' in this._audioElement && fastSeek) {\n      this._audioElement.fastSeek(position);\n    } else {\n      this._audioElement.currentTime = position;\n    }\n  }\n\n  getFrequencyBandGainSignal(bandFrequency: FrequencyBand) {\n    return computed(() => this.equalizerGainValues()[bandFrequency]);\n  }\n\n  setFrequencyBandGain(bandFrequency: FrequencyBand, gainValue: number) {\n    this._frequencyFilters[bandFrequency].gain.value = gainValue;\n\n    const bandGains = this.equalizerGainValues();\n    bandGains[bandFrequency] = gainValue;\n    this.equalizerGainValues.set(bandGains);\n  }\n\n  setVolume(value: number) {\n    if (value >= 0 && value \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileData.html":{"url":"interfaces/FileData.html","title":"interface - FileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const ALLOWED_MIMETYPES = [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n];\n\nexport const ALLOWED_EXTENSIONS = ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4'];\n\nexport interface FileData {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileDropOverlayComponent.html":{"url":"components/FileDropOverlayComponent.html","title":"component - FileDropOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileDropOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-file-drop-overlay\n            \n\n\n\n            \n                styleUrls\n                ./file-drop-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-drop-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Readonly\n                                filesDroped\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                leave\n                            \n                            \n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leave\n                        \n                    \n                \n            \n            \n                \nleave(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        over\n                        \n                    \n                \n            \n            \n                \nover(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(['*/*'])\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filesDroped\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/file-drop-overlay/src/lib/file-drop-overlay/file-drop-overlay.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, inject, input, OnDestroy, output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'mtb-file-drop-overlay',\n  templateUrl: './file-drop-overlay.component.html',\n  styleUrls: ['./file-drop-overlay.component.scss']\n})\nexport class FileDropOverlayComponent implements AfterViewInit, OnDestroy {\n  private hostElement = inject(ElementRef);\n  private renderer = inject(Renderer2);\n\n  readonly allowedTypes = input(['*/*']);\n\n  readonly filesDroped = output();\n\n  private dragEnterListener: any;\n  private dragOverListener: any;\n  private dragLeaveListener: any;\n  private dragEndListener: any;\n  private dropListener: any;\n\n  ngAfterViewInit() {\n    this.dragEnterListener = this.renderer.listen('window', 'dragenter', this.over.bind(this));\n    this.dragOverListener = this.renderer.listen('window', 'dragover', this.over.bind(this));\n    this.dragLeaveListener = this.renderer.listen('window', 'dragleave', this.leave.bind(this));\n    this.dragEndListener = this.renderer.listen('window', 'dragend', this.leave.bind(this));\n    this.dropListener = this.renderer.listen('window', 'drop', this.drop.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.dragEnterListener();\n    this.dragOverListener();\n    this.dragLeaveListener();\n    this.dragEndListener();\n    this.dropListener();\n  }\n\n  over(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.dataTransfer?.files) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'visible');\n  }\n\n  leave(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.renderer.setStyle(this.hostElement.nativeElement, 'visibility', 'hidden');\n  }\n\n  drop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.leave(event);\n    if (event.dataTransfer?.files) {\n      this.handleDroppedFiles(event.dataTransfer?.files);\n    }\n  }\n\n  private handleDroppedFiles(droppedFiles: FileList) {\n    const files: File[] = [];\n    for (let index = 0; index \n    \n\n    \n        Drop Music-Files here...\n\n    \n\n    \n                \n                    ./file-drop-overlay.component.scss\n                \n                :host {\n  visibility: hidden;\n  pointer-events: none;\n  display: flex;\n  position: fixed;\n  box-sizing: border-box;\n  border: 6px dashed var(--theme-accent-50);\n  inset: 0;\n  z-index: 199;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: rgb(255 255 255 / 20%);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Drop Music-Files here...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileDropOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileLoaderService.html":{"url":"classes/FileLoaderService.html","title":"class - FileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                init\n                            \n                            \n                                    Abstract\n                                openFiles\n                            \n                            \n                                    Abstract\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/file-loader-service/file-loader.service.abstract.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileData } from './file-loader.helpers';\n\nexport abstract class FileLoaderService {\n  abstract currentFolderHandle?: FileSystemDirectoryHandle;\n  abstract openFiles(): Promise;\n  abstract showPicker(): Promise;\n  abstract init(): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FrequencyBarsConfig.html":{"url":"interfaces/FrequencyBarsConfig.html","title":"interface - FrequencyBarsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FrequencyBarsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            barCount\n                                        \n                                \n                                \n                                        \n                                            capFalldown\n                                        \n                                \n                                \n                                        \n                                            capHeight\n                                        \n                                \n                                \n                                        \n                                            gap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        barCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        barCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capFalldown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capFalldown:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        capHeight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gap:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GamepadAction.html":{"url":"interfaces/GamepadAction.html","title":"interface - GamepadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GamepadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            axisDirection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axisDirection:         AxisDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AxisDirection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ActionFunction = (buttonValue: number) => void;\n\nexport interface GamepadAction {\n  index: number;\n  mode: string;\n  timeout: number;\n  default?: boolean;\n  axisDirection?: AxisDirection;\n}\nexport interface AxisGamepadAction extends GamepadAction {\n  positiveActionFunction: ActionFunction;\n  negativeActionFunction: ActionFunction;\n}\n\nexport interface ButtonGamepadAction extends GamepadAction {\n  action: ActionFunction;\n}\n\nexport type AxisDirection = 'negative' | 'positive';\n\nexport interface ActionCache {\n  index: number;\n  lastActionExecution: number;\n}\n\nexport type InputCheckMode = 'click' | 'hold' | 'turbo';\n\nexport enum GamepadButtons {\n  A_BUTTON = 0,\n  B_BUTTON = 1,\n  X_BUTTON = 2,\n  Y_BUTTON = 3,\n  L1_BUTTON = 4,\n  R1_BUTTON = 5,\n  L2_BUTTON = 6,\n  R2_BUTTON = 7,\n  SELECT_BUTTON = 8,\n  START_BUTTON = 9,\n  S1_BUTTON = 10,\n  S2_BUTTON = 11,\n  DPAD_UP = 12,\n  DPAD_DOWN = 13,\n  DPAD_LEFT = 14,\n  DPAD_RIGHT = 15\n}\n\nexport enum GamepadAxes {\n  S1_X = 0,\n  S1_Y = 1,\n  S2_X = 2,\n  S2_Y = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamepadService.html":{"url":"injectables/GamepadService.html","title":"injectable - GamepadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GamepadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/gamepad/gamepad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                axisActions\n                            \n                            \n                                buttonActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregisterAxisAction\n                            \n                            \n                                deregisterButtonAction\n                            \n                            \n                                registerAxisAction\n                            \n                            \n                                registerButtonAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterAxisAction\n                        \n                    \n                \n            \n            \n                \nderegisterAxisAction(axisIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deregisterButtonAction\n                        \n                    \n                \n            \n            \n                \nderegisterButtonAction(buttonIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAxisAction\n                        \n                    \n                \n            \n            \n                \nregisterAxisAction(axisIndex: number, positiveActionFunction: ActionFunction, negativeActionFunction: ActionFunction, mode: InputCheckMode, turboTimeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                axisIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                positiveActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                negativeActionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                turboTimeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonAction\n                        \n                    \n                \n            \n            \n                \nregisterButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode, timeout)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                buttonIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                actionFunction\n                                            \n                                                            ActionFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            InputCheckMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'click'\n                                            \n\n                                        \n                                        \n                                                timeout\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.DEFAULT_TURBO_TIMEOUT\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        axisActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxisGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ButtonGamepadAction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/gamepad/gamepad.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ActionCache, ActionFunction, AxisGamepadAction, ButtonGamepadAction, GamepadAxes, GamepadButtons, InputCheckMode } from './gamepad.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamepadService implements OnDestroy {\n  private readonly DEFAULT_TURBO_TIMEOUT = 300;\n  private readonly DEFAULT_DEADSPACE = 0.07;\n\n  private checkIntervals: number[] = [];\n  private pressedButtonsCaches: ActionCache[][] = [];\n  private activeAxesCaches: ActionCache[][] = [];\n\n  buttonActions: ButtonGamepadAction[] = [];\n  axisActions: AxisGamepadAction[] = [];\n\n  constructor() {\n    for (const buttonIndex in GamepadButtons) {\n      if (Number(buttonIndex) >= 0) {\n        this.buttonActions.push(this.createDefaultButtonAction(Number(buttonIndex)));\n      }\n    }\n    for (const axisIndex in GamepadAxes) {\n      if (Number(axisIndex) >= 0) {\n        this.axisActions.push(this.createDefaultAxisAction(Number(axisIndex)));\n      }\n    }\n\n    addEventListener('gamepadconnected', (event: GamepadEvent) => this.connectionListener(event));\n    addEventListener('gamepaddisconnected', (event: GamepadEvent) => this.disconnectionListener(event));\n  }\n\n  private connectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    console.log(`New gamepad with Number ${event.gamepad.index} connected: `);\n    console.log(gamepad);\n\n    this.checkIntervals[event.gamepad.index] = globalThis.setInterval(() => {\n      const gps = navigator.getGamepads();\n      const gp = gps[event.gamepad.index];\n\n      if (!gp) {\n        return;\n      }\n\n      for (const buttonIndex in GamepadButtons) {\n        if (Number(buttonIndex) >= 0) {\n          this.checkForButtonClicked(gp, Number(buttonIndex));\n        }\n      }\n\n      for (const axisIndex in GamepadAxes) {\n        if (Number(axisIndex) >= 0) {\n          this.checkForAxesInput(gp, Number(axisIndex));\n        }\n      }\n    }, 16);\n  }\n\n  private createDefaultButtonAction(buttonIndex: number): ButtonGamepadAction {\n    return {\n      action: () => console.log('Button nicht zugewiesen'),\n      mode: 'hold',\n      index: buttonIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true\n    };\n  }\n\n  private createDefaultAxisAction(axisIndex: number): AxisGamepadAction {\n    return {\n      positiveActionFunction: () => console.log('Positiv-Achse nicht zugewiesen'),\n      negativeActionFunction: () => console.log('Negativ-Achse nicht zugewiesen'),\n      mode: 'hold',\n      index: axisIndex,\n      timeout: this.DEFAULT_TURBO_TIMEOUT,\n      default: true,\n      axisDirection: 'positive'\n    };\n  }\n\n  private disconnectionListener(event: GamepadEvent) {\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[event.gamepad.index];\n    // console.log(`Gamepad ${event.gamepad.index} disconnected!`);\n    if (gamepad === null) {\n      clearInterval(this.checkIntervals[event.gamepad.index]);\n    }\n  }\n\n  private fireButtonAction(index: number, value: number) {\n    // console.log(`Button ${index} sending value: ${value}`);\n    this.buttonActions[index].action(value);\n  }\n\n  private fireAxisAction(index: number, value: number) {\n    // console.log(`Axis ${index} sending value: ${value}`);\n    if (value  0) {\n      this.axisActions[index].positiveActionFunction(value);\n    }\n  }\n\n  registerButtonAction(buttonIndex: number, actionFunction: ActionFunction, mode: InputCheckMode = 'click', timeout = this.DEFAULT_TURBO_TIMEOUT) {\n    if (!this.buttonActions[buttonIndex].default) {\n      console.warn('Diesem Button wurde bereits eine Action zugewiesen.');\n    }\n\n    this.buttonActions[buttonIndex] = {\n      action: actionFunction,\n      mode: mode,\n      timeout: timeout,\n      index: buttonIndex\n    };\n  }\n\n  deregisterButtonAction(buttonIndex: number) {\n    this.buttonActions[buttonIndex] = this.createDefaultButtonAction(buttonIndex);\n  }\n\n  registerAxisAction(\n    axisIndex: number,\n    positiveActionFunction: ActionFunction,\n    negativeActionFunction: ActionFunction,\n    mode: InputCheckMode = 'click',\n    turboTimeout = this.DEFAULT_TURBO_TIMEOUT\n  ) {\n    if (!this.axisActions[axisIndex].default) {\n      console.warn('Dieser Achse wurde bereits eine Action zugewiesen.');\n    }\n\n    this.axisActions[axisIndex] = {\n      positiveActionFunction: positiveActionFunction,\n      negativeActionFunction: negativeActionFunction,\n      mode: mode,\n      timeout: turboTimeout,\n      index: axisIndex\n    };\n  }\n\n  deregisterAxisAction(axisIndex: number) {\n    this.axisActions[axisIndex] = this.createDefaultAxisAction(axisIndex);\n  }\n\n  private checkForButtonClicked(gamepad: Gamepad, buttonIndex: number) {\n    const button = gamepad.buttons[buttonIndex];\n    if (!button) {\n      return;\n    }\n\n    if (this.buttonActions[buttonIndex].mode === 'hold' && button.pressed) {\n      this.fireButtonAction(buttonIndex, button.value);\n      return;\n    }\n\n    if (!this.pressedButtonsCaches[gamepad.index]) {\n      this.pressedButtonsCaches[gamepad.index] = [];\n    }\n\n    let cache = this.pressedButtonsCaches[gamepad.index];\n    const buttonCache = cache.find((ac) => ac.index === buttonIndex);\n    if (button.pressed) {\n      if (buttonCache) {\n        const timeout = this.buttonActions[buttonIndex].timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (this.buttonActions[buttonIndex].mode === 'turbo' && performance.now() - buttonCache.lastActionExecution > timeout) {\n          buttonCache.lastActionExecution = performance.now();\n          this.fireButtonAction(buttonIndex, button.value);\n        }\n      } else {\n        cache.push({ index: buttonIndex, lastActionExecution: performance.now() });\n        this.fireButtonAction(buttonIndex, button.value);\n      }\n    } else {\n      if (buttonCache) {\n        cache = cache.filter((ac) => ac.index !== buttonIndex);\n      }\n    }\n\n    this.pressedButtonsCaches[gamepad.index] = cache;\n  }\n\n  private isAxisValueInDetectionRange(axis: number): boolean {\n    return axis.valueOf() > this.DEFAULT_DEADSPACE || axis.valueOf()  ac.index === axisIndex);\n    if (this.isAxisValueInDetectionRange(axis)) {\n      if (axisCache) {\n        const timeout = axisAction.timeout ?? this.DEFAULT_TURBO_TIMEOUT;\n        if (axisAction.mode === 'turbo' && performance.now() - axisCache.lastActionExecution > timeout) {\n          axisCache.lastActionExecution = performance.now();\n          this.fireAxisAction(axisIndex, axis.valueOf());\n        }\n      } else {\n        cache.push({ index: axisIndex, lastActionExecution: performance.now() });\n        this.fireAxisAction(axisIndex, axis.valueOf());\n      }\n    } else {\n      if (axisCache) {\n        cache = cache.filter((ac) => ac.index !== axisIndex);\n      }\n    }\n\n    this.activeAxesCaches[gamepad.index] = cache;\n  }\n\n  ngOnDestroy(): void {\n    for (const interval of this.checkIntervals) {\n      clearInterval(interval);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hotkey.html":{"url":"interfaces/Hotkey.html","title":"interface - Hotkey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Hotkey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeyInfo.html":{"url":"interfaces/HotkeyInfo.html","title":"interface - HotkeyInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeyInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            subscription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HotkeysData.html":{"url":"interfaces/HotkeysData.html","title":"interface - HotkeysData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HotkeysData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            registeredHotkeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        registeredHotkeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registeredHotkeys:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HotkeysHelpDialogComponent.html":{"url":"components/HotkeysHelpDialogComponent.html","title":"component - HotkeysHelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HotkeysHelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-hotkeys-help-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hotkeys-help-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hotkeys-help-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hotkeyList\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hotkeyList\n                    \n                \n\n                \n                    \n                        gethotkeyList()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/services/hotkeys/hotkeys-help-dialog.component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { HotkeyInfo } from './hotkeys.service';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface HotkeysData {\n  registeredHotkeys: Map;\n}\n\n@Component({\n  selector: 'mtb-hotkeys-help-dialog',\n  styleUrl: './hotkeys-help-dialog.component.scss',\n  templateUrl: './hotkeys-help-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatListModule]\n})\nexport class HotkeysHelpDialogComponent {\n  dialogRef = inject>(MatDialogRef);\n  data = inject(MAT_DIALOG_DATA);\n\n  get hotkeyList() {\n    return [...this.data.registeredHotkeys.entries()];\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Tastenkürzel\n  \n  \n\n\n\n  @for (hotkey of hotkeyList; track hotkey[0]) {\n    \n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(0, hotkey[0].length - 2)\n            .toUpperCase()\n        }}\n      \n      +\n      \n        {{\n          hotkey[0]\n            .toString()\n            .substr(hotkey[0].length - 1, 1)\n            .toUpperCase()\n        }}\n      \n      {{ hotkey[1].description }}\n    \n  } @empty {\n    Es sind keine Tastenkürzel definiert.\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tastenkürzel      @for (hotkey of hotkeyList; track hotkey[0]) {                  {{          hotkey[0]            .toString()            .substr(0, hotkey[0].length - 2)            .toUpperCase()        }}            +              {{          hotkey[0]            .toString()            .substr(hotkey[0].length - 1, 1)            .toUpperCase()        }}            {{ hotkey[1].description }}      } @empty {    Es sind keine Tastenkürzel definiert.  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'HotkeysHelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HotkeysService.html":{"url":"injectables/HotkeysService.html","title":"injectable - HotkeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HotkeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _pause\n                            \n                            \n                                defaults\n                            \n                            \n                                    Optional\n                                dialogRef\n                            \n                            \n                                helpOpen\n                            \n                            \n                                hotkeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialize\n                            \n                            \n                                pause\n                            \n                            \n                                register\n                            \n                            \n                                resume\n                            \n                            \n                                toggleHelpDialog\n                            \n                            \n                                unregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHelpDialog\n                        \n                    \n                \n            \n            \n                \ntoggleHelpDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unregister\n                        \n                    \n                \n            \n            \n                \nunregister(keys: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _pause\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    element: this.document\n  }\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hotkeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/hotkeys/hotkeys.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable, Subscription } from 'rxjs';\nimport { HotkeysHelpDialogComponent } from './hotkeys-help-dialog.component';\n\nexport interface Hotkey {\n  element: any;\n  keys: string;\n  description: string;\n  callback: () => any;\n}\n\nexport interface HotkeyInfo {\n  description: string;\n  subscription: Subscription;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeysService {\n  private eventManager = inject(EventManager);\n  private document = inject(DOCUMENT);\n  private dialog = inject(MatDialog);\n\n  defaults: Partial = {\n    element: this.document\n  };\n\n  hotkeys: Map = new Map();\n\n  helpOpen = false;\n\n  dialogRef?: MatDialogRef;\n\n  _pause = false;\n\n  initialize() {\n    this.register({\n      keys: 'shift+h',\n      description: 'Öffnet diesen Hilfe-Dialog',\n      callback: () => {\n        this.toggleHelpDialog();\n      }\n    });\n  }\n\n  register(options: Partial): string | undefined {\n    if (!options.keys) {\n      return;\n    }\n\n    if (this.hotkeys.get(options.keys)) {\n      console.warn(`Hotkey ${options.keys} ist bereits registriert!`);\n      return;\n    }\n\n    const merged = { ...this.defaults, ...options, keys: options.keys.replaceAll('+', '.') };\n    const event = `keydown.${merged.keys}`;\n\n    const observable = new Observable((observer) => {\n      const handler = (e: KeyboardEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this._pause) {\n          observer.next(e);\n        }\n        return false;\n      };\n\n      const dispose = this.eventManager.addEventListener(merged.element, event, handler);\n\n      return () => {\n        dispose();\n        this.hotkeys.delete(merged.keys);\n      };\n    });\n\n    const sub = observable.subscribe(options.callback);\n    this.hotkeys.set(merged.keys, { description: merged.description ?? '', subscription: sub });\n\n    return merged.keys;\n  }\n\n  unregister(keys: string) {\n    const realKeys = keys.replaceAll('+', '.');\n    const hk = this.hotkeys.get(realKeys);\n\n    if (hk) {\n      hk.subscription.unsubscribe();\n    } else {\n      console.warn(`Hotkey ${keys} ist nicht registriert`);\n    }\n  }\n\n  pause() {\n    this._pause = true;\n  }\n\n  resume() {\n    this._pause = false;\n  }\n\n  toggleHelpDialog() {\n    if (this.helpOpen) {\n      this.helpOpen = false;\n      this.dialogRef?.close();\n    } else {\n      this.helpOpen = true;\n      const dialogReference = this.dialog.open(HotkeysHelpDialogComponent, {\n        width: '360px',\n        hasBackdrop: false,\n        data: { registeredHotkeys: this.hotkeys }\n      });\n      dialogReference.afterClosed().subscribe(() => {\n        this.helpOpen = false;\n      });\n      this.dialogRef = dialogReference;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3CoverPicture.html":{"url":"interfaces/Id3CoverPicture.html","title":"interface - Id3CoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3CoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id3Tags.html":{"url":"interfaces/Id3Tags.html","title":"interface - Id3Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Id3Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFormat } from 'music-metadata';\n\nexport interface Id3Tags {\n  picture?: Id3CoverPicture;\n  artist?: string;\n  title?: string;\n  album?: string;\n  track?: { no?: number | null; of?: number | null };\n  year?: string;\n  format: IFormat;\n}\n\nexport interface Id3CoverPicture {\n  data: Uint8Array;\n  format: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Id3TagsService.html":{"url":"injectables/Id3TagsService.html","title":"injectable - Id3TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Id3TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File, timeoutMs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/id3-tags.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                timeoutMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    30_000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { Id3Tags } from './id3-tags.types';\nimport { TagsWorkerRequest, TagsWorkerResponse } from './metadata.types';\n\n@Injectable({ providedIn: 'root' })\nexport class Id3TagsService implements OnDestroy {\n  private worker: Worker;\n  private nextId = 0;\n  private pendingRequests = new Map void; reject: (error: Error) => void }>();\n\n  constructor() {\n    this.worker = new Worker(new URL('metadata.worker', import.meta.url), { type: 'module' });\n    this.worker.addEventListener('message', this.handleMessage);\n    this.worker.addEventListener('error', this.handleError);\n  }\n\n  extractTags(file: File, timeoutMs = 30_000): Promise {\n    if (!this.worker) {\n      return Promise.reject(new Error('Metadata worker is not available'));\n    }\n\n    const id = `id-${this.nextId++}`;\n\n    return new Promise((resolve, reject) => {\n      // Set timeout to avoid hanging promises\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error('Metadata extraction timed out'));\n      }, timeoutMs);\n\n      this.pendingRequests.set(id, {\n        resolve: (tags) => {\n          clearTimeout(timeoutId);\n          resolve(tags);\n        },\n        reject: (error) => {\n          clearTimeout(timeoutId);\n          reject(error);\n        }\n      });\n\n      this.worker.postMessage({ id, file } as TagsWorkerRequest);\n    });\n  }\n\n  private handleMessage = (event: MessageEvent): void => {\n    const { id, tags, error } = event.data;\n    const request = this.pendingRequests.get(id);\n\n    if (request) {\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        request.reject(new Error(error));\n      } else {\n        request.resolve(tags);\n      }\n    }\n  };\n\n  private handleError = (event: ErrorEvent): void => {\n    console.error('Worker error:', event);\n    // Reject all pending requests on catastrophic worker error\n    for (const [id, request] of this.pendingRequests.entries()) {\n      request.reject(new Error(event.message || 'Unknown worker error'));\n      this.pendingRequests.delete(id);\n    }\n  };\n\n  ngOnDestroy(): void {\n    if (this.worker) {\n      this.worker.removeEventListener('message', this.handleMessage);\n      this.worker.removeEventListener('error', this.handleError);\n      this.worker.terminate();\n    }\n\n    // Reject any pending requests\n    for (const request of this.pendingRequests.values()) {\n      request.reject(new Error('Service was destroyed'));\n    }\n    this.pendingRequests.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndexedDbTrackMetadata.html":{"url":"interfaces/IndexedDbTrackMetadata.html","title":"interface - IndexedDbTrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IndexedDbTrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TrackMetadata\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmAlbum.html":{"url":"interfaces/LastfmAlbum.html","title":"interface - LastfmAlbum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmAlbum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         LastfmImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmImage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmErrorResponse.html":{"url":"interfaces/LastfmErrorResponse.html","title":"interface - LastfmErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmImage.html":{"url":"interfaces/LastfmImage.html","title":"interface - LastfmImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            #text\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        #text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        #text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LastfmMetadataService.html":{"url":"injectables/LastfmMetadataService.html","title":"injectable - LastfmMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LastfmMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LastfmSuccessResponse.html":{"url":"interfaces/LastfmSuccessResponse.html","title":"interface - LastfmSuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LastfmSuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         LastfmAlbum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LastfmAlbum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface LastfmImage {\n  '#text': string;\n  size: string;\n}\n\ninterface LastfmAlbum {\n  name: string;\n  artist: string;\n  image: LastfmImage[];\n}\n\ninterface LastfmSuccessResponse {\n  album: LastfmAlbum;\n}\n\ninterface LastfmErrorResponse {\n  error: number;\n  message: string;\n}\n\ntype LastfmResponse = LastfmSuccessResponse | LastfmErrorResponse;\n\n@Injectable({ providedIn: 'root' })\nexport class LastfmMetadataService {\n  private http = inject(HttpClient);\n  private readonly LASTFM_API_KEY = '3a67934408152a2fc3f7216c022ec1df';\n  private readonly API_URL = 'https://ws.audioscrobbler.com/2.0/';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const data = await this.fetchAlbumInfo(tags.artist, tags.album);\n      return this.extractCoverUrls(data);\n    } catch (error) {\n      console.warn('Failed to query Last.fm', error);\n      return undefined;\n    }\n  }\n\n  private async fetchAlbumInfo(artist: string, album: string): Promise {\n    const url = this.buildApiUrl('album.getinfo', {\n      artist: encodeURIComponent(artist),\n      album: encodeURIComponent(album)\n    });\n\n    return firstValueFrom(this.http.get(url));\n  }\n\n  private buildApiUrl(method: string, params: Record): string {\n    const queryParams = new URLSearchParams({\n      method,\n      api_key: this.LASTFM_API_KEY,\n      format: 'json',\n      ...params\n    });\n\n    return `${this.API_URL}?${queryParams.toString()}`;\n  }\n\n  private extractCoverUrls(data: LastfmResponse): RemoteCoverPicture | undefined {\n    if ('error' in data || !('album' in data)) {\n      return undefined;\n    }\n\n    const images = data.album.image;\n    if (!images || !images[5]?.['#text']) {\n      return undefined;\n    }\n\n    return {\n      thumb: ensureHttps(images[1]['#text']),\n      original: ensureHttps(images[5]['#text'])\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyFileLoaderService.html":{"url":"injectables/LegacyFileLoaderService.html","title":"injectable - LegacyFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FileLoaderService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/file-loader-service/legacy-file-loader.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:27\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:46\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                        \n                            \n                                Inherited from         FileLoaderService\n\n                            \n                        \n                    \n                        \n                                Defined in         FileLoaderService:11\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LegacyFileLoaderService extends FileLoaderService {\n  private fileInput!: HTMLInputElement;\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  private files: File[] = [];\n\n  constructor() {\n    super();\n    this.fileInput = document.createElement('input');\n    this.fileInput.type = 'file';\n    this.fileInput.id = 'hidden_file_input';\n    this.fileInput.style.display = 'none';\n    this.fileInput.accept = ALLOWED_MIMETYPES.join('|');\n    this.fileInput.multiple = true;\n\n    document.body.append(this.fileInput);\n  }\n\n  async init() {}\n\n  async openFiles(): Promise {\n    return this.files.map((file) => ({ file }));\n  }\n\n  private getFiles(): File[] {\n    const files: File[] = [];\n    if (this.fileInput.files) {\n      for (let index = 0; index  {\n    this.fileInput.click();\n    const files: File[] = await new Promise((resolve) => {\n      this.fileInput.addEventListener('change', () => resolve(this.getFiles())); // resolve with input, not event\n    });\n\n    this.files = files;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/library/library.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                imports\n                \n                            MatListModule\n                            NgArrayPipesModule\n                            MatMenu\n                            MatMenuContent\n                            MatMenuItem\n                            MatMenuTrigger\n                            MatIcon\n                            MatIconButton\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            NgOptimizedImage\n                            SafePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n            \n                styleUrl\n                ./library.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                selectedAlbum\n                            \n                            \n                                    Readonly\n                                selectedArtist\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                uniqueAlbums\n                            \n                            \n                                    Readonly\n                                uniqueArtists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAlbumToPlaylist\n                            \n                            \n                                    Async\n                                addTracksToPlaylist\n                            \n                            \n                                    Async\n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                playTrack\n                            \n                            \n                                selectAlbum\n                            \n                            \n                                selectArtist\n                            \n                            \n                                selectTrack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addAlbumToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAlbumToPlaylist(album: Album)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                            Album\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTracksToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dbTracks\n                                            \n                                                        IndexedDbTrackMetadata[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTrackToPlaylist(track: IndexedDbTrackMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            IndexedDbTrackMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAlbum\n                        \n                    \n                \n            \n            \n                \nselectAlbum(album: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                album\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectArtist\n                        \n                    \n                \n            \n            \n                \nselectArtist(artist: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTrack\n                        \n                    \n                \n            \n            \n                \nselectTrack(track: IndexedDbTrackMetadata | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/library/library.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                        IndexedDbTrackMetadata | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedAlbum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedArtist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tracks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.data();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueAlbums\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    let filtered = this.data();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uniqueArtists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const filtered = this.data()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/library/library.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, OnInit, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { IndexedDbTrackMetadata, Track } from '../player.types';\nimport { NgArrayPipesModule } from 'ngx-pipes';\nimport { MatListModule } from '@angular/material/list';\nimport { firstValueFrom } from 'rxjs';\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { PlayerService } from '../player.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { NgOptimizedImage } from '@angular/common';\nimport { SafePipe } from 'safe-pipe';\nimport { Router } from '@angular/router';\nimport { RemoteCoverPicture } from '../metadata-service/metadata.types';\n\nexport interface Album {\n  name: string;\n  coverUrl: RemoteCoverPicture;\n}\n\n@Component({\n  templateUrl: './library.component.html',\n  styleUrl: './library.component.scss',\n  imports: [\n    MatListModule,\n    NgArrayPipesModule,\n    MatMenu,\n    MatMenuContent,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatIcon,\n    MatIconButton,\n    CdkFixedSizeVirtualScroll,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    NgOptimizedImage,\n    SafePipe\n  ]\n})\nexport default class LibraryComponent implements OnInit {\n  private indexedDbService = inject(NgxIndexedDBService);\n  private playerService = inject(PlayerService);\n  private router = inject(Router);\n\n  private readonly data = signal([]);\n\n  readonly selectedArtist = signal(undefined);\n  readonly selectedAlbum = signal(undefined);\n  readonly selectedTrack = signal(undefined);\n\n  readonly uniqueArtists = computed(() => {\n    const filtered = this.data()\n      .map((tag) => tag.artist)\n      .filter((artist): artist is string => !!artist);\n\n    return [...new Set(filtered)];\n  });\n\n  readonly uniqueAlbums = computed(() => {\n    let filtered = this.data();\n    const artist = this.selectedArtist();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist && !!item.album);\n    } else {\n      filtered = filtered.filter((item) => !!item.album);\n    }\n\n    // Map to store unique albums by name\n    const albumMap = new Map();\n\n    for (const tag of filtered) {\n      const albumName = tag.album || '';\n      if (!albumMap.has(albumName)) {\n        albumMap.set(albumName, {\n          name: albumName,\n          coverUrl: tag.coverUrl\n        });\n      }\n    }\n\n    return [...albumMap.values()].sort((a, b) => a.name.localeCompare(b.name));\n  });\n\n  readonly tracks = computed(() => {\n    let filtered = this.data();\n    const artist = this.selectedArtist();\n    const album = this.selectedAlbum();\n\n    if (artist) {\n      filtered = filtered.filter((item) => item.artist === artist);\n    }\n\n    if (album) {\n      filtered = filtered.filter((item) => item.album === album);\n    }\n\n    // Sort tracks by artist, then album, then track number (if available), then title\n    return filtered.sort((a, b) => {\n      // Compare artists first\n      const artistCompare = (a.artist || '').localeCompare(b.artist || '');\n      if (artistCompare !== 0) return artistCompare;\n\n      // Then compare albums\n      const albumCompare = (a.album || '').localeCompare(b.album || '');\n      if (albumCompare !== 0) return albumCompare;\n\n      // Then use track number if available\n      const aTrack = a.track !== undefined ? Number(a.track) : NaN;\n      const bTrack = b.track !== undefined ? Number(b.track) : NaN;\n\n      // If both tracks have track numbers, compare them\n      if (!isNaN(aTrack) && !isNaN(bTrack)) {\n        return aTrack - bTrack;\n      }\n\n      // Otherwise, fall back to title comparison\n      return (a.title || '').localeCompare(b.title || '');\n    });\n  });\n\n  async ngOnInit() {\n    try {\n      const result = await firstValueFrom(this.indexedDbService.getAll('metatags'));\n      this.data.set(result || []);\n    } catch (error) {\n      console.error('Error loading library data:', error);\n    }\n  }\n\n  selectArtist(artist: string | undefined) {\n    this.selectedArtist.set(artist);\n    this.selectedAlbum.set(undefined);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectAlbum(album: string | undefined) {\n    this.selectedAlbum.set(album);\n    this.selectedTrack.set(undefined);\n  }\n\n  selectTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      this.selectedTrack.set(track);\n    }\n  }\n\n  async playTrack(track: IndexedDbTrackMetadata | undefined) {\n    if (track) {\n      await this.addTrackToPlaylist(track);\n      void this.router.navigate(['/player']);\n    }\n  }\n\n  async addAlbumToPlaylist(album: Album) {\n    const tracks = this.data().filter((track) => track.album === album.name);\n    await this.addTracksToPlaylist(...tracks);\n  }\n\n  async addTrackToPlaylist(track: IndexedDbTrackMetadata) {\n    await this.addTracksToPlaylist(track);\n  }\n\n  async addTracksToPlaylist(...dbTracks: IndexedDbTrackMetadata[]) {\n    for (const dbTrack of dbTracks) {\n      const file = await dbTrack.fileHandle?.getFile();\n      if (file) {\n        const track: Track = {\n          file: file,\n          fileHandle: dbTrack.fileHandle,\n          metadata: dbTrack\n        };\n\n        this.playerService.addTrackToPlaylist(track);\n      } else {\n        console.error('File not found for track:', dbTracks);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        (All)\n        \n          {{ artist }}\n        \n      \n    \n  \n\n  \n    \n      \n        (All)\n        \n          \n            @if (album && album.coverUrl) {\n              \n            }\n          \n          {{ album.name }}\n          \n            \n              \n            \n          \n        \n      \n    \n    \n    \n      \n        Add to Playlist\n      \n    \n  \n\n  \n    \n      \n        \n          \n            @if (track && track.coverUrl) {\n              \n            }\n          \n          {{ track.track }} {{ track.title }}-->\n          {{ track.title }}\n          \n            \n              \n            \n          \n        \n      \n    \n    \n    \n      \n        Add to Playlist\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    (All)                  {{ artist }}                                        (All)                              @if (album && album.coverUrl) {                          }                    {{ album.name }}                                                                                                  Add to Playlist                                                      @if (track && track.coverUrl) {                          }                    {{ track.track }} {{ track.title }}-->          {{ track.title }}                                                                                                  Add to Playlist            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderInterceptor.html":{"url":"interceptors/LoaderInterceptor.html","title":"interceptor - LoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  private loaderService = inject(LoaderService);\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => this.loaderService.hide()));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/loader/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/loader/loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  readonly isLoading = signal(false);\n\n  private loadingCounter = 0;\n\n  show() {\n    if (this.loadingCounter === 0) {\n      this.isLoading.set(true);\n    }\n    this.loadingCounter += 1;\n  }\n\n  hide() {\n    if (this.loadingCounter > 0) {\n      this.loadingCounter -= 1;\n\n      if (this.loadingCounter === 0) {\n        this.isLoading.set(false);\n      }\n    } else {\n      console.warn('LoaderService: hide called without matching show call');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaSessionService.html":{"url":"injectables/MediaSessionService.html","title":"injectable - MediaSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/media-session/media-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActionHandler\n                            \n                            \n                                setBrowserMetadata\n                            \n                            \n                                setSeekToHandler\n                            \n                            \n                                updateMediaPositionState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActionHandler\n                        \n                    \n                \n            \n            \n                \nsetActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        MediaSessionAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBrowserMetadata\n                        \n                    \n                \n            \n            \n                \nsetBrowserMetadata(metadata: MediaMetadataInit)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metadata\n                                            \n                                                        MediaMetadataInit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekToHandler\n                        \n                    \n                \n            \n            \n                \nsetSeekToHandler(action: (details: MediaSessionActionDetails) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMediaPositionState\n                        \n                    \n                \n            \n            \n                \nupdateMediaPositionState(duration: number, currentTime: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/media-session/media-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { effect, inject, Injectable } from '@angular/core';\nimport { AudioService } from '../../player/audio.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSessionService {\n  private audioService = inject(AudioService);\n\n  constructor() {\n    effect(() => {\n      const playing = this.audioService.isPlaying();\n      if (playing) {\n        this.setPlaybackState('playing');\n      } else if (this.audioService.isPaused()) {\n        this.setPlaybackState('paused');\n      } else {\n        this.setPlaybackState('none');\n      }\n    });\n\n    effect(() => {\n      const duration = this.audioService.duration();\n      if (this.audioService.isPlaying() && !Number.isNaN(duration)) {\n        const currentTime = this.audioService.currentTime();\n        this.updateMediaPositionState(duration, currentTime);\n      }\n    });\n  }\n\n  setActionHandler(action: MediaSessionAction, handler: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler(action, handler);\n    } catch {\n      console.warn(`The media session action \"${action}\" is not supported yet.`);\n    }\n  }\n\n  setSeekToHandler(action: (details: MediaSessionActionDetails) => any) {\n    try {\n      navigator.mediaSession.setActionHandler('seekto', (details) => {\n        action(details);\n      });\n    } catch (error) {\n      console.warn(`The media session action \"seekto\" is not supported yet.`, error);\n    }\n  }\n\n  updateMediaPositionState(duration: number, currentTime: number) {\n    if (navigator.mediaSession?.setPositionState) {\n      navigator.mediaSession.setPositionState({\n        duration: duration,\n        position: currentTime\n      });\n    }\n  }\n\n  setBrowserMetadata(metadata: MediaMetadataInit) {\n    navigator.mediaSession.metadata = new MediaMetadata(metadata);\n  }\n\n  private setPlaybackState(state: MediaSessionPlaybackState) {\n    navigator.mediaSession.playbackState = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetadataService.html":{"url":"injectables/MetadataService.html","title":"injectable - MetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                preferTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagEmbeddedPicture\n                            \n                            \n                                    Readonly\n                                useTagsCache\n                            \n                            \n                                    Readonly\n                                useWebMetainfos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMetadata\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetadata(fileData: FileData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                            FileData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        preferTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagEmbeddedPicture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useTagsCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useTagsCache') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useWebMetainfos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('useWebMetainfos') ?? true)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/metadata-service/metadata.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { crc32 } from '@allex/crc32';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { firstValueFrom } from 'rxjs';\nimport { IndexedDbTrackMetadata, TrackMetadata } from '../player.types';\nimport { Id3TagsService } from './id3-tags.service';\nimport { LastfmMetadataService } from './lastfm-metadata.service';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata.types';\nimport { MusicbrainzService } from './musicbrainz.service';\nimport { Vibrant } from 'node-vibrant/browser';\nimport { FileData } from '../file-loader-service/file-loader.helpers';\n\n// import * as SparkMD5 from 'spark-md5';\n\n@Injectable({ providedIn: 'root' })\nexport class MetadataService {\n  private id3TagsService = inject(Id3TagsService);\n  private lastfmMetadataService = inject(LastfmMetadataService);\n  private musicbrainzService = inject(MusicbrainzService);\n  private indexedDBService = inject(NgxIndexedDBService);\n  private localStorageService = inject(LocalStorageService);\n\n  private readonly PLACEHOLDER_URL = 'assets/icons/record.svg';\n\n  readonly useWebMetainfos = signal(this.localStorageService.retrieve('useWebMetainfos') ?? true);\n  readonly useTagsCache = signal(this.localStorageService.retrieve('useTagsCache') ?? true);\n  readonly useTagEmbeddedPicture = signal(this.localStorageService.retrieve('useTagEmbeddedPicture') ?? true);\n  readonly preferTagEmbeddedPicture = signal(this.localStorageService.retrieve('preferTagEmbeddedPicture') ?? true);\n\n  async getMetadata(fileData: FileData): Promise {\n    // console.time('hash');\n    const crc = generateFileHash(fileData.file);\n    // console.timeEnd('hash');\n\n    if (this.useTagsCache()) {\n      const metadataCache: TrackMetadata = await firstValueFrom(this.indexedDBService.getByKey('metatags', crc));\n\n      if (metadataCache) {\n        if (metadataCache.embeddedPicture && this.useTagEmbeddedPicture() && (!metadataCache.coverUrl || this.preferTagEmbeddedPicture())) {\n          // renew local object urls\n          const url = URL.createObjectURL(new Blob([metadataCache.embeddedPicture.data], { type: metadataCache.embeddedPicture.format }));\n          return {\n            ...metadataCache,\n            coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n          };\n        } else {\n          return this.createObjectUrlForEmbeddedPicture(metadataCache);\n        }\n      }\n    }\n    // console.time('id3tags');\n    const tags = await this.id3TagsService.extractTags(fileData.file);\n    // console.timeEnd('id3tags');\n    if (!tags) {\n      // if no tags\n      return undefined;\n    }\n\n    let coverUrls: RemoteCoverPicture | undefined;\n\n    if (this.useWebMetainfos()) {\n      if (tags.artist && tags.album) {\n        // console.time('webcover');\n        coverUrls = await this.lastfmMetadataService.getCoverPictureUrls(tags);\n        if (!coverUrls) {\n          coverUrls = await this.musicbrainzService.getCoverPictureUrls(tags);\n        }\n        // console.timeEnd('webcover');\n      } else {\n        console.warn('Missing tags for lookup');\n      }\n    }\n\n    let palette: CoverColorPalette | undefined;\n\n    if (coverUrls?.original) {\n      // console.time('vibrant');\n      palette = await extractColorsWithNodeVibrant(coverUrls.original);\n      // console.timeEnd('vibrant');\n    }\n    // else if (tags.picture) {\n    //   // console.time('vibrant');\n    //   const objectUrl = URL.createObjectURL(new Blob([tags.picture.data], { type: tags.picture.format }));\n    //   palette = await extractColorsWithNodeVibrant(objectUrl);\n    //   URL.revokeObjectURL(objectUrl);\n    //   // console.timeEnd('vibrant');\n    // }\n\n    const metadata: IndexedDbTrackMetadata = {\n      crc: crc,\n      fileHandle: fileData.fileHandle,\n      coverUrl: coverUrls ?? { thumb: this.PLACEHOLDER_URL, original: this.PLACEHOLDER_URL },\n      embeddedPicture: tags.picture,\n      coverColors: palette || {},\n      artist: tags.artist,\n      title: tags.title,\n      track: tags.track?.no?.toString(),\n      album: tags.album,\n      year: tags.year,\n      format: tags.format\n    };\n\n    if (this.useTagsCache()) {\n      await this.indexedDBService.add('metatags', metadata).toPromise();\n    }\n    return this.createObjectUrlForEmbeddedPicture(metadata);\n  }\n\n  private createObjectUrlForEmbeddedPicture(meta: TrackMetadata): TrackMetadata {\n    if (meta.embeddedPicture && this.useTagEmbeddedPicture() && (!meta.coverUrl || this.preferTagEmbeddedPicture())) {\n      // renew local object urls\n      // TODO: Erst kreieren wenn gebraucht!\n      const url = URL.createObjectURL(new Blob([meta.embeddedPicture.data], { type: meta.embeddedPicture.format }));\n      return {\n        ...meta,\n        coverUrl: { thumb: url, original: url } // overwrite remote url with objectUrl for tag cover art\n      };\n    } else {\n      return meta;\n    }\n  }\n}\n\nfunction generateFileHash(file: File): string {\n  // TODO: replace with real file hashing? https://stackoverflow.com/questions/20917710/fast-file-hashing-of-large-files\n  const hashString: string = file.name + file.type + file.size + file.lastModified;\n  return crc32(hashString, 'hex') as string;\n}\n//\n// async function generateFileHashMD5(file: File): Promise {\n//   return SparkMD5.ArrayBuffer.hash(await file.arrayBuffer());\n// }\n\nasync function extractColorsWithNodeVibrant(url: string): Promise {\n  const palette = await Vibrant.from(url).getPalette();\n  return {\n    vibrant: { hex: palette.Vibrant?.hex, textHex: palette.Vibrant?.titleTextColor },\n    darkVibrant: { hex: palette.DarkVibrant?.hex, textHex: palette.DarkVibrant?.titleTextColor },\n    lightVibrant: { hex: palette.LightVibrant?.hex, textHex: palette.LightVibrant?.titleTextColor },\n    muted: { hex: palette.Muted?.hex, textHex: palette.Muted?.titleTextColor },\n    darkMuted: { hex: palette.DarkMuted?.hex, textHex: palette.DarkMuted?.titleTextColor },\n    lightMuted: { hex: palette.LightMuted?.hex, textHex: palette.LightMuted?.titleTextColor }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetadataSettingsComponent.html":{"url":"components/MetadataSettingsComponent.html","title":"component - MetadataSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MetadataSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-metadata-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSlideToggleModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./metadata-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metadataService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearMetadataCache\n                            \n                            \n                                onPreferTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagEmbeddedPicsChange\n                            \n                            \n                                onUseTagsCacheChange\n                            \n                            \n                                onUseWebTagsChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearMetadataCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearMetadataCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreferTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonPreferTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagEmbeddedPicsChange\n                        \n                    \n                \n            \n            \n                \nonUseTagEmbeddedPicsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseTagsCacheChange\n                        \n                    \n                \n            \n            \n                \nonUseTagsCacheChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUseWebTagsChange\n                        \n                    \n                \n            \n            \n                \nonUseWebTagsChange(event: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        metadataService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MetadataService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/metadata-settings/metadata-settings.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSlideToggleChange, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { MetadataService } from '../../player/metadata-service/metadata.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-metadata-settings',\n  templateUrl: './metadata-settings.component.html',\n  imports: [MatCardModule, MatSlideToggleModule, MatButtonModule]\n})\nexport class MetadataSettingsComponent {\n  metadataService = inject(MetadataService);\n  private indexedDBService = inject(NgxIndexedDBService);\n\n  onUseWebTagsChange(event: MatSlideToggleChange) {\n    this.metadataService.useWebMetainfos.set(event.checked);\n  }\n\n  onUseTagsCacheChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagsCache.set(event.checked);\n  }\n\n  onUseTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.useTagEmbeddedPicture.set(event.checked);\n  }\n\n  onPreferTagEmbeddedPicsChange(event: MatSlideToggleChange) {\n    this.metadataService.preferTagEmbeddedPicture.set(event.checked);\n  }\n\n  async clearMetadataCache() {\n    await this.indexedDBService.clear('metatags').toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Metadata-Settings\n  \n  \n    Download Metadata from Last.FM and Musicbrainz\n    Use coverart from file-tags\n    Prioritize coverart from file-Tags\n    \n      Cache Tags in Indexed-DB\n      Clear Tags-DB\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Metadata-Settings        Download Metadata from Last.FM and Musicbrainz    Use coverart from file-tags    Prioritize coverart from file-Tags          Cache Tags in Indexed-DB      Clear Tags-DB      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'MetadataSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzReleaseGroup.html":{"url":"interfaces/MusicbrainzReleaseGroup.html","title":"interface - MusicbrainzReleaseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzReleaseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            first-release-date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first-release-date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first-release-date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicbrainzResponse.html":{"url":"interfaces/MusicbrainzResponse.html","title":"interface - MusicbrainzResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicbrainzResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            release-groups\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release-groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release-groups:         MusicbrainzReleaseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MusicbrainzReleaseGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicbrainzService.html":{"url":"injectables/MusicbrainzService.html","title":"injectable - MusicbrainzService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicbrainzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCoverPictureUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCoverPictureUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCoverPictureUrls(tags: Id3Tags)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/metadata-service/musicbrainz.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Id3Tags\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport luceneEscapeQuery from 'lucene-escape-query';\nimport { firstValueFrom } from 'rxjs';\nimport { Id3Tags } from './id3-tags.types';\nimport { RemoteCoverPicture } from './metadata.types';\nimport { ensureHttps } from './metadata.helper';\n\ninterface MusicbrainzReleaseGroup {\n  id: string;\n  title: string;\n  'first-release-date'?: string;\n}\n\ninterface MusicbrainzResponse {\n  'release-groups': MusicbrainzReleaseGroup[];\n  count: number;\n}\n\ninterface CoverArtImage {\n  image: string;\n  front: boolean;\n  thumbnails: {\n    '500': string;\n    large: string;\n    small: string;\n  };\n}\n\ninterface CoverArtResponse {\n  images: CoverArtImage[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class MusicbrainzService {\n  private http = inject(HttpClient);\n  private readonly API_URL = 'https://musicbrainz.org/ws/2';\n  private readonly COVER_API_URL = 'https://coverartarchive.org';\n\n  async getCoverPictureUrls(tags: Id3Tags): Promise {\n    if (!tags.artist || !tags.album) {\n      return undefined;\n    }\n\n    try {\n      const releaseGroupId = await this.findReleaseGroupId(tags.artist, tags.album);\n      if (!releaseGroupId) {\n        return undefined;\n      }\n\n      return await this.fetchCoverArt(releaseGroupId);\n    } catch (error) {\n      console.warn('Failed to query MusicBrainz', error);\n      return undefined;\n    }\n  }\n\n  private async findReleaseGroupId(artist: string, album: string): Promise {\n    const query = `release:${luceneEscapeQuery.escape(album)} AND artist:${luceneEscapeQuery.escape(artist)} AND primarytype:Album`;\n    const url = `${this.API_URL}/release-group?query=${query}&limit=5&fmt=json`;\n\n    try {\n      const data = await firstValueFrom(this.http.get(url));\n\n      if (!data['release-groups']?.length) {\n        return undefined;\n      }\n\n      return data['release-groups'][0].id;\n    } catch (error) {\n      console.warn('Failed to search release groups:', error);\n      return undefined;\n    }\n  }\n\n  private async fetchCoverArt(releaseGroupId: string): Promise {\n    try {\n      const url = `${this.COVER_API_URL}/release-group/${releaseGroupId}`;\n      const coverData = await firstValueFrom(this.http.get(url));\n\n      const coverImage = coverData.images.find((image) => image.front === true);\n      if (!coverImage) {\n        return undefined;\n      }\n\n      return {\n        thumb: ensureHttps(coverImage.thumbnails['500'] || coverImage.thumbnails.small),\n        original: ensureHttps(coverImage.thumbnails.large)\n        // original: ensureHttps(coverImage.image)\n      };\n    } catch (error) {\n      console.warn('No cover found with this ID', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NativeBrowserFileLoaderService.html":{"url":"injectables/NativeBrowserFileLoaderService.html","title":"injectable - NativeBrowserFileLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NativeBrowserFileLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FileLoaderService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentFolderHandle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                openFiles\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:20\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFiles()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:40\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileLoaderService\n\n                        \n                    \n                    \n                        \n                                Defined in         FileLoaderService:30\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentFolderHandle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileSystemDirectoryHandle\n\n                    \n                \n                        \n                            \n                                Inherited from         FileLoaderService\n\n                            \n                        \n                    \n                        \n                                Defined in         FileLoaderService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { firstValueFrom } from 'rxjs';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader.helpers';\nimport { FileLoaderService } from './file-loader.service.abstract';\n\ninterface DirHandleEntry {\n  id: number;\n  handle: FileSystemDirectoryHandle;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NativeBrowserFileLoaderService extends FileLoaderService {\n  private indexedDbService = inject(NgxIndexedDBService);\n\n  currentFolderHandle?: FileSystemDirectoryHandle;\n\n  async init() {\n    const entry = await firstValueFrom(this.indexedDbService.getByID('dirHandle', 1));\n    if (entry) {\n      const granted = await verifyPermission(entry.handle);\n      if (granted) {\n        this.currentFolderHandle = entry.handle;\n      }\n    }\n  }\n\n  async showPicker(): Promise {\n    try {\n      const handle = await showDirectoryPicker();\n      this.currentFolderHandle = handle;\n      await this.indexedDbService.update('dirHandle', { id: 1, handle: handle } as DirHandleEntry).toPromise();\n    } catch (error) {\n      console.log('No files:', error);\n    }\n  }\n\n  async openFiles(): Promise {\n    if (this.currentFolderHandle) {\n      return getAudioFilesFromDirHandle(this.currentFolderHandle);\n    }\n    return [];\n  }\n}\n\nasync function getAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle): Promise {\n  const fileData: FileData[] = [];\n  for await (const entry of dirHandle.values()) {\n    if (entry.kind === 'file') {\n      const file = await entry.getFile();\n      if (ALLOWED_MIMETYPES.includes(file.type)) {\n        // TODO: remove double check when accepts works for directories in API\n        fileData.push({ file, fileHandle: entry });\n      }\n    } else {\n      const subFiles = await getAudioFilesFromDirHandle(entry);\n      fileData.push(...subFiles);\n    }\n  }\n  return fileData;\n}\n\nasync function verifyPermission(handle: FileSystemDirectoryHandle) {\n  // Request permission. If the user grants permission, return true.\n  if ((await handle.requestPermission()) === 'granted') {\n    return true;\n  }\n  // The user didn't grant permission, so return false.\n  return false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OscVisualizerOptions.html":{"url":"interfaces/OscVisualizerOptions.html","title":"interface - OscVisualizerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OscVisualizerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseVisualizerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \"osc\" | \"circular-osc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"osc\" | \"circular-osc\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OsciloscopeConfig.html":{"url":"interfaces/OsciloscopeConfig.html","title":"interface - OsciloscopeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OsciloscopeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/player.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-player\n            \n\n\n            \n                imports\n                \n                                PlaylistComponent\n                            MatButtonModule\n                            MatIconModule\n                                CoverDisplayComponent\n                                VisualizerComponent\n                            MatToolbarModule\n                            MatTooltipModule\n                            MatSliderModule\n                            MatMenuModule\n                            NgClass\n                                FileDropOverlayComponent\n                            TimePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n\n            \n                styleUrl\n                ./player.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ALLOWED_TYPES\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                isPlaylistEmpty\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                volumeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseVolume\n                            \n                            \n                                formatLabel\n                            \n                            \n                                increaseVolume\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                onFilesDropped\n                            \n                            \n                                    Async\n                                onReload\n                            \n                            \n                                onSliderPositionChanged\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                showPicker\n                            \n                            \n                                toggleMute\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.component.ts:52\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseVolume\n                        \n                    \n                \n            \n            \n                \ndecreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseVolume\n                        \n                    \n                \n            \n            \n                \nincreaseVolume(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onFilesDropped\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFilesDropped(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onReload\n                        \n                    \n                \n            \n            \n                \n                        \n                    onReload()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSliderPositionChanged\n                        \n                    \n                \n            \n            \n                \nonSliderPositionChanged(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        showPicker\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPicker()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMute\n                        \n                    \n                \n            \n            \n                \ntoggleMute()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ALLOWED_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALLOWED_MIMETYPES\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isPlaylistEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.playerService.currentPlaylist().length === 0)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        volumeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getVolumeIconForLevel(this.audioService.volume()))\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.component.ts:156\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { formatSecondsAsClock } from '@motabass/helpers';\nimport { ALLOWED_MIMETYPES } from './file-loader-service/file-loader.helpers';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { PlayerService } from './player.service';\nimport { HotkeysService } from '../services/hotkeys/hotkeys.service';\nimport { GamepadService } from '../services/gamepad/gamepad.service';\nimport { GamepadAxes, GamepadButtons } from '../services/gamepad/gamepad.types';\nimport { TitleService } from '../services/title.service';\nimport { AudioService } from './audio.service';\nimport { TimePipe } from './time.pipe';\nimport { FileDropOverlayComponent } from '@motabass/ui-components/file-drop-overlay';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { VisualizerComponent } from './visualizer/visualizer.component';\nimport { CoverDisplayComponent } from './cover-display/cover-display.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgClass } from '@angular/common';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@Component({\n  selector: 'mtb-player',\n  templateUrl: './player.component.html',\n  styleUrl: './player.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    PlaylistComponent,\n    MatButtonModule,\n    MatIconModule,\n    CoverDisplayComponent,\n    VisualizerComponent,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatSliderModule,\n    MatMenuModule,\n    NgClass,\n    FileDropOverlayComponent,\n    TimePipe\n  ]\n})\nexport default class PlayerComponent implements OnInit, OnDestroy {\n  playerService = inject(PlayerService);\n  private titleService = inject(TitleService);\n  private gamepadService = inject(GamepadService, { optional: true });\n  private hotkeysService = inject(HotkeysService, { optional: true });\n  private fileLoaderService = inject(FileLoaderService);\n  audioService = inject(AudioService);\n\n  readonly ALLOWED_TYPES = ALLOWED_MIMETYPES;\n\n  constructor() {\n    if (this.hotkeysService) {\n      this.hotkeysService.initialize();\n\n      this.hotkeysService.register({ keys: 'shift+p', description: 'Play/Pause', callback: () => this.playerService.playPause() });\n    }\n  }\n\n  async ngOnInit() {\n    this.titleService.setTitle('gBlaster');\n\n    if (this.gamepadService) {\n      this.gamepadService.registerButtonAction(GamepadButtons.A_BUTTON, () => this.playerService.playPause());\n      this.gamepadService.registerButtonAction(GamepadButtons.B_BUTTON, () => this.playerService.stop());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.X_BUTTON, () => this.toggleShuffle());\n      this.gamepadService.registerButtonAction(GamepadButtons.Y_BUTTON, () => this.toggleRepeat());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.L2_BUTTON, (value) => this.seekLeft(value), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.R2_BUTTON, (value) => this.seekRight(value), 'turbo');\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_X,\n        (value) => this.seekRight(value),\n        (value) => this.seekLeft(value),\n        'turbo',\n        64\n      );\n\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S2_Y,\n        (value) => this.decreaseVolume(value),\n        (value) => this.increaseVolume(value),\n        'hold'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.S2_BUTTON, () => this.toggleMute());\n\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_UP, () => this.playerService.selectPrevious());\n      this.gamepadService.registerButtonAction(GamepadButtons.DPAD_DOWN, () => this.playerService.selectNext());\n      this.gamepadService.registerAxisAction(\n        GamepadAxes.S1_Y,\n        () => this.playerService.selectNext(),\n        () => this.playerService.selectPrevious(),\n        'turbo'\n      );\n\n      this.gamepadService.registerButtonAction(GamepadButtons.R1_BUTTON, () => this.playerService.next(), 'turbo');\n      this.gamepadService.registerButtonAction(GamepadButtons.L1_BUTTON, () => this.playerService.previous(), 'turbo');\n\n      this.gamepadService.registerButtonAction(GamepadButtons.START_BUTTON, () => this.showPicker());\n    }\n  }\n\n  async onReload() {\n    await this.fileLoaderService.init();\n    return this.fileLoaderService.currentFolderHandle ? this.loadFiles() : this.showPicker();\n  }\n\n  readonly isPlaylistEmpty = computed(() => this.playerService.currentPlaylist().length === 0);\n\n  onSliderPositionChanged(value: number) {\n    if (value !== null) {\n      this.playerService.setSeekPosition(value);\n    }\n  }\n\n  seekLeft(value: number) {\n    this.playerService.seekLeft(value + 10);\n  }\n\n  seekRight(value: number) {\n    this.playerService.seekRight(value + 10);\n  }\n\n  toggleMute() {\n    // TODO: implement\n  }\n\n  increaseVolume(value: number) {\n    this.audioService.setVolume(this.audioService.volume() + value / 100);\n  }\n\n  decreaseVolume(value: number) {\n    this.audioService.setVolume(this.audioService.volume() - value / 100);\n  }\n\n  onVolumeChange(value: number) {\n    this.audioService.setVolume(value ?? 0);\n  }\n\n  async onFilesDropped(files: File[]) {\n    return this.playerService.addFilesToPlaylist(...files.map((file) => ({ file })));\n  }\n\n  private getVolumeIconForLevel(vol: number): string {\n    if (vol === 0) return 'volume-variant-off';\n    if (vol > 0 && vol = 0.2 && vol  this.getVolumeIconForLevel(this.audioService.volume()));\n\n  toggleRepeat() {\n    this.playerService.toggleRepeat();\n  }\n\n  toggleShuffle() {\n    this.playerService.toggleShuffle();\n  }\n\n  formatLabel(value: number): string {\n    return formatSecondsAsClock(value, false);\n  }\n\n  async showPicker() {\n    await this.fileLoaderService.showPicker();\n    return this.loadFiles();\n  }\n\n  async loadFiles() {\n    return this.playerService.loadFiles();\n  }\n\n  ngOnDestroy(): void {\n    if (this.gamepadService) {\n      this.gamepadService.deregisterButtonAction(GamepadButtons.A_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.B_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.X_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.Y_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.S2_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_UP);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.DPAD_DOWN);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.R1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.L1_BUTTON);\n      this.gamepadService.deregisterButtonAction(GamepadButtons.START_BUTTON);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_X);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S2_Y);\n      this.gamepadService.deregisterAxisAction(GamepadAxes.S1_Y);\n    }\n  }\n}\n\n    \n\n    \n        \n  @if (isPlaylistEmpty()) {\n    \n       Reload last directory\n    \n  }\n\n\n\n  \n\n\n\n  \n    @if (audioService.isPlaying()) {\n      \n    } @else {\n      \n    }\n  \n\n  \n    \n  \n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n  \n  @if (playerService.currentlyLoadedTrack()) {\n    \n  } @else {\n    \n  }\n\n  \n    {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}\n  \n\n  \n    \n  \n  \n    \n  \n  \n    @switch (playerService.repeat()) {\n      @case ('off') {\n        \n      }\n      @case ('all') {\n        \n      }\n      @case ('one') {\n        \n      }\n    }\n  \n\n\n\n  \n    \n      \n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (isPlaylistEmpty()) {           Reload last directory      }        @if (audioService.isPlaying()) {          } @else {          }                                      @if (playerService.currentlyLoadedTrack()) {      } @else {      }      {{ playerService.currentTime() | time }} / {{ this.playerService.durationSeconds() | time }}                        @switch (playerService.repeat()) {      @case (\\'off\\') {              }      @case (\\'all\\') {              }      @case (\\'one\\') {              }    }                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                currentlyLoadedTrack\n                            \n                            \n                                    Readonly\n                                currentPlaylist\n                            \n                            \n                                    Readonly\n                                currentTime\n                            \n                            \n                                    Readonly\n                                durationSeconds\n                            \n                            \n                                    Readonly\n                                repeat\n                            \n                            \n                                    Readonly\n                                selectedTrack\n                            \n                            \n                                    Readonly\n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFilesToPlaylist\n                            \n                            \n                                addTrackToPlaylist\n                            \n                            \n                                    Async\n                                loadFiles\n                            \n                            \n                                    Async\n                                next\n                            \n                            \n                                    Async\n                                playPause\n                            \n                            \n                                    Async\n                                playPauseTrack\n                            \n                            \n                                    Async\n                                previous\n                            \n                            \n                                seekLeft\n                            \n                            \n                                seekRight\n                            \n                            \n                                    Async\n                                selectNext\n                            \n                            \n                                    Async\n                                selectPrevious\n                            \n                            \n                                selectSong\n                            \n                            \n                                setSeekPosition\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/player.service.ts:41\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFilesToPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFilesToPlaylist(fileDatas: FileData[])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileDatas\n                                            \n                                                            FileData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTrackToPlaylist\n                        \n                    \n                \n            \n            \n                \naddTrackToPlaylist(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        next\n                        \n                    \n                \n            \n            \n                \n                        \n                    next()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:212\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPause\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPause()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseTrack\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseTrack(track: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                track\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        previous\n                        \n                    \n                \n            \n            \n                \n                        \n                    previous()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:233\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekLeft\n                        \n                    \n                \n            \n            \n                \nseekLeft(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:286\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekRight\n                        \n                    \n                \n            \n            \n                \nseekRight(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:290\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectNext\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectNext()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:251\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        selectPrevious\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:269\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSeekPosition\n                        \n                    \n                \n            \n            \n                \nsetSeekPosition(value: number | undefined, fastSeek)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:153\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fastSeek\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:203\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:304\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/player.service.ts:323\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentlyLoadedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        durationSeconds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        repeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('repeat') || 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedTrack\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shuffle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('shuffle') ?? false)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/player.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { computed, DestroyRef, effect, inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FileLoaderService } from './file-loader-service/file-loader.service.abstract';\nimport { MetadataService } from './metadata-service/metadata.service';\nimport type { ColorConfig, RepeatMode, Track } from './player.types';\nimport { ALLOWED_MIMETYPES, FileData } from './file-loader-service/file-loader.helpers';\nimport { ThemeService } from '../theme/theme.service';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { WakelockService } from '../services/wakelock.service';\nimport { MediaSessionService } from '../services/media-session/media-session.service';\nimport { AudioService } from './audio.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({ providedIn: 'root' })\nexport class PlayerService {\n  private audioService = inject(AudioService);\n  private localStorageService = inject(LocalStorageService);\n  private fileLoaderService = inject(FileLoaderService);\n  private metadataService = inject(MetadataService);\n  private themeService = inject(ThemeService);\n  private loaderService = inject(LoaderService);\n  private wakelockService = inject(WakelockService, { optional: true });\n  private mediaSessionService = inject(MediaSessionService, { optional: true });\n\n  private destroRef = inject(DestroyRef);\n\n  readonly currentPlaylist = signal([]);\n\n  readonly selectedTrack = signal(undefined);\n\n  readonly currentlyLoadedTrack = signal(undefined);\n\n  readonly repeat = signal(this.localStorageService.retrieve('repeat') || 'off');\n  readonly shuffle = signal(this.localStorageService.retrieve('shuffle') ?? false);\n\n  readonly colorConfig = computed(() => {\n    const coverColors = this.currentlyLoadedTrack()?.metadata?.coverColors;\n    const mainColor = coverColors?.darkVibrant?.hex;\n    const peakColor = coverColors?.lightVibrant?.hex;\n    return { mainColor: mainColor, peakColor: peakColor };\n  });\n\n  constructor() {\n    if (this.mediaSessionService) {\n      this.mediaSessionService.setActionHandler('play', () => this.playPause());\n      this.mediaSessionService.setActionHandler('pause', () => this.playPause());\n      this.mediaSessionService.setActionHandler('stop', () => this.stop());\n      this.mediaSessionService.setActionHandler('nexttrack', () => this.next());\n      this.mediaSessionService.setActionHandler('previoustrack', () => this.previous());\n      this.mediaSessionService.setActionHandler('seekbackward', () => this.seekLeft(10));\n      this.mediaSessionService.setActionHandler('seekforward', () => this.seekRight(10));\n      this.mediaSessionService.setSeekToHandler((details) => this.seekToHandler(details));\n    }\n\n    // TODO: überarbeiten\n    if ('launchQueue' in globalThis) {\n      // @ts-expect-error launchQueue is not yet in TS types\n      globalThis.launchQueue.setConsumer(async (launchParameters) => {\n        console.log('Handling launch params:', launchParameters);\n        // Nothing to do when the queue is empty.\n        if (launchParameters.files.length === 0) {\n          return;\n        }\n        for (const fileHandle of launchParameters.files) {\n          const file = await fileHandle.getFile();\n          if (ALLOWED_MIMETYPES.includes(file.type)) {\n            await this.addFilesToPlaylist(file);\n          }\n        }\n      });\n    }\n\n    this.audioService.hasEnded$.pipe(takeUntilDestroyed(this.destroRef)).subscribe(() => {\n      void this.next();\n    });\n\n    effect(() => {\n      this.themeService.setColors(this.colorConfig());\n    });\n  }\n\n  private afterPlayLoaded() {\n    return this.wakelockService?.activateWakelock();\n  }\n\n  private afterPausedOrStopped() {\n    return this.wakelockService?.releaseWakelock();\n  }\n\n  private async playTrack(track: Track | undefined) {\n    if (!track) {\n      return;\n    }\n    this.selectSong(track);\n    this.audioService.setFileAsSource(track.file);\n    if (track.metadata && this.mediaSessionService) {\n      this.mediaSessionService.setBrowserMetadata({\n        title: track.metadata.title,\n        artist: track.metadata.artist,\n        album: track.metadata.album,\n        artwork: track.metadata.coverUrl?.original ? [{ src: track.metadata.coverUrl.original, sizes: '512x512' }] : undefined\n      });\n    }\n    await this.audioService.play();\n    this.currentlyLoadedTrack.set(track);\n    await this.afterPlayLoaded();\n  }\n\n  async loadFiles(): Promise {\n    const fileDatas: FileData[] = await this.fileLoaderService.openFiles();\n    return this.addFilesToPlaylist(...fileDatas);\n  }\n\n  addTrackToPlaylist(song: Track) {\n    if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.crc === song.metadata?.crc)) {\n      this.currentPlaylist.update((playlist) => [...playlist, song]);\n    }\n  }\n\n  async addFilesToPlaylist(...fileDatas: FileData[]) {\n    if (fileDatas?.length) {\n      for (const fileData of fileDatas.values()) {\n        this.loaderService.show();\n        const song = await this.createTrackFromFile(fileData);\n        this.loaderService.hide();\n\n        if (!song) {\n          continue;\n        }\n        // avoid duplicate playlist entries\n        if (!this.currentPlaylist().some((playlistSong) => playlistSong.metadata?.crc === song.metadata?.crc)) {\n          this.currentPlaylist.update((playlist) => [...playlist, song]);\n        }\n      }\n    }\n  }\n\n  private async createTrackFromFile(fileData: FileData): Promise {\n    // console.time('full-metadata');\n    const metadata = await this.metadataService.getMetadata(fileData);\n    // console.timeEnd('full-metadata');\n\n    if (!metadata) {\n      return undefined;\n    }\n    return {\n      file: fileData.file,\n      fileHandle: fileData.fileHandle,\n      metadata: metadata\n    };\n  }\n\n  setSeekPosition(value: number | undefined, fastSeek = false) {\n    if (value !== undefined && value >= 0 && value  {\n    return this.currentlyLoadedTrack() && !this.audioService.isStopped() ? Math.round(this.audioService.duration()) : 0;\n  });\n\n  readonly currentTime = computed(() => {\n    if (!this.currentlyLoadedTrack() || this.audioService.isStopped()) {\n      return 0;\n    }\n    const pos = this.audioService.currentTime();\n    return Math.floor(pos);\n  });\n\n  selectSong(song: Track) {\n    this.selectedTrack.set(song);\n  }\n\n  async playPauseTrack(track: Track) {\n    if (this.audioService.isLoading()) {\n      return;\n    }\n\n    if (this.currentlyLoadedTrack()?.metadata?.crc === track.metadata?.crc) {\n      await this.playPause();\n      return;\n    }\n    await this.playTrack(track);\n  }\n\n  async playPause() {\n    if (this.audioService.isLoading() || !this.currentlyLoadedTrack()) {\n      if (this.selectedTrack()) {\n        await this.playTrack(this.selectedTrack());\n      }\n      return;\n    }\n    if (this.audioService.isPaused()) {\n      await this.audioService.play();\n      await this.afterPlayLoaded();\n    } else {\n      this.audioService.pause();\n      await this.afterPausedOrStopped();\n    }\n  }\n\n  async stop() {\n    if (this.audioService.isLoading() || !this.currentlyLoadedTrack()) {\n      return;\n    }\n    this.audioService.stop();\n    this.currentlyLoadedTrack.set(undefined);\n    await this.afterPausedOrStopped();\n  }\n\n  async next(): Promise {\n    const loadedTrack = this.currentlyLoadedTrack();\n    if (this.audioService.isLoading() || !loadedTrack) {\n      return;\n    }\n\n    const playlist = this.currentPlaylist();\n\n    if (this.shuffle()) {\n      const randomPosition = getRandomInt(0, playlist.length - 1);\n      return this.playTrack(playlist[randomPosition]);\n    }\n\n    const currentPosition = playlist.indexOf(loadedTrack);\n    if (currentPosition  0) {\n      return this.playTrack(this.currentPlaylist()[currentPosition - 1]);\n    }\n  }\n\n  async selectNext() {\n    if (!this.selectedTrack()) {\n      return;\n    }\n\n    const selectedTrack = this.selectedTrack();\n\n    if (!selectedTrack) {\n      return this.playTrack(this.currentPlaylist()[0]);\n    }\n\n    const currentPosition = this.currentPlaylist().indexOf(selectedTrack);\n\n    if (currentPosition  1) {\n      this.selectedTrack.set(this.currentPlaylist()[currentPosition - 2]);\n    }\n  }\n\n  seekLeft(seconds: number) {\n    this.setSeekPosition(this.currentTime() - seconds);\n  }\n\n  seekRight(seconds: number) {\n    this.setSeekPosition(this.currentTime() + seconds);\n  }\n\n  private seekToHandler(details: MediaSessionActionDetails) {\n    if (details.seekTime) {\n      if (details.fastSeek) {\n        this.setSeekPosition(details.seekTime, true);\n      } else {\n        this.setSeekPosition(details.seekTime);\n      }\n    }\n  }\n\n  toggleRepeat() {\n    switch (this.repeat()) {\n      case 'off': {\n        this.repeat.set('all');\n        break;\n      }\n      case 'all': {\n        this.audioService.setLoop(true);\n        this.repeat.set('one');\n        break;\n      }\n      case 'one': {\n        this.audioService.setLoop(false);\n        this.repeat.set('off');\n        break;\n      }\n    }\n  }\n\n  toggleShuffle() {\n    this.shuffle.set(!this.shuffle());\n  }\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // eslint-disable-next-line sonarjs/pseudo-random\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistComponent.html":{"url":"components/PlaylistComponent.html","title":"component - PlaylistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/playlist/playlist.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-playlist\n            \n\n\n            \n                imports\n                \n                            MatListModule\n                            NgClass\n                                VisualsDirective\n                            MatButtonModule\n                            MatIconModule\n                            MatProgressSpinnerModule\n                            SafePipe\n                            NgOptimizedImage\n                            CdkVirtualScrollViewport\n                            CdkVirtualForOf\n                            CdkFixedSizeVirtualScroll\n                            MatFormFieldModule\n                            MatInput\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./playlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./playlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                filteredPlaylist\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                scrollViewport\n                            \n                            \n                                    Readonly\n                                searchTerm\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                isPlaying\n                            \n                            \n                                    Async\n                                playPauseSong\n                            \n                            \n                                trackByCrc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:63\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n            \n                \nisPlaying(song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playPauseSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playPauseSong(event: Event, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByCrc\n                        \n                    \n                \n            \n            \n                \ntrackByCrc(index: number, song: Track)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            Track\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredPlaylist\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const term = this.searchTerm().toLowerCase();\n    if (!term) return this.playerService.currentPlaylist();\n\n    return (\n      this.playerService\n        .currentPlaylist()\n        // search in title, artist and file name\n        .filter((song) => (song.metadata?.title || song.file.name).toLowerCase().includes(term) || (song.metadata?.artist || '').toLowerCase().includes(term))\n    );\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scrollViewport\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('scrollViewport')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/playlist/playlist.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, DestroyRef, effect, inject, model, signal, Signal, viewChild } from '@angular/core';\nimport { PlayerService } from '../player.service';\nimport { Track } from '../player.types';\nimport { VisualsService } from '../visualizer/visuals/visuals.service';\nimport { AudioService } from '../audio.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VisualsDirective } from '../visualizer/visuals/visuals.directive';\nimport { NgClass, NgOptimizedImage } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { SafePipe } from 'safe-pipe';\nimport { CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { MatInput } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@Component({\n  selector: 'mtb-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrl: './playlist.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatListModule,\n    NgClass,\n    VisualsDirective,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SafePipe,\n    NgOptimizedImage,\n    CdkVirtualScrollViewport,\n    CdkVirtualForOf,\n    CdkFixedSizeVirtualScroll,\n    MatFormFieldModule,\n    MatInput,\n    FormsModule\n  ]\n})\nexport class PlaylistComponent {\n  playerService = inject(PlayerService);\n  audioService = inject(AudioService);\n  visualsService = inject(VisualsService);\n  private destroRef = inject(DestroyRef);\n\n  readonly searchTerm = signal('');\n\n  readonly filteredPlaylist = computed(() => {\n    const term = this.searchTerm().toLowerCase();\n    if (!term) return this.playerService.currentPlaylist();\n\n    return (\n      this.playerService\n        .currentPlaylist()\n        // search in title, artist and file name\n        .filter((song) => (song.metadata?.title || song.file.name).toLowerCase().includes(term) || (song.metadata?.artist || '').toLowerCase().includes(term))\n    );\n  });\n\n  readonly scrollViewport = viewChild('scrollViewport');\n\n  private readonly isAutoScrollEnabled = signal(false);\n\n  constructor() {\n    // Enable auto scroll when user scrolls to bottom\n    effect(() => {\n      const viewport = this.scrollViewport();\n      if (viewport) {\n        viewport\n          .elementScrolled()\n          .pipe(takeUntilDestroyed(this.destroRef))\n          .subscribe(() => {\n            const scrollPosition = viewport.measureScrollOffset('bottom');\n            const measureOffset = 60;\n            // If user scrolled to bottom (or very close to it)\n            if (scrollPosition  measureOffset && this.isAutoScrollEnabled) {\n              this.isAutoScrollEnabled.set(false);\n            }\n          });\n      }\n    });\n\n    // Scroll to bottom when playlist changes and autoscroll is enabled\n    effect(() => {\n      const playlist = this.filteredPlaylist();\n\n      // Wait for change detection to complete\n      setTimeout(() => {\n        if (playlist && playlist.length > 0 && this.isAutoScrollEnabled()) {\n          this.scrollToBottom();\n        }\n      });\n    });\n\n    // Scroll to current track when it changes\n    effect(() => {\n      const isPlaying = this.audioService.isPlaying();\n      const currentTrack = this.playerService.currentlyLoadedTrack();\n      const searchTerm = this.searchTerm();\n\n      // Only scroll when a track is playing\n      if (isPlaying && currentTrack && !searchTerm) {\n        // Small delay to ensure UI has updated\n        setTimeout(() => this.scrollToCurrentTrack());\n      }\n    });\n  }\n\n  private scrollToBottom() {\n    const viewport = this.scrollViewport();\n    if (viewport) {\n      const playlist = this.filteredPlaylist();\n      if (playlist && playlist.length > 0) {\n        viewport.scrollToIndex(playlist.length - 1, 'smooth');\n      }\n    }\n  }\n\n  private scrollToCurrentTrack(): void {\n    const viewport = this.scrollViewport();\n    const currentTrack = this.playerService.currentlyLoadedTrack();\n    if (!viewport || !currentTrack) return;\n\n    const playlist = this.filteredPlaylist();\n    const targetIndex = playlist.findIndex((track) => track.metadata?.crc === currentTrack.metadata?.crc);\n\n    if (targetIndex !== -1) {\n      // Get the visible range\n      const visibleRange = viewport.getRenderedRange();\n\n      // Only scroll if the track is outside the visible range\n      if (targetIndex - 3  visibleRange.end) {\n        // Calculate distance to determine scroll behavior\n        const currentIndex = Math.floor((visibleRange.start + visibleRange.end) / 2);\n        const distance = Math.abs(targetIndex - currentIndex);\n\n        // Use smooth scrolling for nearby items, instant for far away items\n        const scrollBehavior = distance > 20 ? 'instant' : 'smooth';\n\n        // For instant scrolling, center the item in the viewport\n        const viewportHeight = viewport.getViewportSize();\n\n        const itemSize = 72; // Height of each item in the list\n\n        // Calculate offset to center the item in the viewport\n        const offset = Math.max(0, targetIndex * itemSize - viewportHeight / 2 + itemSize / 2);\n\n        viewport.scrollToOffset(offset, scrollBehavior);\n      }\n    }\n  }\n\n  isActive(song: Track): Signal {\n    return computed(() => {\n      return (this.audioService.isPlaying() || this.audioService.isPaused()) && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  isPlaying(song: Track): Signal {\n    return computed(() => {\n      return this.audioService.isPlaying() && this.playerService.currentlyLoadedTrack()?.metadata?.crc === song.metadata?.crc;\n    });\n  }\n\n  async playPauseSong(event: Event, song: Track): Promise {\n    event.stopPropagation();\n    return this.playerService.playPauseTrack(song);\n  }\n\n  trackByCrc(index: number, song: Track): string {\n    return song.metadata.crc;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  @if (searchTerm()) {\n    \n      \n    \n  }\n  {{ filteredPlaylist().length }} entries\n\n\n\n\n\n  \n    \n      \n        @if (song && song.metadata && song.metadata.coverUrl) {\n          \n        }\n        @let songPlaying = isPlaying(song)();\n        @if (songPlaying && visualsService.visualMode() !== 'off') {\n          \n        }\n      \n\n      {{ song?.metadata?.title || song.file.name }}\n      {{ song?.metadata?.artist }}\n\n      @if (isActive(song)()) {\n        \n          \n        \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (searchTerm()) {                }  {{ filteredPlaylist().length }} entries                    @if (song && song.metadata && song.metadata.coverUrl) {                  }        @let songPlaying = isPlaying(song)();        @if (songPlaying && visualsService.visualMode() !== \\'off\\') {                  }            {{ song?.metadata?.title || song.file.name }}      {{ song?.metadata?.artist }}      @if (isActive(song)()) {                                }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PromptDialogComponent.html":{"url":"components/PromptDialogComponent.html","title":"component - PromptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PromptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-prompt-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./prompt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MAT_DIALOG_DATA)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject>(MatDialogRef)\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n\n  {{ data.text }}\n\n\n\n  Abbrechen\n  Update\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.text }}  Abbrechen  Update'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'PromptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PromptDialogData.html":{"url":"interfaces/PromptDialogData.html","title":"interface - PromptDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PromptDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui-components/dialogs/src/lib/prompt-dialog/prompt-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonText\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport interface PromptDialogData {\n  title: string;\n  text: string;\n  buttonText: string;\n}\n\n@Component({\n  selector: 'mtb-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  imports: [MatDialogModule, MatButtonModule]\n})\nexport class PromptDialogComponent {\n  data = inject(MAT_DIALOG_DATA);\n  dialogRef = inject>(MatDialogRef);\n\n  update() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoteCoverPicture.html":{"url":"interfaces/RemoteCoverPicture.html","title":"interface - RemoteCoverPicture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoteCoverPicture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            original\n                                        \n                                \n                                \n                                        \n                                            thumb\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        original\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumb:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-settings\n            \n\n\n            \n                imports\n                \n                                MetadataSettingsComponent\n                                ThemeSettingsComponent\n                                StorageSettingsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { StorageSettingsComponent } from './storage-settings/storage-settings.component';\nimport { ThemeSettingsComponent } from './theme-settings/theme-settings.component';\nimport { MetadataSettingsComponent } from './metadata-settings/metadata-settings.component';\n\n@Component({\n  selector: 'mtb-settings',\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss',\n  imports: [MetadataSettingsComponent, ThemeSettingsComponent, StorageSettingsComponent]\n})\nexport default class SettingsComponent {}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/shell/shell.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-shell\n            \n\n\n            \n                imports\n                \n                            MatSidenavModule\n                            MatToolbarModule\n                            MatIconModule\n                            MatListModule\n                            MatButtonModule\n                            MatProgressSpinnerModule\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shell.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isHandset\n                            \n                            \n                                loaderService\n                            \n                            \n                                    Readonly\n                                sidenav\n                            \n                            \n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string, skipLocationChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/shell/shell.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skipLocationChange\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isHandset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : toSignal(this.isHandset$, { initialValue: false })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoaderService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Default value : viewChild('drawer')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TitleService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/shell/shell.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, inject, viewChild } from '@angular/core';\nimport { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader/loader.service';\nimport { TitleService } from '../services/title.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'mtb-shell',\n  templateUrl: './shell.component.html',\n  styleUrl: './shell.component.scss',\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatButtonModule, MatProgressSpinnerModule, RouterOutlet]\n})\nexport class ShellComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n  titleService = inject(TitleService);\n  loaderService = inject(LoaderService);\n  private router = inject(Router);\n\n  private isHandset$: Observable = this.breakpointObserver\n    .observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  readonly isHandset = toSignal(this.isHandset$, { initialValue: false });\n\n  readonly sidenav = viewChild('drawer');\n\n  navigateTo(route: string, skipLocationChange = false) {\n    this.sidenav()?.close();\n    this.router.navigate([route], { skipLocationChange: skipLocationChange });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ titleService.title() }}\n    \n    \n        Player\n      \n         Equalizer\n       Library\n      \n         Settings\n    \n  \n  \n    \n      @if (isHandset()) {\n        \n          \n        \n      }\n      {{ titleService.title() }}\n      @if (loaderService.isLoading()) {\n        \n      }\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ titleService.title() }}                Player               Equalizer       Library               Settings                  @if (isHandset()) {                                }      {{ titleService.title() }}      @if (loaderService.isLoading()) {              }          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlidePanelComponent.html":{"url":"components/SlidePanelComponent.html","title":"component - SlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ui-components/slide-panel/src/lib/slide-panel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-slide-panel\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatTooltipModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./slide-panel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide-panel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                buttonTooltip\n                            \n                            \n                                    \n                                closed\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                height\n                            \n                            \n                                openedState\n                            \n                            \n                                side\n                            \n                            \n                                toggleIcon\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.closed-slide-panel\n                            \n                            \n                                class.opened-slide-panel\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedState\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'left'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '20rem'\n                    \n                \n                        \n                            \n                                    Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:31\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.closed-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.opened-slide-panel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePanel\n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPanel\n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        buttonTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.closed-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.opened-slide-panel')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/ui-components/slide-panel/src/lib/slide-panel.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, Component, HostBinding, Input, input, OnChanges } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'mtb-slide-panel',\n  templateUrl: './slide-panel.component.html',\n  styleUrl: './slide-panel.component.scss',\n  imports: [MatIconModule, MatButtonModule, MatTooltipModule, NgClass]\n})\nexport class SlidePanelComponent implements OnChanges {\n  // TODO: Skipped for migration because:\n  //  Your application code writes to the input. This prevents migration.\n  @Input({ transform: booleanAttribute }) openedState = true;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.bottom') bottom?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.top') top?: string;\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.width') width = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('style.height') height = '20rem';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in combination with `@HostBinding` and migrating would\n  //  break.\n  @Input() @HostBinding('class') side: 'left' | 'right' = 'left';\n\n  // TODO: Skipped for migration because:\n  //  This input is used in a control flow expression (e.g. `@if` or `*ngIf`)\n  //  and migrating would break narrowing currently.\n  @Input() toggleIcon?: string;\n\n  readonly buttonTooltip = input('');\n\n  @HostBinding('class.closed-slide-panel') closed = false;\n  @HostBinding('class.opened-slide-panel') open = true;\n\n  ngOnChanges(): void {\n    if (this.openedState) {\n      this.open = true;\n      this.closed = false;\n    } else {\n      this.open = false;\n      this.closed = true;\n    }\n  }\n\n  openPanel() {\n    this.openedState = true;\n    this.open = true;\n    this.closed = false;\n  }\n\n  closePanel() {\n    this.openedState = false;\n    this.open = false;\n    this.closed = true;\n  }\n}\n\n    \n\n    \n        \n  @switch (side) {\n    @case ('left') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n    @case ('right') {\n      \n        @if (toggleIcon) {\n          \n        }\n      \n    }\n  }\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @switch (side) {    @case (\\'left\\') {              @if (toggleIcon) {                  }          }    @case (\\'right\\') {              @if (toggleIcon) {                  }          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StorageSettingsComponent.html":{"url":"components/StorageSettingsComponent.html","title":"component - StorageSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StorageSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-storage-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./storage-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSettingsCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSettingsCache\n                        \n                    \n                \n            \n            \n                \nclearSettingsCache()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/storage-settings/storage-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-storage-settings',\n  templateUrl: './storage-settings.component.html',\n  imports: [MatCardModule, MatButtonModule]\n})\nexport class StorageSettingsComponent {\n  private localStorage = inject(LocalStorageService);\n\n  clearSettingsCache() {\n    this.localStorage.clear();\n  }\n}\n\n    \n\n    \n        \n  \n    Local Storage Settings\n  \n  \n    Clear Settings Cache\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Local Storage Settings        Clear Settings Cache  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'StorageSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerRequest.html":{"url":"interfaces/TagsWorkerRequest.html","title":"interface - TagsWorkerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsWorkerResponse.html":{"url":"interfaces/TagsWorkerResponse.html","title":"interface - TagsWorkerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagsWorkerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/metadata-service/metadata.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Id3Tags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3Tags\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3Tags } from './id3-tags.types';\n\nexport interface CoverColorPalette {\n  vibrant?: CoverColor;\n  muted?: CoverColor;\n  darkVibrant?: CoverColor;\n  darkMuted?: CoverColor;\n  lightVibrant?: CoverColor;\n  lightMuted?: CoverColor;\n}\n\nexport interface CoverColor {\n  hex?: string;\n  textHex?: string;\n}\n\nexport interface RemoteCoverPicture {\n  thumb: string;\n  original: string;\n}\n\nexport interface TagsWorkerRequest {\n  id: string;\n  file: File;\n}\n\nexport interface TagsWorkerResponse {\n  id: string;\n  tags?: Id3Tags;\n  error?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accentColorPalette\n                            \n                            \n                                    Readonly\n                                darkMode\n                            \n                            \n                                primaryColorPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeTheme\n                            \n                            \n                                setColors\n                            \n                            \n                                setDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeTheme\n                        \n                    \n                \n            \n            \n                \ninitializeTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColors\n                        \n                    \n                \n            \n            \n                \nsetColors(colors: ColorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                            ColorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(darkMode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/theme/theme.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                darkMode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accentColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryColorPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/theme/theme.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\nimport { TinyColor } from '@thebespokepixel/es-tinycolor';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Color } from './theme.types';\nimport { FALLBACK_ACCENT_COLOR, FALLBACK_PRIMARY_COLOR } from './default-colors';\nimport { ColorConfig } from '../player/player.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private meta = inject(Meta);\n  private localStorageService = inject(LocalStorageService);\n\n  private primaryColor = FALLBACK_PRIMARY_COLOR;\n\n  private accentColor = FALLBACK_ACCENT_COLOR;\n\n  readonly darkMode = signal(this.localStorageService.retrieve('darkMode') ?? globalThis.matchMedia('(prefers-color-scheme: dark)').matches);\n\n  primaryColorPalette: Color[] = [];\n  accentColorPalette: Color[] = [];\n\n  initializeTheme() {\n    this.setOverlayClass();\n    this.setPrimaryColor(this.primaryColor);\n    this.setAccentColor(this.accentColor);\n  }\n\n  setDarkMode(darkMode: boolean) {\n    this.darkMode.set(darkMode);\n    this.localStorageService.store('darkMode', darkMode);\n    this.setOverlayClass();\n  }\n\n  setColors(colors: ColorConfig) {\n    this.setPrimaryColor(colors.mainColor);\n    this.setAccentColor(colors.peakColor);\n  }\n\n  private setPrimaryColor(color?: string) {\n    this.primaryColor = color || FALLBACK_PRIMARY_COLOR;\n    this.primaryColorPalette = this.computeColors(this.primaryColor);\n\n    for (const clr of this.primaryColorPalette) {\n      document.documentElement.style.setProperty(`--theme-primary-${clr.name}`, clr.hex);\n    }\n\n    this.meta.addTag({ name: 'theme-color', content: this.primaryColor }, true);\n    this.meta.updateTag({ name: 'theme-color', content: this.primaryColor });\n  }\n\n  private setAccentColor(color?: string) {\n    this.accentColor = color || FALLBACK_ACCENT_COLOR;\n    this.accentColorPalette = this.computeColors(this.accentColor);\n\n    for (const clr of this.accentColorPalette) {\n      document.documentElement.style.setProperty(`--theme-accent-${clr.name}`, clr.hex);\n    }\n  }\n\n  private setOverlayClass() {\n    if (this.darkMode()) {\n      document.documentElement.style.setProperty('--app-color-scheme', 'dark');\n    } else {\n      document.documentElement.style.setProperty('--app-color-scheme', 'light');\n    }\n  }\n\n  private computeColors(hex: string): Color[] {\n    return [\n      this.getColorObject(new TinyColor(hex).lighten(55), '0'),\n      this.getColorObject(new TinyColor(hex).lighten(45), '10'),\n      this.getColorObject(new TinyColor(hex).lighten(35), '20'),\n      this.getColorObject(new TinyColor(hex).lighten(30), '25'),\n      this.getColorObject(new TinyColor(hex).lighten(25), '30'),\n      this.getColorObject(new TinyColor(hex).lighten(20), '35'),\n      this.getColorObject(new TinyColor(hex).lighten(15), '40'),\n      this.getColorObject(new TinyColor(hex), '50'),\n      this.getColorObject(new TinyColor(hex).darken(5), '60'),\n      this.getColorObject(new TinyColor(hex).darken(10), '70'),\n      this.getColorObject(new TinyColor(hex).darken(15), '80'),\n      this.getColorObject(new TinyColor(hex).darken(18), '90'),\n      this.getColorObject(new TinyColor(hex).darken(21), '95'),\n      this.getColorObject(new TinyColor(hex).darken(24), '98'),\n      this.getColorObject(new TinyColor(hex).darken(27), '99'),\n      this.getColorObject(new TinyColor(hex).darken(30), '100')\n    ];\n  }\n\n  private getColorObject(value: TinyColor, name: string): Color {\n    const color = new TinyColor(value);\n    const lightnessLimit = this.darkMode() ? 150 : 200;\n    return {\n      name: name,\n      hex: color.toHexString(false),\n      darkContrast: color.getBrightness() > lightnessLimit\n      // darkContrast: c.isLight()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSettingsComponent.html":{"url":"components/ThemeSettingsComponent.html","title":"component - ThemeSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-theme-settings\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                themeService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDarkMode\n                        \n                    \n                \n            \n            \n                \nchangeDarkMode(event: MatCheckboxChange)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatCheckboxChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ThemeService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/settings/theme-settings/theme-settings.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { ThemeService } from '../../theme/theme.service';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'mtb-theme-settings',\n  templateUrl: './theme-settings.component.html',\n  imports: [MatCardModule, MatCheckboxModule]\n})\nexport class ThemeSettingsComponent {\n  themeService = inject(ThemeService);\n\n  changeDarkMode(event: MatCheckboxChange) {\n    this.themeService.setDarkMode(event.checked);\n  }\n}\n\n    \n\n    \n        \n  \n    Theme-Colors\n  \n  \n     Dark Mode \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Theme-Colors         Dark Mode   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gblaster/src/app/player/time.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number | undefined, ...arguments_: [])\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/time.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arguments_\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { formatSecondsAsClock } from '@motabass/helpers';\n\n@Pipe({\n  name: 'time',\n  pure: true,\n  standalone: true\n})\nexport class TimePipe implements PipeTransform {\n  transform(value: number | undefined, ...arguments_: unknown[]): string {\n    return formatSecondsAsClock(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TitleService.html":{"url":"injectables/TitleService.html","title":"injectable - TitleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TitleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/title.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/title.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/title.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private angularTitleService = inject(Title);\n\n  readonly title = signal('');\n\n  setTitle(title: string) {\n    this.angularTitleService.setTitle(title);\n    this.title.set(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Track.html":{"url":"interfaces/Track.html","title":"interface - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileHandle\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileHandle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileHandle:     FileSystemFileHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileSystemFileHandle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         TrackMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrackMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackMetadata.html":{"url":"interfaces/TrackMetadata.html","title":"interface - TrackMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/player.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            coverColors\n                                        \n                                \n                                \n                                        \n                                            coverUrl\n                                        \n                                \n                                \n                                        \n                                            crc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            embeddedPicture\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverColors:         CoverColorPalette\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverColorPalette\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverUrl:         RemoteCoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RemoteCoverPicture\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        embeddedPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        embeddedPicture:         Id3CoverPicture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Id3CoverPicture\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:     IFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Id3CoverPicture } from './metadata-service/id3-tags.types';\nimport { CoverColorPalette, RemoteCoverPicture } from './metadata-service/metadata.types';\nimport { IFormat } from 'music-metadata';\n\nexport interface Track {\n  file: File;\n  fileHandle?: FileSystemFileHandle;\n  metadata: TrackMetadata;\n}\n\nexport interface TrackMetadata {\n  crc: string;\n  artist?: string;\n  title?: string;\n  track?: string;\n  album?: string;\n  year?: string;\n  format: IFormat;\n  coverUrl: RemoteCoverPicture;\n  embeddedPicture?: Id3CoverPicture;\n  coverColors: CoverColorPalette;\n}\n\nexport interface IndexedDbTrackMetadata extends TrackMetadata {\n  fileHandle?: FileSystemFileHandle;\n}\n\n// EQ\n\nexport type FrequencyBand = 60 | 170 | 310 | 600 | 1000 | 3000 | 6000 | 12_000 | 14_000 | 16_000;\n\nexport type RepeatMode = 'off' | 'all' | 'one';\n\nexport interface ColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateService.html":{"url":"injectables/UpdateService.html","title":"injectable - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/update.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askUserForUpdate\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/update.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askUserForUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    askUserForUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/update.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DestroyRef, inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwUpdate } from '@angular/service-worker';\nimport { PromptDialogComponent, PromptDialogData } from '@motabass/ui-components/dialogs';\nimport { firstValueFrom } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  private swUpdate = inject(SwUpdate);\n  private dialog = inject(MatDialog);\n  private destroRef = inject(DestroyRef);\n\n  constructor() {\n    const swUpdate = this.swUpdate;\n\n    if (swUpdate.isEnabled) {\n      swUpdate.versionUpdates.pipe(takeUntilDestroyed(this.destroRef)).subscribe((event) => {\n        switch (event.type) {\n          case 'VERSION_DETECTED': {\n            console.log(`Downloading new app version: ${event.version.hash}`);\n            break;\n          }\n          case 'VERSION_READY': {\n            console.log(`Current app version: ${event.currentVersion.hash}`);\n            console.log(`New app version ready for use: ${event.latestVersion.hash}`);\n            this.askUserForUpdate().then((update) => {\n              if (update) {\n                swUpdate.activateUpdate().then(() => document.location.reload());\n              }\n            });\n            break;\n          }\n          case 'VERSION_INSTALLATION_FAILED': {\n            console.log(`Failed to install app version '${event.version.hash}': ${event.error}`);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  async init(): Promise {\n    if (this.swUpdate.isEnabled) {\n      return this.swUpdate.checkForUpdate();\n    }\n    return;\n  }\n\n  async askUserForUpdate(): Promise {\n    const data: PromptDialogData = {\n      title: 'Update verfügbar!',\n      text: 'Soll das Update durchgeführt werden?',\n      buttonText: 'Update'\n    };\n\n    const config: MatDialogConfig = {\n      data: data,\n      disableClose: true,\n      closeOnNavigation: false\n    };\n    return firstValueFrom(this.dialog.open(PromptDialogComponent, config).afterClosed());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizerComponent.html":{"url":"components/VisualizerComponent.html","title":"component - VisualizerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/gblaster/src/app/player/visualizer/visualizer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mtb-visualizer\n            \n\n\n            \n                imports\n                \n                                VisualsDirective\n                                SlidePanelComponent\n                            MatSelectModule\n                            MatOptionModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./visualizer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./visualizer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                alpha\n                            \n                            \n                                analyser\n                            \n                            \n                                audioService\n                            \n                            \n                                    Readonly\n                                barCount\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                capFalldown\n                            \n                            \n                                    Readonly\n                                capHeight\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                FFT_OPTIONS\n                            \n                            \n                                    Readonly\n                                fftSize\n                            \n                            \n                                    Readonly\n                                gap\n                            \n                            \n                                    Readonly\n                                lineThickness\n                            \n                            \n                                localStorageService\n                            \n                            \n                                    Readonly\n                                minDb\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                            \n                                playerService\n                            \n                            \n                                    Readonly\n                                showSlidePanel\n                            \n                            \n                                    Readonly\n                                smoothing\n                            \n                            \n                                visualsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAlpha\n                            \n                            \n                                setBarCount\n                            \n                            \n                                setCapFalldown\n                            \n                            \n                                setCapHeight\n                            \n                            \n                                setFftSize\n                            \n                            \n                                setGap\n                            \n                            \n                                setLineThickness\n                            \n                            \n                                setMinDb\n                            \n                            \n                                setSmoothing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAlpha\n                        \n                    \n                \n            \n            \n                \nsetAlpha(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBarCount\n                        \n                    \n                \n            \n            \n                \nsetBarCount(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapFalldown\n                        \n                    \n                \n            \n            \n                \nsetCapFalldown(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCapHeight\n                        \n                    \n                \n            \n            \n                \nsetCapHeight(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFftSize\n                        \n                    \n                \n            \n            \n                \nsetFftSize(value: FftSize)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            FftSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGap\n                        \n                    \n                \n            \n            \n                \nsetGap(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLineThickness\n                        \n                    \n                \n            \n            \n                \nsetLineThickness(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMinDb\n                        \n                    \n                \n            \n            \n                \nsetMinDb(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSmoothing\n                        \n                    \n                \n            \n            \n                \nsetSmoothing(value: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('alpha') ?? 0.75)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnalyserNode\n\n                    \n                \n                \n                    \n                        Default value : this.audioService.plugInNewAnalyserNode()\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        audioService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AudioService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('barCount') ?? 24)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capFalldown') ?? 2)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('capHeight') ?? 4)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        FFT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FftSize[]\n\n                    \n                \n                \n                    \n                        Default value : [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768]\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('fftSize') ?? 2048)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('gap') ?? 0.5)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lineThickness\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('lineThickness') ?? 8)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localStorageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LocalStorageService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        minDb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('minDb') ?? -73)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return { thickness: this.lineThickness() };\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PlayerService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showSlidePanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        smoothing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('smoothing') ?? 0.7)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(VisualsService)\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visualizer.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, OnDestroy, OnInit, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { FftSize, FrequencyBarsConfig, OsciloscopeConfig } from './visuals/visuals.types';\nimport { VisualsService } from './visuals/visuals.service';\nimport { GamepadService } from '../../services/gamepad/gamepad.service';\nimport { GamepadButtons } from '../../services/gamepad/gamepad.types';\nimport { AudioService } from '../audio.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SlidePanelComponent } from '@motabass/ui-components/slide-panel';\nimport { VisualsDirective } from './visuals/visuals.directive';\nimport { PlayerService } from '../player.service';\n\n@Component({\n  selector: 'mtb-visualizer',\n  templateUrl: './visualizer.component.html',\n  styleUrl: './visualizer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [VisualsDirective, SlidePanelComponent, MatSelectModule, MatOptionModule, MatSliderModule, MatButtonModule, MatIconModule, MatTooltipModule]\n})\nexport class VisualizerComponent implements OnInit, OnDestroy {\n  readonly FFT_OPTIONS: FftSize[] = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16_384, 32_768];\n\n  private gamepadService = inject(GamepadService, { optional: true });\n  audioService = inject(AudioService);\n  playerService = inject(PlayerService);\n  visualsService = inject(VisualsService);\n  localStorageService = inject(LocalStorageService);\n\n  readonly smoothing = signal(this.localStorageService.retrieve('smoothing') ?? 0.7);\n  readonly minDb = signal(this.localStorageService.retrieve('minDb') ?? -73);\n  readonly alpha = signal(this.localStorageService.retrieve('alpha') ?? 0.75);\n  readonly barCount = signal(this.localStorageService.retrieve('barCount') ?? 24);\n  readonly fftSize = signal(this.localStorageService.retrieve('fftSize') ?? 2048);\n  readonly capHeight = signal(this.localStorageService.retrieve('capHeight') ?? 4);\n  readonly gap = signal(this.localStorageService.retrieve('gap') ?? 0.5);\n  readonly capFalldown = signal(this.localStorageService.retrieve('capFalldown') ?? 2);\n  readonly lineThickness = signal(this.localStorageService.retrieve('lineThickness') ?? 8);\n\n  analyser: AnalyserNode = this.audioService.plugInNewAnalyserNode();\n\n  constructor() {\n    this.analyser.fftSize = this.fftSize();\n    this.analyser.smoothingTimeConstant = this.smoothing();\n    this.analyser.minDecibels = this.minDb();\n    this.analyser.maxDecibels = 220;\n  }\n\n  ngOnInit(): void {\n    this.gamepadService?.registerButtonAction(GamepadButtons.SELECT_BUTTON, () => this.visualsService.toggleVisualMode());\n  }\n\n  ngOnDestroy(): void {\n    this.gamepadService?.deregisterButtonAction(GamepadButtons.SELECT_BUTTON);\n    this.audioService.disconnectAnalyserNode(this.analyser);\n  }\n\n  readonly showSlidePanel = computed(() => {\n    return this.visualsService.visualMode() !== 'off';\n  });\n\n  readonly colorConfig = computed(() => {\n    return { ...this.playerService.colorConfig(), alpha: this.alpha() };\n  });\n\n  readonly barsConfig = computed(() => {\n    return { barCount: this.barCount(), capHeight: this.capHeight(), gap: this.gap(), capFalldown: this.capFalldown() };\n  });\n\n  readonly oscConfig = computed(() => {\n    return { thickness: this.lineThickness() };\n  });\n\n  setSmoothing(value: number | null) {\n    if (value !== null) {\n      this.smoothing.set(value);\n      this.analyser.smoothingTimeConstant = value;\n      this.localStorageService.store('smoothing', value);\n    }\n  }\n\n  setMinDb(value: number | null) {\n    if (value !== null) {\n      this.minDb.set(value);\n      this.analyser.minDecibels = value;\n      this.localStorageService.store('minDb', value);\n    }\n  }\n\n  setAlpha(value: number | null) {\n    if (value !== null) {\n      this.alpha.set(value);\n      this.localStorageService.store('alpha', value);\n    }\n  }\n\n  setFftSize(value: FftSize) {\n    this.fftSize.set(value);\n    this.analyser.fftSize = value;\n    this.localStorageService.store('fftSize', value);\n  }\n\n  setBarCount(value: number | null) {\n    if (value !== null) {\n      this.barCount.set(value);\n      this.localStorageService.store('barCount', value);\n    }\n  }\n\n  setCapHeight(value: number | null) {\n    if (value !== null) {\n      this.capHeight.set(value);\n      this.localStorageService.store('capHeight', value);\n    }\n  }\n\n  setCapFalldown(value: number | null) {\n    if (value !== null) {\n      this.capFalldown.set(value);\n      this.localStorageService.store('capFalldown', value);\n    }\n  }\n\n  setLineThickness(value: number | null) {\n    if (value !== null) {\n      this.lineThickness.set(value);\n      this.localStorageService.store('lineThickness', value);\n    }\n  }\n\n  setGap(value: number | null) {\n    if (value !== null) {\n      this.gap.set(value);\n      this.localStorageService.store('gap', value);\n    }\n  }\n}\n\n    \n\n    \n        \n  @let visualizerMode = visualsService.visualMode();\n\n  @if (audioService.isPlaying()) {\n    \n  }\n  @if (showSlidePanel()) {\n    \n      Visualizer\n      \n        @if (visualizerMode !== 'off') {\n          \n            FFT-Size\n            \n              @for (option of FFT_OPTIONS; track option) {\n                {{ option }}\n              }\n            \n          \n        }\n        \n          Transparency\n          \n        \n\n        @if (visualizerMode === 'bars' || visualizerMode === 'circular-bars') {\n          \n            min. DB\n            \n          \n          \n            Smoothing\n            \n          \n          \n            Bars\n            \n          \n          \n            Gap\n            \n          \n          \n            Cap Height\n            \n          \n          \n            Cap Falldown\n            \n          \n        }\n        @if (visualizerMode === 'osc' || visualizerMode === 'circular-osc') {\n          \n            Thickness\n            \n          \n        }\n      \n    \n  }\n\n  \n    @switch (visualizerMode) {\n      @case ('bars') {\n        \n      }\n      @case ('osc') {\n        \n      }\n      @case ('circular-bars') {\n        \n      }\n      @case ('circular-osc') {\n        \n      }\n      @case ('off') {\n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @let visualizerMode = visualsService.visualMode();  @if (audioService.isPlaying()) {      }  @if (showSlidePanel()) {          Visualizer              @if (visualizerMode !== \\'off\\') {                      FFT-Size                          @for (option of FFT_OPTIONS; track option) {                {{ option }}              }                              }                  Transparency                          @if (visualizerMode === \\'bars\\' || visualizerMode === \\'circular-bars\\') {                      min. DB                                            Smoothing                                            Bars                                            Gap                                            Cap Height                                            Cap Falldown                              }        @if (visualizerMode === \\'osc\\' || visualizerMode === \\'circular-osc\\') {                      Thickness                              }            }      @switch (visualizerMode) {      @case (\\'bars\\') {              }      @case (\\'osc\\') {              }      @case (\\'circular-bars\\') {              }      @case (\\'circular-osc\\') {              }      @case (\\'off\\') {              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'mtb-root'},{'name': 'CoverDisplayComponent', 'selector': 'mtb-cover-display'},{'name': 'EqualizerComponent', 'selector': 'mtb-equalizer'},{'name': 'FileDropOverlayComponent', 'selector': 'mtb-file-drop-overlay'},{'name': 'HotkeysHelpDialogComponent', 'selector': 'mtb-hotkeys-help-dialog'},{'name': 'LibraryComponent', 'selector': ''},{'name': 'MetadataSettingsComponent', 'selector': 'mtb-metadata-settings'},{'name': 'PlayerComponent', 'selector': 'mtb-player'},{'name': 'PlaylistComponent', 'selector': 'mtb-playlist'},{'name': 'PromptDialogComponent', 'selector': 'mtb-prompt-dialog'},{'name': 'SettingsComponent', 'selector': 'mtb-settings'},{'name': 'ShellComponent', 'selector': 'mtb-shell'},{'name': 'SlidePanelComponent', 'selector': 'mtb-slide-panel'},{'name': 'StorageSettingsComponent', 'selector': 'mtb-storage-settings'},{'name': 'ThemeSettingsComponent', 'selector': 'mtb-theme-settings'},{'name': 'VisualizerComponent', 'selector': 'mtb-visualizer'}];\n    var DIRECTIVES = [{'name': 'VisualsDirective', 'selector': '[mtbVisual]'}];\n    var ACTUAL_COMPONENT = {'name': 'VisualizerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsColorConfig.html":{"url":"interfaces/VisualsColorConfig.html","title":"interface - VisualsColorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsColorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alpha\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mainColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            peakColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alpha:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mainColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peakColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peakColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/VisualsDirective.html":{"url":"directives/VisualsDirective.html","title":"directive - VisualsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  VisualsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [mtbVisual]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                analyser\n                            \n                            \n                                    Readonly\n                                barsConfig\n                            \n                            \n                                    Readonly\n                                colorConfig\n                            \n                            \n                                    Readonly\n                                mode\n                            \n                            \n                                    Readonly\n                                oscConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stopVisualizer\n                            \n                            \n                                visualizeFrequencyBars\n                            \n                            \n                                visualizeOscilloscope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                analyser\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    analyserNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        analyser\n                    \n                \n                        \n                            \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stopVisualizer\n                        \n                    \n                \n            \n            \n                \nstopVisualizer()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeFrequencyBars\n                        \n                    \n                \n            \n            \n                \nvisualizeFrequencyBars(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visualizeOscilloscope\n                        \n                    \n                \n            \n            \n                \nvisualizeOscilloscope(circular: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                circular\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        analyser\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        barsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({})\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('bars')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        oscConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input({ thickness: 2 })\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        analyserNode\n                    \n                \n\n                \n                    \n                        getanalyserNode()\n                    \n                \n                            \n                                \n                                    Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts:93\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, effect, ElementRef, inject, input, OnDestroy } from '@angular/core';\nimport type { FrequencyBarsConfig, OsciloscopeConfig, VisualizerMode, VisualsColorConfig, VisualsWorkerMessage } from './visuals.types';\nimport { AudioService } from '../../audio.service';\n\nconst FALLBACK_PRIMARY_COLOR = '#424242';\nconst FALLBACK_ACCENT_COLOR = '#bcbcbc';\n@Directive({\n  selector: '[mtbVisual]',\n  standalone: true\n})\nexport class VisualsDirective implements OnDestroy {\n  // private zone = inject(NgZone);\n  private audioService = inject(AudioService);\n\n  readonly mode = input('bars');\n\n  readonly barsConfig = input({ gap: 0, capHeight: 1, barCount: 24, capFalldown: 0.5 });\n\n  readonly oscConfig = input({ thickness: 2 });\n\n  readonly colorConfig = input({});\n\n  readonly analyser = input();\n\n  private _internalAnalyzer: AnalyserNode | undefined;\n\n  private canvas: HTMLCanvasElement;\n\n  private animationFrameRef?: number;\n\n  private visualizerWorker: Worker;\n\n  private resizeObserver: ResizeObserver;\n\n  constructor() {\n    const elr = inject>(ElementRef);\n\n    this.canvas = elr.nativeElement;\n\n    this.visualizerWorker = new Worker(new URL('visuals.worker', import.meta.url), { type: 'module' });\n    // this.worker.onmessage = ({ data }) => {\n    //   console.log(`page got message: ${data}`);\n    // };\n\n    const offscreenCanvas: OffscreenCanvas = this.canvas.transferControlToOffscreen();\n    this.visualizerWorker.postMessage({ canvas: offscreenCanvas } as VisualsWorkerMessage, [offscreenCanvas]);\n\n    this.resizeObserver = this.setupResizeObserver();\n    effect(() => {\n      // Access signals to establish dependencies\n      const currentMode = this.mode();\n      // const currentBarsConfig = this.barsConfig();\n      // const currentOscConfig = this.oscConfig();\n      // const currentColorConfig = this.colorConfig();\n      // const currentAnalyser = this.analyser();\n\n      this.stopVisualizer();\n\n      // // give canvas size for correct dpi\n      // const rect = this.canvas.getBoundingClientRect();\n      // this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n\n      switch (currentMode) {\n        case 'bars': {\n          this.visualizeFrequencyBars(false);\n          break;\n        }\n        case 'osc': {\n          this.visualizeOscilloscope(false);\n          break;\n        }\n        case 'circular-osc': {\n          this.visualizeOscilloscope(true);\n          break;\n        }\n        case 'circular-bars': {\n          this.visualizeFrequencyBars(true);\n          break;\n        }\n      }\n    });\n  }\n\n  private setupResizeObserver() {\n    const observer = new ResizeObserver((entries) => {\n      const rect = entries[0].contentRect;\n      this.visualizerWorker.postMessage({ newSize: rect } as VisualsWorkerMessage);\n    });\n    observer.observe(this.canvas);\n    return observer;\n  }\n\n  get analyserNode(): AnalyserNode {\n    const analyserValue = this.analyser();\n    if (analyserValue) {\n      return analyserValue;\n    } else {\n      if (!this._internalAnalyzer) {\n        this._internalAnalyzer = this.audioService.plugInNewAnalyserNode();\n      }\n      return this._internalAnalyzer;\n    }\n  }\n\n  visualizeFrequencyBars(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-bars' : 'bars',\n        barCount: this.barsConfig().barCount,\n        gap: this.barsConfig().gap,\n        capHeight: this.barsConfig().capHeight,\n        capFalldown: this.barsConfig().capFalldown,\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        fftSize: this.analyserNode.fftSize,\n        sampleRate: this.audioService.sampleRate()\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteFrequencyData');\n  }\n\n  visualizeOscilloscope(circular: boolean) {\n    const colorConfig = this.colorConfig();\n    this.visualizerWorker.postMessage({\n      visualizerOptions: {\n        mode: circular ? 'circular-osc' : 'osc',\n        mainColor: colorConfig?.mainColor || FALLBACK_PRIMARY_COLOR,\n        peakColor: colorConfig?.peakColor || FALLBACK_ACCENT_COLOR,\n        alpha: colorConfig?.alpha ?? 1,\n        bufferLength: this.analyserNode.frequencyBinCount,\n        thickness: this.oscConfig().thickness\n      }\n    } as VisualsWorkerMessage);\n\n    this.startVisualization('getByteTimeDomainData');\n  }\n\n  private startVisualization(getDataMethod: 'getByteFrequencyData' | 'getByteTimeDomainData') {\n    const bufferSize = this.analyserNode.frequencyBinCount;\n\n    // Create a buffer pool with more buffers for better rotation\n    const bufferPool: Uint8Array[] = [];\n    for (let i = 0; i  {\n      if (event.data.bufferReady && event.data.reusableBuffer) {\n        // Worker finished with the buffer, add it back to available buffers\n        availableBuffers.push(event.data.reusableBuffer);\n      }\n    });\n\n    const draw = () => {\n      const now = performance.now();\n      const timeSinceLastUpdate = now - lastUpdateTime;\n\n      // Only process if we have an available buffer and enough time has passed\n      if (timeSinceLastUpdate >= updateInterval && availableBuffers.length > 0) {\n        // Get a buffer from the available pool\n        const buffer = availableBuffers.shift()!;\n\n        // Fill it with data\n        this.analyserNode[getDataMethod](buffer);\n\n        // Send to worker (transfers ownership of the buffer)\n        this.visualizerWorker.postMessage({ analyserData: buffer }, [buffer.buffer]);\n\n        lastUpdateTime = now;\n      }\n\n      this.animationFrameRef = requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  stopVisualizer() {\n    this.visualizerWorker.postMessage({ stop: true } as VisualsWorkerMessage);\n    if (this.animationFrameRef !== undefined) {\n      cancelAnimationFrame(this.animationFrameRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopVisualizer();\n    this.resizeObserver.disconnect();\n\n    // Disconnect internal analyzer if it exists\n    if (this._internalAnalyzer) {\n      this.audioService.disconnectAnalyserNode(this._internalAnalyzer);\n    }\n\n    this.visualizerWorker.terminate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisualsService.html":{"url":"injectables/VisualsService.html","title":"injectable - VisualsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisualsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                visualMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisualMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisualMode\n                        \n                    \n                \n            \n            \n                \ntoggleVisualMode()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visualMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.localStorageService.retrieve('visualMode') ?? 'off')\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/player/visualizer/visuals/visuals.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, signal } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport type { VisualizerMode } from './visuals.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisualsService {\n  private localStorageService = inject(LocalStorageService);\n\n  readonly visualMode = signal(this.localStorageService.retrieve('visualMode') ?? 'off');\n\n  toggleVisualMode() {\n    let nextMode: VisualizerMode;\n    switch (this.visualMode()) {\n      case 'off': {\n        nextMode = 'bars';\n        break;\n      }\n      case 'bars': {\n        nextMode = 'circular-bars';\n        break;\n      }\n      case 'circular-bars': {\n        nextMode = 'osc';\n        break;\n      }\n      case 'osc': {\n        nextMode = 'circular-osc';\n        break;\n      }\n      case 'circular-osc': {\n        nextMode = 'off';\n        break;\n      }\n    }\n    this.visualMode.set(nextMode);\n    this.localStorageService.store('visualMode', nextMode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisualsWorkerMessage.html":{"url":"interfaces/VisualsWorkerMessage.html","title":"interface - VisualsWorkerMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisualsWorkerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            analyserData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stop\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visualizerOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        analyserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        analyserData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     OffscreenCanvas\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OffscreenCanvas\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newSize:     DOMRect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DOMRect\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visualizerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visualizerOptions:         VisualizerOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisualizerOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type FftSize = 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096 | 8192 | 16_384 | 32_768;\n\nexport interface AnalyserConfig {\n  fftSize: FftSize;\n  smoothingTimeConstant: number;\n  minDecibels: number;\n  maxDecibels: number;\n}\n\nexport interface FrequencyBarsConfig {\n  barCount: number;\n  capHeight: number;\n  gap: number;\n  capFalldown: number;\n}\n\nexport interface OsciloscopeConfig {\n  thickness: number;\n}\n\nexport interface VisualsColorConfig {\n  mainColor?: string;\n  peakColor?: string;\n  alpha?: number;\n}\n\nexport interface VisualsWorkerMessage {\n  canvas?: OffscreenCanvas;\n  newSize?: DOMRect;\n  stop?: boolean;\n  visualizerOptions?: VisualizerOptions;\n  analyserData: Uint8Array;\n}\nexport interface BaseVisualizerOptions {\n  mode: VisualizerMode;\n  mainColor: string;\n  peakColor: string;\n  alpha: number;\n  bufferLength: number;\n}\n\nexport interface BarsVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'bars' | 'circular-bars';\n  barCount: number;\n  gap: number;\n  capHeight: number;\n  capFalldown: number;\n  fftSize: number;\n  sampleRate: number;\n}\n\nexport interface OscVisualizerOptions extends BaseVisualizerOptions {\n  mode: 'osc' | 'circular-osc';\n  thickness: number;\n}\n\nexport type VisualizerOptions = BarsVisualizerOptions | OscVisualizerOptions;\n\nexport type VisualizerMode = 'off' | 'bars' | 'osc' | 'circular-bars' | 'circular-osc';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WakelockService.html":{"url":"injectables/WakelockService.html","title":"injectable - WakelockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WakelockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gblaster/src/app/services/wakelock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                wakelock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateWakelock\n                            \n                            \n                                    Async\n                                releaseWakelock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        releaseWakelock\n                        \n                    \n                \n            \n            \n                \n                        \n                    releaseWakelock()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gblaster/src/app/services/wakelock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        wakelock\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WakeLockSentinel\n\n                    \n                \n                    \n                        \n                                Defined in apps/gblaster/src/app/services/wakelock.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WakelockService {\n  wakelock?: WakeLockSentinel;\n\n  constructor() {}\n\n  async activateWakelock() {\n    if (!this.wakelock) {\n      return this.requestWakeLock();\n    }\n  }\n\n  private async requestWakeLock() {\n    if (navigator.wakeLock) {\n      try {\n        this.wakelock = await navigator.wakeLock.request('screen');\n        this.wakelock.addEventListener('release', () => {});\n      } catch (error: any) {\n        console.warn(`${error.name}, ${error.message}`);\n      }\n    }\n  }\n\n  async releaseWakelock() {\n    if (this.wakelock) {\n      return this.wakelock.release();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\nGenerated by auto-changelog.\nv20.2.5\nv20.2.4\n\n15 March 2025\n\n\nRelease 20.2.4 7d3846a\n\nv20.2.3\n\n15 March 2025\n\n\nRelease 20.2.3 0107dc5\nfeat: enhance file handling by introducing FileData interface and updating related services, save file handles in indexed db, fix library and add context menu to tracks c3bb2d1\nfeat: implement virtual scrolling for artists, albums, and tracks; add menus for album and track actions, add (All) option, doubleclick adds and navigates eb5338b\n\nv20.2.2\n\n15 March 2025\n\n\nchore(deps): update Angular and related dependencies to latest versions f0442a7\nRelease 20.2.2 f3f93f6\n\nv20.2.1\n\n11 March 2025\n\n\nfix(deps): update dependency music-metadata to v11.0.2 #540\nchore(deps): update typescript-eslint monorepo to v8.26.1 #529\nRelease 20.2.1 c6dff5e\n\nv20.2.0\n\n11 March 2025\n\n\nfeat: scroll to track when playing starts and its not in view b9445d4\nfeat: remove polyfills from project configuration a0517fe\nfeat: add search functionality to playlist with input field and filtering logic b925747\n\nv20.1.4\n\n11 March 2025\n\n\nrefactor: replace BaseSubscribingClass with DestroyRef 72be3d3\nRelease 20.1.4 5e77b33\nfeat: add view transitions to router configuration b2dcbb8\n\nv20.1.3\n\n9 March 2025\n\n\nfeat: enhance ID3 tags extraction and improve metadata handling, refactorings a11eb42\nRelease 20.1.3 305aec6\n\nv20.1.2\n\n9 March 2025\n\n\nRelease 20.1.2 ba13cfe\nrefactor: change to zoneless change detection 3f668a5\n\nv20.1.1\n\n9 March 2025\n\n\nfeat: update typography settings and optimize font loading in HTML 722901c\nRelease 20.1.1 858ff56\n\nv20.1.0\n\n9 March 2025\n\n\nRelease 20.1.0 d78443f\nfeat: refactor cover and playlist components for improved performance, performance hack für visuals f1580e8\nchore: update dependencies in package.json and package-lock.json 9e95c2d\n\nv20.0.1\n\n9 March 2025\n\n\nfeat: updated to material 3 theme, fixed dark mode handling 9b0ad09\nfeat: implement circular waveform visualization and initialize bark scale mapping 46e627b\nfeat: optimize image loading in cover and playlist components using NgOptimizedImage 79c83aa\n\nv20.0.0\n\n8 March 2025\n\n\nfeat: enhance ESLint configuration with Angular rules and TypeScript support 2b942c4\nRelease 20.0.0 d641392\nfeat: update ESLint configuration with TypeScript and SonarJS support, add custom rule overrides ef11066\n\nv19.5.4\n\n8 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.33.0 #539\nRelease 19.5.4 86a63af\nchore: update dependencies and add eslint packages c9dcf09\nfeat:  nearly complete signal refactoring also fixing long standing bugs f3a3520\n\nv19.5.3\n\n2 March 2025\n\n\nfeat: use @let syntax in templates, better VisualizerOptions types b7bb801\nRelease 19.5.3 eac8dd6\n\nv19.5.1\n\n2 March 2025\n\n\nRelease 19.5.1 8ebff84\nfeat: add circular visualization modes for frequency bars and oscilloscope 4e27dea\nfix: make gamepad and wakelock services optional to improve compatibility bb8466d\n\nv19.5.0\n\n2 March 2025\n\n\nRelease 19.5.0 3f2c562\nfix: fix file drop overlay not working as expected 94b7001\nfix: add postcss-html dependency to package.json and package-lock.json 85d2a14\n\nv19.4.15\n\n2 March 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.32.0 #532\nchore: update dependencies to latest versions b0d0fe4\nRelease 19.4.15 a2b1db1\nfix: update HTML components to self-closing tags 7785053\n\nv19.4.14\n\n27 February 2025\n\n\nchore: update Angular and related dependencies to version 19.2.x d8a2bf9\nRelease 19.4.14 0c889a3\n\nv19.4.13\n\n24 February 2025\n\n\nchore(deps): update actions/upload-artifact action to v4 #527\nRelease 19.4.13 9fb4192\nfix: eslint unicorn autofixes f154aed\nfeat: enhance visuals worker by optimizing data structures and pre-calculating arrays fee270f\n\nv19.4.12\n\n24 February 2025\n\n\nRelease 19.4.12 6c63788\nrefactor: remove unused dependencies 12a71dd\n\nv19.4.11\n\n23 February 2025\n\n\nRelease 19.4.11 d505863\nfix: update ESLint configuration inputs and production exclusions 6bfb6ba\n\nv19.4.10\n\n23 February 2025\n\n\nRelease 19.4.10 17e4083\n\nv19.4.9\n\n23 February 2025\n\n\nRelease 19.4.9 cf13446\nrefactor: us prive functions instead of modules c31aaa6\n\nv19.4.8\n\n23 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.31.2 #522\nrefactor: update ESLint configuration to use ES module syntax and cleanup deps 4dbf4b8\nRelease 19.4.8 0f45127\nchore: update project configuration and add dotenv-cli dependency 063d395\n\nv19.4.7\n\n23 February 2025\n\n\nRelease 19.4.7 4d9ca69\nchore: update HTML templates and ESLint configuration for consistency 33bb6c8\n\nv19.4.6\n\n23 February 2025\n\n\nchore(deps): update Angular and ESLint dependencies to latest versions 00d5b5e\nRelease 19.4.6 ab5a0f8\n\nv19.4.5\n\n4 February 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.3 #511\nchore(deps): update @swc/core, @types/node, and @typescript-eslint packages to latest versions 4df45ed\nRelease 19.4.5 f52095f\n\nv19.4.4\n\n2 February 2025\n\n\nchore: deps 76ace70\nRelease 19.4.4 072caca\n\nv19.4.3\n\n27 January 2025\n\n\nchore: deps a04aa39\nRelease 19.4.3 e844d5d\n\nv19.4.2\n\n24 January 2025\n\n\nchore: deps d50fcd7\nRelease 19.4.2 2e2cf66\n\nv19.4.1\n\n21 January 2025\n\n\nchore: deps c3062ed\nRelease 19.4.1 e96ef56\nchore: mise 7b8cdeb\n\nv19.4.0\n\n17 January 2025\n\n\nchore: deps 37fa04d\nRelease 19.4.0 155e1fd\nchore: readme, mise, deps 726da93\n\nv19.3.0\n\n14 January 2025\n\n\nchore(deps): update w9jds/firebase-action action to v13.29.1 #483\nchore: update to latest node-vibrant f306ca1\nRelease 19.3.0 ca87d69\n\nv19.2.10\n\n11 January 2025\n\n\nchore: deps a280f97\nRelease 19.2.10 15dded8\n\nv19.2.9\n\n3 January 2025\n\n\nRelease 19.2.9 bd67275\n\nv19.2.8\n\n14 December 2024\n\n\nRelease 19.2.8 af0ef42\n\nv19.2.7\n\n14 December 2024\n\n\nRelease 19.2.7 7d9d809\n\nv19.2.6\n\n11 December 2024\n\n\nchore: deps c042ae8\nchore: updated config to latest nx defaults 0a9aedc\nchore: updated config to latest nx defaults a555517\n\nv19.2.5\n\n7 December 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.28.0 #473\nRevert \"fix: disable npm caching\" f908dd2\nfix: disable npm caching 1a33b93\nRelease 19.2.5 4a42a18\n\nv19.2.4\n\n7 December 2024\n\n\nchore: deps 1a65661\nRelease 19.2.4 a19a09f\n\nv19.2.3\n\n21 November 2024\n\n\nRelease 19.2.3 dc45fe1\nfeat: migrate to application executor 0325a08\n\nv19.2.2\n\n21 November 2024\n\n\nfix: stylelint fixes 2500235\nRelease 19.2.2 b416bff\n\nv19.2.1\n\n21 November 2024\n\n\nRelease 19.2.1 8cab1e2\nfix: migrate jest and eslint to inferred plugins ee8b31b\n\nv19.2.0\n\n21 November 2024\n\n\nchore: input signal migration f8cbc65\nRelease 19.2.0 c363f4e\nfix: pass sampleRate 56a3899\n\nv19.1.1\n\n21 November 2024\n\n\nchore(deps): update angular monorepo to v19 #466\nchore(deps): update w9jds/firebase-action action to v13.26.0 #465\nchore(deps): update angularmaterial monorepo to v19 #467\nchore(config): migrate config renovate.json #468\nchore: use ng-packgr-lite builds, fix jest-preset-angular config b599685\nfix: revert ng-packgr temporarily bb34f11\nRelease 19.1.1 ada6807\n\nv19.1.0\n\n21 November 2024\n\n\nchore: ng 19 0ba1f5d\nRelease 19.1.0 d2765b8\nchore: remove console time 7b38580\n\nv19.0.10\n\n9 November 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.24.2 #460\nfix(deps): update dependency tslib to v2.8.1 #457\nRelease 19.0.10 1333d05\n\nv19.0.9\n\n9 November 2024\n\n\nchore: updates e42b61f\nRelease 19.0.9 fc998b4\n\nv19.0.8\n\n15 October 2024\n\n\nRelease 19.0.8 e4b565b\nfix: do webpack build again 10bf971\n\nv19.0.7\n\n15 October 2024\n\n\nRelease 19.0.7 308bd9f\nfix: use browser-esbuild executor fe4ebfa\n\nv19.0.6\n\n15 October 2024\n\n\nRelease 19.0.6 953bf76\nfix: use browser-esbuild executor a12f9c3\n\nv19.0.5\n\n15 October 2024\n\n\nfix(deps): update dependency tslib to v2.7.0 #450\nchore(deps): update dependency ubuntu to v24 #455\nchore(deps): update w9jds/firebase-action action to v13.22.0 #448\nRelease 19.0.5 592ac3b\n\nv19.0.4\n\n15 October 2024\n\n\nRelease 19.0.4 27acba5\nchore: eslint update (config todo) 97ccbb6\n\nv19.0.3\n\n15 October 2024\n\n\nchore: migrate to inject() 43a40a4\nfix: removed unused angular imports a0e7ce7\nRelease 19.0.3 972b1ee\n\nv19.0.2\n\n15 October 2024\n\n\nRelease 19.0.2 b8ad144\n\nv19.0.1\n\n15 October 2024\n\n\nRelease 19.0.1 7528cd4\n\nv19.0.0\n\n15 October 2024\n\n\nRelease 19.0.0 2bb5430\n\nv18.2.7\n\n15 October 2024\n\n\nchore(deps): updates ad57b9c\nRelease 18.2.7 8448134\nchange to application executor e2e1eb4\n\nv18.2.6\n\n26 August 2024\n\n\ndeps 0174ddf\nRelease 18.2.6 f0ae911\n\nv18.2.5\n\n15 August 2024\n\n\nsignals for coverdisplay, add item to playlist on by one d489b64\nRelease 18.2.5 4a66bde\n\nv18.2.4\n\n15 August 2024\n\n\nRelease 18.2.4 bbda480\nfix: big layout 8d61f2e\n\nv18.2.3\n\n15 August 2024\n\n\nchore: nx update ec1f94a\nRelease 18.2.3 72fa061\n\nv18.2.2\n\n15 August 2024\n\n\nanalyze and report esbuild bundles d597302\nRelease 18.2.2 681d4cd\nanalyze and report esbuild bundles 8626722\n\nv18.2.0\n\n15 August 2024\n\n\nfix test css class, select first in playlist after load when none selected 7a838a9\nRelease 18.2.0 38d27f1\n\nv18.1.1\n\n15 August 2024\n\n\nfeat: better axis handling for gamepad 4d47689\nmore signalös 019de24\nRelease 18.1.1 0f8e394\n\nv18.1.0\n\n15 August 2024\n\n\nRelease 18.1.0 ff778a5\nfeat: removed mobx, use signals for many things 5824006\n\nv18.0.1\n\n15 August 2024\n\n\nchore(deps): update, import types with import type e252172\nchore(deps): update e7aa58d\nRelease 18.0.1 7560dfa\n\nv18.0.0\n\n10 August 2024\n\n\nchore(deps): update w9jds/firebase-action action to v13.15.1 #438\nRelease 18.0.0 0858a77\nfix(eslint): older unused imports plugin cdb5380\n\nv17.0.18\n\n10 August 2024\n\n\nchore(deps): update 6878f22\nRelease 17.0.17 027ad79\nRelease 17.0.18 6756668\n\nv17.0.17\n\n10 August 2024\n\n\nUpdate w9jds/firebase-action action to v13.14.2 #431\nchore(deps): update 592cb7a\nRelease 17.0.17 2db5dc7\n\nv17.0.16\n\n29 July 2024\n\n\nmusic-metadata 10 7f90220\nRelease 17.0.16 80d5e14\nremoved webpack 908f395\n\nv17.0.15\n\n29 July 2024\n\n\ndeps ffe5da9\ndeps 469a890\nRelease 17.0.15 80553e8\n\nv17.0.14\n\n11 July 2024\n\n\ndeps 389407a\nRelease 17.0.14 30fec73\n\nv17.0.13\n\n7 July 2024\n\n\nUpdate dependency @typescript-eslint/utils to v8.0.0-alpha.40 #369\nUpdate w9jds/firebase-action action to v13.13.0 #423\ndeps 2389739\nRelease 17.0.13 4040b59\ndeps a0c15a4\n\nv17.0.12\n\n4 July 2024\n\n\ndeps 892689d\nRelease 17.0.12 af8a6b4\n\nv17.0.11\n\n23 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.4 #419\ndeps babdb9f\nRelease 17.0.11 5273759\n\nv17.0.10\n\n23 June 2024\n\n\ndeps 05a441e\nRelease 17.0.10 3e7b9a4\n\nv17.0.9\n\n12 June 2024\n\n\nRelease 17.0.9 a948ad5\ndeps, webstorage update 0e6195d\n\nv17.0.8\n\n12 June 2024\n\n\ndeps, webstorage update 1e660c9\nRelease 17.0.8 64a34dc\n\nv17.0.7\n\n9 June 2024\n\n\nUpdate w9jds/firebase-action action to v13.11.2 #409\nUpdate dependency tslib to v2.6.3 #411\nRelease 17.0.7 2bb0e78\n\nv17.0.6\n\n9 June 2024\n\n\nnx + deps a1da736\nRelease 17.0.6 41e632f\n\nv17.0.5\n\n25 May 2024\n\n\nUpdate angularmaterial monorepo to v18 #402\nRelease 17.0.4 549bfa1\nRelease 17.0.5 ea932ef\n\nv17.0.4\n\n25 May 2024\n\n\nUpdate angular monorepo to v18 #401\nUpdate w9jds/firebase-action action to v13.10.1 #395\nRelease 17.0.4 f591692\nswitched to node 22 4f70846\n\nv17.0.3\n\n25 May 2024\n\n\nRelease 17.0.3 cb19d50\nenabled eventCoalescing e6fc6eb\n\nv17.0.2\n\n25 May 2024\n\n\nRelease 17.0.2 96bcdfc\nfixed theme 3ce805f\n\nv17.0.1\n\n25 May 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.5 #390\nng 18 7fcd244\nfixed eslint 2346f13\nnx update 4164d59\n\nv16.0.6\n\n28 April 2024\n\n\nUpdate w9jds/firebase-action action to v13.7.2 #381\ndeps 308b3e5\nRelease 16.0.6 3233ed1\naudit fix 2f67e34\n\nv16.0.5\n\n14 April 2024\n\n\ndeps 84ac04c\nRelease 16.0.5 1a30a33\n\nv16.0.4\n\n7 April 2024\n\n\nRelease 16.0.4 5bab2a7\n\nv16.0.3\n\n16 March 2024\n\n\nRelease 16.0.3 0338bd7\nnew browserlist 013e987\nonly include Buffer in Node Polfills d7b3ea2\n\nv16.0.2\n\n16 March 2024\n\n\nRelease 16.0.2 0629b20\nfixed nx cloud token 870e50b\n\nv16.0.1\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.5.1 #372\nRelease 16.0.1 fe15d24\nfixed nx cloud token 6d2a8fe\n\nv16.0.0\n\n16 March 2024\n\n\nUpdate w9jds/firebase-action action to v13.3.1 #368\ndeps updated 11ae344\nnx update 0b2a071\nangular update c35bc38\n\nv15.1.17\n\n24 February 2024\n\n\nRelease 15.1.17 f18fa1f\n\nv15.1.16\n\n24 February 2024\n\n\nRelease 15.1.16 d2e1df8\n\nv15.1.14\n\n10 February 2024\n\n\nUpdate nrwl/nx-set-shas action to v4 #362\nUpdate w9jds/firebase-action action to v13.2.1 #358\nRelease 15.1.14 09eba6b\nRevert \"try nx agents\" 90e9f96\ntry nx agents 7362da7\n\nv15.1.13\n\n10 February 2024\n\n\ndeps cace929\nRelease 15.1.13 04dca08\nremoved last modules 0486e25\n\nv15.1.12\n\n4 February 2024\n\n\nnx update ccbf388\nRelease 15.1.12 7a8645a\n\nv15.1.11\n\n28 January 2024\n\n\nUpdate w9jds/firebase-action action to v13.1.0 #338\nUpdate actions/cache action to v4 #343\nRelease 15.1.11 1e340e1\n\nv15.1.10\n\n28 January 2024\n\n\ndeps 64d30e1\nRelease 15.1.10 a9a8e68\n\nv15.1.9\n\n20 January 2024\n\n\nRelease 15.1.9 8596088\n\nv15.1.8\n\n10 January 2024\n\n\nstylelint fixes ac02523\nRelease 15.1.8 4c8c0ad\nlint fixes 764711a\n\nv15.1.7\n\n9 January 2024\n\n\ndeps 362d9db\nRelease 15.1.7 92d89c3\n\nv15.1.6\n\n28 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #312\nRelease 15.1.6 339bd87\n\nv15.1.5\n\n28 December 2023\n\n\ndeps 4ef0700\nRelease 15.1.5 8ee0628\n\nv15.1.4\n\n15 December 2023\n\n\ndeps 998ad7c\nRelease 15.1.4 5c1346d\n\nv15.1.3\n\n10 December 2023\n\n\nRelease 15.1.3 d0b8d34\ndeps 6966d17\nnx update 678aef6\n\nv15.1.2\n\n8 December 2023\n\n\nfix seeking with slider, @switch statt @if 9934470\nRelease 15.1.2 1ebb626\n\nv15.1.1\n\n8 December 2023\n\n\nRelease 15.1.1 586ef29\nfix deploy f36895a\n\nv15.1.0\n\n8 December 2023\n\n\nUpdate w9jds/firebase-action action to v13 #310\noptimizations and typing f5c6154\noptimizations 05ddceb\noptimized icon set converter 6bd60c5\n\nv15.0.9\n\n8 December 2023\n\n\ndeps 02d4bfb\ntsconfig refactoring 7445539\nRelease 15.0.9 58fb13b\n\nv15.0.8\n\n30 November 2023\n\n\ntsconfig refactoring 275e54d\nRelease 15.0.8 f3351c2\n\nv15.0.7\n\n30 November 2023\n\n\nUpdate w9jds/firebase-action action to v12.9.0 #301\nRelease 15.0.7 7e45969\n\nv15.0.6\n\n30 November 2023\n\n\nRelease 15.0.6 063950a\ndeps 7522583\n\nv15.0.5\n\n13 November 2023\n\n\ndeps, prettier cbc6e41\nRelease 15.0.5 3bccffb\n\nv15.0.4\n\n10 November 2023\n\n\nRelease 15.0.4 1c4c67e\n\nv15.0.3\n\n10 November 2023\n\n\nRelease 15.0.3 90df676\n\nv15.0.2\n\n10 November 2023\n\n\nRelease 15.0.2 29878bc\neslint flat config 8c297a1\n\nv15.0.1\n\n10 November 2023\n\n\nNEW control flow syntax 84e91e3\nRelease 15.0.1 9dfd762\nstyleUrl instead of urls aefd739\n\nv15.0.0\n\n9 November 2023\n\n\nUpdate angular monorepo to v17 (major) #288\nUpdate angularmaterial monorepo to v17 (major) #289\nUpdate w9jds/firebase-action action to v12.8.0 #286\nUpdate actions/setup-node action to v4 #287\nRelease 15.0.0 7f1e3c1\nUpdate angular monorepo to v17 43d9b1f\nnodejs 20 builds 6f6ac17\n\nv14.1.23\n\n9 November 2023\n\n\nnx update a358906\nRelease 14.1.23 55f3319\nnx update dbc354f\n\nv14.1.20\n\n14 October 2023\n\n\nRelease 14.1.20 8d072f1\n\nv14.1.19\n\n14 October 2023\n\n\nUpdate dependency @types/node to v20.8.6 #242\nUpdate w9jds/firebase-action action to v12.6.2 #272\nRelease 14.1.19 314f02a\nRelease 14.1.18 7cf10f9\n\nv14.1.18\n\n14 October 2023\n\n\nRelease 14.1.18 a8bb04b\n\nv14.1.17\n\n14 October 2023\n\n\nRelease 14.1.17 7a66d5a\n\nv14.1.16\n\n14 October 2023\n\n\nRelease 14.1.16 4ec2e90\n\nv14.1.15\n\n7 October 2023\n\n\nRelease 14.1.15 3f73f6e\n\nv14.1.14\n\n7 October 2023\n\n\nRelease 14.1.14 db2122c\n\nv14.1.13\n\n7 October 2023\n\n\nRelease 14.1.13 a3ae7df\n\nv14.1.12\n\n7 October 2023\n\n\nRelease 14.1.12 0d0dfcb\n\nv14.1.11\n\n7 October 2023\n\n\nRelease 14.1.11 5aecee8\n\nv14.1.10\n\n7 October 2023\n\n\nRelease 14.1.10 d200e57\n\nv14.1.9\n\n23 September 2023\n\n\nRelease 14.1.9 29f1cbe\nupdated from deprecated SwUpdate props bef3e3e\n\nv14.1.8\n\n23 September 2023\n\n\nupdated from deprecated SwUpdate props 2f592f3\nRelease 14.1.8 07d6959\n\nv14.1.7\n\n23 September 2023\n\n\ndeps 1ffd91e\nRelease 14.1.7 6fc1434\n\nv14.1.6\n\n23 September 2023\n\n\nRelease 14.1.6 8b184a4\n\nv14.1.5\n\n21 September 2023\n\n\nRelease 14.1.5 4695772\nfix build fc633d2\n\nv14.1.4\n\n7 September 2023\n\n\nBump protobufjs and google-gax #261\nUpdate dependency tslib to v2.6.2 #262\nUpdate actions/checkout action to v4 #264\nRelease 14.1.4 a6386d2\nfix build b7303ed\n\nv14.1.3\n\n7 September 2023\n\n\nBump word-wrap from 1.2.3 to 1.2.4 #250\nUpdate dependency tslib to v2.6.1 #251\nRelease 14.1.3 9ce5e31\n\nv14.1.2\n\n3 August 2023\n\n\nRelease 14.1.2 8f60273\n\nv14.1.1\n\n7 July 2023\n\n\nUpdate dependency tslib to v2.6.0 #241\nBump @grpc/grpc-js and google-gax #240\nUpdate w9jds/firebase-action action to v12 #235\nRelease 14.1.1 f78467f\nprettier 3ff6d19\n\nv14.1.0\n\n7 July 2023\n\n\nprettier 3 + precommit hooks cd5831f\nRelease 14.1.0 d612735\nprettier 08b1238\n\nv14.0.13\n\n17 June 2023\n\n\nRelease 14.0.13 a10893b\nremoved unused type polyfills af2926f\n\nv14.0.12\n\n17 June 2023\n\n\nRelease 14.0.12 ea688e0\n\nv14.0.11\n\n17 June 2023\n\n\nRelease 14.0.11 32c3f4d\n\nv14.0.10\n\n17 June 2023\n\n\ndeps 8c90a58\nRelease 14.0.10 1d0b823\n\nv14.0.9\n\n8 June 2023\n\n\ndeps fdad632\nRelease 14.0.9 331bb8f\n\nv14.0.8\n\n3 June 2023\n\n\nBump vm2 from 3.9.17 to 3.9.19 #220\nUpdate dependency tslib to v2.5.3 #223\nRelease 14.0.8 8b9fdf5\n\nv14.0.7\n\n3 June 2023\n\n\nuse run-many for tests 97d68d0\nRelease 14.0.7 c82e02b\n\nv14.0.6\n\n3 June 2023\n\n\ndeps 752aa76\nRelease 14.0.6 f038069\n\nv14.0.5\n\n13 May 2023\n\n\ndeps 28cff25\nRelease 14.0.5 20cf16a\n\nv14.0.4\n\n6 May 2023\n\n\nremoved unused js file 5ffbd62\nRelease 14.0.4 7fb56e0\n\nv14.0.3\n\n6 May 2023\n\n\nUpdate dependency jest-preset-angular to v13.1.0 #208\nUpdate dependency @types/node to v18.16.5 #206\nRelease 14.0.3 cdf04e9\ne2e fixed 2708806\n\nv14.0.2\n\n6 May 2023\n\n\nUpdate w9jds/firebase-action action to v11.30.1 #207\ne2e fixed and removed separate project 74e7c83\nRelease 14.0.1 f386a36\nRelease 14.0.2 1081f8e\n\nv14.0.1\n\n6 May 2023\n\n\ne2e fixed and removed separate project d0cd94f\nRelease 14.0.1 bb4e0ce\n\nv14.0.0\n\n6 May 2023\n\n\nnx 16, angular 16, deps 826cbe5\nRelease 14.0.0 ec067ee\nmusic metadata removed 2eb6cae\n\nv13.3.5\n\n13 April 2023\n\n\nBump vm2 #200\nUpdate dependency music-metadata to v7.13.4 #195\nRelease 13.3.5 845189d\n\nv13.3.4\n\n13 April 2023\n\n\nRelease 13.3.4 eab1d35\n\nv13.3.3\n\n10 April 2023\n\n\nRelease 13.3.3 0129566\n\nv13.3.2\n\n25 March 2023\n\n\nRelease 13.3.2 5a92c07\n\nv13.3.1\n\n25 March 2023\n\n\nRelease 13.3.1 42a58d9\n\nv13.3.0\n\n18 March 2023\n\n\nUpdate w9jds/firebase-action action to v11.24.1 #181\ndeps + sidenav fixes e11e3bd\nRelease 13.3.0 3acc7bf\n\nv13.2.6\n\n15 March 2023\n\n\ndeps 0dc096d\nRelease 13.2.6 6d67484\n\nv13.2.5\n\n5 March 2023\n\n\nstandalone bootstrap 6aed158\nRelease 13.2.5 4c272db\n\nv13.2.4\n\n5 March 2023\n\n\nBump http-cache-semantics from 4.1.0 to 4.1.1 #170\nBump cacheable-request from 10.2.5 to 10.2.7 #171\nUpdate dependency tslib to v2.5.0 #164\nRelease 13.2.4 392b41d\ndeps a4b6dab\n\nv13.2.3\n\n5 March 2023\n\n\nRelease 13.2.3 f54702d\n\nv13.2.2\n\n5 March 2023\n\n\nRelease 13.2.2 d9677d0\n\nv13.2.1\n\n22 February 2023\n\n\ndeps 1730f16\nRelease 13.2.1 ba634aa\nuse nx for all 51a51dd\n\nv13.2.0\n\n22 February 2023\n\n\nUpdate w9jds/firebase-action action to v11.22.0 #172\nRelease 13.2.0 4035819\nstandalone migration steps 1 and 2 32e3ad6\nstandalone migration steps 1 and 2 a40c9e8\n\nv13.1.12\n\n22 February 2023\n\n\nRelease 13.1.12 53818e8\n\nv13.1.11\n\n28 January 2023\n\n\ndeps b4d909a\nRelease 13.1.11 d8bf0e7\n\nv13.1.10\n\n22 January 2023\n\n\nRelease 13.1.10 1c7fa4e\n\nv13.1.9\n\n20 January 2023\n\n\ndeps 4781958\nRelease 13.1.9 505e77f\n\nv13.1.8\n\n15 January 2023\n\n\nRelease 13.1.8 580c58d\n\nv13.1.7\n\n15 January 2023\n\n\nUpdate dependency music-metadata to v7.13.3 #150\ndeps 8b6bfeb\nRelease 13.1.7 d516e97\n\nv13.1.6\n\n13 January 2023\n\n\nRelease 13.1.6 166c79d\ndeps 8ec046f\n\nv13.1.5\n\n7 January 2023\n\n\nlayout fixes f3f4ae7\nRelease 13.1.5 eaa27a6\n\nv13.1.4\n\n7 January 2023\n\n\nRelease 13.1.4 49d8293\nfixed e2e 33d73d9\n\nv13.1.3\n\n7 January 2023\n\n\nUpdate dependency firebase-tools to v11.20.0 #147\nUpdate dependency postcss to v8.4.21 #146\nUpdate dependency eslint-config-prettier to v8.6.0 #139\nUpdate angularmaterial monorepo to v15.0.4 #144\nUpdate dependency husky to v8.0.3 #140\nUpdate w9jds/firebase-action action to v11.18.0 #131\nUpdate dependency cypress to v12.3.0 #141\nUpdate nrwl monorepo to v15.4.4 #135\nUpdate dependency eslint to v8.31.0 #138\nUpdate typescript-eslint monorepo to v5.48.0 #58\nUpdate dependency music-metadata to v7.13.1 #142\nRelease 13.1.3 5302fb4\ndeps 801cd46\nmdc migration, vertical sliders, icons size directive removed ffa9bb5\n\nv13.1.2\n\n30 December 2022\n\n\nRelease 13.1.2 c339811\n\nv13.1.1\n\n23 December 2022\n\n\nvisualizers plug their own analyser cea2824\nunsubscribe and disconnect analysers 6a8d3be\nRelease 13.1.1 72575f6\n\nv13.1.0\n\n23 December 2022\n\n\nRelease 13.1.0 1989419\nrenamed song to track, us playState obeservable for better input and CD handling 47b6776\n\nv13.0.20\n\n23 December 2022\n\n\ntransparency control for visuals 7445cc4\nRelease 13.0.20 62cfee7\n\nv13.0.19\n\n23 December 2022\n\n\nstandalone components 620afb8\nno max db slider, mindb range changed, better default f7913c1\nRelease 13.0.19 9280e3a\n\nv13.0.18\n\n22 December 2022\n\n\nRelease 13.0.18 4c16c1e\n\nv13.0.16\n\n22 December 2022\n\n\nRelease 13.0.16 77707fb\n\nv13.0.13\n\n22 December 2022\n\n\nRelease 13.0.13 6f12a37\n\nv13.0.12\n\n19 December 2022\n\n\nremoved d3, use bark scale for bar spectrogram 2bcfefb\nRelease 13.0.12 e336db1\n\nv13.0.11\n\n18 December 2022\n\n\nmerged readme 3f449ec\nRelease 13.0.11 47e3527\nbadges 5f1d097\n\nv13.0.10\n\n17 December 2022\n\n\nRelease 13.0.10 62c64c5\nmoved style to component 006b52c\ntodo 28548eb\n\nv13.0.9\n\n17 December 2022\n\n\nfixed audioContext resume, added gain to eq cb797bc\nRelease 13.0.9 8c56320\n\nv13.0.8\n\n17 December 2022\n\n\nRelease 13.0.8 6f1cdb4\n\nv13.0.7\n\n17 December 2022\n\n\nRelease 13.0.7 d895f0f\n\nv13.0.6\n\n17 December 2022\n\n\nRelease 13.0.6 17266a3\n\nv13.0.5\n\n17 December 2022\n\n\nUpdate angularmaterial monorepo to v15 (major) #108\nRelease 13.0.5 ddab2f3\nremoved uneeded ts-ignores a1a074f\nUpdate angularmaterial monorepo to v15 a4de6d4\n\nv13.0.3\n\n17 December 2022\n\n\nRelease 13.0.3 7f8ad27\nuse config file without .json endings bfd4685\n\nv13.0.2\n\n17 December 2022\n\n\nrefactored type imports and fixed offscreencanvas types 067bbea\nRelease 13.0.2 292ed5a\ncustom typings moved to folders c3208e7\n\nv13.0.1\n\n17 December 2022\n\n\nRelease 13.0.1 667c54e\nfixed debug version bf7b3a9\nfixed debug version 6cee32d\n\nv13.0.0\n\n16 December 2022\n\n\nRelease 13.0.0 b3905a0\nfixed playlist bulk loading 834f706\n\nv12.0.16\n\n16 December 2022\n\n\nRelease 12.0.16 1de2a3c\nfixed playlist bulk loading 8e7ecec\n\nv12.0.15\n\n16 December 2022\n\n\nRelease 12.0.15 5a7054c\nfixed test 9eb089c\n\nv12.0.14\n\n16 December 2022\n\n\nabstacted all audio stuff in audio service 403737f\neq auf mobile funkt auf mobile, flex layout refactoring eccaa4a\nreplaced angular-flex-layout with css 03a0491\n\nv12.0.13\n\n15 December 2022\n\n\nmaterial 15 migration dc55360\nRelease 12.0.13 37f76dc\nsimpler lib 86be7eb\n\nv12.0.12\n\n15 December 2022\n\n\nlibrary ohne filter 8dfc611\nRelease 12.0.12 6d26668\n\nv12.0.11\n\n14 December 2022\n\n\nRelease 12.0.11 635e855\ndeps, eslintrc, vibrant-wasm entfernt 431a9ad\n\nv12.0.10\n\n12 December 2022\n\n\nRelease 12.0.10 f954f07\nappend audioElement to document ce588f9\n\nv12.0.9\n\n12 December 2022\n\n\nseperated audio part into AudioService 0f8326e\nsimplified init of audio 869dddb\nRelease 12.0.9 17a1677\n\nv12.0.8\n\n11 December 2022\n\n\nfixed smaller things, no prdefinded samplerate 986dd30\nRelease 12.0.8 6b9ff38\ntodo 2bdc500\n\nv12.0.7\n\n11 December 2022\n\n\nRelease 12.0.7 a0aa269\nmoved init of seekto handler to constructor 2434ec6\n\nv12.0.6\n\n11 December 2022\n\n\nRelease 12.0.6 14768e6\n\nv12.0.5\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 8738efc\nRelease 12.0.4 fee5161\nRelease 12.0.5 23061dd\n\nv12.0.4\n\n11 December 2022\n\n\nfixing seektTo on mobile hopefully 81bb449\nRelease 12.0.4 025a430\nUpdate TODO.md 009b48d\n\nv12.0.3\n\n11 December 2022\n\n\nRelease 12.0.3 c398655\n\nv12.0.2\n\n11 December 2022\n\n\nRelease 12.0.2 2bfabd0\n\nv12.0.1\n\n11 December 2022\n\n\nmoved id3tags extraction to worker 9b11a20\nRelease 12.0.1 6c27523\nUpdate devcontainer.json b286be9\n\nv12.0.0\n\n10 December 2022\n\n\nRelease 12.0.0 6ee2324\nadded deps vibrant-wasm and custom webpack config to ttry threads.js 8337321\ncustom webpack config for threads.js workers (still not working, disabled) 55e56b8\n\nv11.5.14\n\n7 December 2022\n\n\nstylelint fixes and config 52d642b\nRelease 11.5.14 b5dfb18\n\nv11.5.13\n\n7 December 2022\n\n\nRelease 11.5.13 a867afe\nstylelint fixes and config 122856c\n\nv11.5.12\n\n7 December 2022\n\n\nRelease 11.5.12 c4668f1\nmusic meatadata, file-drop-overlay as standalone component 2e5b003\nprovide all services in root ca80a43\n\nv11.5.11\n\n7 December 2022\n\n\nRelease 11.5.11 930dc28\n\nv11.5.10\n\n7 December 2022\n\n\ndeps a552ea9\nRelease 11.5.10 d29b113\n\nv11.5.9\n\n6 December 2022\n\n\nRelease 11.5.9 18a45bd\ntags + eslint rule 864d7e1\n\nv11.5.8\n\n6 December 2022\n\n\ndep graph in gh pages, release-it config erweitert um neu generierte dateien mit zu committen 73bd100\nlibs cleanup 59f4ac4\nRelease 11.5.8 24e4c9a\n\nv11.5.7\n\n6 December 2022\n\n\nlibs cleanup 60dbedc\nRelease 11.5.7 2d68f3b\n\nv11.5.6\n\n6 December 2022\n\n\nremoved all dummy tests 7defe9b\nRelease 11.5.6 d1b4f51\nrun tests in github actions 14148e0\n\nv11.5.5\n\n6 December 2022\n\n\nRelease 11.5.5 73b9b59\n\nv11.5.4\n\n6 December 2022\n\n\ncompodoc reenabled 7c00473\nsvgo updated 19bf065\nRelease 11.5.4 8df3910\n\nv11.5.3\n\n6 December 2022\n\n\ncompodoc reenabled 540fdd8\nRelease 11.5.3 7c5bbe5\n\nv11.5.2\n\n5 December 2022\n\n\ncompodoc reenabled 2ce3664\ncompodoc reenabled b7be438\ncompodoc reenabled 29f2b37\n\nv11.5.1\n\n5 December 2022\n\n\nautofix unused imports, removed tslint 71bd586\nautofix unused imports 6d6f310\nRelease 11.5.1 77091b9\n\nv11.5.0\n\n5 December 2022\n\n\nbetter thum quality, bigger coverart in playlist, tooltips, better button color handling bffc736\nRelease 11.5.0 670b3af\n\nv11.4.11\n\n5 December 2022\n\n\nRelease 11.4.11 e615145\n\nv11.4.10\n\n5 December 2022\n\n\nreinstall 418b524\nRelease 11.4.10 eaf46cf\n\nv11.4.9\n\n5 December 2022\n\n\nRelease 11.4.9 3e58c71\n\nv11.4.8\n\n5 December 2022\n\n\nRelease 11.4.8 a409033\nservices in app integriert 1857720\n\nv11.4.7\n\n5 December 2022\n\n\nremoved storybook 9d81efd\nservices in app integriert ce621ee\nmoved visuals lib to app e992cb4\n\nv11.4.6\n\n5 December 2022\n\n\nRelease 11.4.6 f9c93ce\n\nv11.4.5\n\n5 December 2022\n\n\nRelease 11.4.5 839a546\n\nv11.4.3\n\n5 December 2022\n\n\nRelease 11.4.3 50b7005\n\nv11.4.2\n\n5 December 2022\n\n\nRelease 11.4.2 0674adf\n\nv11.4.1\n\n5 December 2022\n\n\nRelease 11.4.1 7ccbc95\n\nv11.4.0\n\n5 December 2022\n\n\nrefactored libs to app, fixed time slider 133059f\nRelease 11.4.0 68d9939\n\nv11.3.1\n\n4 December 2022\n\n\nRelease 11.3.1 7493e98\nprevent lib crossing 3fbfb97\n\nv11.3.0\n\n4 December 2022\n\n\nRelease 11.3.0 ecf45e6\nbetter color usage 965f5d8\nbetter color usage f209ddb\n\nv11.2.0\n\n4 December 2022\n\n\ndeps, better default colors 569161e\nRelease 11.2.0 efc9aad\n\nv11.1.2\n\n4 December 2022\n\n\nRelease 11.1.2 8d47dd4\nfixed visualizer color updating too late e99d4f2\n\nv11.1.1\n\n4 December 2022\n\n\nRelease 11.1.1 287138c\n\nv11.1.0\n\n4 December 2022\n\n\noptimized musicbrainz requests, fixed embedded cover handling 7bebf2d\nRelease 11.1.0 707a0cb\n\nv11.0.0\n\n4 December 2022\n\n\nfixed several metadata related problems, setting for use of embedded tag covers 1745489\nRelease 11.0.0 6c219df\ntodo chromaprint-wasm 2c0f612\n\nv10.3.2\n\n1 December 2022\n\n\nRelease 10.3.2 6fdfa5a\n\nv10.3.1\n\n1 December 2022\n\n\nRelease 10.3.1 05b4ddd\nupdated firebase hosting config and actions for deployment f201082\nupdated firebase hosting config and actions for deployment 0c91659\n\nv10.3.0\n\n1 December 2022\n\n\nRelease 10.3.0 50dbff9\nupdated firebase hosting config and actions for deployment 1455d32\n\nv10.2.0\n\n30 November 2022\n\n\nRelease 10.2.0 7593825\nupdated firebase hosting config and actions for deployment b80e2ea\n\nv10.1.0\n\n30 November 2022\n\n\nupdated firebase hosting config and actions for deployment 02bde5d\nRelease 10.1.0 ffc8723\nupdated github actions 86bda79\n\nv10.0.4\n\n30 November 2022\n\n\ncypress migration to 11 16d8b1b\nRelease 10.0.4 6bf609d\nupdate nodejs to 18 for github actions 16925cf\n\nv10.0.3\n\n30 November 2022\n\n\ngot rid of variables.scss ad7e0f1\nRelease 10.0.3 63f69d0\n\nv10.0.2\n\n30 November 2022\n\n\nRelease 10.0.2 2a99961\n\nv10.0.1\n\n30 November 2022\n\n\nRelease 10.0.1 a9a9c0b\n\nv10.0.0\n\n30 November 2022\n\n\nng15 521e049\nng 15 cleanup, mobx update 0f6c72b\nmaterial 14 1e96bc3\n\nv9.2.4\n\n19 March 2022\n\n\nupdated deps eaeb47a\nRelease 9.2.4 61721ca\njb env 4bdbceb\n\nv9.2.3\n\n19 December 2021\n\n\nupdates 5061051\nRelease 9.2.3 a7f82ab\n\nv9.2.2\n\n9 December 2021\n\n\nupdates 2427749\nRelease 9.2.2 934d323\n\nv9.2.1\n\n20 November 2021\n\n\nRelease 9.2.1 60d5b05\n\nv9.2.0\n\n20 November 2021\n\n\nUpdate dependency @angular/cdk to v12.2.13 #21\nPin dependencies #20\nUpdate dependency ng-packagr to v12.2.5 #17\nUpdate dependency @angular/material to v12.2.13 #15\nUpdate angular monorepo to v12.2.13 #13\nConfigure Renovate #11\nnx 13.2 02e548c\nRelease 9.2.0 22ec300\nmain branch 63600c3\n\nv9.1.3\n\n16 November 2021\n\n\nnx update, nx-stylelint, nx-compodoc f06b116\nRelease 9.1.3 de5bda9\n\nv9.1.2\n\n20 October 2021\n\n\nupdates 8268a8b\nRelease 9.1.2 ab89f63\ntodos e486f52\n\nv9.1.1\n\n4 October 2021\n\n\nprevent duplicates in playlist, drag handle on avatar b6729e6\nRelease 9.1.1 eff95d0\n\nv9.1.0\n\n4 October 2021\n\n\nfile handling api with origin trial d3bca3a\nRelease 9.1.0 6cab435\n\nv9.0.11\n\n2 October 2021\n\n\nupdates 397399b\nRelease 9.0.11 96dbdf6\n\nv9.0.10\n\n5 September 2021\n\n\nRelease 9.0.10 112db1a\n\nv9.0.9\n\n5 September 2021\n\n\nRelease 9.0.9 9458a12\n\nv9.0.8\n\n19 August 2021\n\n\nRelease 9.0.8 cd620b6\n\nv9.0.7\n\n19 August 2021\n\n\nRelease 9.0.7 600f7e6\n\nv9.0.6\n\n19 August 2021\n\n\nRelease 9.0.6 c08196a\ndeps 6b5e613\n\nv9.0.5\n\n19 August 2021\n\n\nRelease 9.0.5 c51af5f\n\nv9.0.4\n\n19 August 2021\n\n\ndeps 43463ab\nRelease 9.0.4 cf00688\n\nv9.0.3\n\n24 July 2021\n\n\ndeps, nx-cloud ada5e83\nRelease 9.0.3 bb4a1a8\n\nv9.0.2\n\n24 July 2021\n\n\ndeps, nx-cloud 5cbeb5b\nRelease 9.0.2 49a76e8\n\nv9.0.1\n\n24 July 2021\n\n\ndeps b99bf0c\nRelease 9.0.1 cbab637\n\nv9.0.0\n\n9 July 2021\n\n\nfixed release-it 8d3ed72\nRelease 9.0.0 5467c6f\n\nv8.1.10\n\n9 July 2021\n\n\nRelease 8.1.10 be90110\n\nv8.1.9\n\n9 July 2021\n\n\nfixed release-it a90639a\nRelease 8.1.9 6d52ad4\n\nv8.1.8\n\n9 July 2021\n\n\nts 4.4, media session types intergrated in ts, deps fd45c70\nRelease 8.1.8 ff7cdad\n\nv8.1.7\n\n8 July 2021\n\n\nRelease 8.1.7 0bde446\n\nv8.1.6\n\n8 July 2021\n\n\ndeps 128a3c3\nRelease 8.1.6 d64a3c3\n\nv8.1.5\n\n2 July 2021\n\n\nRelease 8.1.5 ef22e4a\nlayout fixed dbb788d\n\nv8.1.4\n\n2 July 2021\n\n\nrefactored scss to @use, fixed build 6b0ec83\nRelease 8.1.4 ebab8da\n\nv8.1.3\n\n2 July 2021\n\n\nRelease 8.1.3 0843a41\n\nv8.1.2\n\n2 July 2021\n\n\nfixed types 07de52a\nRelease 8.1.2 00b47ed\n\nv8.1.1\n\n2 July 2021\n\n\nmigrated to eslint and per project config 4feefcd\nRelease 8.1.1 7762874\n\nv8.1.0\n\n26 June 2021\n\n\nupdates e2a0794\nRelease 8.1.0 86a18bb\n\nv8.0.1\n\n26 May 2021\n\n\nRelease 8.0.1 52bf10d\n\nv8.0.0\n\n26 May 2021\n\n\nRelease 7.1.1 c78b2bf\nRelease 8.0.0 2f0d555\n\nv7.2.0\n\n26 May 2021\n\n\nRelease 7.2.0 73ed2ca\nupdates 774ffed\n\nv7.1.1\n\n26 May 2021\n\n\nupdates 2a427ed\nRelease 7.1.1 b73ce66\n\nv7.1.0\n\n9 May 2021\n\n\n30fps visualizer, sortable playlist cd2a934\nRelease 7.1.0 8377116\n\nv7.0.6\n\n9 May 2021\n\n\nRelease 7.0.6 84a2466\nbitrate rounding cbef1c8\n\nv7.0.5\n\n9 May 2021\n\n\nRelease 7.0.5 9c56a21\n\nv7.0.4\n\n9 May 2021\n\n\nbetter title display 51154fe\nRelease 7.0.4 72dafd7\n\nv7.0.3\n\n9 May 2021\n\n\ndeps e36192c\nRelease 7.0.3 7553170\ntodos 51e219a\n\nv7.0.2\n\n9 May 2021\n\n\nfixed navigation 9767ad0\nRelease 7.0.2 59f1df2\n\nv7.0.1\n\n9 May 2021\n\n\nmetadata settings and ui cleanup 3797092\nRelease 6.7.3 6841a21\nRelease 7.0.0 0d76c85\n\nv7.0.0\n\n9 May 2021\n\n\nmetadata settings and ui cleanup b2b5088\nRelease 7.0.0 8c47814\n\nv6.7.4\n\n7 May 2021\n\n\nRelease 6.7.4 2ab7cc1\ncypress studio activated 4eac2a7\ncypress studio activated 6bc0773\n\nv6.7.3\n\n7 May 2021\n\n\nRelease 6.7.3 6841a21\nignore iml e5de213\n\nv6.7.2\n\n5 May 2021\n\n\ngithub actions with node_modules cache 4f91524\nRelease 6.7.2 07ec810\n\nv6.7.1\n\n5 May 2021\n\n\ncypress updated and window.showOpenFilePicker overwritten 32570e0\nRelease 6.7.1 fd18536\n\nv6.7.0\n\n4 May 2021\n\n\ndev deps dc41223\nRelease 6.7.0 f34b7cf\n\nv6.6.7\n\n25 April 2021\n\n\nfixed cypress tests and mobx 00399df\nRelease 6.6.7 bd0ddc3\n\nv6.6.6\n\n25 April 2021\n\n\nRelease 6.6.6 d690072\n\nv6.6.5\n\n25 April 2021\n\n\nRelease 6.6.5 ea63800\n\nv6.6.4\n\n25 April 2021\n\n\ndeps and husky updated 120476b\nRelease 6.6.4 20110c3\n\nv6.6.3\n\n20 April 2021\n\n\nRelease 6.6.3 ee83304\nreadme badges 09ae300\n\nv6.6.2\n\n15 April 2021\n\n\nRelease 6.6.2 e933c61\n\nv6.6.1\n\n15 April 2021\n\n\nRelease 6.6.1 221781e\n\nv6.6.0\n\n14 April 2021\n\n\nRelease 6.6.0 d254989\n\nv6.5.9\n\n11 March 2021\n\n\ndependencies 2119d47\nRelease 6.5.9 c64cd79\n\nv6.5.8\n\n4 March 2021\n\n\nRelease 6.5.8 f401a49\n\nv6.5.7\n\n4 March 2021\n\n\nRelease 6.5.7 49b1735\n\nv6.5.6\n\n4 February 2021\n\n\nRelease 6.5.6 045b043\n\nv6.5.5\n\n1 February 2021\n\n\nRelease 6.5.5 f4324a4\n\nv6.5.4\n\n29 January 2021\n\n\nfixed test 0038838\nRelease 6.5.4 8c75c5f\n\nv6.5.3\n\n28 January 2021\n\n\nRelease 6.5.3 13bf8e2\n\nv6.5.2\n\n21 January 2021\n\n\nRelease 6.5.2 1c876b6\nfixed build d2f46f8\n\nv6.5.1\n\n21 January 2021\n\n\nupdates 120f02a\nRelease 6.5.1 46c60ce\n\nv6.5.0\n\n14 January 2021\n\n\nRelease 6.5.0 e4ec6c1\n\nv6.4.1\n\n14 January 2021\n\n\nchangelog d629a20\nRelease 6.4.1 3d1f63c\n\nv6.4.0\n\n14 January 2021\n\n\nremoved token 51304c2\nRelease 6.4.0 756dc90\n\nv6.3.1\n\n14 January 2021\n\n\nRelease 6.3.1 e727ac0\n\nv6.3.0\n\n14 January 2021\n\n\nrelease-it 5321e86\nRelease 6.3.0 db48fe2\n\nv6.2.6\n\n14 January 2021\n\n\nrelease v6.2.6 ae202ad\n\nv6.2.5\n\n14 January 2021\n\n\nrelease v6.2.5 c20efb2\n\nv6.2.4\n\n14 January 2021\n\n\nci cd 8da74bb\nrelease v6.2.4 f12cad8\n\nv6.2.3\n\n12 January 2021\n\n\nrelease v6.2.3 78fcf7a\n\nv6.2.2\n\n20 December 2020\n\n\nnrwl 11 b2ed530\nrelease v6.2.2 73050ff\n\nv6.2.1\n\n15 December 2020\n\n\nnrwl 11 f1f709b\nrelease v6.2.1 5101ea6\nnrwl 11 8a371a0\n\nv6.2.0\n\n12 December 2020\n\n\nrelease v6.2.0 ef650c5\n\nv6.1.1\n\n8 December 2020\n\n\nrelease v6.1.1 e6660e2\n\nv6.1.0\n\n3 December 2020\n\n\nrelease v6.1.0 f8b7451\n\nv6.0.1\n\n21 November 2020\n\n\nrelease v6.0.1 c0d5ae4\n\nv6.0.0\n\n21 November 2020\n\n\nng11 0960760\nprettier ab98677\nrelease v6.0.0 79d861d\n\nv5.2.12\n\n28 October 2020\n\n\nrelease v5.2.12 40cc765\n\nv5.2.11\n\n28 October 2020\n\n\nrelease v5.2.11 c0c9413\n\nv5.2.10\n\n28 October 2020\n\n\nrelease v5.2.10 f4928f5\n\nv5.2.9\n\n28 October 2020\n\n\nrelease v5.2.9 04b4812\n\nv5.2.8\n\n28 October 2020\n\n\nrelease v5.2.8 4c8f851\n\nv5.2.7\n\n28 October 2020\n\n\nrelease v5.2.7 b65204b\n\nv5.2.6\n\n28 October 2020\n\n\nrelease v5.2.6 f24dcc7\n\nv5.2.5\n\n28 October 2020\n\n\nrelease v5.2.5 6c6f88c\nprettier b20fd36\n\nv5.2.4\n\n28 October 2020\n\n\nMediaSession service 5742e12\nrelease v5.2.4 5059439\n\nv5.2.3\n\n27 October 2020\n\n\nrelease v5.2.3 d4abfdc\n\nv5.2.2\n\n27 October 2020\n\n\nrelease v5.2.2 478c88a\n\nv5.2.1\n\n26 October 2020\n\n\nrelease v5.2.1 e218808\n\nv5.2.0\n\n23 October 2020\n\n\nrelease v5.2.0 62f7474\nreload button be57fa9\n\nv5.1.0\n\n23 October 2020\n\n\nsimplified dir handle save, fixed test f278040\nrelease v5.1.0 9767a1a\n\nv5.0.0\n\n23 October 2020\n\n\nsave latest directory handle to indexeddb 597ee4f\nrelease v5.0.0 5a61397\n\nv4.7.0\n\n23 October 2020\n\n\nrelease v4.7.0 c86decf\n\nv4.6.0\n\n23 October 2020\n\n\ntypes added for mediasession and file-system bfd28ec\nrelease v4.6.0 e4d8e7c\n\nv4.5.0\n\n23 October 2020\n\n\nfix media reporting 220c7f4\nrelease v4.5.0 337a109\n\nv4.4.0\n\n23 October 2020\n\n\nupdates und native file stable changes 939f6b8\nrelease v4.4.0 77c544b\n\nv4.3.1\n\n12 October 2020\n\n\nrelease v4.3.1 3a9067b\n\nv4.3.0\n\n12 October 2020\n\n\nrelease v4.3.0 7def043\nanalyzer report 4a4b1c4\n\nv4.2.0\n\n12 October 2020\n\n\nrelease v4.2.0 866de3e\n\nv4.1.0\n\n6 October 2020\n\n\nrelease v4.1.0 98a793b\n\nv4.0.0\n\n6 October 2020\n\n\nrelease v4.0.0 d38c534\n\nv3.11.0\n\n6 October 2020\n\n\nrelease v3.11.0 2a4184c\n\nv3.10.0\n\n6 October 2020\n\n\nrelease v3.10.0 d562368\n\nv3.9.0\n\n6 October 2020\n\n\ntoggle to disable extraction of color from cover art a84cb97\nrelease v3.9.0 748a302\n\nv3.8.1\n\n6 October 2020\n\n\nrelease v3.8.1 bda90a4\n\nv3.8.0\n\n5 October 2020\n\n\nrelease v3.8.0 c73a2ce\n\nv3.7.0\n\n20 September 2020\n\n\nrelease v3.7.0 61eb69b\n\nv3.6.0\n\n9 September 2020\n\n\nrelease v3.6.0 22da5c7\n\nv3.5.1\n\n2 September 2020\n\n\nrelease v3.5.1 70990de\n\nv3.5.0\n\n2 September 2020\n\n\nrelease v3.5.0 3ccea4c\n\nv3.4.1\n\n30 August 2020\n\n\nrelease v3.4.1 5ed4032\n\nv3.4.0\n\n30 August 2020\n\n\noptimize loading of service worker and caching 5cec62d\nrelease v3.4.0 1385586\n\nv3.3.0\n\n30 August 2020\n\n\noptimize bundles 6cd086c\nrelease v3.3.0 27fdc57\noptimize loading of service worker f1cad4d\n\nv3.2.1\n\n23 August 2020\n\n\nrelease v3.2.1 bb4ded8\nicons compressed c550911\n\nv3.2.0\n\n23 August 2020\n\n\nstart page a7cf166\nrelease v3.2.0 14a5bd3\nlang and description in webmanifest 1e4fd87\n\nv3.1.2\n\n23 August 2020\n\n\nrelease v3.1.2 69ed6f4\n\nv3.1.1\n\n23 August 2020\n\n\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 800fdae\nrelease v3.1.1 7440340\n\nv3.1.0\n\n23 August 2020\n\n\ndeps 3597f8b\nnx 10.1 20050dc\nsettings moved to lazy loaded module, maskable icons fixed and monochrome added 0cec276\n\nv3.0.9\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest 8d5f783\nrelease v3.0.9 f3a09c7\n\nv3.0.8\n\n21 August 2020\n\n\nmaskable icon and svg icon in webmanifest b708169\nrelease v3.0.8 7a1bbe5\n\nv3.0.7\n\n21 August 2020\n\n\nrelease v3.0.7 1a92061\n\nv3.0.6\n\n21 August 2020\n\n\nrelease v3.0.6 f31886e\n\nv3.0.5\n\n21 August 2020\n\n\nrelease v3.0.5 e7c9ada\n\nv3.0.4\n\n21 August 2020\n\n\nrelease v3.0.4 20d1b8b\n\nv3.0.3\n\n21 August 2020\n\n\nrelease v3.0.2 ea1fc76\nrelease v3.0.3 f4f50ef\n\nv3.0.2\n\n21 August 2020\n\n\nrelease v3.0.2 bc4e4dc\n\nv3.0.1\n\n21 August 2020\n\n\nrelease v3.0.1 339d07b\n\nv3.0.0\n\n21 August 2020\n\n\nrelease v3.0.0 57f591d\nrelease v2.0.0 6a6ec18\nrelease v1.19.0 d6210df\n\nv2.0.2\n\n21 August 2020\n\n\nrelease v2.0.2 7b491de\n\nv2.0.1\n\n21 August 2020\n\n\nrelease v2.0.1 b820bf4\n\nv2.0.0\n\n21 August 2020\n\n\nreadded polyfills, prefetch, manifest.json, splashscreen e102482\nrelease v2.0.0 c3d7490\n\nv1.18.0\n\n21 August 2020\n\n\nrelease v1.18.0 5aed853\n\nv1.17.0\n\n21 August 2020\n\n\nrelease v1.17.0 901f502\n\nv1.16.0\n\n21 August 2020\n\n\nrelease v1.16.0 5af2ad7\n\nv1.15.0\n\n21 August 2020\n\n\nrelease v1.15.0 abccf03\n\nv1.14.0\n\n21 August 2020\n\n\nrelease v1.14.0 339af30\n\nv1.13.0\n\n21 August 2020\n\n\nrelease v1.13.0 fb05c12\n\nv1.12.0\n\n21 August 2020\n\n\nrelease v1.12.0 67a17ee\n\nv1.11.12\n\n21 August 2020\n\n\nrelease v1.11.12 bba9cb0\n\nv1.11.11\n\n21 August 2020\n\n\nrelease v1.11.11 ba2a28a\n\nv1.11.10\n\n21 August 2020\n\n\nrelease v1.11.10 b7e8f76\n\nv1.11.9\n\n21 August 2020\n\n\nrelease v1.11.9 52afb10\n\nv1.11.8\n\n21 August 2020\n\n\nrelease v1.11.8 e6d7fd2\n\nv1.11.7\n\n21 August 2020\n\n\nrelease v1.11.7 c2c0b8f\n\nv1.11.6\n\n21 August 2020\n\n\nrelease v1.11.6 91d4a54\n\nv1.11.5\n\n21 August 2020\n\n\nrelease v1.11.5 822ff08\n\nv1.11.4\n\n21 August 2020\n\n\nrelease v1.11.4 8c9c5c3\n\nv1.11.3\n\n21 August 2020\n\n\nrelease v1.11.3 8aabc76\n\nv1.11.2\n\n21 August 2020\n\n\nrelease v1.11.2 71e1d6c\n\nv1.11.1\n\n21 August 2020\n\n\nrelease v1.11.1 ed57248\nremove commonjs whitelist entry ad6497d\n\nv1.11.0\n\n19 August 2020\n\n\ndeps and polyfills removed 3e8e5d0\nrelease v1.11.0 289ec3d\ndisable zone for requestAnimationFrame 422fc8e\n\nv1.10.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\nrelease v1.10.0 f9c114e\nrelease v1.9.1 6b2d8b8\n\nv1.9.1\n\n17 August 2020\n\n\nrelease v1.9.0 68e8dc6\nrelease v1.9.1 d5cd7ea\n\nv1.9.0\n\n17 August 2020\n\n\nrelease v1.9.0 ac62dde\n\nv1.8.0\n\n17 August 2020\n\n\nrelease v1.8.0 7484f35\nCreate LICENSE f69d368\nRename LICENSE to LICENSE.md 3773370\n\nv1.7.3\n\n30 July 2020\n\n\ndeps a00ccd1\nrelease v1.7.3 47842e1\nnode 14 build f5ee0e6\n\nv1.7.2\n\n24 July 2020\n\n\nrelease v1.7.2 101bbd0\n\nv1.7.1\n\n24 July 2020\n\n\nrelease v1.7.1 28465d6\n\nv1.7.0\n\n24 July 2020\n\n\nrelease v1.7.0 b5f68a1\n\nv1.6.4\n\n24 July 2020\n\n\nrelease v1.6.4 646c494\n\nv1.6.3\n\n24 July 2020\n\n\nrelease v1.6.3 17ed8a6\n\nv1.6.2\n\n18 July 2020\n\n\ndeps 667f875\nRevert \"support for seeking to position on android notification\" f2cfbcc\nrelease v1.6.2 85eb0ba\n\nv1.6.1\n\n10 July 2020\n\n\ndeps 228ee85\nrelease v1.6.1 949055a\n\nv1.6.0\n\n3 July 2020\n\n\nsupport for seeking to position on android notification 9fa1a37\nrelease v1.6.0 4f1794f\n\nv1.5.0\n\n3 July 2020\n\n\ndeps und position reporting to browser 7a6f294\nrelease v1.5.0 f076ced\n\nv1.4.1\n\n26 June 2020\n\n\nangular.json schema und allowedCommonJsDeps 654bac2\nrelease v1.4.1 250d7f9\n\nv1.4.0\n\n26 June 2020\n\n\ndeps fix 4e72fcd\nng 10 update b6bd950\nadded missing decorator 8515368\n\nv1.3.0\n\n4 June 2020\n\n\nnew icons for visualization modes a8073a9\nrelease v1.3.0 b241b46\n\nv1.2.2\n\n28 May 2020\n\n\ndeps 87adc2c\nrelease v1.2.2 abc0b07\n\nv1.2.1\n\n20 May 2020\n\n\ndeps be025cd\nrelease v1.2.1 0b30a9f\n\nv1.2.0\n\n10 May 2020\n\n\nname changes, native file service refactored 170ea47\nrelease v1.2.0 cb01a92\nname changes, native file service refactored 8264f64\n\nv1.1.0\n\n8 May 2020\n\n\nrelease v1.1.0 a2a4811\nopen folders recursive 1c9fedf\n\nv1.0.5\n\n8 May 2020\n\n\nrelease v1.0.5 1604161\n\nv1.0.4\n\n5 May 2020\n\n\nfix: package.json, package-lock.json & .snyk to reduce vulnerabilities #2\nrelease v1.0.4 8e2ff5a\n\nv1.0.3\n\n2 May 2020\n\n\nrelease v1.0.3 8e36da3\n\nv1.0.2\n\n2 May 2020\n\n\nrelease v1.0.2 6926167\n\nv1.0.1\n\n2 May 2020\n\n\nrelease v1.0.1 194199c\n\nv1.0.0\n\n2 May 2020\n\n\nremoved electron, added compodoc 22afab3\nrelease v1.0.0 18cab80\nUpdate README.md 0e060af\n\nv0.29.0\n\n25 April 2020\n\n\nrelease v0.29.0 669facb\n\nv0.28.0\n\n25 April 2020\n\n\ndeps 9d2ef7e\nrelease v0.28.0 eaf70a8\n\nv0.25.0\n\n15 April 2020\n\n\nrelease v0.25.0 0581767\n\nv0.24.0\n\n15 April 2020\n\n\nrelease v0.24.0 a457b9c\ndeps linting formating b04ce8b\nUpdate NOTES.md 0903cd2\n\nv0.23.0\n\n4 April 2020\n\n\nci d954540\nrelease v0.23.0 95902bb\nci 53a8631\n\nv0.22.0\n\n4 April 2020\n\n\nrelease v0.22.0 f0f7618\n\nv0.21.0\n\n31 March 2020\n\n\ndependencies e34b732\nreadme e7032e1\nfile extensions list 53749c8\n\nv0.20.0\n\n30 March 2020\n\n\nrelease v0.20.0 572a9f8\n\nv0.19.0\n\n30 March 2020\n\n\nrelease v0.19.0 72075fe\nscreen wakelock when playing, navigation fixed especially for mobile ae93b7a\norigin trials for native file system and wakelock api a5849e4\n\nv0.18.0\n\n29 March 2020\n\n\nrelease v0.18.0 fefaba0\nprevent browser history 097fe6b\n\nv0.17.0\n\n29 March 2020\n\n\nprevent browser history 80b42ce\nrelease v0.17.0 4e9a327\n\nv0.16.0\n\n29 March 2020\n\n\ndeps f1b02b7\nrelease v0.16.0 5fe0756\n\nv0.15.0\n\n29 March 2020\n\n\ndeps 092dc60\nnx tags 6782ecd\nrelease v0.15.0 0cabcad\n\nv0.14.0\n\n24 March 2020\n\n\nrelease v0.14.0 dd93cb1\n\nv0.13.0\n\n24 March 2020\n\n\nrelease v0.13.0 162acda\n\nv0.12.0\n\n24 March 2020\n\n\nrelease v0.12.0 79fee74\n\nv0.11.0\n\n24 March 2020\n\n\nrelease v0.11.0 828148a\n\nv0.10.0\n\n24 March 2020\n\n\nrelease v0.10.0 35a78e4\n\nv0.9.0\n\n24 March 2020\n\n\nrelease v0.9.0 2011e46\n\nv0.8.0\n\n24 March 2020\n\n\nrelease v0.8.0 02c06cb\n\nv0.7.0\n\n24 March 2020\n\n\nrelease v0.7.0 75fc12c\n\nv0.6.0\n\n24 March 2020\n\n\nrelease v0.6.0 184a834\n\nv0.5.0\n\n24 March 2020\n\n\nrelease v0.5.0 ab311db\n\nv0.4.0\n\n24 March 2020\n\n\nrelease v0.4.0 42f56c1\nfixed visuals cefa1f1\nplay rewrite and project preparations 1098d6a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @allex/crc32 : ^1.0.4\n        \n            @angular/animations : 19.2.2\n        \n            @angular/cdk : 19.2.3\n        \n            @angular/common : 19.2.2\n        \n            @angular/compiler : 19.2.2\n        \n            @angular/core : 19.2.2\n        \n            @angular/forms : 19.2.2\n        \n            @angular/material : 19.2.3\n        \n            @angular/platform-browser : 19.2.2\n        \n            @angular/platform-browser-dynamic : 19.2.2\n        \n            @angular/router : 19.2.2\n        \n            @angular/service-worker : 19.2.2\n        \n            @thebespokepixel/es-tinycolor : ^3.1.0\n        \n            date-fns : ^4.1.0\n        \n            lucene-escape-query : ^1.0.1\n        \n            music-metadata : 11.0.2\n        \n            ngx-date-fns : 12.0.0\n        \n            ngx-indexed-db : 19.3.3\n        \n            ngx-pipes : 3.2.2\n        \n            ngx-webstorage : 19.0.1\n        \n            node-vibrant : 4.0.3\n        \n            rxjs : 7.8.2\n        \n            safe-pipe : 3.0.4\n        \n            spark-md5 : ^3.0.2\n        \n            tslib : 2.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GamepadAxes   (apps/.../gamepad.types.ts)\n                        \n                        \n                            GamepadButtons   (apps/.../gamepad.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n        \n            \n                \n                    \n                        \n                        GamepadAxes\n                    \n                \n                        \n                            \n                                 S1_X\n                            \n                        \n                        \n                            \n                                 S1_Y\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 S2_X\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 S2_Y\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GamepadButtons\n                    \n                \n                        \n                            \n                                 A_BUTTON\n                            \n                        \n                        \n                            \n                                 B_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Y_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 L1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 R1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 L2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 R2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 SELECT_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 START_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 S1_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 S2_BUTTON\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 DPAD_UP\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 DPAD_DOWN\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 DPAD_LEFT\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n                        \n                            \n                                 DPAD_RIGHT\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularBars   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawCircularOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            drawOsc   (apps/.../visuals.worker.ts)\n                        \n                        \n                            ensureHttps   (apps/.../metadata.helper.ts)\n                        \n                        \n                            extractColorsWithNodeVibrant   (apps/.../metadata.service.ts)\n                        \n                        \n                            extractTags   (apps/.../metadata.worker.ts)\n                        \n                        \n                            FileLoaderServiceFactory   (apps/.../file-loader.service.factory.ts)\n                        \n                        \n                            formatSecondsAsClock   (libs/.../helpers-time.ts)\n                        \n                        \n                            gamepadServiceFactory   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            generateFileHash   (apps/.../metadata.service.ts)\n                        \n                        \n                            getAudioFilesFromDirHandle   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            getRandomInt   (apps/.../player.service.ts)\n                        \n                        \n                            hotkeysServiceFactory   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            initBarkScale   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isBarsVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isGamepadSupported   (apps/.../gamepad.service.factory.ts)\n                        \n                        \n                            isKeyboardSupported   (apps/.../hotkeys.service.factory.ts)\n                        \n                        \n                            isMediaSessionSupported   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            isOscVisualizerOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            isWakeLockSupported   (apps/.../wakelock.service.factory.ts)\n                        \n                        \n                            mediaSessionServiceFactory   (apps/.../media-session.service.factory.ts)\n                        \n                        \n                            setupVisualsWorkerWithOptions   (apps/.../visuals.worker.ts)\n                        \n                        \n                            verifyPermission   (apps/.../native-browser-file-loader.service.ts)\n                        \n                        \n                            wakelockServiceFactory   (apps/.../wakelock.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToBarkScale\n                        \n                    \n                \n            \n            \n                \nconvertToBarkScale()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Float32Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawBars\n                        \n                    \n                \n            \n            \n                \ndrawBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularBars\n                        \n                    \n                \n            \n            \n                \ndrawCircularBars()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircularOsc\n                        \n                    \n                \n            \n            \n                \ndrawCircularOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawOsc\n                        \n                    \n                \n            \n            \n                \ndrawOsc()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initBarkScale\n                        \n                    \n                \n            \n            \n                \ninitBarkScale()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBarsVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisBarsVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BarsVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOscVisualizerOptions\n                        \n                    \n                \n            \n            \n                \nisOscVisualizerOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OscVisualizerOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupVisualsWorkerWithOptions\n                        \n                    \n                \n            \n            \n                \nsetupVisualsWorkerWithOptions(options: VisualizerOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            VisualizerOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ensureHttps\n                        \n                    \n                \n            \n            \n                \nensureHttps(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractColorsWithNodeVibrant\n                        \n                    \n                \n            \n            \n                \nextractColorsWithNodeVibrant(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateFileHash\n                        \n                    \n                \n            \n            \n                \ngenerateFileHash(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/metadata.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractTags\n                        \n                    \n                \n            \n            \n                \nextractTags(file: File)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/file-loader.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileLoaderServiceFactory\n                        \n                    \n                \n            \n            \n                \nFileLoaderServiceFactory()\n                \n            \n\n\n\n\n        \n    \n    libs/helpers/src/lib/helpers-time.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatSecondsAsClock\n                        \n                    \n                \n            \n            \n                \nformatSecondsAsClock(value, leadingMinuteZero)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                leadingMinuteZero\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/gamepad/gamepad.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gamepadServiceFactory\n                        \n                    \n                \n            \n            \n                \ngamepadServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         GamepadService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGamepadSupported\n                        \n                    \n                \n            \n            \n                \nisGamepadSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/player/file-loader-service/native-browser-file-loader.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAudioFilesFromDirHandle\n                        \n                    \n                \n            \n            \n                \ngetAudioFilesFromDirHandle(dirHandle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirHandle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyPermission\n                        \n                    \n                \n            \n            \n                \nverifyPermission(handle: FileSystemDirectoryHandle)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handle\n                                            \n                                                        FileSystemDirectoryHandle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRandomInt\n                        \n                    \n                \n            \n            \n                \ngetRandomInt(min: number, max: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                min\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/gblaster/src/app/services/hotkeys/hotkeys.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hotkeysServiceFactory\n                        \n                    \n                \n            \n            \n                \nhotkeysServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         HotkeysService | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKeyboardSupported\n                        \n                    \n                \n            \n            \n                \nisKeyboardSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/media-session/media-session.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMediaSessionSupported\n                        \n                    \n                \n            \n            \n                \nisMediaSessionSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSessionServiceFactory\n                        \n                    \n                \n            \n            \n                \nmediaSessionServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         MediaSessionService | null\n\n                        \n                \n            \n        \n    \n    apps/gblaster/src/app/services/wakelock.service.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isWakeLockSupported\n                        \n                    \n                \n            \n            \n                \nisWakeLockSupported()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wakelockServiceFactory\n                        \n                    \n                \n            \n            \n                \nwakelockServiceFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         WakelockService | null\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🔊 gBlaster\nA web audio player PWA using latest Web APIs.\n\n\n\n\n\nFeatures\n\n💿 Plays all audio file formats Chrome supports\n🏷 Uses metadata like title, artist, album and picture from file-tags\n🔗 Getting metadata from LastFM and MusicBrainz\n🌈 Extracts colors from cover-art to adjust apps theme-colors\n⌨ Keyboard input\n🎮 Gamepad input\n⏭ Supports browser and OS media-controls, and uses wakelock to screen locking\n🎚 10 band equalizer\n📊 Band-Meter and Oscilloscope Visualization\n🔋 Local cache for all metadata in IndexedDB\n🧲 Settings persistence in LocalStorage\n📱 Responsive Layout for Desktop and Mobile\n💾 Working offline and installable on most OSs\n\nDependencies\nApp-Icon generated with:\nhttps://android-material-icon-generator.bitdroid.de/#section-material-icons\nMaterial Icons:\nhttps://petershaggynoble.github.io/MDI-Sandbox/\nTag Reader:\nmusic-metadata\nColor extraction from cover-art:\nnode-vibrant\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nExample :CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    41 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 20.2.5\n        \n            Description : Colorful Web Audio Player PWA\n        \n            License : MIT\n        \n            Repository : https://github.com/motabass/gblaster\n        \n            Author : motabass\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODOs:\n\nuse webworker for node-vibrant\nAudio-File explorer + Suche\nPlaylist management (Sorting, Saving)\nVisuals via UserMediaInput from mic or system\nShare target\nWriting Meta-Tags\nFullscreen/Multiwindow Mode\nLocalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (apps/.../gamepad.types.ts)\n                        \n                        \n                            AxisDirection   (apps/.../gamepad.types.ts)\n                        \n                        \n                            FftSize   (apps/.../visuals.types.ts)\n                        \n                        \n                            FrequencyBand   (apps/.../player.types.ts)\n                        \n                        \n                            InputCheckMode   (apps/.../gamepad.types.ts)\n                        \n                        \n                            LastfmResponse   (apps/.../lastfm-metadata.service.ts)\n                        \n                        \n                            RepeatMode   (apps/.../player.types.ts)\n                        \n                        \n                            VisualizerMode   (apps/.../visuals.types.ts)\n                        \n                        \n                            VisualizerOptions   (apps/.../visuals.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/services/gamepad/gamepad.types.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AxisDirection\n                \n            \n            \n                \n                        \"negative\" | \"positive\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputCheckMode\n                \n            \n            \n                \n                        \"click\" | \"hold\" | \"turbo\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/visualizer/visuals/visuals.types.ts\n    \n    \n        \n            \n                \n                    \n                    FftSize\n                \n            \n            \n                \n                        \"32\" | \"64\" | \"128\" | \"256\" | \"512\" | \"1024\" | \"2048\" | \"4096\" | \"8192\" | \"16384\" | \"32768\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerMode\n                \n            \n            \n                \n                        \"off\" | \"bars\" | \"osc\" | \"circular-bars\" | \"circular-osc\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    VisualizerOptions\n                \n            \n            \n                \n                            BarsVisualizerOptions | OscVisualizerOptions\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/player.types.ts\n    \n    \n        \n            \n                \n                    \n                    FrequencyBand\n                \n            \n            \n                \n                        \"60\" | \"170\" | \"310\" | \"600\" | \"1000\" | \"3000\" | \"6000\" | \"12000\" | \"14000\" | \"16000\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RepeatMode\n                \n            \n            \n                \n                        \"off\" | \"all\" | \"one\"\n\n                \n            \n        \n    \n    apps/gblaster/src/app/player/metadata-service/lastfm-metadata.service.ts\n    \n    \n        \n            \n                \n                    \n                    LastfmResponse\n                \n            \n            \n                \n                        LastfmSuccessResponse | LastfmErrorResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALLOWED_EXTENSIONS   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            ALLOWED_MIMETYPES   (apps/.../file-loader.helpers.ts)\n                        \n                        \n                            alpha   (apps/.../visuals.worker.ts)\n                        \n                        \n                            analyserData   (apps/.../visuals.worker.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            barkScaleBandEnergy   (apps/.../visuals.worker.ts)\n                        \n                        \n                            barWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            bufferLength   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvas   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            canvasWidth   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capFalldown   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capHeight   (apps/.../visuals.worker.ts)\n                        \n                        \n                            capYPositionArray   (apps/.../visuals.worker.ts)\n                        \n                        \n                            context   (apps/.../visuals.worker.ts)\n                        \n                        \n                            databaseConfig   (apps/.../app.config.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_ACCENT_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../default-colors.ts)\n                        \n                        \n                            FALLBACK_PRIMARY_COLOR   (apps/.../visuals.directive.ts)\n                        \n                        \n                            fftSize   (apps/.../visuals.worker.ts)\n                        \n                        \n                            FREQUENCY_BANDS   (apps/.../audio.service.ts)\n                        \n                        \n                            frequencyToBarkMap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            gap   (apps/.../visuals.worker.ts)\n                        \n                        \n                            getCardTitle   (apps/.../settings.po.ts)\n                        \n                        \n                            getCoverDisplay   (apps/.../player.po.ts)\n                        \n                        \n                            getLoadFilesButton   (apps/.../player.po.ts)\n                        \n                        \n                            getPlaylistItems   (apps/.../player.po.ts)\n                        \n                        \n                            getSidenavLink   (apps/.../app.po.ts)\n                        \n                        \n                            getSidenavToggleButton   (apps/.../app.po.ts)\n                        \n                        \n                            getToolBarTitle   (apps/.../app.po.ts)\n                        \n                        \n                            getVolumeButton   (apps/.../player.po.ts)\n                        \n                        \n                            getVolumeSlider   (apps/.../player.po.ts)\n                        \n                        \n                            gradient   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mainColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            meterNumber   (apps/.../visuals.worker.ts)\n                        \n                        \n                            mode   (apps/.../visuals.worker.ts)\n                        \n                        \n                            oscilloscopePath   (apps/.../visuals.worker.ts)\n                        \n                        \n                            peakColor   (apps/.../visuals.worker.ts)\n                        \n                        \n                            rotation   (apps/.../visuals.worker.ts)\n                        \n                        \n                            routes   (apps/.../app.routes.ts)\n                        \n                        \n                            sampleRate   (apps/.../visuals.worker.ts)\n                        \n                        \n                            sliceWidthCache   (apps/.../visuals.worker.ts)\n                        \n                        \n                            thickness   (apps/.../visuals.worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/gblaster/src/app/player/file-loader-service/file-loader.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOWED_EXTENSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['mp3', 'flac', 'ogg', 'wav', 'aiff', 'opus', 'mp4']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOWED_MIMETYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'audio/mp3',\n  'audio/mpeg',\n  'audio/x-aiff',\n  'audio/ogg',\n  'audio/vorbis',\n  'audio/vnd.wav',\n  'audio/flac',\n  'audio/wav',\n  'audio/mp4',\n  'audio/opus'\n]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        alpha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        analyserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barkScaleBandEnergy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        barWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvas\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capFalldown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        capYPositionArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OffscreenCanvasRenderingContext2D | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fftSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        frequencyToBarkMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Float32Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanvasGradient\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meterNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VisualizerMode\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oscilloscopePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Path2D\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        peakColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rotation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliceWidthCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thickness\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideExperimentalZonelessChangeDetection(),\n    provideIndexedDb(databaseConfig),\n    provideServiceWorker('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    provideNgxWebstorage(withNgxWebstorageConfig({ separator: '|', caseSensitive: true, prefix: 'gblaster' }), withLocalStorage()),\n    provideAnimations(),\n    provideHttpClient(withInterceptorsFromDi(), withFetch()),\n    provideRouter(routes, withEnabledBlockingInitialNavigation(), withViewTransitions()),\n    {\n      provide: FileLoaderService,\n      useFactory: FileLoaderServiceFactory,\n      deps: [NgxIndexedDBService]\n    },\n    { provide: GamepadService, useFactory: gamepadServiceFactory },\n    { provide: HotkeysService, useFactory: hotkeysServiceFactory },\n    { provide: WakelockService, useFactory: wakelockServiceFactory },\n    { provide: MediaSessionService, useFactory: mediaSessionServiceFactory },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 800, position: 'above', disableTooltipInteractivity: true }\n    },\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DBConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'metadataCache',\n  version: 2,\n  objectStoresMeta: [\n    {\n      store: 'metatags',\n      storeConfig: { keyPath: 'crc', autoIncrement: false },\n      storeSchema: [\n        { name: 'crc', keypath: 'crc', options: { unique: true } },\n        { name: 'artist', keypath: 'artist', options: { unique: false } },\n        { name: 'title', keypath: 'title', options: { unique: false } },\n        { name: 'album', keypath: 'album', options: { unique: false } }\n      ]\n    },\n    {\n      store: 'dirHandle',\n      storeConfig: { keyPath: 'id', autoIncrement: true },\n      storeSchema: [{ name: 'handle', keypath: 'handle', options: { unique: false } }]\n    }\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/theme/default-colors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/visualizer/visuals/visuals.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FALLBACK_ACCENT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#bcbcbc'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FALLBACK_PRIMARY_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#424242'\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/player/audio.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FREQUENCY_BANDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FrequencyBand[]\n\n                    \n                \n                \n                    \n                        Default value : [60, 170, 310, 600, 1000, 3000, 6000, 12_000, 14_000, 16_000]\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/settings.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => cy.get('mat-card-title').contains(title)\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/player.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCoverDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('mtb-cover-display')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadFilesButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#load_files')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.playlist > mat-list-item')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVolumeSlider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#volume_slider')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/cypress/support/app.po.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getSidenavLink\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (link: number) => cy.get(`:nth-child(${link}) > .mdc-list-item__content`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSidenavToggleButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('#sidenav_menu_button')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToolBarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => cy.get('.title')\n                    \n                \n\n\n        \n    \n\n    apps/gblaster/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\n  { path: 'player', loadComponent: () => import('./player/player.component') },\n  { path: 'player/eq', loadComponent: () => import('./player/equalizer/equalizer.component') },\n  { path: 'player/library', loadComponent: () => import('./player/library/library.component') },\n  { path: 'settings', loadComponent: () => import('./settings/settings.component') },\n  { path: '**', redirectTo: '' }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-file-drop-overlay.html":{"url":"additional-documentation/ui-components-file-drop-overlay.html","title":"additional-page - ui-components-file-drop-overlay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-file-drop-overlay\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-file-drop-overlay to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-slide-panel.html":{"url":"additional-documentation/ui-components-slide-panel.html","title":"additional-page - ui-components-slide-panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-slide-panel\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-slide-panel to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui-components-dialogs.html":{"url":"additional-documentation/ui-components-dialogs.html","title":"additional-page - ui-components-dialogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nui-components-dialogs\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ui-components-dialogs to execute the unit tests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/helpers.html":{"url":"additional-documentation/helpers.html","title":"additional-page - helpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhelpers\nThis library was generated with Nx.\nRunning unit tests\nRun nx test helpers to execute the unit tests via Jest.\nRunning lint\nRun nx lint helpers to execute the lint via ESLint.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
